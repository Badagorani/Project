<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VisioForge.Libs</name>
    </assembly>
    <members>
        <member name="T:VisioForge.Libs.PlatformHelper">
            <summary>
            Platform helper.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.PlatformHelper.IsWindows">
            <summary>
            Returns true if running on Windows, false otherwise
            </summary>
        </member>
        <member name="P:VisioForge.Libs.PlatformHelper.IsLinux">
            <summary>
            Returns true if running on Linux, false otherwise
            </summary>
        </member>
        <member name="P:VisioForge.Libs.PlatformHelper.IsLinuxDesktop">
            <summary>
            Returns true if running on Linux desktop, false otherwise
            </summary>
        </member>
        <member name="P:VisioForge.Libs.PlatformHelper.IsMac">
            <summary>
            Returns true if running on macOS, false otherwise
            </summary>
        </member>
        <member name="M:VisioForge.Libs.SerilogAdds.Observable.ObservableLoggerConfigurationExtensions.Observers(Serilog.Configuration.LoggerSinkConfiguration,System.Action{System.IObservable{Serilog.Events.LogEvent}},Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Write events to Rx observers.
            </summary>
            <param name="sinkConfiguration">Logger sink configuration.</param>
            <param name="configureObservers">An action that provides an observable
            to which observers can subscribe.</param>
            <param name="restrictedToMinimumLevel">The minimum level for
            events passed through the sink. Ignored when <paramref name="levelSwitch"/> is specified.</param>
            <param name="levelSwitch">A switch allowing the pass-through minimum level
            to be changed at runtime.</param>
            <returns>Configuration object allowing method chaining.</returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Aac.AudioHeader">
            <summary>
               This structure implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> and provides
               information about an ADTS AAC audio stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.sample_rates">
            <summary>
               Contains a sample rate table for ADTS AAC audio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.channels">
            <summary>
               Contains a channel table for ADTS AAC audio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.stream_length">
            <summary>
               Contains the audio stream length.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.duration">
            <summary>
               Contains the audio stream duration.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.audiochannels">
            <summary>
               Contains the number of channels in the audio
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.audiobitrate">
            <summary>
               Contains the bitrate of the audio stream
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.audiosamplerate">
            <summary>
               Contains the samplerate of the audio stream
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.AudioHeader.Unknown">
            <summary>
               An empty and unset header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.AudioHeader.#ctor">
            <summary>
               Constructs and initializes a new empty instance of <see
               cref="T:VisioForge.Libs.TagLib.Aac.AudioHeader" />
            </summary>       
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.AudioHeader.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aac.AudioHeader" /> by populating it with specified
               values.
            </summary>
            <param name="channels">
               A <see cref="T:System.Int32" /> value indicating the number
               of channels in the audio stream
            </param>
            <param name="bitrate">
               A <see cref="T:System.Int32" /> value indicating the bitrate
               of  the audio stream
            </param>
            <param name="samplerate">
               A <see cref="T:System.Int32" /> value indicating the samplerate
               of  the audio stream
            </param>
            <param name="numberofsamples">
               A <see cref="T:System.Int32" /> value indicating the number
               of samples in the audio stream
            </param>
            <param name="numberofframes">
               A <see cref="T:System.Int32" /> value indicating the number
               of frames in the audio stream
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aac.AudioHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aac.AudioHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aac.AudioHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
            <remarks>
               If <see cref="M:VisioForge.Libs.TagLib.Aac.AudioHeader.SetStreamLength(System.Int64)" /> has not been called, this 
               value will not be correct.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aac.AudioHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aac.AudioHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aac.AudioHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.AudioHeader.SetStreamLength(System.Int64)">
            <summary>
               Sets the length of the audio stream represented by the
               current instance.
            </summary>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value specifying the length in
               bytes of the audio stream represented by the current
               instance.
            </param>
            <remarks>
               The this value has been set, <see cref="P:VisioForge.Libs.TagLib.Aac.AudioHeader.Duration" /> will
               return an incorrect value.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.AudioHeader.Find(VisioForge.Libs.TagLib.Aac.AudioHeader@,VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Searches for an audio header in a <see cref="T:VisioForge.Libs.TagLib.File"
               /> starting at a specified position and searching through
               a specified number of bytes.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Aac.AudioHeader" /> object in which the found
               header will be stored.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to search.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               in <paramref name="file" /> at which to start searching.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the maximum number
               of bytes to search before aborting.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not a
               header was found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.AudioHeader.Find(VisioForge.Libs.TagLib.Aac.AudioHeader@,VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Searches for an audio header in a <see cref="T:VisioForge.Libs.TagLib.File"
               /> starting at a specified position and searching to the
               end of the file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Aac.AudioHeader" /> object in which the found
               header will be stored.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to search.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               in <paramref name="file" /> at which to start searching.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not a
               header was found.
            </returns>
            <remarks>
               Searching to the end of the file can be very, very slow
               especially for corrupt or non-MPEG files. It is
               recommended to use <see
               cref="M:AudioHeader.Find(AudioHeader,TagLib.File,long,int)" />
               instead.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Aac.BitStream">
            <summary>
               This class is used to help reading arbitary number of bits from
               a fixed array of bytes
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.BitStream.#ctor(System.Byte[])">
            <summary>
               Construct a new <see cref="T:VisioForge.Libs.TagLib.Aac.BitStream"/>.
            </summary>
            <param name="buffer">
               A <see cref="T:System.Byte[]"/>, must be 7 bytes long.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.BitStream.ReadInt32(System.Int32)">
            <summary>
               Reads an Int32 from the bitstream        
            </summary>
            <param name="numberOfBits">
               A <see cref="T:System.Int32" /> value containing the number
               of bits to read from the bitstream
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Aac.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for ADTS AAC audio files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> and <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> will be added automatically to any
               file that doesn't contain one. This change does not effect the
               file until it is saved and can be reversed using the following
               method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aac.File.first_header">
            <summary>
               Contains the first audio header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aac.File" /> for a specified path in the local
               file system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aac.File" /> for a specified path in the local
               file system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aac.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aac.File" /> for a specified file abstraction with
               an average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               If a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> is added to the
               current instance, it will be placed at the start of the
               file. On the other hand, <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" />
               <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added to the end of
               the file. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <remarks>
               This method only searches for an audio header in the
               first 16384 bytes of code to avoid searching forever in
               corrupt files.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aac.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Aiff.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide
               support for reading and writing tags and properties for files
               using the AIFF file format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.header_block">
            <summary>
               Contains the address of the AIFF header block.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.tag">
            <summary>
             Contains the Id3v2 tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.properties">
            <summary>
             Contains the media properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.FileIdentifier">
            <summary>
               The identifier used to recognize a AIFF files.
            </summary>
            <value>
               "FORM"
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.CommIdentifier">
            <summary>
               The identifier used to recognize a AIFF Common chunk.
            </summary>
            <value>
               "COMM"
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.SoundIdentifier">
            <summary>
               The identifier used to recognize a AIFF Sound Data Chunk.
            </summary>
            <value>
               "SSND"
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.ID3Identifier">
            <summary>
               The identifier used to recognize a AIFF ID3 chunk.
            </summary>
            <value>
               "ID3 "
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.File.AIFFFormType">
            <summary>
               The identifier used to recognize a AIFF Form type.
            </summary>
            <value>
               "AIFF"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aiff.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aiff.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aiff.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aiff.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Aiff.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.FindChunk(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Search the file for a chunk whose name is given by
               the chunkName parameter, starting from startPos.
               Note that startPos must be a valid position for a
               chunk, or else finding will fail.
            </summary>
            <param name="chunkName">Name of the chunk to search for</param>
            <param name="startPos">Position for starting the search</param>
            <returns>
               Position of the chunk in the stream, or -1
               if no chunk was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.File.Read(System.Boolean,VisioForge.Libs.TagLib.ReadStyle,System.UInt32@,System.Int64@,System.Int64@)">
            <summary>
               Reads the contents of the current instance determining
               the size of the riff data, the area the tagging is in,
               and optionally reading in the tags and media properties.
            </summary>
            <param name="read_tags">
               If <see langword="true" />, any tags found will be read
               into the current instance.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <param name="aiff_size">
               A <see cref="T:System.UInt32"/> value reference to be filled with
               the size of the RIFF data as read from the file.
            </param>
            <param name="tag_start">
               A <see cref="T:System.Int64" /> value reference to be filled with
               the absolute seek position at which the tagging data
               starts.
            </param>
            <param name="tag_end">
               A <see cref="T:System.Int64" /> value reference to be filled with
               the absolute seek position at which the tagging data
               ends.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not begin with <see cref="F:VisioForge.Libs.TagLib.Aiff.File.FileIdentifier"
               />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Aiff.StreamHeader">
            <summary>
               This struct implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide
               support for reading Apple's AIFF stream properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.channels">
            <summary>
               Contains the number of channels.
            </summary>
            <remarks>
               This value is stored in bytes (9,10).
               1 is monophonic, 2 is stereo, 4 means 4 channels, etc..
               any number of audio channels may be represented
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.total_frames">
            <summary>
               Contains the number of sample frames in the Sound Data chunk.
            </summary>
            <remarks>
               This value is stored in bytes (11-14).
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.bits_per_sample">
            <summary>
               Contains the number of bits per sample.
            </summary>
            <remarks>
               This value is stored in bytes (15,16).
               It can be any number from 1 to 32.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.sample_rate">
            <summary>
               Contains the sample rate.
            </summary>
            <remarks>
               This value is stored in bytes (17-26).
               the sample rate at which the sound is to be played back, 
               in sample frames per second
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.stream_length">
            <summary>
               Contains the length of the audio stream.
            </summary>
            <remarks>
               This value is provided by the constructor.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.Size">
            <summary>
               The size of an AIFF Common chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.FileIdentifier">
            <summary>
               The identifier used to recognize a AIFF file.
               Altough an AIFF file start with "FORM2, we're interested
               in the Common chunk only, which contains the properties we need.
            </summary>
            <value>
               "COMM"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Aiff.StreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Aiff.StreamHeader" /> for a specified header block and
               stream length.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header data.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value containing the length of the
               AIFF Audio stream in bytes.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not begin with <see
               cref="F:VisioForge.Libs.TagLib.Aiff.StreamHeader.FileIdentifier" /> 
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Aiff.StreamHeader.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for Monkey's Audio APE
               files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added automatically to
               any file that doesn't contain one. This change does not effect
               the physical file until <see cref="M:VisioForge.Libs.TagLib.File.Save" /> is called and can be
               reversed using the following method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.File.header_block">
            <summary>
               Contains the block with the audio header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               If a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> is added to the
               current instance, it will be placed at the start of the
               file. On the other hand, <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" />
               <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added to the end of
               the file. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.FooterFlags">
            <summary>
               Indicates the flags applied to a <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.FooterFlags.FooterAbsent">
            <summary>
               The tag lacks a footer object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.FooterFlags.IsHeader">
            <summary>
               The footer is actually a header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.FooterFlags.HeaderPresent">
            <summary>
               The tag contains a header.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.Footer">
            <summary>
               This structure provides a representation of an APEv2 tag footer
               which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Footer.version">
            <summary>
               Contains the APE tag version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Footer.Size">
            <summary>
               Specifies the size of an APEv2 footer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Footer.FileIdentifier">
            <summary>
               Specifies the identifier used find an APEv2 footer in a
               file.
            </summary>
            <value>
               "<c>APETAGEX</c>"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> by reading it from raw footer data.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data to build the new instance from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is smaller than <see
               cref="F:VisioForge.Libs.TagLib.Ape.Footer.Size" /> or does not begin with <see
               cref="F:VisioForge.Libs.TagLib.Ape.Footer.FileIdentifier" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Footer.Version">
            <summary>
               Gets the version of APE tag described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the version of the
               APE tag described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Footer.Flags">
            <summary>
               Gets and sets the flags that apply to the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.Ape.FooterFlags" /> value
               containing the flags that apply to the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Footer.ItemCount">
            <summary>
               Gets and sets the number of items in the tag represented
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               items in the tag represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Footer.TagSize">
            <summary>
               Gets the size of the tag represented by the current
               instance, including the footer but excluding the header
               if applicable.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               tag represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Footer.CompleteTagSize">
            <summary>
               Gets the complete size of the tag represented by the
               current instance, including the header and footer.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               tag represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.RenderFooter">
            <summary>
               Renders the current instance as an APE tag footer.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.RenderHeader">
            <summary>
               Renders the current instance as an APE tag header.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance or an empty
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object if <see cref="P:VisioForge.Libs.TagLib.Ape.Footer.Flags" />
               does not include <see cref="F:VisioForge.Libs.TagLib.Ape.FooterFlags.HeaderPresent"
               />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.Render(System.Boolean)">
            <summary>
               Renders the current instance as either an APE tag header
               or footer.
            </summary>
            <param name="isHeader">
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is to be rendered as a header.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.GetHashCode">
            <summary>
               Generates a hash code for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value containing the hash code for
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.Equals(System.Object)">
            <summary>
               Checks whether or not the current instance is equal to
               another object.
            </summary>
            <param name="other">
               A <see cref="T:System.Object" /> to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.Equals(VisioForge.Libs.TagLib.Ape.Footer)">
            <summary>
               Checks whether or not the current instance is equal to
               another instance of <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" />.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> object to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.op_Equality(VisioForge.Libs.TagLib.Ape.Footer,VisioForge.Libs.TagLib.Ape.Footer)">
            <summary>
               Gets whether or not two instances of <see cref="T:VisioForge.Libs.TagLib.Ape.Footer"
               /> are equal to eachother.
            </summary>
            <param name="first">
               The first <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> object to compare.
            </param>
            <param name="second">
               The second <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               equal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Footer.op_Inequality(VisioForge.Libs.TagLib.Ape.Footer,VisioForge.Libs.TagLib.Ape.Footer)">
            <summary>
               Gets whether or not two instances of <see cref="T:VisioForge.Libs.TagLib.Ape.Footer"
               /> are unequal to eachother.
            </summary>
            <param name="first">
               The first <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> object to compare.
            </param>
            <param name="second">
               The second <see cref="T:VisioForge.Libs.TagLib.Ape.Footer" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               unequal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.ItemType">
            <summary>
               Indicates the type of data stored in a <see cref="T:VisioForge.Libs.TagLib.Ape.Item" />
               object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.ItemType.Text">
            <summary>
               The item contains Unicode text.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.ItemType.Binary">
            <summary>
               The item contains binary data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.ItemType.Locator">
            <summary>
               The item contains a locator (file path/URL) for external
               information.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.Item">
            <summary>
               This class provides a representation of an APEv2 tag item which
               can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Item.data">
            <summary>
               Contains the item value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Item.text">
            <summary>
               Contains the item text.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Item" />  by reading in a raw APEv2 item.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item to
               read.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the offset in
               <paramref name="data" /> at which the item data begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A complete item could not be read.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(System.String,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Item" /> with a specified key and value.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key to use
               for the current instance.
            </param>
            <param name="value">
               A <see cref="T:System.String" /> object containing the value to
               store in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> or <paramref name="value" /> is
               <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(System.String,System.String[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Item" /> with a specified key and collection of
               values.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key to use
               for the current instance.
            </param>
            <param name="value">
               A <see cref="T:string[]" /> containing the values to store
               in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> or <paramref name="value" /> is
               <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(System.String,VisioForge.Libs.TagLib.StringCollection)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Item" /> with a specified key and collection of
               values.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key to use
               for the current instance.
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               values to store in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> or <paramref name="value" /> is
               <see langword="null" />.
            </exception>
            <seealso cref="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(System.String,System.String[])" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(System.String,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Item" /> with a specified key and raw data.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key to use
               for the current instance.
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               values to store in the new instance.
            </param>
            <remarks>
               This constructor automatically marks the new instance as
               <see cref="F:VisioForge.Libs.TagLib.Ape.ItemType.Binary" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> or <paramref name="value" /> is
               <see langword="null" />.
            </exception>
            <seealso cref="M:VisioForge.Libs.TagLib.Ape.Item.#ctor(System.String,System.String[])" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Item.Key">
            <summary>
               Gets the key used to identify the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the key used to
               identify the current instance.
            </value>
            <remarks>
               This value is used for specifying the contents of the
               item in a common and consistant fashion. For example,
               <c>"TITLE"</c> specifies that the item contains the title
               of the track.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Item.Value">
            <summary>
               Gets the binary value stored in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the binary
               value stored in the current instance, or <see
               langword="null" /> if the item contains text.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Item.Size">
            <summary>
               Gets the size of the current instance as it last appeared
               on disk.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the size of the
               current instance as it last appeared on disk.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Item.Type">
            <summary>
               Gets and sets the type of value contained in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Ape.ItemType" /> value indicating the type of
               value contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Item.ReadOnly">
            <summary>
               Gets and sets whether or not the current instance is
               flagged as read-only on disk.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is flagged as read-only on disk.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Item.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance contains no value.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.ToString">
            <summary>
               Gets the contents of the current instance as a <see
               cref="T:System.String" />.
            </summary>
            <returns>
               <para>A <see cref="T:System.String" /> object containing the text
               stored in the current instance, or <see langword="null"
               /> if the item is empty of contains binary data.</para>
               <para>If the current instance contains multiple string
               values, they will be returned as a comma separated
               value.</para>
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.ToStringArray">
            <summary>
               Gets the contents of the current instance as a <see
               cref="T:System.String" /> array.
            </summary>
            <returns>
               A <see cref="T:string[]" /> containing the text stored in
               the current instance, or an empty array if the item
               contains binary data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.Render">
            <summary>
               Renders the current instance as an APEv2 item.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.Parse(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Populates the current instance by reading in a raw APEv2
               item.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item to
               read.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the offset in
               <paramref name="data" /> at which the item data begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A complete item could not be read.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Item.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Ape.Item"/> object identical to the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.CompressionLevel">
            <summary>
               Indicates the compression level used when encoding a Monkey's
               Audio APE file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.CompressionLevel.None">
            <summary>
               The audio is not compressed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.CompressionLevel.Fast">
            <summary>
               The audio is mildly compressed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.CompressionLevel.Normal">
            <summary>
               The audio is compressed at a normal level.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.CompressionLevel.High">
            <summary>
               The audio is highly compressed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.CompressionLevel.ExtraHigh">
            <summary>
               The audio is extremely highly compressed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.CompressionLevel.Insane">
            <summary>
               The audio is compressed to an insane level.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.StreamHeader">
            <summary>
               This struct implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide
               support for reading Monkey's Audio APE stream properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.version">
            <summary>
               Contains the APE version.
            </summary>
            <remarks>
               This value is stored in bytes (4,5) of the file and is
               1000 times the actual version number, so 3810 indicates
               version 3.81.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.blocks_per_frame">
            <summary>
               Contains the number of audio blocks in one frame.
            </summary>
            <remarks>
               This value is stored in bytes (55-58).
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.final_frame_blocks">
            <summary>
               Contains the number of audio blocks in the final frame.
            </summary>
            <remarks>
               This value is stored in bytes (59-62).
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.total_frames">
            <summary>
               Contains the total number of frames.
            </summary>
            <remarks>
               This value is stored in bytes (63-66).
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.bits_per_sample">
            <summary>
               Contains the number of bits per sample.
            </summary>
            <remarks>
               This value is stored in bytes (67,68) and is typically
               16.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.channels">
            <summary>
               Contains the number of channels.
            </summary>
            <remarks>
               This value is stored in bytes (69,70) and is typically
               1 or 2.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.sample_rate">
            <summary>
               Contains the sample rate.
            </summary>
            <remarks>
               This value is stored in bytes (71-74) and is typically
               44100.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.stream_length">
            <summary>
               Contains the length of the audio stream.
            </summary>
            <remarks>
               This value is provided by the constructor.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.Size">
            <summary>
               The size of a Monkey Audio header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.StreamHeader.FileIdentifier">
            <summary>
               The identifier used to recognize a WavPack file.
            </summary>
            <value>
               "MAC "
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.StreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.StreamHeader" /> for a specified header block and
               stream length.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header data.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value containing the length of the
               Monkey Audio stream in bytes.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not begin with <see
               cref="F:VisioForge.Libs.TagLib.Ape.StreamHeader.FileIdentifier" /> or is less than <see cref="F:VisioForge.Libs.TagLib.Ape.StreamHeader.Size"
               /> bytes long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.Version">
            <summary>
               Gets the APE version of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> value containing the APE version
               of the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.StreamHeader.Compression">
            <summary>
               Gets the level of compression used when encoding the
               audio represented by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Ape.CompressionLevel" /> value indicating the
               level of compression used when encoding the audio
               represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ape.Tag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> and implements <see
               cref="T:System.Collections.Generic.IEnumerable`1" /> to provide a representation of an APEv2
               tag which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Tag.picture_item_names">
            <summary>
               Contains names of picture fields, indexed to correspond
               to their picture item names.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Tag.footer">
            <summary>
               Contains the tag footer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Tag.items">
            <summary>
               Contains the items in the tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ape.Tag.FileIdentifier">
            <summary>
               Specifies the identifier used find an APEv2 tag in a
               file.
            </summary>
            <value>
               "<c>APETAGEX</c>"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.#ctor(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> by reading the contents from a specified
               position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the contents of the new instance is to be
               read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the tag.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> by reading the contents of a raw tag in a
               specified <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               tag.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null"/>.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is too small to contain a tag,
               has a header where the footer should be, or is smaller
               than the tag it is supposed to contain.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.HeaderPresent">
            <summary>
               Gets and sets whether or not the current instance has a
               header when rendered.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance has a header when rendered.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.AddValue(System.String,System.UInt32,System.UInt32)">
            <summary>
               Adds a number to the value stored in a specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to store the value in.
            </param>
            <param name="number">
               A <see cref="T:System.UInt32" /> value containing the number to
               store.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32" /> value representing a total which
               <paramref name="number" /> is a part of, or zero if
               <paramref name="number" /> is not part of a set.
            </param>
            <remarks>
               If both <paramref name="number" /> and <paramref
               name="count" /> are equal to zero, the value will not be
               added. If <paramref name="count" /> is zero, <paramref
               name="number" /> by itself will be stored. Otherwise, the
               values will be stored as "<paramref name="number"
               />/<paramref name="count" />".
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.SetValue(System.String,System.UInt32,System.UInt32)">
            <summary>
               Stores a number in a specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to store the value in.
            </param>
            <param name="number">
               A <see cref="T:System.UInt32" /> value containing the number to
               store.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32" /> value representing a total which
               <paramref name="number" /> is a part of, or zero if
               <paramref name="number" /> is not part of a set.
            </param>
            <remarks>
               If both <paramref name="number" /> and <paramref
               name="count" /> are equal to zero, the value will be
               cleared. If <paramref name="count" /> is zero, <paramref
               name="number" /> by itself will be stored. Otherwise, the
               values will be stored as "<paramref name="number"
               />/<paramref name="count" />".
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.AddValue(System.String,System.String)">
            <summary>
               Adds the contents of a <see cref="T:System.String" /> to the value
               stored in a specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to store the value in.
            </param>
            <param name="value">
               A <see cref="T:System.String" /> object containing the text to
               add.
            </param>
            <remarks>
               If <paramref name="value" /> is <see langword="null" />
               or empty, the value will not be added.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.SetValue(System.String,System.String)">
            <summary>
               Stores the contents of a <see cref="T:System.String" /> in a
               specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to store the value in.
            </param>
            <param name="value">
               A <see cref="T:System.String" /> object containing the text to
               store.
            </param>
            <remarks>
               If <paramref name="value" /> is <see langword="null" />
               or empty, the value will be cleared.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.AddValue(System.String,System.String[])">
            <summary>
               Adds the contents of a <see cref="T:string[]" /> to the
               value stored in a specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to store the value in.
            </param>
            <param name="value">
               A <see cref="T:string[]" /> containing the text to add.
            </param>
            <remarks>
               If <paramref name="value" /> is <see langword="null" />
               or empty, the value will not be added.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.SetValue(System.String,System.String[])">
            <summary>
               Stores the contents of a <see cref="T:string[]" /> in a
               specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to store the value in.
            </param>
            <param name="value">
               A <see cref="T:string[]" /> containing the text to store.
            </param>
            <remarks>
               If <paramref name="value" /> is <see langword="null" />
               or empty, the value will be cleared.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.GetItem(System.String)">
            <summary>
               Gets a specified item from the current instance.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to get from the current instance.
            </param>
            <returns>
               The item with the matching name contained in the current
               instance, or <see langword="null" /> if a matching object
               was not found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.SetItem(VisioForge.Libs.TagLib.Ape.Item)">
            <summary>
               Adds an item to the current instance, replacing the
               existing one of the same name.
            </summary>
            <param name="item">
               A <see cref="T:VisioForge.Libs.TagLib.Ape.Item" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.RemoveItem(System.String)">
            <summary>
               Removes the item with a specified key from the current
               instance.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to remove from the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.HasItem(System.String)">
            <summary>
            Checks if an item exists.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to check.
            </param>
            <returns>
               Returns <see langword="true"/> if the <paramref name="key"/>
               exists - else <see langword="false"/> is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.Render">
            <summary>
               Renders the current instance as a raw APEv2 tag.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered tag.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.Read(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Populates the current instance be reading in a tag from
               a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the tag from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to read the tag.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than 0 or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Populates the current instance by parsing the contents of
               a raw APEv2 tag, minus the header and footer.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the content
               of an APEv2 tag, minus the header and footer.
            </param>
            <remarks>
               This method must only be called after the internal
               footer has been read from the file, otherwise the data
               cannot be parsed correctly.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.GetItemIndex(System.String)">
            <summary>
               Gets the index of an item in the current instance.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key to look
               for in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the index in <see
               cref="F:VisioForge.Libs.TagLib.Ape.Tag.items" /> at which the item appears, or -1 if the
               item was not found.
            </returns>
            <remarks>
               Keys are compared in a case insensitive manner.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.GetItemAsString(System.String)">
            <summary>
               Gets the text value from a specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to get the value from.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the text of the
               specified frame, or <see langword="null" /> if no value
               was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.GetItemAsStrings(System.String)">
            <summary>
               Gets the text values from a specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to get the value from.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the text of the
               specified frame, or an empty array if no values were
               found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.GetItemAsUInt32(System.String,System.Int32)">
            <summary>
               Gets an integer value from a "/" delimited list in a
               specified item.
            </summary>
            <param name="key">
               A <see cref="T:System.String" /> object containing the key of the
               item to get the value from.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the index in the
               integer list of the value to return.
            </param>
            <returns>
               A <see cref="T:System.UInt32" /> value read from the list in the
               frame, or 0 if the value wasn't found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.GetEnumerator">
            <summary>
               Gets the enumerator for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerator`1" /> object enumerating through
               the item keys stored in the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.System#Collections#IEnumerable#GetEnumerator">
            <summary>
               Gets the enumerator for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator" /> object enumerating through
               the item keys stored in the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Ape" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Title" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.TitleSort">
            <summary>
               Gets and sets the sort names of the Title of the
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names for
               the Title of the media described by the current instance,
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TitleSort" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field gives a nice/short precision to 
               the title, which is typically below the title on the
               front cover of a media.
               For example, for "Back to the future", this would be 
               "It's About Time". 
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "Subtitle" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This is especially relevant for a movie.
               For example, for "Back to the Future 2", this could be
               "After visiting 2015, Marty McFly must repeat his visit 
               to 1955 to prevent disastrous changes to 1985...without
               interfering with his first trip".
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "Description" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the "Artist" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "ArtistSort" field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.Ape.Tag.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               <para> This is typically usefull for movies, although the
               instrument played by each artist in a music may be of
               relevance.
               </para>
               <para>It is highly important to match each role to the 
               performers. This means that a role may be <see 
               langword="null"/> to keep the match between a
               Performers[i] and PerformersRole[i].
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "TMCL" Text
               Information Frame: The 'Musician credits list' is 
               intended as a mapping between instruments and the 
               musician that played it.Every odd field is an 
               instrument and every even is an artist or a comma 
               delimited list of artists.
            </remarks>
            <remarks>
               This property is implemented using the "PerformersRole" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Album Artist"
               item, and "AlbumArtist" as a backup property if it exists.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               This property is implemented using the "AlbumArtistSort"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Composer" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.ComposersSort">
            <summary>
               Gets and sets the sort names for the composers of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the sort names
               for the composer of the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ComposerSort"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Album" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.AlbumSort">
            <summary>
               Gets and sets the sort names for the Album Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Album Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "AlbumSort"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Comment" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Genre" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Year" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "Track" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "Track" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               This property is implemented using the "Disc" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "Disc" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Lyrics" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Grouping" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "BPM" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "Conductor" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "Copyright" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "DateTagged" item.
               Format used is: yyyy-MM-dd HH:mm:ss
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ArtistID for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ARTISTID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseGroupID for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_RELEASEGROUPID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseID for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseArtistID for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMARTISTID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               TrackID for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_TRACKID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               DiscID for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_DISCID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicIPPUID
               for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICIP_PUID" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.AmazonId">
            <summary>
               Gets and sets the Amazon ID of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the AmazonID
               for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ASIN" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseStatus for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMSTATUS" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseType for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMTYPE" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz ReleaseCountry of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseCountry for the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "RELEASECOUNTRY" item.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain track gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the track gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_TRACK_GAIN" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain track peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the track peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_TRACK_PEAK" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain album gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the album gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_ALBUM_GAIN" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain album peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the album peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_ALBUM_PEAK" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               This property is implemented using the "Cover Art" items
               and supports only one picture per type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ape.Tag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ape.Tag.CopyTo(VisioForge.Libs.TagLib.Tag,System.Boolean)">
            <summary>
               Copies the values from the current instance to another
               <see cref="T:VisioForge.Libs.TagLib.Tag" />, optionally overwriting
               existing values.
            </summary>
            <param name="target">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the target
               tag to copy values to.
            </param>
            <param name="overwrite">
               A <see cref="T:System.Boolean" /> specifying whether or not to copy
               values over existing one.
            </param>
            <remarks>
               <para>If <paramref name="target" /> is of type <see
               cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> a complete copy of all values
               will be performed. Otherwise, only standard values will
               be copied.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="target" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Content Description object which can be
               read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.title">
            <summary>
               Contains the media title.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.author">
            <summary>
               Contains the author/performer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.copyright">
            <summary>
               Contains the copyright information.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.description">
            <summary>
               Contains the description of the media.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.rating">
            <summary>
               Contains the rating of the media.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject" /> by reading the
               contents from a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject" /> with no contents.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.Title">
            <summary>
               Gets and sets the title of the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title of
               the media or <see langword="null" /> if it is not set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.Author">
            <summary>
               Gets and sets the author or performer of the media
               described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the author of
               the media or <see langword="null" /> if it is not set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media or <see langword="null" /> if
               it is not set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.Description">
            <summary>
               Gets and sets the description of the media described by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media or <see langword="null" /> if it is not set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.Rating">
            <summary>
               Gets and sets the rating of the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a rating of the
               media or <see langword="null" /> if it is not set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if all the values are cleared.
               Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.DataType">
            <summary>
               Indicates the type of data stored in a <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> or <see cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" />
               object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.Unicode">
            <summary>
               The descriptor contains Unicode (UTF-16LE) text.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.Bytes">
            <summary>
               The descriptor contains binary data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.Bool">
            <summary>
               The descriptor contains a boolean value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.DWord">
            <summary>
               The descriptor contains a 4-byte DWORD value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.QWord">
            <summary>
               The descriptor contains a 8-byte QWORD value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.Word">
            <summary>
               The descriptor contains a 2-byte WORD value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DataType.Guid">
            <summary>
               The descriptor contains a 16-byte GUID value.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor">
            <summary>
               This class provides a representation of an ASF Content
               Descriptor to be used in combination with <see
               cref="T:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptor.strValue">
            <summary>
               Contains the string value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptor.byteValue">
            <summary>
               Contains the byte value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ContentDescriptor.longValue">
            <summary>
               Contains the long value.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(System.String,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> with a specified name and
               and value.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.String" /> object containing the value for
               the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(System.String,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> with a specified name and
               and value.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(System.String,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> with a specified name and
               and value.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.UInt32" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(System.String,System.UInt64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> with a specified name and
               and value.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.UInt64" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(System.String,System.UInt16)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> with a specified name and
               and value.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.UInt16" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(System.String,System.Boolean)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> with a specified name and
               and value.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.Boolean" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.#ctor(VisioForge.Libs.TagLib.Asf.File)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> by reading its contents from
               a file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object to read the raw ASF
               Description Record from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A valid descriptor could not be read.
            </exception>
            <remarks>
               <paramref name="file" /> must be at a seek position at
               which the descriptor can be read.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptor.Name">
            <summary>
               Gets the name of the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the name of the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ContentDescriptor.Type">
            <summary>
               Gets the type of data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Asf.DataType" /> value indicating type of data
               contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> object containing the value of
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.ToByteVector">
            <summary>
               Gets the binary contents of the current instance.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               contents of the current instance, or <see langword="null"
               /> if <see cref="P:VisioForge.Libs.TagLib.Asf.ContentDescriptor.Type" /> is unequal to <see
               cref="F:VisioForge.Libs.TagLib.Asf.DataType.Bytes" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.ToBool">
            <summary>
               Gets the boolean value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Boolean" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.ToDWord">
            <summary>
               Gets the DWORD value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.ToQWord">
            <summary>
               Gets the QWORD value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt64" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.ToWord">
            <summary>
               Gets the WORD value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.Render">
            <summary>
               Renders the current instance as a raw ASF Description
               Record.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ContentDescriptor.Parse(VisioForge.Libs.TagLib.Asf.File)">
            <summary>
               Populates the current instance by reading in the contents
               from a file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object to read the raw ASF
               Content Descriptor from.
            </param>
            <returns>
               <see langword="true" /> if the data was read correctly.
               Otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord">
            <summary>
               This class provides a representation of an ASF Description Record
               to be used in combination with <see cref="T:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject"
               />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DescriptionRecord.strValue">
            <summary>
               Contains the string value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DescriptionRecord.byteValue">
            <summary>
               Contains the byte value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DescriptionRecord.longValue">
            <summary>
               Contains the long value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.DescriptionRecord.guidValue">
            <summary>
               Contains the GUID value.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.String" /> object containing the value for
               the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.UInt32" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,System.UInt64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.UInt64" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,System.UInt16)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.UInt16" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,System.Boolean)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.Boolean" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(System.UInt16,System.UInt16,System.String,System.Guid)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> with a specified language,
               stream, name, and value.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the new instance.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               new instance.
            </param>
            <param name="value">
               A <see cref="T:System.Guid" /> value containing the value
               for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.#ctor(VisioForge.Libs.TagLib.Asf.File)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> by reading its contents from
               a file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object to read the raw ASF
               Description Record from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A valid record could not be read.
            </exception>
            <remarks>
               <paramref name="file" /> must be at a seek position at
               which the record can be read.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.DescriptionRecord.LanguageListIndex">
            <summary>
               Gets the index of the language associated with the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the index of the
               language associated with the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.DescriptionRecord.StreamNumber">
            <summary>
               Gets the index of the stream associated with the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the index of the
               stream associated with the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.DescriptionRecord.Name">
            <summary>
               Gets the name of the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the name of the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.DescriptionRecord.Type">
            <summary>
               Gets the type of data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Asf.DataType" /> value indicating type of data
               contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> object containing the value of
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToByteVector">
            <summary>
               Gets the binary contents of the current instance.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               contents of the current instance, or <see langword="null"
               /> if <see cref="P:VisioForge.Libs.TagLib.Asf.DescriptionRecord.Type" /> is unequal to <see
               cref="F:VisioForge.Libs.TagLib.Asf.DataType.Bytes" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToBool">
            <summary>
               Gets the boolean value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Boolean" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToDWord">
            <summary>
               Gets the DWORD value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToQWord">
            <summary>
               Gets the QWORD value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt64" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToWord">
            <summary>
               Gets the WORD value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the value of the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.ToGuid">
            <summary>
               Gets the GUID value contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Guid" /> value containing the value
               of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.Render">
            <summary>
               Renders the current instance as a raw ASF Description
               Record.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.DescriptionRecord.Parse(VisioForge.Libs.TagLib.Asf.File)">
            <summary>
               Populates the current instance by reading in the contents
               from a file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object to read the raw ASF
               Description Record from.
            </param>
            <returns>
               <see langword="true" /> if the data was read correctly.
               Otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Extended Content Description object
               which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.descriptors">
            <summary>
               Contains the content descriptors.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject" /> by reading the
               contents from a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject" /> with no
               contents.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance doesn't
               contain any <see cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> objects.
               Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.RemoveDescriptors(System.String)">
            <summary>
               Removes all descriptors with a given name from the
               current instance.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               descriptors to be removed.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.GetDescriptors(System.String[])">
            <summary>
               Gets all descriptors with any of a collection of names
               from the current instance.
            </summary>
            <param name="names">
               A <see cref="T:string[]" /> containing the names of the
               descriptors to be retrieved.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="names" /> is <see langword="null" />.
            </exception>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the <see cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> objects
               retrieved from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.AddDescriptor(VisioForge.Libs.TagLib.Asf.ContentDescriptor)">
            <summary>
               Adds a descriptor to the current instance.
            </summary>
            <param name="descriptor">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> object to add to the
               current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="descriptor" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.SetDescriptors(System.String,VisioForge.Libs.TagLib.Asf.ContentDescriptor[])">
            <summary>
               Sets the a collection of desciptors for a given name,
               removing the existing matching records.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               descriptors to be added.
            </param>
            <param name="descriptors">
               A <see cref="T:ContentDescriptor[]" /> containing
               descriptors to add to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="name" /> is <see langword="null" />.
            </exception>
            <remarks>
               All added entries in <paramref name="descriptors" />
               should match <paramref name="name" /> but it is not
               verified by the method. The descriptors will be added
               with their own names and not the one provided in this
               method, which are used for removing existing values and
               determining where to position the new objects.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the content
               descriptors.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the content descriptors.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide tagging
               and properties support for Microsoft's ASF files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.File.asf_tag">
            <summary>
               Contains the file's tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.File.properties">
            <summary>
               Contains the file's properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Asf.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadWord">
            <summary>
               Reads a 2-byte WORD from the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the WORD read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadDWord">
            <summary>
               Reads a 4-byte DWORD from the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the DWORD read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadQWord">
            <summary>
               Reads a 8-byte QWORD from the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt64" /> value containing the QWORD read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadGuid">
            <summary>
               Reads a 16-byte GUID from the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Guid" /> value containing the GUID
               read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadUnicode(System.Int32)">
            <summary>
               Reads a Unicode (UTF-16LE) string of specified length
               from the current instance.
            </summary>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read. This should always be an even number.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the Unicode
               string read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadObjects(System.UInt32,System.Int64)">
            <summary>
               Reads a collection of objects from the current instance.
            </summary>
            <param name="count">
               A <see cref="T:System.UInt32" /> value specifying the number of
               objects to read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to start reading.
            </param>
            <returns>
               A new <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> objects read from the
               current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.ReadObject(System.Int64)">
            <summary>
               Reads a <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> from the current instance.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to start reading.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> object of appropriate type as
               read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the contents of the current instance.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.FilePropertiesObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF File Properties object which can be read
               from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.file_id">
            <summary>
               Contains the GUID for the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.creation_date">
            <summary>
               Contains the creation date.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.play_duration">
            <summary>
               Contains the play duration.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.send_duration">
            <summary>
               Contains the send duration.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.FilePropertiesObject" /> by reading the contents
               from a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.FileId">
            <summary>
               Gets the GUID for the file described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Guid" /> value containing the GUID
               for the file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.FileSize">
            <summary>
               Gets the size of the file described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> value containing the size of the
               file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.CreationDate">
            <summary>
               Gets the creation date of the file described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.DateTime" /> value containing the creation
               date of the file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.DataPacketsCount">
            <summary>
               Gets the number of data packets in the file described by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> value containing the number of
               data packets in the file described by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.PlayDuration">
            <summary>
               Gets the play duration of the file described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> value containing the play
               duration of the file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.SendDuration">
            <summary>
               Gets the send duration of the file described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> value containing the send
               duration of the file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.Preroll">
            <summary>
               Gets the pre-roll of the file described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> value containing the pre-roll of
               the file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.Flags">
            <summary>
               Gets the flags of the file described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the flags of the
               file described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.MinimumDataPacketSize">
            <summary>
               Gets the minimum data packet size of the file described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the minimum data
               packet size of the file described by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.MaximumDataPacketSize">
            <summary>
               Gets the maximum data packet size of the file described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the maximum data
               packet size of the file described by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.MaximumBitrate">
            <summary>
               Gets the maximum bitrate of the file described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the maximum
               bitrate of the file described by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.FilePropertiesObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.Guid">
            <summary>
               This static class contains common <see cref="T:System.Guid" />
               values used by ASF Objects.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfContentDescriptionObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfExtendedContentDescriptionObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfFilePropertiesObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.FilePropertiesObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfHeaderExtensionObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfHeaderObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.HeaderObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfMetadataLibraryObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfPaddingObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.PaddingObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfStreamPropertiesObject">
            <summary>
               Indicates that an object is a <see
               cref="T:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfAudioMedia">
            <summary>
               Indicates that a <see cref="T:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject" />
               contains information about an audio stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfVideoMedia">
            <summary>
               Indicates that a <see cref="T:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject" />
               contains information about an video stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Guid.AsfReserved1">
            <summary>
               Indicates a placeholder portion of a file is correctly
               encoded.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Header Extension object which can be
               read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject.children">
            <summary>
               Contains the child objects.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject" /> by reading the contents
               from a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or contents.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject.Children">
            <summary>
               Gets the child objects contained in the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the children of the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject.AddObject(VisioForge.Libs.TagLib.Asf.Object)">
            <summary>
               Adds a child object to the current instance.
            </summary>
            <param name="obj">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject.AddUniqueObject(VisioForge.Libs.TagLib.Asf.Object)">
            <summary>
               Adds a child unique child object to the current instance,
               replacing and existing child if present.
            </summary>
            <param name="obj">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.HeaderObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Header object which can be read from and
               written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.HeaderObject.reserved">
            <summary>
               Contains the reserved header data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.HeaderObject.children">
            <summary>
               Contains the child objects.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.HeaderObject" /> by reading the contents from a
               specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.HeaderObject.Extension">
            <summary>
               Gets the header extension object contained in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Asf.HeaderExtensionObject" /> object containing
               the header extension object.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.HeaderObject.Children">
            <summary>
               Gets the child objects contained in the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the children of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.HeaderObject.Properties">
            <summary>
               Gets the media properties contained within the current
               instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Asf.HeaderObject.Properties" /> object containing the media
               properties of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.HeaderObject.HasContentDescriptors">
            <summary>
               Gets whether or not the current instance contains either
               type of content descriptiors.
            </summary>
            <value>
               <see langword="true" /> if the current instance contains
               a <see cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptionObject" /> or a <see
               cref="T:VisioForge.Libs.TagLib.Asf.ExtendedContentDescriptionObject" />. Otherwise
               <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderObject.AddObject(VisioForge.Libs.TagLib.Asf.Object)">
            <summary>
               Adds a child object to the current instance.
            </summary>
            <param name="obj">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderObject.AddUniqueObject(VisioForge.Libs.TagLib.Asf.Object)">
            <summary>
               Adds a child unique child object to the current instance,
               replacing and existing child if present.
            </summary>
            <param name="obj">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.HeaderObject.RemoveContentDescriptors">
            <summary>
               Removes the content description objects from the current
               instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Metadata Library object which can be
               read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.records">
            <summary>
               Contains the description records.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject" /> by reading the contents
               from a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject" /> with no contents.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance doesn't
               contain any <see cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> objects.
               Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.RemoveRecords(System.UInt16,System.UInt16,System.String)">
            <summary>
               Removes all records with a given language, stream, and
               name from the current instance.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the records to be removed.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the records to be removed.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               records to be removed.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.GetRecords(System.UInt16,System.UInt16,System.String[])">
            <summary>
               Gets all records with a given language, stream, and any
               of a collection of names from the current instance.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the records to be retrieved.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the records to be retrieved.
            </param>
            <param name="names">
               A <see cref="T:string[]" /> containing the names of the
               records to be retrieved.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the <see cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> objects
               retrieved from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.AddRecord(VisioForge.Libs.TagLib.Asf.DescriptionRecord)">
            <summary>
               Adds a record to the current instance.
            </summary>
            <param name="record">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.DescriptionRecord" /> object to add to the
               current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.SetRecords(System.UInt16,System.UInt16,System.String,VisioForge.Libs.TagLib.Asf.DescriptionRecord[])">
            <summary>
               Sets the a collection of records for a given language,
               stream, and name, removing the existing matching records.
            </summary>
            <param name="languageListIndex">
               A <see cref="T:System.UInt16" /> value containing the language
               list index of the records to be added.
            </param>
            <param name="streamNumber">
               A <see cref="T:System.UInt16" /> value containing the stream
               number of the records to be added.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               records to be added.
            </param>
            <param name="records">
               A <see cref="T:DescriptionRecord[]" /> containing records
               to add to the new instance.
            </param>
            <remarks>
               All added entries in <paramref name="records" /> should
               match <paramref name="languageListIndex" />, <paramref
               name="streamNumber" /> and <paramref name="name" /> but
               it is not verified by the method. The records will be
               added with their own values and not those provided in
               this method, which are used for removing existing values
               and determining where to position the new object.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.MetadataLibraryObject.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the
               description records.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the description records.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.Object">
            <summary>
               This abstract class provides a basic representation of an ASF
               object which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.Object.id">
            <summary>
               Contains the GUID of the object.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.Object" /> by reading the contents from a
               specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.#ctor(System.Guid)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.Object" /> with a specified GUID.
            </summary>
            <param name="guid">
               A <see cref="T:System.Guid" /> value containing the GUID to
               use for the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Object.Guid">
            <summary>
               Gets the GUID for the current instance.
            </summary>
            <value>
               A <see cref="T:System.Guid" /> object containing the GUID
               of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Object.OriginalSize">
            <summary>
               Gets the original size of the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> value containing the size of the
               current instance as it originally appeared on disk.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
            <seealso cref="M:VisioForge.Libs.TagLib.Asf.Object.Render(VisioForge.Libs.TagLib.ByteVector)" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.RenderUnicode(System.String)">
            <summary>
               Renders a Unicode (wide) string.
            </summary>
            <param name="value">
               A <see cref="T:System.String" /> object containing the text to
               render.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.RenderDWord(System.UInt32)">
            <summary>
               Renders a 4-byte DWORD.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt32" /> value containing the DWORD to
               render.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.RenderQWord(System.UInt64)">
            <summary>
               Renders a 8-byte QWORD.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt64" /> value containing the QWORD to
               render.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.RenderWord(System.UInt16)">
            <summary>
               Renders a 2-byte WORD.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt16" /> value containing the WORD to
               render.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Object.Render(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Renders the current instance as a raw ASF object
               containing specified data.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data to
               contained in the rendered version of the current
               instance.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
            <remarks>
               Child classes implementing <see cref="M:VisioForge.Libs.TagLib.Asf.Object.Render" /> should
               render their contents and then send the data through this
               method to produce the final output.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.PaddingObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Padding object which can be read from
               and written to disk.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.PaddingObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.PaddingObject" /> by reading the contents from a
               specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.PaddingObject.#ctor(System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.PaddingObject" /> of a specified size.
            </summary>
            <param name="size">
               A <see cref="T:System.UInt32" /> value specifying the number of
               bytes the new instance is to take up on disk.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.PaddingObject.Size">
            <summary>
               Gets and sets the number of bytes the current instance
               will take up on disk.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> value containing the size of the
               current instance on disk.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.PaddingObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an ASF Stream Properties object which can be
               read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.time_offset">
            <summary>
               Contains the time offset of the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.reserved">
            <summary>
               Contains the reserved data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.PaddingObject" /> by reading the contents from a
               specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The object read from disk does not have the correct GUID
               or smaller than the minimum size.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.Codec">
            <summary>
               Gets the codec information contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ICodec" /> object containing the codec
               information read from <see cref="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.TypeSpecificData" /> or
               <see langword="null" /> if the data could not be decoded.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.StreamType">
            <summary>
               Gets the stream type GUID of the current instance.
            </summary>
            <summary>
               A <see cref="T:System.Guid" /> object containing the stream
               type GUID of the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.ErrorCorrectionType">
            <summary>
               Gets the error correction type GUID of the current
               instance.
            </summary>
            <summary>
               A <see cref="T:System.Guid" /> object containing the error
               correction type GUID of the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.TimeOffset">
            <summary>
               Gets the time offset at which the stream described by the
               current instance begins.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> value containing the time
               offset at which the stream described by the current
               instance begins.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.Flags">
            <summary>
               Gets the flags that apply to the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the flags that
               apply to the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.TypeSpecificData">
            <summary>
               Gets the type specific data contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type
               specific data contained in the current instance.
            </value>
            <remarks>
               The contents of this value are dependant on the type
               contained in <see cref="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.StreamType" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.ErrorCorrectionData">
            <summary>
               Gets the error correction data contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the error
               correction data contained in the current instance.
            </value>
            <remarks>
               The contents of this value are dependant on the type
               contained in <see cref="P:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.ErrorCorrectionType" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.StreamPropertiesObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.Tag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> to provide a
               representation of an ASF tag which can be read from and written
               to disk.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.Tag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.#ctor(VisioForge.Libs.TagLib.Asf.HeaderObject)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.Tag" /> using the children of a <see
               cref="T:VisioForge.Libs.TagLib.Asf.HeaderObject" /> object.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.HeaderObject" /> object whose children are
               are to be used by the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="header" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.ContentDescriptionObject">
            <summary>
               Gets the ASF Content Description object used by the
               current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Asf.Tag.ContentDescriptionObject" /> object
               containing the ASF Content Description object used by the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.ExtendedContentDescriptionObject">
            <summary>
               Gets the ASF Extended Content Description object used by
               the current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Asf.Tag.ExtendedContentDescriptionObject" /> object
               containing the ASF Extended Content Description object
               used by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MetadataLibraryObject">
            <summary>
               Gets the ASF Metadata Library object used by the current
               instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Asf.Tag.MetadataLibraryObject" /> object containing
               the ASF Metadata Library object used by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.GetDescriptorString(System.String[])">
            <summary>
               Gets the string contained in a specific descriptor in the
               current instance.
            </summary>
            <param name="names">
               A <see cref="T:string[]" /> containing the names of the
               descriptors to look for the value in.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="names" /> is <see langword="null" />.
            </exception>
            <returns>
               A <see cref="T:System.String" /> object containing the contents of
               the first descriptor found in the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.GetDescriptorStrings(System.String[])">
            <summary>
               Gets the strings contained in a specific descriptor in
               the current instance.
            </summary>
            <param name="names">
               A <see cref="T:string[]" /> containing the names of the
               descriptors to look for the value in.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="names" /> is <see langword="null" />.
            </exception>
            <returns>
               A <see cref="T:System.String" /> object containing the contents of
               the first descriptor found in the current instance as
               split by ';'.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.SetDescriptorString(System.String,System.String[])">
            <summary>
               Sets the string for a collection of descriptors in the
               current instance.
            </summary>
            <param name="value">
               A <see cref="T:System.String" /> object containing the value to
               store, or <see langword="null" /> to clear the value.
            </param>
            <param name="names">
               A <see cref="T:string[]" /> containing the names in which
               the value would be expected. For example, "WM/AlbumTitle"
               and "Album".
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="names" /> is <see langword="null" />.
            </exception>
            <remarks>
               The value will be stored in the first value in <paramref
               name="names" /> and the rest will be cleared.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.SetDescriptorStrings(System.String[],System.String[])">
            <summary>
               Sets the strings for a collection of descriptors in the
               current instance.
            </summary>
            <param name="value">
               A <see cref="T:string[]" /> containing the value to store,
               or <see langword="null" /> to clear the value.
            </param>
            <param name="names">
               A <see cref="T:string[]" /> containing the names in which
               the value would be expected. For example, "WM/AlbumTitle"
               and "Album".
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="names" /> is <see langword="null" />.
            </exception>
            <remarks>
               The value will be stored in the first value in <paramref
               name="names" /> and the rest will be cleared.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.RemoveDescriptors(System.String)">
            <summary>
               Removes all descriptors with a specified name from the
               current instance.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               descriptor to remove from the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="name" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.GetDescriptors(System.String[])">
            <summary>
               Gets all descriptors with any of a collection of names
               from the current instance.
            </summary>
            <param name="names">
               A <see cref="T:string[]" /> containing the names of the
               descriptors to be retrieved.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="names" /> is <see langword="null" />.
            </exception>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the <see cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> objects
               retrieved from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.SetDescriptors(System.String,VisioForge.Libs.TagLib.Asf.ContentDescriptor[])">
            <summary>
               Sets the a collection of desciptors for a given name,
               removing the existing matching records.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               descriptors to be added.
            </param>
            <param name="descriptors">
               A <see cref="T:ContentDescriptor[]" /> containing
               descriptors to add to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="name" /> is <see langword="null" />.
            </exception>
            <remarks>
               All added entries in <paramref name="descriptors" />
               should match <paramref name="name" /> but it is not
               verified by the method. The descriptors will be added
               with their own names and not the one provided in this
               method, which are used for removing existing values and
               determining where to position the new objects.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.AddDescriptor(VisioForge.Libs.TagLib.Asf.ContentDescriptor)">
            <summary>
               Adds a descriptor to the current instance.
            </summary>
            <param name="descriptor">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.ContentDescriptor" /> object to add to the
               current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="descriptor" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.PictureFromData(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Converts a raw ASF picture into an <see cref="T:VisioForge.Libs.TagLib.IPicture"
               /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing raw ASF
               picture data.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object to read from the raw
               data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.PictureToData(VisioForge.Libs.TagLib.IPicture)">
            <summary>
               Converts a <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object into raw ASF
               picture data.
            </summary>
            <param name="picture">
               A <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object to convert.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing raw ASF
               picture data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.SplitAndClean(System.String)">
            <summary>
               Splits a string into a collection of strings by ';'.
            </summary>
            <param name="s">
               A <see cref="T:System.String" /> object containing the text to
               split.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the split text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the content
               descriptors.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the content descriptors.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Asf" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the title stored in
               the ASF Content Description Object.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field gives a nice/short precision to 
               the title, which is typically below the title on the
               front cover of a media.
               For example, for "Back to the future", this would be 
               "It's About Time". 
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "WM/SubTitle"
               field.
               https://msdn.microsoft.com/en-us/library/windows/desktop/dd757997(v=vs.85).aspx
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.TitleSort">
            <summary>
               Gets and sets the sort names for the Track Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Track Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/TitleSortOrder"
               field.
               http://msdn.microsoft.com/en-us/library/aa386866(VS.85).aspx
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the description stored
               in the ASF Content Description Object.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the author stored in
               the ASF Content Description Object.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "WM/ArtistSortOrder" field.
               http://msdn.microsoft.com/en-us/library/aa386866(VS.85).aspx
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/AlbumArtist"
               and "AlbumArtist" Content Descriptors.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/AlbumArtistSortOrder"
               field.
               http://msdn.microsoft.com/en-us/library/aa386866(VS.85).aspx
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/Composer"
               and "Composer" Content Descriptors.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/AlbumTitle"
               and "Album" Content Descriptors.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.AlbumSort">
            <summary>
               Gets and sets the sort names for the Album Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Album Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/AlbumSortOrder"
               field.
               http://msdn.microsoft.com/en-us/library/aa386866(VS.85).aspx
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/Text" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/Genre",
               "WM/GenreID", and "Genre" Content Descriptors.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/Year" Content
               Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "WM/TrackNumber"
               Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TrackTotal"
               Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               This property is implemented using the "WM/PartOfSet"
               Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "WM/PartOfSet"
               Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "WM/Lyrics"
               Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the
               "WM/ContentGroupDescription" Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the
               "WM/BeatsPerMinute" Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "WM/Conductor"
               Content Descriptor.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the copyright stored
               in the ASF Content Description Object.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ArtistID for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Artist Id"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseGroupID for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Release Group Id"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseID for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Album Id"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseArtistID for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Album Artist Id"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               TrackID for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Track Id"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               DiscID for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Disc Id"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIPPUID 
               for the media described by the current instance or
               null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicIP/PUID"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseStatus for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Album Status"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseType for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Album Type"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseCountry for the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "MusicBrainz/Album Release Country"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain track gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the track gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_TRACK_GAIN" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain track peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the track peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_TRACK_PEAK" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain album gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the album gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_ALBUM_GAIN" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain album peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the album peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_ALBUM_PEAK" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               This property is implemented using the "WM/Picture"
               Content Descriptor and Description Record.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.Tag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Asf.UnknownObject">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Asf.Object" /> to provide a
               representation of an unknown object which can be read from and
               written to disk.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.UnknownObject.#ctor(VisioForge.Libs.TagLib.Asf.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Asf.UnknownObject" /> by reading the contents from a
               specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Asf.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the object.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Asf.UnknownObject.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Asf.UnknownObject.Render">
            <summary>
               Renders the current instance as a raw ASF object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Audible.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide tagging
               and properties support for Audible inc's aa file format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Audible.File.tag">
            <summary>
              Contains the tags for the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Audible.File.TagBlockOffset">
            <summary>
               The offset to the tag block.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Audible.File.OffsetToEndTagPointer">
            <summary>
               The offset to the end of tag pointer.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file is not the write length.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
            <remarks>
            	Currently this does not work as there is not enough
            	information about the file format
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
            <remarks>
            	Currently this does not work as there is not enough
            	information about the file format
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Audible.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Audible.Tag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Audible.Tag" /> to provide support for
               reading tags stored in the Audible Metadata format.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.Tag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.Tag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.Tag.#ctor(VisioForge.Libs.TagLib.Audible.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.Tag" /> by reading the contents from a specified
               position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Audible.File" /> object containing the file from
               which the contents of the new instance is to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the tag.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not contain FileIdentifier
               at the given position.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.Tag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Audible.Tag" /> by reading the contents from a specified
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to read the tag from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is less than 128 bytes or does
               not start with FileIdentifier.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.Tag.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Populates the current instance by parsing the contents of
               a raw AudibleMetadata tag.
            </summary>
            <param name="data">
               	A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the whole tag
            	object
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is less than 128 bytes or does
               not start with FileIdentifier.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.AudibleMetadata" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.Author">
            <summary>
            Get or Set the Author Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.Copyright">
            <summary>
            Get or Set the Copyright Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.Description">
            <summary>
            Get or Set the Description Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.Narrator">
            <summary>
            Get or Set the Narrator Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.Title">
            <summary>
               Gets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.Album">
            <summary>
               Gets the album for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Audible.Tag.AlbumArtists">
            <summary>
               Gets the album artist for the media described by the
               current instance.
            </summary>
            <value>
               	A <see cref="T:string[]" /> object containing a single 
            	artist described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Audible.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.StringType">
            <summary>
               Specifies the text encoding used when converting between a <see
               cref="T:System.String" /> and a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />.
            </summary>
            <remarks>
               This enumeration is used by <see
               cref="M:VisioForge.Libs.TagLib.ByteVector.FromString(System.String,VisioForge.Libs.TagLib.StringType)" /> and <see
               cref="M:VisioForge.Libs.TagLib.ByteVector.ToString(VisioForge.Libs.TagLib.StringType)" />.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.StringType.Latin1">
            <summary>
               The string is to be Latin-1 encoded.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.StringType.UTF16">
            <summary>
               The string is to be UTF-16 encoded.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.StringType.UTF16BE">
            <summary>
               The string is to be UTF-16BE encoded.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.StringType.UTF8">
            <summary>
               The string is to be UTF-8 encoded.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.StringType.UTF16LE">
            <summary>
               The string is to be UTF-16LE encoded.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ByteVector">
            <summary>
               This class represents and performs operations on variable length
               list of <see cref="T:System.Byte" /> elements.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ByteVector.crc_table">
            <summary>
               Contains values to use in CRC calculation.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ByteVector.use_broken_latin1">
            <summary>
               Specifies whether or not to use a broken Latin-1
               behavior.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ByteVector.td1">
            <summary>
               Contains a one byte text delimiter.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ByteVector.td2">
            <summary>
               Contains a two byte text delimiter.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ByteVector.last_utf16_encoding">
            <summary>
               Contains the last generic UTF-16 encoding read.
            </summary>
            <remarks>
               When reading a collection of UTF-16 strings, sometimes
               only the first one will contain the BOM. In that case,
               this field will inform the file what encoding to use for
               the second string.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ByteVector.data">
            <summary>
               Contains the internal byte list.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> with a length of zero.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> by copying the values from another
               instance.
            </summary>
            <param name="vector">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the bytes
               to be stored in the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.#ctor(System.Byte[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> by copying the values from a
               specified <see cref="T:byte[]" />.
            </summary>
            <param name="data">
               A <see cref="T:byte[]" /> containing the bytes to be stored
               in the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.#ctor(System.Byte[],System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> by copying a specified number of
               values from a specified <see cref="T:byte[]" />.
            </summary>
            <param name="data">
               A <see cref="T:byte[]" /> containing the bytes to be stored
               in the new instance.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to be copied to the new instance.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="length" /> is less than zero or greater
               than the length of the data.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.#ctor(System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> of specified size containing bytes
               with a zeroed value.
            </summary>
            <param name="size">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to be stored in the new instance.
            </param>
            <remarks>
               Each element of the new instance will have a value of
               <c>0x00</c>. <see cref="M:VisioForge.Libs.TagLib.ByteVector.#ctor(System.Int32,System.Byte)" /> to fill
               a new instance with a specified value.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="size" /> is less than zero.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.#ctor(System.Int32,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> of specified size containing bytes
               of a specified value.
            </summary>
            <param name="size">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to be stored in the new instance.
            </param>
            <param name="value">
               A <see cref="T:System.Byte" /> value specifying the value to be
               stored in the new instance.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="size" /> is less than zero.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.Data">
            <summary>
               Gets the data stored in the current instance.
            </summary>
            <value>
               A <see cref="T:byte[]" /> containing the data stored in the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is empty.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.Checksum">
            <summary>
               Gets the CRC-32 checksum of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the CRC-32 checksum
               of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.UseBrokenLatin1Behavior">
            <summary>
               Gets and sets whether or not to use a broken behavior for
               Latin-1 strings, common to ID3v1 and ID3v2 tags.
            </summary>
            <value>
               <see langword="true" /> if the broken behavior is to be
               used. Otherwise, <see langword="false" />.
            </value>
            <remarks>
               <para>Many media players and taggers incorrectly treat
               Latin-1 fields as "default encoding" fields. As such, a
               tag may end up with Windows-1250 encoded text. While this
               problem would be apparent when moving a file from one
               computer to another, it would not be apparent on the
               original machine. By setting this property to <see
               langword="true" />, your program will behave like Windows
               Media Player and others, who read tags with this broken
               behavior.</para>
               <para>Please note that TagLib# stores tag data in Unicode
               formats at every possible instance to avoid these
               problems in tags it has written.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Mid(System.Int32,System.Int32)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               containing a specified range of elements from the current
               instance.
            </summary>
            <param name="startIndex">
               A <see cref="T:System.Int32" /> value specifying the index at which
               to start copying elements from the current instance.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of
               elements to copy from the current instance.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="startIndex" /> is less than zero or
               greater than or equal to <see cref="P:VisioForge.Libs.TagLib.ByteVector.Count" />. OR
               <paramref name="length" /> is less than zero or greater
               than the amount of available data.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Mid(System.Int32)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               containing elements from the current instance starting
               from a specified point.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the index at which
               to start copying elements from the current instance.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="index" /> is less than zero or greater
               than or equal to <see cref="P:VisioForge.Libs.TagLib.ByteVector.Count" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Find(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Finds the first byte-aligned occurance of a pattern in
               the current instance, starting at a specified position.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the index in the
               current instance at which to start searching.
            </param>
            <param name="byteAlign">
               A <see cref="T:System.Int32"/> value specifying the byte alignment
               of the pattern to search for, relative to <paramref
               name="offset" />.
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the index at which
               <paramref name="pattern" /> was found in the current
               instance, or -1 if the pattern was not found. The
               difference between the position and <paramref
               name="offset" /> will be divisible by <paramref
               name="byteAlign" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero or
               <paramref name="byteAlign" /> is less than 1.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Find(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Finds the first occurance of a pattern in the current
               instance, starting at a specified position.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the index in the
               current instance at which to start searching.
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the index at which
               <paramref name="pattern" /> was found in the current
               instance, or -1 if the pattern was not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Find(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Finds the first occurance of a pattern in the current
               instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the index at which
               <paramref name="pattern" /> was found in the current
               instance, or -1 if the pattern was not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.RFind(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Finds the last byte-aligned occurance of a pattern in
               the current instance, starting before a specified
               position.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the index in the
               current instance at which to start searching.
            </param>
            <param name="byteAlign">
               A <see cref="T:System.Int32"/> value specifying the byte alignment
               of the pattern to search for, relative to <paramref
               name="offset" />.
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the index at which
               <paramref name="pattern" /> was found in the current
               instance, or -1 if the pattern was not found. The
               difference between the position and <paramref
               name="offset" /> will be divisible by <paramref
               name="byteAlign" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.RFind(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Finds the last occurance of a pattern in the current
               instance, starting before a specified position.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the index in the
               current instance at which to start searching.
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the index at which
               <paramref name="pattern" /> was found in the current
               instance, or -1 if the pattern was not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.RFind(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Finds the last occurance of a pattern in the current
               instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the index at which
               <paramref name="pattern" /> was found in the current
               instance, or -1 if the pattern was not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ContainsAt(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32,System.Int32)">
            <summary>
               Checks whether or not a pattern appears at a specified
               position in the current instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to check for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the offset in the
               current instance at which to check for the pattern.
            </param>
            <param name="patternOffset">
               A <see cref="T:System.Int32"/> value specifying the position in
               <paramref name="pattern" /> at which to start checking.
            </param>
            <param name="patternLength">
               A <see cref="T:System.Int32"/> value specifying the number of bytes
               in <paramref name="pattern" /> to compare.
            </param>
            <returns>
               <see langword="true"/> if the pattern was found at the
               specified position. Otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ContainsAt(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Checks whether or not a pattern appears at a specified
               position in the current instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to check for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the offset in the
               current instance at which to check for the pattern.
            </param>
            <param name="patternOffset">
               A <see cref="T:System.Int32"/> value specifying the position in
               <paramref name="pattern" /> at which to start checking.
            </param>
            <returns>
               <see langword="true"/> if the pattern was found at the
               specified position. Otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ContainsAt(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Checks whether or not a pattern appears at a specified
               position in the current instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to check for in the current instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specifying the offset in the
               current instance at which to check for the pattern.
            </param>
            <returns>
               <see langword="true"/> if the pattern was found at the
               specified position. Otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.StartsWith(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Checks whether or not a pattern appears at the beginning
               of the current instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to check for in the current instance.
            </param>
            <returns>
               <see langword="true"/> if the pattern was found at the
               beginning of the current instance. Otherwise, <see
               langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.EndsWith(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Checks whether or not a pattern appears at the end of the
               current instance.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to check for in the current instance.
            </param>
            <returns>
               <see langword="true"/> if the pattern was found at the
               end of the current instance. Otherwise, <see
               langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.EndsWithPartialMatch(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Checks whether or not the current instance ends with part
               of a pattern.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the pattern
               to search for in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the index at which
               a partial match was located, or -1 if no match was found.
            </returns>
            <remarks>
               <para>This function is useful for checking for patterns
               across multiple buffers.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Add(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Adds the contents of another <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object to the end of the current instance.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing data to add
               to the end of the current instance.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Add(System.Byte[])">
            <summary>
               Adds the contents of an array to the end of the current
               instance.
            </summary>
            <param name="data">
               A <see cref="T:byte[]"/> containing data to add to the end
               of the current instance.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Insert(System.Int32,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Inserts the contents of another <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object into the current instance.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32"/> value specifying the index at which
               to insert the data.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing data to
               insert into the current instance.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Insert(System.Int32,System.Byte[])">
            <summary>
               Inserts the contents of an array to insert into the
               current instance.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32"/> value specifying the index at which
               to insert the data.
            </param>
            <param name="data">
               A <see cref="T:byte[]"/> containing data to insert into the
               current instance.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Resize(System.Int32,System.Byte)">
            <summary>
               Resizes the current instance.
            </summary>
            <param name="size">
               A <see cref="T:System.Int32"/> value specifying the new size of the
               current instance.
            </param>
            <param name="padding">
               A <see cref="T:System.Byte"/> object containing the padding byte
               to use if the current instance is growing.
            </param>
            <returns>
               The current instance.
            </returns>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Resize(System.Int32)">
            <summary>
               Resizes the current instance.
            </summary>
            <param name="size">
               A <see cref="T:System.Int32"/> value specifying the new size of the
               current instance.
            </param>
            <returns>
               The current instance.
            </returns>
            <remarks>
               If the current instance grows, the added bytes are filled
               with '0'. Use <see cref="M:VisioForge.Libs.TagLib.ByteVector.Resize(System.Int32,System.Byte)" /> to specify
               the padding byte.
            </remarks>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
            <seealso cref="M:VisioForge.Libs.TagLib.ByteVector.Resize(System.Int32,System.Byte)" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.RemoveRange(System.Int32,System.Int32)">
            <summary>
               Removes a range of data from the current instance.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the index at which
               to start removing data.
            </param>
            <param name="count">
               A <see cref="T:System.Int32"/> value specifying the number of bytes
               to remove.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToInt(System.Boolean)">
            <summary>
               Converts an first four bytes of the current instance to
               a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.Int32"/> value containing the value read from
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToInt">
            <summary>
               Converts an first four bytes of the current instance to
               a <see cref="T:System.Int32" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.Int32"/> value containing the value read from
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToUInt(System.Boolean)">
            <summary>
               Converts an first four bytes of the current instance to
               a <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.UInt32"/> value containing the value read from
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToUInt">
            <summary>
               Converts an first four bytes of the current instance to
               a <see cref="T:System.UInt32" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.UInt32"/> value containing the value read from
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToShort(System.Boolean)">
            <summary>
               Converts an first two bytes of the current instance to a
               <see cref="T:System.Int16" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.Int16"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToShort">
            <summary>
               Converts an first two bytes of the current instance to
               a <see cref="T:System.Int16" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.Int16"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToUShort(System.Boolean)">
            <summary>
               Converts an first two bytes of the current instance to a
               <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.UInt16"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToUShort">
            <summary>
               Converts an first two bytes of the current instance to
               a <see cref="T:System.UInt16" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.UInt16"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToLong(System.Boolean)">
            <summary>
               Converts an first eight bytes of the current instance to
               a <see cref="T:System.Int64" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.Int64"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToLong">
            <summary>
               Converts an first eight bytes of the current instance to
               a <see cref="T:System.Int64" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.Int64"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToULong(System.Boolean)">
            <summary>
               Converts an first eight bytes of the current instance to
               a <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.UInt64"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToULong">
            <summary>
               Converts an first eight bytes of the current instance to
               a <see cref="T:System.UInt64" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.UInt64"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToFloat(System.Boolean)">
            <summary>
               Converts an first four bytes of the current instance to
               a <see cref="T:System.Single" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.Single"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToFloat">
            <summary>
               Converts an first four bytes of the current instance to
               a <see cref="T:System.Single" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.Single"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToDouble(System.Boolean)">
            <summary>
               Converts an first eight bytes of the current instance to
               a <see cref="T:System.Double" /> value.
            </summary>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte
               appears first (big endian format), or <see
               langword="false" /> if the least significant byte appears
               first (little endian format).
            </param>
            <returns>
               A <see cref="T:System.Double"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToDouble">
            <summary>
               Converts an first eight bytes of the current instance to
               a <see cref="T:System.Double" /> value using big-endian format.
            </summary>
            <returns>
               A <see cref="T:System.Double"/> value containing the value read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToString(VisioForge.Libs.TagLib.StringType,System.Int32,System.Int32)">
            <summary>
               Converts a portion of the current instance to a <see
               cref="T:System.String"/> object using a specified encoding.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value indicating the encoding
               to use when converting to a <see cref="T:System.String"/> object.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specify the index in the
               current instance at which to start converting.
            </param>
            <param name="count">
               A <see cref="T:System.Int32"/> value specify the number of bytes to
               convert.
            </param>
            <returns>
               A <see cref="T:System.String"/> object containing the converted
               text.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero or greater
               than the total number of bytes, or <paramref name="count"
               /> is less than zero or greater than the number of bytes
               after <paramref name="offset" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToString(VisioForge.Libs.TagLib.StringType,System.Int32)">
            <summary>
               Converts all data after a specified index in the current
               instance to a <see cref="T:System.String"/> object using a
               specified encoding.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value indicating the encoding
               to use when converting to a <see cref="T:System.String"/> object.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specify the index in the
               current instance at which to start converting.
            </param>
            <returns>
               A <see cref="T:System.String"/> object containing the converted
               text.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero or greater
               than the total number of bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToString(VisioForge.Libs.TagLib.StringType)">
            <summary>
               Converts the current instance into a <see cref="T:System.String"/>
               object using a specified encoding.
            </summary>
            <returns>
               A <see cref="T:System.String"/> object containing the converted
               text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToString">
            <summary>
               Converts the current instance into a <see cref="T:System.String"/>
               object using a UTF-8 encoding.
            </summary>
            <returns>
               A <see cref="T:System.String"/> object containing the converted
               text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToStrings(VisioForge.Libs.TagLib.StringType,System.Int32)">
            <summary>
               Converts the current instance into a <see cref="T:string[]"
               /> starting at a specified offset and using a specified
               encoding, assuming the values are nil separated.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value indicating the encoding
               to use when converting to a <see cref="T:System.String"/> object.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specify the index in the
               current instance at which to start converting.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the converted text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.ToStrings(VisioForge.Libs.TagLib.StringType,System.Int32,System.Int32)">
            <summary>
               Converts the current instance into a <see cref="T:string[]"
               /> starting at a specified offset and using a specified
               encoding, assuming the values are nil separated and
               limiting it to a specified number of items.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value indicating the encoding
               to use when converting to a <see cref="T:System.String"/> object.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32"/> value specify the index in the
               current instance at which to start converting.
            </param>
            <param name="count">
               A <see cref="T:System.Int32"/> value specifying a limit to the
               number of strings to create. Once the limit has been
               reached, the last string will be filled by the remainder
               of the data.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the converted text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_Equality(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether two specified <see cref="T:VisioForge.Libs.TagLib.ByteVector"
               /> objects are equal.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <returns>
               <para><see langword="true" /> if <paramref name="first"
               /> and <paramref name="second" /> contain the same
               data; otherwise, <see langword="false" />.</para>
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_Inequality(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether two specified <see cref="T:VisioForge.Libs.TagLib.ByteVector"
               /> objects differ.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <returns>
               <para><see langword="true" /> if <paramref name="first"
               /> and <paramref name="second" /> contain different
               data; otherwise, <see langword="false" />.</para>
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_LessThan(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether or not one <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               is less than another.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <returns>
               <para><see langword="true" /> if <paramref name="first"
               /> is less than <paramref name="second" />; otherwise,
               <see langword="false" />.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="first" /> or <paramref name="second" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_LessThanOrEqual(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether or not one <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               is less than or equal to another.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <returns>
               <para><see langword="true" /> if <paramref name="first"
               /> is less than or equal to <paramref name="second" />;
               otherwise, <see langword="false" />.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="first" /> or <paramref name="second" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_GreaterThan(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether or not one <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               is greater than another.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <returns>
               <para><see langword="true" /> if <paramref name="first"
               /> is greater than <paramref name="second" />; otherwise,
               <see langword="false" />.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="first" /> or <paramref name="second" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_GreaterThanOrEqual(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether or not one <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               is greater than or equal to another.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to compare.
            </param>
            <returns>
               <para><see langword="true" /> if <paramref name="first"
               /> is greater than or equal to <paramref name="second"
               />; otherwise, <see langword="false" />.</para>
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="first" /> or <paramref name="second" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_Addition(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Creates a new <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object by adding
               two objects together.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to combine.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to combine.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> with the
               contents of <paramref name="first" /> followed by the
               contents of <paramref name="second" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_Implicit(System.Byte)~VisioForge.Libs.TagLib.ByteVector">
            <summary>
               Converts a <see cref="T:System.Byte" /> to a new <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="value">
               A <see cref="T:System.Byte" /> to convert.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing
               <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_Implicit(System.Byte[])~VisioForge.Libs.TagLib.ByteVector">
            <summary>
               Converts a <see cref="T:byte[]" /> to a new <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="value">
               A <see cref="T:byte[]" /> to convert.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing
               the contents of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.op_Implicit(System.String)~VisioForge.Libs.TagLib.ByteVector">
            <summary>
               Converts a <see cref="T:System.String" /> to a new <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="value">
               A <see cref="T:System.String" /> to convert.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing
               the UTF-8 encoded contents of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromInt(System.Int32,System.Boolean)">
            <summary>
               Converts a value into a data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.Int32"/> value to convert into bytes.
            </param>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte is
               to appear first (big endian format), or <see
               langword="false" /> if the least significant byte is to
               appear first (little endian format).
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromInt(System.Int32)">
            <summary>
               Converts an value into a big-endian data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.Int32"/> value to convert into bytes.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromUInt(System.UInt32,System.Boolean)">
            <summary>
               Converts an unsigned value into a data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt32"/> value to convert into bytes.
            </param>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte is
               to appear first (big endian format), or <see
               langword="false" /> if the least significant byte is to
               appear first (little endian format).
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromUInt(System.UInt32)">
            <summary>
               Converts an unsigned value into a big-endian data
               representation.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt32"/> value to convert into bytes.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromShort(System.Int16,System.Boolean)">
            <summary>
               Converts a value into a data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.Int16"/> value to convert into bytes.
            </param>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte is
               to appear first (big endian format), or <see
               langword="false" /> if the least significant byte is to
               appear first (little endian format).
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromShort(System.Int16)">
            <summary>
               Converts a value into a big-endian data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.Int16"/> value to convert into bytes.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromUShort(System.UInt16,System.Boolean)">
            <summary>
               Converts an unsigned value into a data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt16"/> value to convert into bytes.
            </param>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte is
               to appear first (big endian format), or <see
               langword="false" /> if the least significant byte is to
               appear first (little endian format).
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromUShort(System.UInt16)">
            <summary>
               Converts an unsigned value into a big-endian data
               representation.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt16"/> value to convert into bytes.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromLong(System.Int64,System.Boolean)">
            <summary>
               Converts a value into a data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.Int64"/> value to convert into bytes.
            </param>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte is
               to appear first (big endian format), or <see
               langword="false" /> if the least significant byte is to
               appear first (little endian format).
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromLong(System.Int64)">
            <summary>
               Converts a value into a big-endian data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.Int64"/> value to convert into bytes.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromULong(System.UInt64,System.Boolean)">
            <summary>
               Converts an unsigned value into a data representation.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt64"/> value to convert into bytes.
            </param>
            <param name="mostSignificantByteFirst">
               <see langword="true" /> if the most significant byte is
               to appear first (big endian format), or <see
               langword="false" /> if the least significant byte is to
               appear first (little endian format).
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromULong(System.UInt64)">
            <summary>
               Converts an unsigned value into a big-endian data
               representation.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt64"/> value to convert into bytes.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromString(System.String,VisioForge.Libs.TagLib.StringType,System.Int32)">
            <summary>
               Converts an string into a encoded data representation.
            </summary>
            <param name="text">
               A <see cref="T:System.String"/> object containing the text to
               convert.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value specifying the encoding
               to use when converting the text.
            </param>
            <param name="length">
               A <see cref="T:System.Int32"/> value specifying the number of
               characters in <paramref name="text" /> to encoded.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="text" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromString(System.String,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Converts an string into a encoded data representation.
            </summary>
            <param name="text">
               A <see cref="T:System.String"/> object containing the text to
               convert.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value specifying the encoding
               to use when converting the text.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="text" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromString(System.String,System.Int32)">
            <summary>
               Converts an string into a encoded data representation.
            </summary>
            <param name="text">
               A <see cref="T:System.String"/> object containing the text to
               convert.
            </param>
            <param name="length">
               A <see cref="T:System.Int32"/> value specifying the number of
               characters in <paramref name="text" /> to encoded.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="text" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromString(System.String)">
            <summary>
               Converts an string into a encoded data representation.
            </summary>
            <param name="text">
               A <see cref="T:System.String"/> object containing the text to
               convert.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the encoded
               representation of <paramref name="text" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromPath(System.String)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> by
               reading in the contents of a specified file.
            </summary>
            <param name="path">
               A <see cref="T:System.String"/> object containing the path of the
               file to read.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the specified file.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromPath(System.String,System.Byte[]@,System.Boolean)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> by
               reading in the contents of a specified file.
            </summary>
            <param name="path">
               A <see cref="T:System.String"/> object containing the path of the
               file to read.
            </param>
            <param name="firstChunk">
               A <see cref="T:byte[]"/> reference to be filled with the
               first data chunk from the read file.
            </param>
            <param name="copyFirstChunk">
               A <see cref="T:System.Boolean"/> value specifying whether or not to
               copy the first chunk of the file into <paramref
               name="firstChunk" />.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the specified file.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromFile(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> by
               reading in the contents of a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> object containing
               abstraction of the file to read.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the specified file.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromFile(VisioForge.Libs.TagLib.File.IFileAbstraction,System.Byte[]@,System.Boolean)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> by
               reading in the contents of a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> object containing
               abstraction of the file to read.
            </param>
            <param name="firstChunk">
               A <see cref="T:byte[]"/> reference to be filled with the
               first data chunk from the read file.
            </param>
            <param name="copyFirstChunk">
               A <see cref="T:System.Boolean"/> value specifying whether or not to
               copy the first chunk of the file into <paramref
               name="firstChunk" />.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the specified file.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromStream(System.IO.Stream)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> by
               reading in the contents of a specified stream.
            </summary>
            <param name="stream">
               A <see cref="T:System.IO.Stream"/> object containing
               the stream to read.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the specified stream.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="stream" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.FromStream(System.IO.Stream,System.Byte[]@,System.Boolean)">
            <summary>
               Creates a new instance of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> by
               reading in the contents of a specified stream.
            </summary>
            <param name="stream">
               A <see cref="T:System.IO.Stream"/> object containing
               the stream to read.
            </param>
            <param name="firstChunk">
               A <see cref="T:byte[]"/> reference to be filled with the
               first data chunk from the read stream.
            </param>
            <param name="copyFirstChunk">
               A <see cref="T:System.Boolean"/> value specifying whether or not to
               copy the first chunk of the stream into <paramref
               name="firstChunk" />.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the specified stream.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="stream" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.TextDelimiter(VisioForge.Libs.TagLib.StringType)">
            <summary>
               Gets the text delimiter for nil separated string lists of
               a specified encoding.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value specifying the encoding
               to use.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the text
               delimiter.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.StringTypeToEncoding(VisioForge.Libs.TagLib.StringType,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the <see cref="T:System.Text.Encoding" /> to use for a specified
               encoding.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType"/> value specifying encoding to
               use.
            </param>
            <param name="bom">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the first
               two bytes of the data to convert if <paramref
               name="type" /> equals <see cref="F:VisioForge.Libs.TagLib.StringType.UTF16" />.
            </param>
            <returns>
               A <see cref="T:System.Text.Encoding" /> object capable of encoding
               and decoding text with the specified type.
            </returns>
            <remarks>
               <paramref name="bom" /> is used to determine whether the
               encoding is big or little endian. If it does not contain
               BOM data, the previously used endian format is used.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Equals(System.Object)">
            <summary>
               Determines whether another object is equal to the current
               instance.
            </summary>
            <param name="other">
               A <see cref="T:System.Object"/> to compare to the current
               instance.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="other"/> is not
               <see langword="null" />, is of type <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" />, and is equal to the current
               instance; otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Equals(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines whether another <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
               object is equal to the current instance.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to compare to the
               current instance.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="other"/> is not
               <see langword="null" /> and equal to the current instance;
               otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.GetHashCode">
            <summary>
               Gets the hash value for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value equal to the CRC checksum of
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.CompareTo(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Compares the current instance to another to determine if
               their order.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to compare to the
               current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> which is less than zero if the
               current instance is less than <paramref name="other" />,
               zero if it is equal to <paramref name="other" />, and
               greater than zero if the current instance is greater than
               <paramref name="other" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the the bytes
               in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the contents of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Clear">
            <summary>
               Clears the current instance.
            </summary>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Add(System.Byte)">
            <summary>
               Adds a single byte to the end of the current instance.
            </summary>
            <param name="item">
               A <see cref="T:System.Byte" /> to add to the current instance.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Remove(System.Byte)">
            <summary>
               Removes the first occurance of a <see cref="T:System.Byte" /> from
               the current instance.
            </summary>
            <param name="item">
               A <see cref="T:System.Byte"/> to remove from the current instance.
            </param>
            <returns>
               <see langword="true" /> if the value was removed;
               otherwise the value did not appear in the current
               instance and <see langword="false" /> is returned.
            </returns>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.CopyTo(System.Byte[],System.Int32)">
            <summary>
               Copies the current instance to a <see cref="T:byte[]"/>
               starting at a specified index.
            </summary>
            <param name="array">
               A <see cref="T:byte[]" /> to copy to.
            </param>
            <param name="arrayIndex">
               A <see cref="T:System.Int32" /> value indicating the index in
               <paramref name="array" /> at which to start copying.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Contains(System.Byte)">
            <summary>
               Gets whether or not the current instance contains a
               specified byte.
            </summary>
            <param name="item">
               A <see cref="T:System.Byte" /> value to look for in the current
               instance.
            </param>
            <returns>
               <see langword="true" /> if the value could be found;
               otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.Count">
            <summary>
               Gets the number of elements in the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bytes
               in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.IsSynchronized">
            <summary>
               Gets whether or not the current instance is synchronized.
            </summary>
            <value>
               Always <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.SyncRoot">
            <summary>
               Gets the object that can be used to synchronize the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Object" /> that can be used to synchronize
               the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.RemoveAt(System.Int32)">
            <summary>
               Removes the byte at the specified index.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the position at
               which to remove a byte.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.Insert(System.Int32,System.Byte)">
            <summary>
               Inserts a single byte into the current instance at a
               specified index.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the position at
               which to insert the value.
            </param>
            <param name="item">
               A <see cref="T:System.Byte"/> value to insert into the current
               instance.
            </param>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVector.IndexOf(System.Byte)">
            <summary>
               Gets the index of the first occurance of a value.
            </summary>
            <param name="item">
               A <see cref="T:System.Byte" /> to find in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the first index
               at which the value was found, or -1 if it was not found.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.IsReadOnly">
            <summary>
               Gets whether or not the current instance is read-only.
            </summary>
            <value>
               <see langword="true" /> if the current instance is
               read-only; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.IsFixedSize">
            <summary>
               Gets whether or not the current instance has a fixed
               size.
            </summary>
            <value>
               <see langword="true" /> if the current instance has a
               fixed size; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ByteVector.Item(System.Int32)">
            <summary>
               Gets and sets the value as a specified index.
            </summary>
            <exception cref="T:System.NotSupportedException">
               The current instance is read-only.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ByteVectorCollection">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.ListBase`1"/> to represent
               a collection of <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> objects.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.#ctor(System.Collections.Generic.IEnumerable{VisioForge.Libs.TagLib.ByteVector})">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> with specified contents.
            </summary>
            <param name="list">
              A <see cref="T:System.Collections.Generic.IEnumerable`1"
              /> containing <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> objects to add to
              the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.#ctor(VisioForge.Libs.TagLib.ByteVector[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> with specified contents.
            </summary>
            <param name="list">
              A <see cref="T:ByteVector[]" /> containing objects to add to
              the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.SortedInsert(VisioForge.Libs.TagLib.ByteVector,System.Boolean)">
            <summary>
               Performs a sorted insert of a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object into the current instance, optionally only adding
               if the item is unique.
            </summary>
            <param name="item">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to add to the current
               instance.
            </param>
            <param name="unique">
               If <see langword="true" />, the object will only be added
               if an identical value is not already contained in the
               current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="item" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.ToByteVector(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Converts the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"
               /> by joining the contents together with a specified
               separator.
            </summary>
            <param name="separator">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to separate the
               combined contents of the current instance.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the
               joined contents of the current instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="separator" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.Split(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Splits a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object using a
               pattern.
            </summary>
            <param name="vector">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to split.
            </param>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to use to split
               <paramref name="vector" /> with.
            </param>
            <param name="byteAlign">
               A <see cref="T:System.Int32" /> specifying the byte align to use
               when splitting. In order to split when a pattern is
               encountered, the index at which it is found must be
               divisible by <paramref name="byteAlign" />.
            </param>
            <param name="max">
               A <see cref="T:System.Int32" /> value specifying the maximum number
               of objects to return, or zero to not to limit the number.
               If that that number is reached, the last value will
               contain the remainder of the file even if it contains
               more instances of <paramref name="pattern" />.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the split contents of the current instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="vector" /> or <paramref name="pattern" />
               is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="byteAlign" /> is less than 1.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.Split(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Splits a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object using a
               pattern.
            </summary>
            <param name="vector">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to split.
            </param>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to use to split
               <paramref name="vector" /> with.
            </param>
            <param name="byteAlign">
               A <see cref="T:System.Int32" /> specifying the byte align to use
               when splitting. In order to split when a pattern is
               encountered, the index at which it is found must be
                divisible by <paramref name="byteAlign" />.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the split contents of the current instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="vector" /> or <paramref name="pattern" />
               is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="byteAlign" /> is less than 1.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ByteVectorCollection.Split(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Splits a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object using a
               pattern.
            </summary>
            <param name="vector">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to split.
            </param>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object to use to split
               <paramref name="vector" /> with.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the split contents of the current instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="vector" /> or <paramref name="pattern" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.CombinedTag">
            <summary>
               This class combines a collection of tags so that they behave as
               one.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.CombinedTag.tags">
            <summary>
               Contains tags to be combined.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.CombinedTag" /> with no internal tags.
            </summary>
            <remarks>
               You can set the tags in the new instance later using
               <see cref="M:VisioForge.Libs.TagLib.CombinedTag.SetTags(VisioForge.Libs.TagLib.Tag[])" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.#ctor(VisioForge.Libs.TagLib.Tag[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.CombinedTag" /> with a specified collection of
               tags.
            </summary>
            <param name="tags">
               A <see cref="T:Tag[]" /> containing a collection of tags to
               combine in the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Tags">
            <summary>
               Gets the tags combined in the current instance.
            </summary>
            <value>
               A <see cref="T:Tag[]" /> containing the tags combined in
               the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.SetTags(VisioForge.Libs.TagLib.Tag[])">
            <summary>
               Sets the child tags to combine in the current instance.
            </summary>
            <param name="tags">
               A <see cref="T:Tag[]" /> containing the tags to combine.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.InsertTag(System.Int32,VisioForge.Libs.TagLib.Tag)">
            <summary>
               Inserts a tag into the collection of tags in the current
               instance.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the index at which
               to insert the tag.
            </param>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object to insert into the collection
               of tags.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="index" /> is less than zero or greater
               than the count.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.AddTag(VisioForge.Libs.TagLib.Tag)">
            <summary>
               Adds a tag at the end of the collection of tags in the
               current instance.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object to add to the collection of
               tags.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.RemoveTag(VisioForge.Libs.TagLib.Tag)">
            <summary>
               Removes a specified tag from the collection in the
               current instance.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object to remove from the
               collection.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.ClearTags">
            <summary>
               Clears the tag collection in the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" />
               containing the tag types contained in the current
               instance.
            </value>
            <remarks>
               This value contains a bitwise combined value from all the
               child tags.
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.TagTypes" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Title" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field gives a nice/short precision to 
               the title, which is typically below the title on the
               front cover of a media.
               For example, for "Back to the future", this would be 
               "It's About Time". 
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This is especially relevant for a movie.
               For example, for "Back to the Future 2", this could be
               "After visiting 2015, Marty McFly must repeat his visit 
               to 1955 to prevent disastrous changes to 1985...without
               interfering with his first trip".
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Performers" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.CombinedTag.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               <para> This is typically usefull for movies, although the
               instrument played by each artist in a music may be of
               relevance.
               </para>
               <para>It is highly important to match each role to the 
               performers. This means that a role may be <see 
               langword="null"/> to keep the match between a
               Performers[i] and PerformersRole[i].
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtistsSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Composers" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.ComposersSort">
            <summary>
               Gets and sets the sort names for the composer of the 
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the composers of the media described by the 
               current instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ComposersSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.TitleSort">
            <summary>
               Gets and sets the sort names for the Track Title of the 
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names
               for the Track Title of the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.TitleSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.AlbumSort">
            <summary>
               Gets and sets the sort names for the Album Title of the 
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names
               for the Title of the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AlbumSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Album" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Comment" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Genres" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Year" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Track" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.TrackCount" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Disc" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.DiscCount" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Lyrics" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Grouping" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.BeatsPerMinute" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Conductor" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Copyright" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ArtistID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzArtistId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseGroupID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseGroupId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseArtistID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseArtistId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               TrackID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzTrackId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               DiscID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzDiscId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIP PUID
               for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicIpId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.AmazonId">
            <summary>
               Gets and sets the Amazon ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the Amazon Id
               for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AmazonId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseStatus for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseStatus" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseType for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseType" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseCountry for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseCountry" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Pictures" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain track gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the track gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainTrackGain" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain track peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the track peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainTrackPeak" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain album gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the album gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainAlbumGain" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain album peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the album peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainAlbumPeak" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.InitialKey">
            <summary>
               Gets and sets the initial key of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the initial
               key of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.InitialKey" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.RemixedBy">
            <summary>
               Gets and sets the remixer of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the remixer
               of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.RemixedBy" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.Publisher">
            <summary>
               Gets and sets the publisher of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the 
               publisher of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Publisher" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.ISRC">
            <summary>
               Gets and sets the ISRC (International Standard Recording Code)
               of the song represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the ISRC
               of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               value is returned.</para>
               <para>When setting the value, it is stored in each child
               tag.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ISRC" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.CombinedTag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if all the child tags are empty.
               Otherwise <see langword="false" />.
            </value>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.IsEmpty" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.CombinedTag.Clear">
            <summary>
               Clears all of the child tags.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.CorruptFileException">
             <summary>
                This class extends <see cref="T:System.Exception" /> and is used to
                indicate that a file or tag is corrupt.
             </summary>
             <remarks>
                This exception will be thrown if invalid data interferes with the
                reading of the file or tag. One common example is in the (legal)
                downloading of media files with BitTorrent, in which case large
                portions of the file will contain zeroed bytes.
             </remarks>
             <example>
                <para>Catching an exception when creating a <see
                cref="T:VisioForge.Libs.TagLib.File" />.</para>
                <code lang="C#">
             using System;
             using TagLib;
            
             public class ExceptionTest
             {
             	public static void Main ()
             	{
             		try {
             			File file = File.Create ("partial.mp3"); // Partial download.
             		} catch (CorruptFileException e) {
             			Console.WriteLine ("That file is corrupt: {0}", e.ToString ());
             		}
            	}
             }
                </code>
                <code lang="C++">
             #using &lt;System.dll>
             #using &lt;taglib-sharp.dll>
             
             using System;
             using TagLib;
            
             void main ()
             {
             	try {
             		File file = File::Create ("partial.mp3"); // Partial download.
             	} catch (CorruptFileException^ e) {
             		Console::WriteLine ("That file is corrupt: {0}", e);
             	}
             }
                </code>
                <code lang="VB">
             Imports System
             Imports TagLib
            
             Public Class ExceptionTest
             	Public Shared Sub Main ()
             		Try
             			file As File = File.Create ("partial.mp3") ' Partial download.
             		Catch e As CorruptFileException
             			Console.WriteLine ("That file is corrupt: {0}", e.ToString ());
             		End Try
            	End Sub
             End Class
                </code>
                <code lang="Boo">
             import System
             import TagLib
            
             try:
             	file As File = File.Create ("partial.mp3") # Partial download.
             catch e as CorruptFileException:
             	Console.WriteLine ("That file is corrupt: {0}", e.ToString ());
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CorruptFileException.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.CorruptFileException" /> with a specified
               message.
            </summary>
            <param name="message">
               A <see cref="T:System.String" /> containing a message explaining
               the reason for the exception.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CorruptFileException.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.CorruptFileException" /> with the default
               values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CorruptFileException.#ctor(System.String,System.Exception)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.CorruptFileException" /> with a specified
               message containing a specified exception.
            </summary>
            <param name="message">
               A <see cref="T:System.String" /> containing a message explaining
               the reason for the exception.
            </param>
            <param name="innerException">
               A <see cref="T:System.Exception" /> object to be contained in the
               new exception. For example, previously caught exception.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.CorruptFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.CorruptFileException" /> from a specified
               serialization info and streaming context.
            </summary>
            <param name="info">
               A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the
               serialized data to be used for the new instance.
            </param>
            <param name="context">
               A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the
               streaming context information for the new instance.
            </param>
            <remarks>
               This constructor is implemented because <see
               cref="T:VisioForge.Libs.TagLib.CorruptFileException" /> implements the <see
               cref="T:System.Runtime.Serialization.ISerializable" /> interface.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Dsf.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide
               support for reading and writing tags and properties for files
               using the AIFF file format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.header_block">
            <summary>
               Contains the address of the DSF header block.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.tag">
            <summary>
             Contains the Id3v2 tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.properties">
            <summary>
             Contains the media properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.dsf_size">
            <summary>
            Contains the size of the DSF File
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.tag_start">
            <summary>
            Contains the start position of the Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.tag_end">
            <summary>
            Contains the end position of the Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.FileIdentifier">
            <summary>
               The identifier used to recognize a DSF file.
            </summary>
            <value>
               "DSD "
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.FormatIdentifier">
            <summary>
               The identifier used to recognize a Format chunk.
            </summary>
            <value>
               "fmt "
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.File.ID3Identifier">
            <summary>
               The identifier used to recognize a DSF ID3 chunk.
            </summary>
            <value>
               "ID3 "
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Dsf.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Dsf.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Dsf.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Dsf.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Dsf.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.File.Read(System.Boolean,VisioForge.Libs.TagLib.ReadStyle,System.UInt32@,System.Int64@,System.Int64@)">
            <summary>
               Reads the contents of the current instance determining
               the size of the dsf data, the area the tagging is in,
               and optionally reading in the tags and media properties.
            </summary>
            <param name="read_tags">
               If <see langword="true" />, any tags found will be read
               into the current instance.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <param name="dsf_size">
               A <see cref="T:System.UInt32"/> value reference to be filled with
               the size of the RIFF data as read from the file.
            </param>
            <param name="tag_start">
               A <see cref="T:System.Int64" /> value reference to be filled with
               the absolute seek position at which the tagging data
               starts.
            </param>
            <param name="tag_end">
               A <see cref="T:System.Int64" /> value reference to be filled with
               the absolute seek position at which the tagging data
               ends.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not begin with <see cref="F:VisioForge.Libs.TagLib.Dsf.File.FileIdentifier"
               />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Dsf.StreamHeader">
            <summary>
               This struct implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide
               support for reading DSF stream properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.version">
            <summary>
               Contains the version.
            </summary>
            <remarks>
               This value is stored in bytes (12-15).
               Currently only value of 1 is valid.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.format_id">
            <summary>
               The Format Id.
            </summary>
            <remarks>
               This value is stored in bytes (16-19).
               0: DSD Raw
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.channel_type">
            <summary>
               The Channel Type.
            </summary>
            <remarks>
               This value is stored in bytes (20-23).
               1: mono 
               2:stereo 
               3:3 channels 
               4: quad 
               5: 4 channels 
               6: 5 channels 
               7: 5.1 channels 
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.channels">
            <summary>
               Contains the number of channels.
            </summary>
            <remarks>
               This value is stored in bytes (24-27).
               1 is monophonic, 2 is stereo, 4 means 4 channels, etc..
               up to 6 channels may be represented
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.sample_rate">
            <summary>
               Contains the sample rate.
            </summary>
            <remarks>
               This value is stored in bytes (28-31).
               the sample rate at which the sound is to be played back, 
               in Hz: 2822400, 5644800
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.bits_per_sample">
            <summary>
               Contains the number of bits per sample.
            </summary>
            <remarks>
               This value is stored in bytes (32-35).
               It can be any number from 1 to 8.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.sample_count">
            <summary>
               Contains the number of sample frames per channel.
            </summary>
            <remarks>
               This value is stored in bytes (36-43).
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.channel_blksize">
            <summary>
               Contains the Block size per channel.
            </summary>
            <remarks>
               This value is stored in bytes (44-47).
               Always: 4096
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.stream_length">
            <summary>
               Contains the length of the audio stream.
            </summary>
            <remarks>
               This value is provided by the constructor.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.Size">
            <summary>
               The size of an DSF Format chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.FileIdentifier">
            <summary>
               The identifier used to recognize a DSF file.
               Altough an DSF file start with "DSD ", we're interested
               in the Format chunk only, which contains the properties we need.
            </summary>
            <value>
               "fmt "
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Dsf.StreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Dsf.StreamHeader" /> for a specified header block and
               stream length.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header data.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value containing the length of the
               DSF Audio stream in bytes.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not begin with <see
               cref="F:VisioForge.Libs.TagLib.Dsf.StreamHeader.FileIdentifier" /> 
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Dsf.StreamHeader.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ReadStyle">
            <summary>
               Specifies the options to use when reading the media.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ReadStyle.None">
            <summary>
               The media properties will not be read.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ReadStyle.Average">
            <summary>
               The media properties will be read with average accuracy.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ReadStyle.PictureLazy">
            <summary>
               Use the <see cref="F:VisioForge.Libs.TagLib.ReadStyle.PictureLazy"/> class in the 
               the property <see cref="P:VisioForge.Libs.TagLib.Tag.Pictures"/>. 
               This will avoid loading picture content when reading the Tag.
               Picture will be read lazily, when the picture content is 
               accessed.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.File">
            <summary>
               This abstract class provides a basic framework for reading from
               and writing to a file, as well as accessing basic tagging and
               media properties.
            </summary>
            <remarks>
               <para>This class is agnostic to all specific media types. Its
               child classes, on the other hand, support the the intricacies of
               different media and tagging formats. For example, <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> supports the MPEG-4 specificication and
               Apple's tagging format.</para>
               <para>Each file type can be created using its format specific
               constructors, ie. <see cref="M:VisioForge.Libs.TagLib.Mpeg4.File.#ctor(System.String)" />, but the
               preferred method is to use <see
               cref="M:VisioForge.Libs.TagLib.File.Create(System.String,System.String,VisioForge.Libs.TagLib.ReadStyle)" /> or one of its
               variants, as it automatically detects the appropriate class from
               the file extension or provided mime-type.</para>
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.File.AccessMode">
            <summary>
              Specifies the type of file access operations currently
              permitted on an instance of <see cref="T:VisioForge.Libs.TagLib.File" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.AccessMode.Read">
            <summary>
               Read operations can be performed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.AccessMode.Write">
            <summary>
               Read and write operations can be performed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.AccessMode.Closed">
            <summary>
               The file is closed for both read and write
               operations.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.File.FileTypeResolver">
            <summary>
               This delegate is used for intervening in <see
               cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" /> by resolving the file type
               before any standard resolution operations.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object representing the
               file to be read.
            </param>
            <param name="mimetype">
               A <see cref="T:System.String" /> object containing the mime-type
               of the file.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying how to read
               media properties from the file.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> or <see
               langword="null" /> if the resolver could not match it.
            </returns>
            <remarks>
               <para>A <see cref="T:VisioForge.Libs.TagLib.File.FileTypeResolver" /> is one way of
               altering the behavior of <see cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" />
               .</para>
               <para>When <see cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" /> is called, the
               registered resolvers are invoked in the reverse order in
               which they were registered. The resolver may then perform
               any operations necessary, including other type-finding
               methods.</para>
               <para>If the resolver returns a new <see cref="T:VisioForge.Libs.TagLib.File" />,
               it will instantly be returned, by <see
               cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" />. If it returns <see 
               langword="null" />, <see cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" /> will
               continue to process. If the resolver throws an exception
               it will be uncaught.</para>
               <para>To register a resolver, use <see
               cref="M:VisioForge.Libs.TagLib.File.AddFileTypeResolver(VisioForge.Libs.TagLib.File.FileTypeResolver)" />.</para>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.file_stream">
            <summary>
               Contains the current stream used in reading/writing.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.file_abstraction">
            <summary>
               Contains the internal file abstraction.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.buffer_size">
            <summary>
               Contains buffer size to use when reading.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.file_type_resolvers">
            <summary>
               Contains the file type resolvers to use in <see
               cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.corruption_reasons">
            <summary>
               The reasons (if any) why this file is marked as corrupt.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.BufferSize">
            <summary>
               The buffer size to use when reading large blocks of data
               in the <see cref="T:VisioForge.Libs.TagLib.File" /> class.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the buffer size to use
               when reading large blocks of data.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
            <remarks>
               <para>This property provides generic and general access
               to the most common tagging features of a file. To access
               or add a specific type of tag in the file, use <see
               cref="M:VisioForge.Libs.TagLib.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)" />.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.TagTypesOnDisk">
            <summary>
               Gets the tag types contained in the physical file
               represented by the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing the tag types stored in the physical file as
               it was read or last saved.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing the tag types stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Name">
            <summary>
               Gets the name of the file as stored in its file
               abstraction.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the name of the
               file as stored in the <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" />
               object used to create it or the path if created with a
               local path.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.MimeType">
            <summary>
               Gets the mime-type of the file as determined by <see
               cref="M:VisioForge.Libs.TagLib.File.Create(VisioForge.Libs.TagLib.File.IFileAbstraction,System.String,VisioForge.Libs.TagLib.ReadStyle)" /> if
               that method was used to create the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the mime-type
               used to create the file or <see langword="null" /> if <see
               cref="M:VisioForge.Libs.TagLib.File.Create(VisioForge.Libs.TagLib.File.IFileAbstraction,System.String,VisioForge.Libs.TagLib.ReadStyle)" /> was
               not used to create the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Tell">
            <summary>
               Gets the seek position in the internal stream used by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value representing the seek
               position, or 0 if the file is not open for reading.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Length">
            <summary>
               Gets the length of the file represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value representing the size of the
               file, or 0 if the file is not open for reading.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.InvariantStartPosition">
            <summary>
               Gets the position at which the invariant portion of the
               current instance begins.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value representing the seek
               position at which the file's invariant (media) data
               section begins. If the value could not be determined,
               <c>-1</c> is returned.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.InvariantEndPosition">
            <summary>
               Gets the position at which the invariant portion of the
               current instance ends.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value representing the seek
               position at which the file's invariant (media) data
               section ends. If the value could not be determined,
               <c>-1</c> is returned.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Mode">
            <summary>
               Gets and sets the file access mode in use by the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.File.AccessMode" /> value describing the features
               of stream currently in use by the current instance.
            </value>
            <remarks>
               Changing the value will cause the stream currently in use
               to be closed, except when a change is made from <see
               cref="F:VisioForge.Libs.TagLib.File.AccessMode.Write" /> to <see cref="F:VisioForge.Libs.TagLib.File.AccessMode.Read"
               /> which has no effect.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.FileAbstraction">
            <summary>
            Gets the <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> representing the file.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.PossiblyCorrupt">
            <summary>
              Indicates whether or not this file may be corrupt.
            </summary>
            <value>
            <c>true</c> if possibly corrupt; otherwise, <c>false</c>.
            </value>
            <remarks>
               Files with unknown corruptions should not be written.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.CorruptionReasons">
            <summary>
              The reasons for which this file is marked as corrupt.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.MarkAsCorrupt(System.String)">
            <summary>
               Mark the file as corrupt.
            </summary>
            <param name="reason">
               The reason why this file is considered to be corrupt.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Dispose">
            <summary>
               Dispose the current file. Equivalent to setting the
               mode to closed
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
             <summary>
                Gets a tag of a specified type from the current instance,
                optionally creating a new tag if possible.
             </summary>
             <param name="type">
                A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
                type of tag to read.
             </param>
             <param name="create">
                A <see cref="T:System.Boolean" /> value specifying whether or not to
                try and create the tag if one is not found.
             </param>
             <returns>
                A <see cref="P:VisioForge.Libs.TagLib.File.Tag" /> object containing the tag that was
                found in or added to the current instance. If no
                matching tag was found and none was created, <see
                langword="null" /> is returned.
             </returns>
             <remarks>
                <para>Passing <see langword="true" /> to <paramref
                name="create" /> does not guarantee the tag will be
                created. For example, trying to create an ID3v2 tag on an
                OGG Vorbis file will always fail.</para>
                <para>It is safe to assume that if <see langword="null"
                /> is not returned, the returned tag can be cast to the
                appropriate type.</para>
             </remarks>
             <example>
                <para>The following example sets the mood of a file to
                several tag types.</para>
                <code lang="C#">string [] SetMoods (TagLib.File file, params string[] moods)
            {
               TagLib.Id3v2.Tag id3 = file.GetTag (TagLib.TagTypes.Id3v2, true);
               if (id3 != null)
                  id3.SetTextFrame ("TMOO", moods);
               
               TagLib.Asf.Tag asf = file.GetTag (TagLib.TagTypes.Asf, true);
               if (asf != null)
                  asf.SetDescriptorStrings (moods, "WM/Mood", "Mood");
               
               TagLib.Ape.Tag ape = file.GetTag (TagLib.TagTypes.Ape);
               if (ape != null)
                  ape.SetValue ("MOOD", moods);
                  
               // Whatever tag types you want...
            }</code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.GetTag(VisioForge.Libs.TagLib.TagTypes)">
             <summary>
                Gets a tag of a specified type from the current instance.
             </summary>
             <param name="type">
                A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
                type of tag to read.
             </param>
             <returns>
                A <see cref="P:VisioForge.Libs.TagLib.File.Tag" /> object containing the tag that was
                found in the current instance. If no matching tag
                was found, <see langword="null" /> is returned.
             </returns>
             <remarks>
                <para>This class merely accesses the tag if it exists.
                <see cref="M:VisioForge.Libs.TagLib.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)" /> provides the option
                of adding the tag to the current instance if it does not
                exist.</para>
                <para>It is safe to assume that if <see langword="null"
                /> is not returned, the returned tag can be cast to the
                appropriate type.</para>
             </remarks>
             <example>
                <para>The following example reads the mood of a file from
                several tag types.</para>
                <code lang="C#">static string [] GetMoods (TagLib.File file)
            {
               TagLib.Id3v2.Tag id3 = file.GetTag (TagLib.TagTypes.Id3v2);
               if (id3 != null) {
                  TextIdentificationFrame f = TextIdentificationFrame.Get (this, "TMOO");
                  if (f != null)
                     return f.FieldList.ToArray ();
               }
               
               TagLib.Asf.Tag asf = file.GetTag (TagLib.TagTypes.Asf);
               if (asf != null) {
                  string [] value = asf.GetDescriptorStrings ("WM/Mood", "Mood");
                  if (value.Length &gt; 0)
                     return value;
               }
               
               TagLib.Ape.Tag ape = file.GetTag (TagLib.TagTypes.Ape);
               if (ape != null) {
                  Item item = ape.GetItem ("MOOD");
                  if (item != null)
                     return item.ToStringArray ();
               }
                  
               // Whatever tag types you want...
               
               return new string [] {};
            }</code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.ReadBlock(System.Int32)">
            <summary>
               Reads a specified number of bytes at the current seek
               position from the current instance.
            </summary>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               read from the current instance.
            </returns>
            <remarks>
               <para>This method reads the block of data at the current
               seek position. To change the seek position, use <see
               cref="M:VisioForge.Libs.TagLib.File.Seek(System.Int64,System.IO.SeekOrigin)" />.</para>
            </remarks>
            <exception cref="T:System.ArgumentException">
               <paramref name="length" /> is less than zero.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.WriteBlock(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Writes a block of data to the file represented by the
               current instance at the current seek position.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing data to be
               written to the current instance.
            </param>
            <remarks>
               This will overwrite any existing data at the seek
               position and append new data to the file if writing past
               the current end.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Find(VisioForge.Libs.TagLib.ByteVector,System.Int64,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Searches forwards through a file for a specified
               pattern, starting at a specified offset.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a pattern
               to search for in the current instance.
            </param>
            <param name="startPosition">
               A <see cref="T:System.Int32" /> value specifying at what
               seek position to start searching.
            </param>
            <param name="before">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object specifying a pattern
               that the searched for pattern must appear before. If this
               pattern is found first, -1 is returned.
            </param>
            <returns>
               A <see cref="T:System.Int64" /> value containing the index at which
               the value was found. If not found, -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Find(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Searches forwards through a file for a specified
               pattern, starting at a specified offset.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a pattern
               to search for in the current instance.
            </param>
            <param name="startPosition">
               A <see cref="T:System.Int32" /> value specifying at what
               seek position to start searching.
            </param>
            <returns>
               A <see cref="T:System.Int64" /> value containing the index at which
               the value was found. If not found, -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Find(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Searches forwards through a file for a specified
               pattern, starting at the beginning of the file.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a pattern
               to search for in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int64" /> value containing the index at which
               the value was found. If not found, -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.RFind(VisioForge.Libs.TagLib.ByteVector,System.Int64,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Searches backwards through a file for a specified
               pattern, starting at a specified offset.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a pattern
               to search for in the current instance.
            </param>
            <param name="startPosition">
               A <see cref="T:System.Int32" /> value specifying at what
               seek position to start searching.
            </param>
            <param name="after">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object specifying a pattern
               that the searched for pattern must appear after. If this
               pattern is found first, -1 is returned.
            </param>
            <returns>
               A <see cref="T:System.Int64" /> value containing the index at which
               the value was found. If not found, -1 is returned.
            </returns>
            <remarks>
               Searching for <paramref name="after" /> is not yet
               implemented.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.RFind(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Searches backwards through a file for a specified
               pattern, starting at a specified offset.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a pattern
               to search for in the current instance.
            </param>
            <param name="startPosition">
               A <see cref="T:System.Int32" /> value specifying at what
               seek position to start searching.
            </param>
            <returns>
               A <see cref="T:System.Int64" /> value containing the index at which
               the value was found. If not found, -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.RFind(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Searches backwards through a file for a specified
               pattern, starting at the end of the file.
            </summary>
            <param name="pattern">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a pattern
               to search for in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int64" /> value containing the index at which
               the value was found. If not found, -1 is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="pattern" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64,System.Int64)">
            <summary>
               Inserts a specifed block of data into the file repesented
               by the current instance at a specified location,
               replacing a specified number of bytes.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data to
               insert into the file.
            </param>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying at which point to
               insert the data.
            </param>
            <param name="replace">
               A <see cref="T:System.Int64" /> value specifying the number of
               bytes to replace. Typically this is the original size of
               the data block so that a new block will replace the old
               one.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Inserts a specified block of data into the file repesented
               by the current instance at a specified location.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data to
               insert into the file.
            </param>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying at which point to
               insert the data.
            </param>
            <remarks>
               This method inserts a new block of data into the file. To
               replace an existing block, ie. replacing an existing
               tag with a new one of different size, use <see
               cref="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64,System.Int64)" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Insert(System.Int64,System.Int64)">
            <summary>
              Inserts a specified block-size into the file repesented
              by the current instance at a specified location. Former
              data at this location is not overwriten and may then 
              contain random content.
            </summary>
            <param name="size">
              A <see cref="T:System.Int64" /> value specifying the size in bytes
              of the block to be inserted (reserved).
            </param>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying at which point to
               insert the data.
            </param>
            <remarks>
               This method is usefull to reserve some space in the file.
               To insert or replace defined data blocks, use <see
               cref="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64)" /> or 
               <see cref="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64,System.Int64)"/> 
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.RemoveBlock(System.Int64,System.Int64)">
            <summary>
               Removes a specified block of data from the file
               represented by the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying at which point to
               remove data.
            </param>
            <param name="length">
               A <see cref="T:System.Int64" /> value specifying the number of
               bytes to remove.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
               Seeks the read/write pointer to a specified offset in the
               current instance, relative to a specified origin.
            </summary>
            <param name="offset">
               A <see cref="T:System.Int64" /> value indicating the byte offset to
               seek to.
            </param>
            <param name="origin">
               A <see cref="T:System.IO.SeekOrigin" /> value specifying an
               origin to seek from.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Seek(System.Int64)">
            <summary>
               Seeks the read/write pointer to a specified offset in the
               current instance, relative to the beginning of the file.
            </summary>
            <param name="offset">
               A <see cref="T:System.Int64" /> value indicating the byte offset to
               seek to.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Create(System.String)">
            <summary>
               Creates a new instance of a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass
               for a specified path, guessing the mime-type from the
               file's extension and using the average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object specifying the file to
               read from and write to.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> as read from the
               specified path.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file could not be read due to corruption.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The file could not be read because the mime-type could
               not be resolved or the library does not support an
               internal feature of the file crucial to its reading.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Create(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Creates a new instance of a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass
               for a specified file abstraction, guessing the mime-type
               from the file's extension and using the average read
               style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading to and writing from the current instance.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> as read from the
               specified abstraction.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file could not be read due to corruption.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The file could not be read because the mime-type could
               not be resolved or the library does not support an
               internal feature of the file crucial to its reading.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Create(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Creates a new instance of a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass
               for a specified path and read style, guessing the
               mime-type from the file's extension.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object specifying the file to
               read from and write to.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying the level of
               detail to use when reading the media information from the
               new instance.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> as read from the
               specified path.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file could not be read due to corruption.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The file could not be read because the mime-type could
               not be resolved or the library does not support an
               internal feature of the file crucial to its reading.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Create(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Creates a new instance of a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass
               for a specified file abstraction and read style, guessing
               the mime-type from the file's extension.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading to and writing from the current instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying the level of
               detail to use when reading the media information from the
               new instance.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> as read from the
               specified abstraction.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file could not be read due to corruption.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The file could not be read because the mime-type could
               not be resolved or the library does not support an
               internal feature of the file crucial to its reading.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Create(System.String,System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Creates a new instance of a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass
               for a specified path, mime-type, and read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object specifying the file to
               read from and write to.
            </param>
            <param name="mimetype">
               A <see cref="T:System.String" /> object containing the mime-type
               to use when selecting the appropriate class to use, or
               <see langword="null" /> if the extension in <paramref
               name="path" /> is to be used.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying the level of
               detail to use when reading the media information from the
               new instance.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> as read from the
               specified path.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file could not be read due to corruption.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The file could not be read because the mime-type could
               not be resolved or the library does not support an
               internal feature of the file crucial to its reading.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Create(VisioForge.Libs.TagLib.File.IFileAbstraction,System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Creates a new instance of a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass
               for a specified file abstraction, mime-type, and read
               style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading to and writing from the current instance.
            </param>
            <param name="mimetype">
               A <see cref="T:System.String" /> object containing the mime-type
               to use when selecting the appropriate class to use, or
               <see langword="null" /> if the extension in <paramref
               name="abstraction" /> is to be used.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying the level of
               detail to use when reading the media information from the
               new instance.
            </param>
            <returns>
               A new instance of <see cref="T:VisioForge.Libs.TagLib.File" /> as read from the
               specified abstraction.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file could not be read due to corruption.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The file could not be read because the mime-type could
               not be resolved or the library does not support an
               internal feature of the file crucial to its reading.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.AddFileTypeResolver(VisioForge.Libs.TagLib.File.FileTypeResolver)">
            <summary>
               Adds a <see cref="T:VisioForge.Libs.TagLib.File.FileTypeResolver" /> to the <see
               cref="T:VisioForge.Libs.TagLib.File" /> class. The one added last gets run first.
            </summary>
            <param name="resolver">
               A <see cref="T:VisioForge.Libs.TagLib.File.FileTypeResolver" /> delegate to add to the
               file type recognition stack.
            </param>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.File.FileTypeResolver" /> adds support for 
               recognizing a file type outside of the standard mime-type
               methods.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.PreSave">
            <summary>
               Prepare to Save the file. Thismust be called at the begining 
               of every File.Save() method.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64,System.Int64,System.Int64)">
            <summary>
               Inserts a specified block into the file repesented
               by the current instance at a specified location.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data to
               insert into the file. if null, no data is writen to the
               file and the block is just inserted without overwriting the 
               former data at the given location.
            </param>
            <param name="size">
               A <see cref="T:System.Int64" /> value specifying the size of the block
               to be inserted.
            </param>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying at which point to
               insert the data.
            </param>
            <param name="replace">
               A <see cref="T:System.Int64" /> value specifying the number of
               bytes to replace. Typically this is the original size of
               the data block so that a new block will replace the old
               one.
            </param>
            <remarks>
               This method inserts a new block of data into the file. To
               replace an existing block, ie. replacing an existing
               tag with a new one of different size, use <see
               cref="M:VisioForge.Libs.TagLib.File.Insert(VisioForge.Libs.TagLib.ByteVector,System.Int64,System.Int64)" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.Truncate(System.Int64)">
            <summary>
               Resized the current instance to a specified number of
               bytes.
            </summary>
            <param name="length">
               A <see cref="T:System.Int64" /> value specifying the number of
               bytes to resize the file to.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.PrepareExceptionForRethrow(System.Exception)">
            <summary>
            Causes the original strack trace of the exception to be preserved when it is rethrown
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.File.LocalFileAbstraction">
            <summary>
               This class implements <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" />
               to provide support for accessing the local/standard file
               system.
            </summary>
            <remarks>
               This class is used as the standard file abstraction
               throughout the library.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.File.LocalFileAbstraction.name">
            <summary>
               Contains the name used to open the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.LocalFileAbstraction.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.File.LocalFileAbstraction" /> for a
               specified path in the local file system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the
               path of the file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.LocalFileAbstraction.Name">
            <summary>
               Gets the path of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the
               path of the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.LocalFileAbstraction.ReadStream">
            <summary>
               Gets a new readable, seekable stream from the
               file represented by the current instance.
            </summary>
            <value>
               A new <see cref="T:System.IO.Stream" /> to be used
               when reading the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.LocalFileAbstraction.WriteStream">
            <summary>
               Gets a new writable, seekable stream from the
               file represented by the current instance.
            </summary>
            <value>
               A new <see cref="T:System.IO.Stream" /> to be used
               when writing to the file represented by the
               current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.LocalFileAbstraction.CloseStream(System.IO.Stream)">
            <summary>
               Closes a stream created by the current instance.
            </summary>
            <param name="stream">
               A <see cref="T:System.IO.Stream" /> object
               created by the current instance.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.File.IFileAbstraction">
             <summary>
                This interface provides abstracted access to a file. It
                premits access to non-standard file systems and data
                retrieval methods.
             </summary>
             <remarks>
                <para>To use a custom abstraction, use <see
                cref="M:VisioForge.Libs.TagLib.File.Create(VisioForge.Libs.TagLib.File.IFileAbstraction)" /> instead of <see
                cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" /> when creating files.</para>
             </remarks>
             <example>
                <para>The following example uses Gnome VFS to open a file
                and read its title.</para>
             <code lang="C#">using TagLib;
            using Gnome.Vfs;
            
            public class ReadTitle
            {
               public static void Main (string [] args)
               {
                  if (args.Length != 1)
                     return;
            
                  Gnome.Vfs.Vfs.Initialize ();
                  
                  try {
                      TagLib.File file = TagLib.File.Create (
                         new VfsFileAbstraction (args [0]));
                      System.Console.WriteLine (file.Tag.Title);
                  } finally {
                     Vfs.Shutdown()
                  }
               }
            }
            
            public class VfsFileAbstraction : TagLib.File.IFileAbstraction
            {
                private string name;
            
                public VfsFileAbstraction (string file)
                {
                    name = file;
                }
            
                public string Name {
                    get { return name; }
                }
            
                public System.IO.Stream ReadStream {
                    get { return new VfsStream(Name, System.IO.FileMode.Open); }
                }
            
                public System.IO.Stream WriteStream {
                    get { return new VfsStream(Name, System.IO.FileMode.Open); }
                }
            
                public void CloseStream (System.IO.Stream stream)
                {
                    stream.Close ();
                }
            }</code>
                <code lang="Boo">import TagLib from "taglib-sharp.dll"
            import Gnome.Vfs from "gnome-vfs-sharp"
            
            class VfsFileAbstraction (TagLib.File.IFileAbstraction):
                    
                    _name as string
                    
                    def constructor(file as string):
                            _name = file
                    
                    Name:
                            get:
                                    return _name
                            
                    ReadStream:
                            get:
                                    return VfsStream(_name, FileMode.Open)
                            
                    WriteStream:
                            get:
                                    return VfsStream(_name, FileMode.Open)
                    
            if len(argv) == 1:
                    Vfs.Initialize()
            
                    try:
                            file as TagLib.File = TagLib.File.Create (VfsFileAbstraction (argv[0]))
                            print file.Tag.Title
                    ensure:
                            Vfs.Shutdown()</code>
             </example>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.IFileAbstraction.Name">
            <summary>
               Gets the name or identifier used by the
               implementation.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the 
               name or identifier used by the implementation.
            </value>
            <remarks>
               This value would typically represent a path or
               URL to be used when identifying the file in the
               file system, but it could be any value
               as appropriate for the implementation.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.IFileAbstraction.ReadStream">
            <summary>
               Gets a readable, seekable stream for the file
               referenced by the current instance.
            </summary>
            <value>
               A <see cref="T:System.IO.Stream" /> object to be
               used when reading a file.
            </value>
            <remarks>
               This property is typically used when creating
               constructing an instance of <see cref="T:VisioForge.Libs.TagLib.File" />.
               Upon completion of the constructor, <see
               cref="M:VisioForge.Libs.TagLib.File.IFileAbstraction.CloseStream(System.IO.Stream)" /> will be called to close
               the stream. If the stream is to be reused after
               this point, <see cref="M:VisioForge.Libs.TagLib.File.IFileAbstraction.CloseStream(System.IO.Stream)" /> should be
               implemented in a way to keep it open.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.File.IFileAbstraction.WriteStream">
            <summary>
               Gets a writable, seekable stream for the file
               referenced by the current instance.
            </summary>
            <value>
               A <see cref="T:System.IO.Stream" /> object to be
               used when writing to a file.
            </value>
            <remarks>
               This property is typically used when saving a
               file with <see cref="M:VisioForge.Libs.TagLib.File.Save" />. Upon completion of
               the method, <see cref="M:VisioForge.Libs.TagLib.File.IFileAbstraction.CloseStream(System.IO.Stream)" /> will be
               called to close the stream. If the stream is to
               be reused after this point, <see
               cref="M:VisioForge.Libs.TagLib.File.IFileAbstraction.CloseStream(System.IO.Stream)" /> should be implemented in a
               way to keep it open.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.File.IFileAbstraction.CloseStream(System.IO.Stream)">
            <summary>
               Closes a stream originating from the current
               instance.
            </summary>
            <param name="stream">
               A <see cref="T:System.IO.Stream" /> object
               originating from the current instance.
            </param>
            <remarks>
               If the stream is to be used outside of the scope,
               of TagLib#, this method should perform no action.
               For example, a stream that was created outside of
               the current instance, or a stream that will
               subsequently be used to play the file.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.FileTypes">
            <summary>
               This static class provides a mechanism for registering file
               classes and mime-types, to be used when constructing a class via
               <see cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" />.
            </summary>
            <remarks>
               <para>The default types built into the taglib-sharp.dll assembly
               are registered automatically when the class is initialized. To
               register your own custom types, use <see cref="M:VisioForge.Libs.TagLib.FileTypes.Register(System.Type)"
               />.</para>
            </remarks>
            <seealso cref="T:VisioForge.Libs.TagLib.SupportedMimeType" />
        </member>
        <member name="F:VisioForge.Libs.TagLib.FileTypes.file_types">
            <summary>
               Contains a mapping between mime-types and the <see
               cref="T:VisioForge.Libs.TagLib.File" /> subclasses that support them.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.FileTypes.static_file_types">
            <summary>
               Contains a static array of file types contained in the
               TagLib# assembly.
            </summary>
            <remarks>
               A static Type array is used instead of getting types by
               reflecting the executing assembly as Assembly.GetTypes is
               very inefficient and leaks every type instance under
               Mono. Not reflecting taglib-sharp.dll saves about 120KB
               of heap.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.FileTypes.#cctor">
            <summary>
               Constructs and initializes the <see cref="T:VisioForge.Libs.TagLib.FileTypes" />
               class by registering the default types.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.FileTypes.Init">
            <summary>
               Initializes the class by registering the default types.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.FileTypes.Register(System.Type)">
            <summary>
               Registers a <see cref="T:VisioForge.Libs.TagLib.File" /> subclass to be used when
               creating files via <see cref="M:VisioForge.Libs.TagLib.File.Create(System.String)" />.
            </summary>
            <param name="type">
               A <see cref="T:System.Type" /> object for the class to register.
            </param>
            <remarks>
               In order to register mime-types, the class represented by
               <paramref name="type" /> should use the <see
               cref="T:VisioForge.Libs.TagLib.SupportedMimeType" /> custom attribute.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.FileTypes.AvailableTypes">
            <summary>
               Gets a dictionary containing all the supported mime-types
               and file classes used by <see cref="M:VisioForge.Libs.TagLib.File.Create(System.String)"
               />.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IDictionary`2" /> object containing the
               supported mime-types.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.Block">
            <summary>
               This class represents a Flac metadata block.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.Block.header">
            <summary>
               Contains the block header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Block.#ctor(VisioForge.Libs.TagLib.Flac.BlockHeader,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.Block" /> with a specified header and internal
               data.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Flac.BlockHeader" /> object containing the
               header to use for the new instance.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               to be contained in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The size of <paramref name="data" /> does not match the
               size specified in <paramref name="header" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Block.#ctor(VisioForge.Libs.TagLib.Flac.BlockType,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.Block" /> with of a specified type and internal
               data.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Flac.BlockType" /> value indicating the type of
               data stored in <paramref name="data" />.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               to be contained in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Block.Type">
            <summary>
               Gets the type of data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Flac.BlockType" /> value indicating the type of
               data contained in <see cref="P:VisioForge.Libs.TagLib.Flac.Block.Data" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Block.IsLastBlock">
            <summary>
               Gets whether or not the block represented by the current
               instance is the last metadata block in the Flac stream.
            </summary>
            <value>
               <see langword="true" /> if the block represented by the
               current instance was the last one to appear in the file
               and is followed immediately by the audio data, or <see
               langword="false" /> if another block appears after the
               current one or the block was not read from disk.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Block.DataSize">
            <summary>
               Gets the size of the data contained in the current
               instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Block.TotalSize">
            <summary>
               Gets the total size of the block represented by the
               current instance as it appears on disk.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Block.Data">
            <summary>
               Gets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Block.Render(System.Boolean)">
            <summary>
               Renders the current instance as a raw Flac metadata
               block.
            </summary>
            <param name="isLastBlock">
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               block is to be marked as the last metadata block.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.BlockType">
            <summary>
               Specifies the contents of a Flac block in <see cref="T:VisioForge.Libs.TagLib.Flac.BlockHeader"
               />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.StreamInfo">
            <summary>
               The block contains stream information.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.Padding">
            <summary>
               The block contains padding.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.Application">
            <summary>
               The block contains application data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.SeekTable">
            <summary>
               The block contains seek table.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.XiphComment">
            <summary>
               The block contains a Xipp comment.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.CueSheet">
            <summary>
               The block contains a cue sheet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockType.Picture">
            <summary>
               The block contains a picture.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.BlockHeader">
            <summary>
               This structure provides a representation of a Flac metadata block
               header structure.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.BlockHeader.Size">
            <summary>
               The size of a block header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.BlockHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.BlockHeader" /> by reading a raw header from a <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw
               block header.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 4 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.BlockHeader.#ctor(VisioForge.Libs.TagLib.Flac.BlockType,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.BlockHeader" /> for a specified block type and size.
            </summary>
            <param name="type">
               A <see cref="P:VisioForge.Libs.TagLib.Flac.BlockHeader.BlockType" /> value describing the contents
               of the block.
            </param>
            <param name="blockSize">
               A <see cref="T:System.UInt32" /> value containing the block data
               size minus the size of the header.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.BlockHeader.Render(System.Boolean)">
            <summary>
               Renderes the current instance as a raw Flac block header.
            </summary>
            <param name="isLastBlock">
               A <see cref="T:System.Boolean" /> value specifying whether or not the
               header is the last header of the file.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered header.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.BlockHeader.BlockType">
            <summary>
               Gets the type of block described by the current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Flac.BlockHeader.BlockType" /> value describing the block
               type.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.BlockHeader.IsLastBlock">
            <summary>
               Gets whether or not the block is the last in the file.
            </summary>
            <value>
               <see langword="true" /> if the block is the last in the
               file; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.BlockHeader.BlockSize">
            <summary>
               Gets the size of the block described by the current
               instance, minus the block header.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               block, minus the header.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for Xiph's Flac audio
               files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> will be added
               automatically to any file that doesn't contain one. This change
               does not effect the physical file until <see cref="M:VisioForge.Libs.TagLib.Flac.File.Save" /> is
               called and can be reversed using the following method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.File.metadata">
            <summary>
               Contains the Flac metadata tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.File.tag">
            <summary>
               Contains the combination of all file tags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.File.header_block">
            <summary>
               Contains the Flac header block.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.File.stream_start">
            <summary>
               Contains the stream start position.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Flac.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.File.BlockMode">
            <summary>
               Indicates whether or not the block types passed into
               <see cref="M:VisioForge.Libs.TagLib.Flac.File.ReadBlocks(System.Int64@,System.Int64@,VisioForge.Libs.TagLib.Flac.File.BlockMode,VisioForge.Libs.TagLib.Flac.BlockType[])" /> are to be white-listed or
               black-listed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.File.BlockMode.Blacklist">
            <summary>
               All block types except those provided are to be
               returned.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.File.BlockMode.Whitelist">
            <summary>
               Only those block types provides should be
               returned.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.File.ReadBlocks(System.Int64@,System.Int64@,VisioForge.Libs.TagLib.Flac.File.BlockMode,VisioForge.Libs.TagLib.Flac.BlockType[])">
            <summary>
               Reads all metadata blocks starting from the current
               instance, starting at a specified position.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start searching for the blocks. This
               will be updated to the position of the first block.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value reference updated to the
               position at which the last block ends.
            </param>
            <param name="mode">
               A <see cref="T:VisioForge.Libs.TagLib.Flac.File.BlockMode" /> value indicating whether to
               white-list or black-list the contents of <paramref
               name="types" />.
            </param>
            <param name="types">
               A <see cref="T:BlockType[]" /> containing the types to look
               for or not look for as specified by <paramref name="mode"
               />.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IList`1" /> object containing the blocks
               read from the current instance.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               "<c>fLaC</c>" could not be found.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.Metadata">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.CombinedTag" /> to provide support
               for reading and writing FLAC metadata boxes.
            </summary>
            <remarks>
               At this point, only Xiph Comments and pictures are supported.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.Metadata.pictures">
            <summary>
               Contains the pictures.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Metadata.#ctor(System.Collections.Generic.List{VisioForge.Libs.TagLib.Flac.Block})">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.Metadata" /> using a collection of blocks.
            </summary>
            <param name="blocks">
               A <see cref="T:System.Collections.Generic.List`1" /> object containing <see
               cref="T:VisioForge.Libs.TagLib.Flac.Block" /> objects to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="blocks" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Metadata.#ctor(System.Collections.Generic.IEnumerable{VisioForge.Libs.TagLib.Flac.Block})">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.Metadata" /> using a collection of blocks.
            </summary>
            <param name="blocks">
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating <see
               cref="T:VisioForge.Libs.TagLib.Flac.Block" /> objects to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="blocks" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Metadata.GetComment(System.Boolean,VisioForge.Libs.TagLib.Tag)">
            <summary>
               Gets the first Xiph comment stored in the current
               instance, optionally creating one if necessary.
            </summary>
            <param name="create">
               A <see cref="T:System.Boolean" /> value indicating whether or not a
               comment should be added if one cannot be found.
            </param>
            <param name="copy">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the source tag to
               copy the values from, or <see langword="null" /> to not
               copy values.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object containing the
               tag that was found in or added to the current instance.
               If no matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Metadata.RemoveComment">
            <summary>
               Removes all child Xiph Comments from the current
               instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Metadata.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing the tag types stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Metadata.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Metadata.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.Picture">
            <summary>
               This class implements <see cref="T:VisioForge.Libs.TagLib.IPicture" /> to provide support
               for reading and writing Flac picture metadata.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Picture.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.Picture" /> by reading the contents of a raw Flac
               image structure.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               Flac image.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 32 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Picture.#ctor(VisioForge.Libs.TagLib.IPicture)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.Picture" /> by copying the properties of a <see
               cref="T:VisioForge.Libs.TagLib.IPicture" /> object.
            </summary>
            <param name="picture">
               A <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object to use for the new
               instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="picture" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.Picture.Render">
            <summary>
               Renders the current instance as a raw Flac picture.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.MimeType">
            <summary>
               Gets and sets the mime-type of the picture data
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the mime-type
               of the picture data stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.Type">
            <summary>
               Gets and sets the type of content visible in the picture
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> containing the type of
               content visible in the picture stored in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.Filename">
            <summary>
               Gets and sets a filename of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a fielname, with
               extension, of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.Description">
            <summary>
               Gets and sets a description of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.Data">
            <summary>
               Gets and sets the picture data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the picture
               data stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.Width">
            <summary>
               Gets and sets the width of the picture in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing width of the
               picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.Height">
            <summary>
               Gets and sets the height of the picture in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing height of the
               picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.ColorDepth">
            <summary>
               Gets and sets the color depth of the picture in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing color depth of the
               picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.Picture.IndexedColors">
            <summary>
               Gets and sets the number of indexed colors in the picture
               in the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing number of indexed
               colors in the picture, or zero if the picture is not
               stored in an indexed format.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Flac.StreamHeader">
            <summary>
               This structure implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> and provides
               information about a Flac audio stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.StreamHeader.flags">
            <summary>
               Contains the flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.StreamHeader.low_length">
            <summary>
               Contains the low portion of the length.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Flac.StreamHeader.stream_length">
            <summary>
               Contains the stream length.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Flac.StreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Flac.StreamHeader" /> by reading a raw stream header
               structure and using the stream length.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               stream header.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value containing the length of the
               stream.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 18 bytes.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.AudioSampleWidth">
            <summary>
               Gets the sample width of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample width of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Flac.StreamHeader.HighLength">
            <summary>
               Gets a high portion of the length of the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the high portion
               of the length.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Genres">
            <summary>
               This static class provides convenience functions for converting
               between <see cref="T:System.String" /> genres and their respective audio
               and video indices as used by several formats.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Genres.audio">
            <summary>
               Contains a list of ID3v1 audio generes.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Genres.video">
            <summary>
               Contains a list of DivX audio generes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Genres.Audio">
            <summary>
               Gets a list of standard audio generes.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing standard audio
               genres.
            </value>
            <remarks>
               The genres are stored in the same order and with the same
               values as in the ID3v1 format.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Genres.Video">
            <summary>
               Gets a list of standard video generes.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing standard video
               genres.
            </value>
            <remarks>
               The genres are stored in the same order and with the same
               values as in the DivX format.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.AudioToIndex(System.String)">
            <summary>
               Gets the genre index for a specified audio genre.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               genre to look up.
            </param>
            <returns>
               A <see cref="T:System.Byte" /> value containing the index of the
               genre in the audio array or 255 if it could not be found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.VideoToIndex(System.String)">
            <summary>
               Gets the genre index for a specified video genre.
            </summary>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name of the
               genre to look up.
            </param>
            <returns>
               A <see cref="T:System.Byte" /> value containing the index of the
               genre in the video array or 255 if it could not be found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.IndexToAudio(System.Byte)">
            <summary>
               Gets the audio genre from its index in the array.
            </summary>
            <param name="index">
               A <see cref="T:System.Byte" /> value containing the index to
               aquire the genre from.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the audio genre
               found at the index, or <see langword="null" /> if it does
               not exist.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.IndexToVideo(System.Byte)">
            <summary>
               Gets the video genre from its index in the array.
            </summary>
            <param name="index">
               A <see cref="T:System.Byte" /> value containing the index to
               aquire the genre from.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the video genre
               found at the index, or <see langword="null" /> if it does
               not exist.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.IndexToAudio(System.String)">
            <summary>
               Gets the audio genre from its index in the array.
            </summary>
            <param name="text">
               A <see cref="T:System.String" /> object, either in the format
               <c>"(123)"</c> or <c>"123"</c>.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the audio genre
               found at the index, or <see langword="null" /> if it does
               not exist.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.IndexToVideo(System.String)">
            <summary>
               Gets the video genre from its index in the array.
            </summary>
            <param name="text">
               A <see cref="T:System.String" /> object, either in the format
               <c>"(123)"</c> or <c>"123"</c>.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the video genre
               found at the index, or <see langword="null" /> if it does
               not exist.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Genres.StringToByte(System.String)">
            <summary>
               Converts a string, either in the format <c>"(123)"</c> or
               <c>"123"</c> into a byte or equal numeric value.
            </summary>
            <param name="text">
               A <see cref="T:System.String" /> object, either in the format
               <c>"(123)"</c> or <c>"123"</c>, to be converted.
            </param>
            <returns>
               A <see cref="T:System.Byte" /> value containing the numeric value
               of <paramref name="text" /> or 255 if no numeric value
               could be extracted.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Gif.Codec">
            <summary>
               A Gif photo codec. Contains basic photo details.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Gif.Codec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.Codec.#ctor(System.Int32,System.Int32)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Gif.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Gif.Codec" /> instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Gif.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Image.ImageBlockFile" /> to provide tagging
               and property support for Gif files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.SIGNATURE">
            <summary>
               Gif file signature which occurs at the begin of the file
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.VERSION_87A">
            <summary>
               String which is used to indicate version the gif file format version 87a
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.VERSION_89A">
            <summary>
               String which is used to indicate version the gif file format version 89a
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.XMP_IDENTIFIER">
            <summary>
               Application Extension Identifier for an XMP Block
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.XMP_AUTH_CODE">
            <summary>
               Application Authentication Extension Code for an XMP Block
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.XMP_MAGIC_TRAILER">
            <summary>
               The Magic Trailer for XMP Data
            </summary>
            <remarks>
               The storage of XMP data in GIF does not follow the GIF specification. According to the
               specification, extension data is stored in so-called sub-blocks, which start with a length
               byte which specifies the number of data bytes contained in the sub block. So a block can at
               most contain 256 data bytes. After a sub-block, the next sub-block begins. The sequence ends,
               when a sub-block starts with 0. So readers, which are not aware of the XMP data not following
               this scheme, will get confused by the XMP data. To fix this, this trailer is added to the end.
               It has a length of 258 bytes, so that it is ensured that a reader which tries to skip the
               XMP data reads one of this bytes as length of a sub-block. But, each byte points with its length
               to the last one. Therefoe, independent of the byte, the reader reads as sub-block length, it is
               redirected to the last byte of the trailer and therfore to the end of the XMP data.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.width">
            <summary>
               The width of the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.height">
            <summary>
               The height of the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.properties">
            <summary>
               The Properties of the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.version">
            <summary>
               The version of the file format
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Gif.File.start_of_blocks">
            <summary>
               The start of the first block in file after the header.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Gif.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Gif.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Gif.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Gif.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Gif.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the information from file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadByte">
            <summary>
              Reads a single byte form file. This is needed often for Gif files.
            </summary>
            <returns>
              A <see cref="T:System.Byte"/> with the read data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadHeader">
            <summary>
               Reads the Header and the Logical Screen Descriptor of the GIF file and,
               if there is one, skips the global color table. It also extracts the
               image width and height from it.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadMetadata">
            <summary>
               Reads the metadata from file. The current position must point to the
               start of the first block after the Header and Logical Screen
               Descriptor (and, if there is one, the Global Color Table)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadExtensionBlock">
            <summary>
               Reads an Extension Block at the current position. The current position must
               point to the 2nd byte of the comment block. (The other byte is usually
               read before to identify the comment block)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadApplicationExtensionBlock">
            <summary>
               Reads an Application Extension Block at the current position. The current
               position must point to the 3rd byte of the comment block. (The other 2 bytes
               are usually read before to identify the comment block)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadCommentBlock">
            <summary>
               Reads a Comment Block at the current position. The current position must
               point to the 3rd byte of the comment block. (The other 2 bytes are usually
               read before to identify the comment block)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.SkipColorTable(System.Byte)">
            <summary>
               Skips the color table if there is one
            </summary>
            <param name="packed_data">
               A <see cref="T:System.Byte"/> with the packed data which is
               contained Logical Screen Descriptor or in the Image Descriptor.
            </param>
            <remarks>
               The data contained in the packed data is different for the Logical
               Screen Descriptor and for the Image Descriptor. But fortunately,
               the bits which are used do identifying the exitstance and the size
               of the color table are at the same position.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.SkipImage">
            <summary>
               Skip over the image data at the current position. The current position must
               point to 2nd byte of the Image Descriptor. (First byte is usually read before
               to identify the image descriptor.)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ReadSubBlocks">
            <summary>
               Reads a sequence of sub-blocks from the current position and concatenates the data
               from the sub-blocks to a string. The current position must point to the size-byte
               of the first subblock to skip.
            </summary>
            <returns>
               A <see cref="T:System.String"/> with the data contained in the sub-blocks.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.SkipSubBlocks">
            <summary>
               Skips over a sequence of sub-blocks from the current position in the file.
               The current position must point to the size-byte of the first subblock to skip.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.SaveMetadata">
            <summary>
               Save the metadata to file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.RenderXMPBlock">
            <summary>
               Renders the XMP data to a Application Extension Block which can be
               embedded in a Gif file.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the Application Extension Block for the
               XMP data, or <see langword="null" /> if the file does not have XMP data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.RenderGifCommentBlock">
            <summary>
               Renders the Gif Comment to a Comment Extension Block which can be
               embedded in a Gif file.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the Comment Extension Block for the
               Gif Comment, or <see langword="null" /> if the file does not have
               a Gif Comment.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Gif.File.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Gif.GifCommentTag">
            <summary>
               Contains the Gif comment.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.GifCommentTag.#ctor(System.String)">
            <summary>
               Constructor.
            </summary>
            <param name="value">
               The value of the comment.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.GifCommentTag.#ctor">
            <summary>
               Constructor. Creates a new empty comment.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Gif.GifCommentTag.Value">
            <summary>
               The value of the comment represented by the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Gif.GifCommentTag.Comment">
            <summary>
               Gets or sets the comment for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the comment of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Gif.GifCommentTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.GifComment" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Gif.GifCommentTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.MediaTypes">
            <summary>
               Indicates the types of media represented by a <see cref="T:VisioForge.Libs.TagLib.ICodec"
               /> or <see cref="T:VisioForge.Libs.TagLib.Properties" /> object.
            </summary>
            <remarks>
               These values can be bitwise combined to represent multiple media
               types.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MediaTypes.None">
            <summary>
               No media is present.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MediaTypes.Audio">
            <summary>
               Audio is present.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MediaTypes.Video">
            <summary>
               Video is present.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MediaTypes.Photo">
            <summary>
               A Photo is present.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MediaTypes.Text">
            <summary>
               Text is present.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ICodec">
            <summary>
               This interface provides basic information, common to all media
               codecs.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ICodec.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ICodec.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="P:VisioForge.Libs.TagLib.ICodec.MediaTypes" /> containing
               the types of media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ICodec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IAudioCodec">
            <summary>
               This interface inherits <see cref="T:VisioForge.Libs.TagLib.ICodec" /> to provide
               information about an audio codec.
            </summary>
            <remarks>
               <para>When dealing with a <see cref="T:VisioForge.Libs.TagLib.ICodec" />, if <see
               cref="P:VisioForge.Libs.TagLib.ICodec.MediaTypes" /> contains <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio"
               />, it is safe to assume that the object also inherits <see
               cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> and can be recast without issue.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IAudioCodec.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IAudioCodec.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IAudioCodec.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ILosslessAudioCodec">
            <summary>
               This interface provides information specific
               to lossless audio codecs.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ILosslessAudioCodec.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IVideoCodec">
            <summary>
               This interface inherits <see cref="T:VisioForge.Libs.TagLib.ICodec" /> to provide
               information about a video codec.
            </summary>
            <remarks>
               <para>When dealing with a <see cref="T:VisioForge.Libs.TagLib.ICodec" />, if <see
               cref="P:VisioForge.Libs.TagLib.ICodec.MediaTypes" /> contains <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Video"
               />, it is safe to assume that the object also inherits <see
               cref="T:VisioForge.Libs.TagLib.IVideoCodec" /> and can be recast without issue.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IVideoCodec.VideoWidth">
            <summary>
               Gets the width of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IVideoCodec.VideoHeight">
            <summary>
               Gets the height of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               video represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IPhotoCodec">
            <summary>
               This interface inherits <see cref="T:VisioForge.Libs.TagLib.ICodec" /> to provide
               information about a photo.
            </summary>
            <remarks>
               <para>When dealing with a <see cref="T:VisioForge.Libs.TagLib.ICodec" />, if <see
               cref="P:VisioForge.Libs.TagLib.ICodec.MediaTypes" /> contains <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Photo"
               />, it is safe to assume that the object also inherits <see
               cref="T:VisioForge.Libs.TagLib.IPhotoCodec" /> and can be recast without issue.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPhotoCodec.PhotoWidth">
            <summary>
               Gets the width of the photo represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               photo represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPhotoCodec.PhotoHeight">
            <summary>
               Gets the height of the photo represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               photo represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPhotoCodec.PhotoQuality">
            <summary>
               Gets the (format specific) quality indicator of the photo
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value indicating the quality. A value
               0 means that there was no quality indicator for the format
               or the file.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v1.StringHandler">
            <summary>
               This class provides a mechanism for customizing how Id3v1 text
               is read and written.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.StringHandler.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Converts raw ID3v1 text data to a <see cref="T:System.String" />
               object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing raw Id3v1
               text data.
            </param>
            <returns>
               A <see cref="T:System.String"/> object containing the converted
               text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.StringHandler.Render(System.String)">
            <summary>
               Converts a <see cref="T:System.String" /> object to raw ID3v1 text
               data.
            </summary>
            <param name="text">
               A <see cref="T:System.String" /> object to convert.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing the raw ID3v1 text
               data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v1.Tag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> to provide support for
               reading and writing tags stored in the ID3v1.1 format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.title">
            <summary>
               Contains the title.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.artist">
            <summary>
               Contains the semicolon separated performers.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.album">
            <summary>
               Contains the album name.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.year">
            <summary>
               Contains the 4 digit year.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.comment">
            <summary>
               Contains a comment on track.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.track">
            <summary>
               Contains the track number in the album.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.genre">
            <summary>
               Contains the genre index.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.Size">
            <summary>
               The size of a ID3v1 tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v1.Tag.FileIdentifier">
            <summary>
               The identifier used to recognize a ID3v1 tags.
            </summary>
            <value>
               "TAG"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.Tag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.Tag.#ctor(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> by reading the contents from a specified
               position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file from
               which the contents of the new instance is to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the tag.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not contain <see cref="F:VisioForge.Libs.TagLib.Id3v1.Tag.FileIdentifier" />
               at the given position.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.Tag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> by reading the contents from a specified
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to read the tag from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is less than 128 bytes or does
               not start with <see cref="F:VisioForge.Libs.TagLib.Id3v1.Tag.FileIdentifier" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.Tag.Render">
            <summary>
               Renders the current instance as a raw ID3v1 tag.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered tag.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.DefaultStringHandler">
            <summary>
               Gets and sets the <see cref="T:VisioForge.Libs.TagLib.Id3v1.StringHandler" /> object
               to use when reading and writing ID3v1 fields.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v1.StringHandler" /> object to use when
               processing fields.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.Tag.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Populates the current instance by parsing the contents of
               a raw ID3v1 tag.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               starting with an ID3v1 tag.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v1" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               When stored on disk, only the first 30 bytes of the
               Latin-1 encoded value will be stored. This may result in
               lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               When stored on disk, only the first 30 bytes of the
               Latin-1 encoded value will be stored, minus a byte for
               each additionial performer (i.e. two performers will only
               have 29 bytes and three performers will only have 28
               bytes).This may result in lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               When stored on disk, only the first 30 bytes of the
               Latin-1 encoded value will be stored. This may result in
               lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               When stored on disk, only the first 28 bytes of the
               Latin-1 encoded value will be stored. This may result in
               lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               Only first genre will be stored and only if it is an
               exact match for a value appearing in <see
               cref="P:VisioForge.Libs.TagLib.Genres.Audio" />. All other values will
               result in the property being cleared.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               Only values between 1 and 9999 will be stored, all other
               values will result in the property being zeroed.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v1.Tag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               Only values between 1 and 255 will be stored, all other
               values will result in the property being zeroed.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v1.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.EventTimeCode.TypeOfEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.EventTimeCode.Time">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCode.#ctor(VisioForge.Libs.TagLib.Id3v2.EventType,System.Int32)">
            <summary>
            
            </summary>
            <param name="typeOfEvent"></param>
            <param name="time"></param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCode.CreateEmpty">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCode.Clone">
            <summary>
            
            </summary>
            <returns><see cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCode" /></returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.EventType">
            <summary>
               Specifies the event type used by a <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCode" /> and <see cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame"/>.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.Padding">
            <summary>
            The padding - no meaning
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.EndOfInitialSilence">
            <summary>
            The end of initial silence
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.IntroStart">
            <summary>
            The intro start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.MainPartStart">
            <summary>
            The main part start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.OutroStart">
            <summary>
            The outro start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.OutroEnd">
            <summary>
            The outro end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.VerseStart">
            <summary>
            The verse start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.RefrainStart">
            <summary>
            The refrain start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.InterludeStart">
            <summary>
            The interlude start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.ThemeStart">
            <summary>
            The theme start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.VariationStart">
            <summary>
            The variation start
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.KeyChange">
            <summary>
            The key change
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.TimeChange">
            <summary>
            The time change
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.MomentaryUnwantedNoise">
            <summary>
            momentary unwanted noise (Snap, Crackle, and Pop)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.SustainedNoise">
            <summary>
            The sustained noise
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.SustainedNoiseEnd">
            <summary>
            The sustained noise end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.IntroEnd">
            <summary>
            The intro end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.MainPartEnd">
            <summary>
            The main part end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.VerseEnd">
            <summary>
            The verse end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.RefrainEnd">
            <summary>
            The refrain end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.ThemeEnd">
            <summary>
            The theme end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.Profanity">
            <summary>
            Profanity starts
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.ProfanityEnd">
            <summary>
            The profanity end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.AudioEnd">
            <summary>
            The audio end
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.EventType.AudioFileEnd">
            <summary>
            The audio file end
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader">
            <summary>
               This class is a filler until support for reading and writing the
               ID3v2 extended header is implemented.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader.size">
            <summary>
               Contains the size of the read header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader"/> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader" /> by reading the raw contents from
               a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               extended header structure.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value indicating the ID3v2 version.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader.Size">
            <summary>
               Gets the size of the data on disk in bytes.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               data on disk.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader.Parse(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the current instance with the contents of the
               raw ID3v2 frame.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               extended header structure.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value indicating the ID3v2 version.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.ExtendedHeader" /> object identical to
               the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.Footer">
            <summary>
               This structure provides a representation of an ID3v2 tag footer
               which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Footer.major_version">
            <summary>
               Contains the tag's major version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Footer.flags">
            <summary>
               Contains tag's flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Footer.Size">
            <summary>
               The size of a ID3v2 footer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Footer.FileIdentifier">
            <summary>
               The identifier used to recognize a ID3v2 footer.
            </summary>
            <value>
               "3DI"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Footer.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Footer" /> by reading it from raw footer data.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data to build the new instance from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is smaller than <see
               cref="F:VisioForge.Libs.TagLib.Id3v2.Footer.Size" />, does not begin with <see
               cref="F:VisioForge.Libs.TagLib.Id3v2.Footer.FileIdentifier" />, contains invalid flag data,
               or contains invalid size data.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Footer.#ctor(VisioForge.Libs.TagLib.Id3v2.Header)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Footer" /> by reading in the contents of the header
               object used for the same tag.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Header" /> object to base the new instance
               off of.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Footer.MajorVersion">
            <summary>
               Gets and sets the major version of the tag described by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value specifying the ID3v2 version
               of tag described by the current instance.
            </value>
            <remarks>
               When the version is set, unsupported header flags will
               automatically be removed from the tag.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="value" /> is not 4.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Footer.RevisionNumber">
            <summary>
               Gets and sets the version revision number of the tag
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value containing the version
               revision number of the tag represented by the current
               instance.
            </value>
            <remarks>
               This value should always be zeroed. A non-zero value
               indicates an experimental or new version of the format
               which may not be completely understood by the current
               implementation. Some software may refuse to read tags
               with a non-zero value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Footer.Flags">
            <summary>
               Gets and sets the flags applied to the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.Id3v2.HeaderFlags" /> value
               containing the flags applied to the current instance.
            </value>
            <exception cref="T:System.ArgumentException">
               <paramref name="value" /> contains a flag not supported
               by the the ID3v2 version of the current instance.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Footer.TagSize">
            <summary>
               Gets and sets the size of the tag described by the
               current instance, minus the header and footer.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               tag described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Footer.CompleteTagSize">
            <summary>
               Gets the complete size of the tag described by the
               current instance, including the header and footer.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the complete size
               of the tag described by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Footer.Render">
            <summary>
               Renders the current instance as a raw ID3v2 header.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered header.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.Frame">
            <summary>
               This abstract class provides a basic framework for representing
               ID3v2.4 frames.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Frame.header">
            <summary>
               Contains the frame's header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Frame.group_id">
            <summary>
               Contains the frame's grouping ID.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Frame.encryption_id">
            <summary>
               Contains the frame's encryption ID.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> by reading the raw header encoded in the
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier or header data to use for the new instance.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value indicating the ID3v2 version
               which <paramref name="data" /> is encoded in.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="data" /> does not contain a complete
               identifier.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.#ctor(VisioForge.Libs.TagLib.Id3v2.FrameHeader)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> with a specified header.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> value containing the header
               to use for the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Frame.FrameId">
            <summary>
               Gets the frame ID for the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> object containing the
               four-byte ID3v2.4 frame header for the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Frame.Size">
            <summary>
               Gets the size of the current instance as it was last
               stored on disk.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               current instance as it was last stored on disk.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Frame.Flags">
            <summary>
               Gets and sets the frame flags applied to the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameFlags" /> value
               containing the frame flags applied to the current
               instance.
            </value>
            <remarks>
               If the value includes either <see
               cref="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.Encryption" /> or <see
               cref="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.Compression" />, <see cref="M:VisioForge.Libs.TagLib.Id3v2.Frame.Render(System.Byte)" />
               will throw a <see cref="T:System.NotImplementedException" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Frame.GroupId">
            <summary>
               Gets and sets the grouping ID applied to the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int16" /> value containing the grouping
               identifier for the current instance, or -1 if not set.
            </value>
            <remarks>
               Grouping identifiers can be between 0 and 255. Setting
               any other value will unset the grouping identity and set
               the value to -1.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Frame.EncryptionId">
            <summary>
               Gets and sets the encryption ID applied to the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int16" /> value containing the encryption
               identifier for the current instance, or -1 if not set.
            </value>
            <remarks>
               <para>Encryption identifiers can be between 0 and 255.
               Setting any other value will unset the grouping identity
               and set the value to -1.</para>
               <para>If set, <see cref="M:VisioForge.Libs.TagLib.Id3v2.Frame.Render(System.Byte)" /> will throw a <see
               cref="T:System.NotImplementedException" />.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.Render(System.Byte)">
            <summary>
               Renders the current instance, encoded in a specified
               ID3v2 version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> value specifying the version of
               ID3v2 to use when encoding the current instance.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
            <exception cref="T:System.NotImplementedException">
               The current instance uses some feature that cannot be
               implemented in the specified ID3v2 version, or uses a
               feature, such as encryption or compression, which is not
               yet implemented in the library.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.TextDelimiter(VisioForge.Libs.TagLib.StringType)">
            <summary>
               Gets the text delimiter for a specified encoding.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value specifying the encoding
               to get the delimiter for.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               delimiter for the specified encoding.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.CorrectEncoding(VisioForge.Libs.TagLib.StringType,System.Byte)">
            <summary>
               Converts an encoding to be a supported encoding for a
               specified tag version.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value containing the original
               encoding.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               to be encoded for.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value containing the correct
               encoding to use, based on <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> and what is supported
               by <paramref name="version" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.SetData(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Byte,System.Boolean)">
            <summary>
               Populates the current instance by reading the raw frame
               from disk, optionally reading the header.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               ID3v2 frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value containing the offset in
               <paramref name="data" /> at which the frame begins.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               of the raw frame contained in <paramref name="data" />.
            </param>
            <param name="readHeader">
               A <see cref="T:System.Boolean" /> value indicating whether or not to
               read the header into current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.FieldData(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Byte)">
            <summary>
               Extracts the field data from the raw data portion of an
               ID3v2 frame.
            </summary>
            <param name="frameData">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing fraw frame
               data.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value containing the index at which
               the data is contained.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               of the data.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </returns>
            <remarks>
               This method is necessary for extracting extra data
               prepended to the frame such as the grouping ID.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="frameData" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Frame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
            <remarks>
               This method is implemented by rendering the current
               instance as an ID3v2.4 frame and using <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.FrameFactory.CreateFrame(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.File,System.Int32@,System.Byte,System.Boolean)" /> to create a new
               frame. As such, this method should be overridden by
               child classes.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.FrameFactory">
            <summary>
               This static class performs the necessary operations to determine
               and create the correct child class of <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> for a
               given raw ID3v2 frame.
            </summary>
            <remarks>
               By default, <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameFactory" /> will only load frames
               contained in the library. To add additional frames to the
               process, register a frame creator with <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.FrameFactory.AddFrameCreator(VisioForge.Libs.TagLib.Id3v2.FrameFactory.FrameCreator)" />.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.FrameFactory.FrameCreator">
            <summary>
               Creates a frame from a specified block of data, or
               returns <see langword="null" /> if unsupported.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw ID3v2
               frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the offset in
               <paramref name="data"/> at which the frame data begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> object for the frame
               contained in <paramref name="data" />.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> specifying the version of ID3v2 the
               raw frame data is stored in.
            </param>
            <returns>
                A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object if the method was able to
                match and create one. Otherwise <see langword="null" />.
            </returns>
            <remarks>
               <para>Frame creators are used to provide access or
               support for items that are left out of TagLib#.</para>
            </remarks>
            <example>
               <code lang="C#">
            public Frame Creator (TagLib.ByteVector data, TagLib.Id3v2.FrameHeader header)
            {
            	if (header.FrameId == "RVRB")
            		return new ReverbFrame (data, header);
            	else
            		return null;
            }
            ...
            TagLib.Id3v2.FrameFactor.AddFrameCreator (ReverbFrame.Creator);
              </code>
            </example>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.FrameFactory.AddFrameCreator(VisioForge.Libs.TagLib.Id3v2.FrameFactory.FrameCreator)" />
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFactory.frame_creators">
            <summary>
               Contains registered frame creators.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.FrameFactory.CreateFrame(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.File,System.Int32@,System.Byte,System.Boolean)">
            <summary>
               Creates a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object by reading it from
               raw ID3v2 frame data.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw ID3v2
               frame.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File"/> object containing
               abstraction of the file to read. 
               Ignored if <paramref name="data"/> is not null.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value reference specifying at what
               index in <paramref name="file" />, or in 
               <paramref name="data" /> if not null,
               at which the frame begins. After reading, it contains 
               the offset of the next frame to be read.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value specifying the ID3v2 version
               the frame in <paramref name="data"/> is encoded in.
            </param>
            <param name="alreadyUnsynched">
               A <see cref="T:System.Boolean" /> value specifying whether the entire
               tag has already been unsynchronized.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object read from the data, or <see
               langword="null" /> if none is found.
            </returns>
            <exception cref="T:System.NotImplementedException">
               The frame contained in the raw data could not be
               converted to ID3v2 or uses encryption or compression.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.FrameFactory.AddFrameCreator(VisioForge.Libs.TagLib.Id3v2.FrameFactory.FrameCreator)">
            <summary>
               Adds a curstom frame creator to try before using standard
               frame creation methods.
            </summary>
            <param name="creator">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameFactory.FrameCreator" /> delegate to be used by the
               frame factory.
            </param>
            <remarks>
               Frame creators are used before standard methods so custom
               checking can be used and new formats can be added. They
               are executed in the reverse order in which they are
               added.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="creator" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.FrameFlags">
            <summary>
               Indicates the flags applied to a <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" />
               object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.None">
            <summary>
               The header contains no flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.TagAlterPreservation">
            <summary>
               Indicates that the frame is to be deleted if the tag is
               altered.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.FileAlterPreservation">
            <summary>
               Indicates that the frame is to be deleted if the file is
               altered.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.ReadOnly">
            <summary>
               Indicates that the frame is read-only and should not be
               altered.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.GroupingIdentity">
            <summary>
               Indicates that the frame has a grouping identity.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.Compression">
            <summary>
               Indicates that the frame data is compressed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.Encryption">
            <summary>
               Indicates that the frame data is encrypted.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.Unsynchronisation">
            <summary>
               Indicates that the frame data has been unsynchronized.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameFlags.DataLengthIndicator">
            <summary>
               Indicates that the frame has a data length indicator.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader">
            <summary>
               This structure provides a representation of an ID3v2 frame header
               which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameHeader.frame_id">
            <summary>
               Contains frame's ID.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.FrameHeader.flags">
            <summary>
               Contains frame's flags.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.FrameHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> by reading it from raw header data
               of a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data to build the new instance from.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               with which the data in <paramref name="data" /> was
               encoded.
            </param>
            <remarks>
               If the data size is smaller than the size of a full
               header, the data is just treated as a frame identifier 
               and the remaining values are zeroed.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is smaller than the size of a
               frame identifier or <paramref name="version" /> is less
               than 2 or more than 4.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.FrameHeader.FrameId">
            <summary>
               Gets and sets the identifier of the frame described by
               the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> object containing the
               identifier of the frame described by the current
               instance.
            </value>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="value" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.FrameHeader.FrameSize">
            <summary>
               Gets and sets the size of the frame described by the
               current instance, minus the header.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               frame described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.FrameHeader.Flags">
            <summary>
               Gets and sets the flags applied to the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.Id3v2.HeaderFlags" /> value
               containing the flags applied to the current instance.
            </value>
            <exception cref="T:System.ArgumentException">
               <paramref name="value" /> contains a either compression
               or encryption, neither of which are supported by the
               library.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.FrameHeader.Render(System.Byte)">
            <summary>
               Renders the current instance, encoded in a specified
               ID3v2 version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> value specifying the version of
               ID3v2 to use when encoding the current instance.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
            <exception cref="T:System.NotImplementedException">
               The version specified in the current instance is
               unsupported.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.FrameHeader.Size(System.Byte)">
            <summary>
               Gets the size of a header for a specified ID3v2 version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> value specifying the version of
               ID3v2 to get the size for.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Attached Picture (APIC), ID3v2 General Encapsulated 
               Object (GEOB) and Frames.
            </summary>
            <remarks>
               <para>A <see cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> is used for storing
               any file (picture or other types) that complement. 
               This is typically (but not only limited to) the album cover,
               the physical medium, leaflets, file icons or other files and
               object data.</para>
               <para>Additionally, <see cref="P:VisioForge.Libs.TagLib.Tag.Pictures" /> provides a
               generic way or getting and setting pictures/files which is 
               preferable to format specific code.</para>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.encoding">
            <summary>
               Contains the text encoding to use when rendering.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.mime_type">
            <summary>
               Contains the mime type of <see cref="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.data" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.type">
            <summary>
               Contains the type of picture.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.filename">
            <summary>
               Contains the filename.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.description">
            <summary>
               Contains the description.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.data">
            <summary>
               Contains the picture data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.raw_data">
            <summary>
               Contains the raw field data of the current instance as
               sent to <see cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)" /> or <see
               langword="null" /> if <see cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)" /> has not
               been called or <see cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ParseRawData" /> has been
               called.
            </summary>
            <remarks>
               As this frame takes a while to parse and isn't read in
               all cases, the raw data is stored here until it is
               needed. This speeds up the file read time significantly.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.raw_version">
            <summary>
               Contains the ID3v2 version <see cref="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.raw_data" /> is
               stored in.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.file">
            <summary>
            Stream where the picture is located
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.stream_offset">
            <summary>
            Offset from where the picture start in the <see cref="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.file"/>
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.stream_size">
            <summary>
            Size of the picture in the <see cref="F:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.file"/> (-1 = until end of Stream)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> with no contents and the
               default values.
            </summary>
            <remarks>
               <para>When a frame is created, it is not automatically
               added to the tag. Consider using <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.PictureType,System.Boolean)" /> for more
               integrated frame creation.</para>
               <para>Additionally, <see cref="P:VisioForge.Libs.TagLib.Tag.Pictures" />
               provides a generic way or getting and setting
               attachments which is preferable to format specific
               code.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.#ctor(VisioForge.Libs.TagLib.IPicture)">
             <summary>
                Constructs and initializes a new instance of <see
                cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> by populating it with
                the contents of another <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object.
             </summary>
             <param name="picture">
                A <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object containing values to use
                in the new instance.
             </param>
             <exception cref="T:System.ArgumentNullException">
                <paramref name="picture" /> is <see langword="null" />.
             </exception>
             <remarks>
                <para>When a frame is created, it is not automatically
                added to the tag. Consider using <see
                cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.PictureType,System.Boolean)" /> for more
                integrated frame creation.</para>
                <para>Additionally, <see cref="P:VisioForge.Libs.TagLib.Tag.Pictures" />
                provides a generic way or getting and setting
                attachments which is preferable to format specific
                code.</para>
             </remarks>
             <example>
                <para>Add a picture to a file.</para>
                <code lang="C#">
             using TagLib;
             using TagLib.Id3v2;
            
             public static class AddId3v2Picture
             {
             	public static void Main (string [] args)
             	{
             		if (args.Length != 2)
             			throw new ApplicationException (
             				"USAGE: AddId3v2Picture.exe AUDIO_FILE PICTURE_FILE");
            
             		// Create the file. Can throw file to TagLib# exceptions.
             		File file = File.Create (args [0]);
            
             		// Get or create the ID3v2 tag.
             		TagLib.Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, true) as TagLib.Id3v2.Tag;
             		if (tag == null)
             			throw new ApplicationException ("File does not support ID3v2 tags.");
            
             		// Create a picture. Can throw file related exceptions.
            			TagLib.Picture picture = TagLib.Picture.CreateFromPath (path);
            
             		// Add a new picture frame to the tag.
             		tag.AddFrame (new AttachedPictureFrame (picture));
            
             		// Save the file.
             		file.Save ();
             	}
             }
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> by reading its raw data in
               a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,System.Int64,System.Int64,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> from a file.
               The content will be lazily loaded.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> object containing
               abstraction of the file to read.
            </param>
            <param name="offset">
               The position in bytes where the picture is located in the
               <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/>.
            </param>
            <param name="size">
               The size in bytes of the picture in the
               <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> (-1 : read all).
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when storing the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the text encoding to
               use when storing the current instance.
            </value>
            <remarks>
               This encoding is overridden when rendering if <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is <see
               langword="true" /> or the render version does not support
               it.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.MimeType">
            <summary>
               Gets and sets the mime-type of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the mime-type of the
               picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Type">
            <summary>
               Gets and sets the object type stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> containing the object type
               stored in the current instance.
            </value>
            <remarks>
               For a General Object Frame, use: 
               <see cref="F:VisioForge.Libs.TagLib.PictureType.NotAPicture" />.
               Other types will make it a Picture Frame
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Filename">
            <summary>
               Gets and sets a filename of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a fielname, with
               extension, of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Description">
            <summary>
               Gets and sets the description stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the description
               stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description and type per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Data">
            <summary>
               Gets and sets the image data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the image data
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.IsLoaded">
            <summary>
               Gets an indication whether the object is loaded.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> representing the current
               instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified picture frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> object containing
               the matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.PictureType,System.Boolean)">
            <summary>
               Gets a specified picture frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> specifying the picture type
               to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> object containing
               the matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.PictureType,System.Boolean)">
             <summary>
                Gets a specified attachment frame from the specified tag,
                optionally creating it if it does not exist.
             </summary>
             <param name="tag">
                A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
             </param>
             <param name="description">
                A <see cref="T:System.String" /> specifying the description to
                match.
             </param>
             <param name="type">
                A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> specifying the picture type
                to match.
             </param>
             <param name="create">
                A <see cref="T:System.Boolean" /> specifying whether or not to create
                and add a new frame to the tag if a match is not found.
             </param>
             <returns>
                A <see cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> object containing
                the matching frame, or <see langword="null" /> if a match
                wasn't found and <paramref name="create" /> is <see
                langword="false" />.
             </returns>
             <example>
                <para>Sets a cover image with a description. Because <see
                cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.PictureType,System.Boolean)" /> is used, if
                the program is called again with the same audio file and
                desciption, the picture will be overwritten with the new
                one.</para>
                <code lang="C#">
             using TagLib;
             using TagLib.Id3v2;
            
             public static class SetId3v2Cover
             {
             	public static void Main (string [] args)
             	{
             		if (args.Length != 3)
             			throw new ApplicationException (
             				"USAGE: SetId3v2Cover.exe AUDIO_FILE PICTURE_FILE DESCRIPTION");
            
             		// Create the file. Can throw file to TagLib# exceptions.
             		File file = File.Create (args [0]);
            
             		// Get or create the ID3v2 tag.
             		TagLib.Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, true) as TagLib.Id3v2.Tag;
             		if (tag == null)
             			throw new ApplicationException ("File does not support ID3v2 tags.");
            
             		// Create a picture. Can throw file related exceptions.
            		TagLib.Picture picture = TagLib.Picture.CreateFromPath (args [1]);
            
             		// Get or create the picture frame.
             		AttachedPictureFrame frame = AttachedPictureFrame.Get (
             			tag, args [2], PictureType.FrontCover, true);
            
             		// Set the data from the picture.
             		frame.MimeType = picture.MimeType;
             		frame.Data     = picture.data;
             		
             		// Save the file.
             		file.Save ();
             	}
             }
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Load">
            <summary>
            Load the picture data from the file,
            if not done yet.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 5 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ParseRawData">
            <summary>
               Performs the actual parsing of the raw data.
            </summary>
            <remarks>
               Because of the high parsing cost and relatively low usage
               of the class, <see cref="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)" /> only stores the
               field data so it can be parsed on demand. Whenever a
               property or method is called which requires the data,
               this method is called, and only on the first call does it
               actually parse the data.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.AttachedPictureFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Attached Picture (APIC) Frames.
            </summary>
            <remarks>
               <para>A <see cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> is used for storing
               pictures that complement the media, including the album cover,
               the physical medium, leaflets, file icons, etc. Other file and
               object data can be encapulsated via <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame" />.</para>
               <para>Additionally, <see cref="P:VisioForge.Libs.TagLib.Tag.Pictures" /> provides a
               generic way or getting and setting pictures which is preferable
               to format specific code.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachedPictureFrame.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> with no contents and the
               default values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachedPictureFrame.#ctor(VisioForge.Libs.TagLib.IPicture)">
             <summary>
                Constructs and initializes a new instance of <see
                cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> by populating it with
                the contents of another <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object.
             </summary>
             <param name="picture">
                A <see cref="T:VisioForge.Libs.TagLib.IPicture" /> object containing values to use
                in the new instance.
             </param>
             <exception cref="T:System.ArgumentNullException">
                <paramref name="picture" /> is <see langword="null" />.
             </exception>
             <example>
                <para>Add a picture to a file.</para>
                <code lang="C#">
             using TagLib;
             using TagLib.Id3v2;
            
             public static class AddId3v2Picture
             {
             	public static void Main (string [] args)
             	{
             		if (args.Length != 2)
             			throw new ApplicationException (
             				"USAGE: AddId3v2Picture.exe AUDIO_FILE PICTURE_FILE");
            
             		// Create the file. Can throw file to TagLib# exceptions.
             		File file = File.Create (args [0]);
            
             		// Get or create the ID3v2 tag.
             		TagLib.Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, true) as TagLib.Id3v2.Tag;
             		if (tag == null)
             			throw new ApplicationException ("File does not support ID3v2 tags.");
            
             		// Create a picture. Can throw file related exceptions.
            			TagLib.Picture picture = TagLib.Picture.CreateFromPath (path);
            
             		// Add a new picture frame to the tag.
             		tag.AddFrame (new AttachedPictureFrame (picture));
            
             		// Save the file.
             		file.Save ();
             	}
             }
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachedPictureFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> by reading its raw data in
               a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.AttachedPictureFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.AttachmentFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 General Encapsulated Object (GEOB) Frames.
            </summary>
            <remarks>
               <para>A <see cref="T:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame" /> should be
               used for storing files and other objects relevant to the file but
               not supported by other frames.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame" /> with no
               contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame" /> by reading its
               raw data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame" /> by reading its
               raw data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame.FileName">
            <summary>
               Gets and sets the file name of the object stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the file name of the
               object stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.GeneralEncapsulatedObjectFrame.Object">
            <summary>
               Gets and sets the object data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the object data
               stored in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Comments (COMM) Frames.
            </summary>
            <remarks>
               <para>A <see cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> should be used for storing
               user readable comments on the media file.</para>
               <para>When reading comments from a file, <see cref="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.GetPreferred(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String)"
               /> should be used as it gracefully falls back to comments that
               you, as a developer, may not be expecting. When writing comments,
               however, it is best to use <see cref="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> as it forces it to
               be written in the exact version you are expecting.</para>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.language">
            <summary>
               Contains the text encoding to use when rendering the
               current instance.
            </summary>
            <summary>
               Contains the ISO-639-2 language code of the current
               instance.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.description">
            <summary>
               Contains the description of the current instance.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.text">
            <summary>
               Contains the comment text of the current instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.#ctor(System.String,System.String,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> with a specified description,
               ISO-639-2 language code, and text encoding.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code of the new frame.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> containing the text encoding
               to use when rendering the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.#ctor(System.String,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> with a specified description and
               ISO-639-2 language code.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code of the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> with a specified description.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when storing the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the text encoding to
               use when storing the current instance.
            </value>
            <remarks>
               This encoding is overridden when rendering if <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is <see
               langword="true" /> or the render version does not support
               it.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Language">
            <summary>
               Gets and sets the ISO-639-2 language code stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code stored in the current instance.
            </value>
            <remarks>
               There should only be one file with a matching description
               and ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Description">
            <summary>
               Gets and sets the description stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the description
               stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description and ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Text">
            <summary>
               Gets and sets the comment text stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the comment text
               stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the comment text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)">
            <summary>
               Gets a specified comments frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> specifying the ISO-639-2 language
              code to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.GetPreferred(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String)">
            <summary>
               Gets a specified comments frame from the specified tag,
               trying to to match the description and language but
               accepting an incomplete match.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> specifying the ISO-639-2 language
              code to match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.CommentsFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found.
            </returns>
            <remarks>
               <para>The method tries matching with the following order
               of precidence:</para>
               <list type="number">
                  <item><term>The first frame with a matching
                  description and language.</term></item>
                  <item><term>The first frame with a matching
                  language.</term></item>
                  <item><term>The first frame with a matching
                  description.</term></item>
                  <item><term>The first frame.</term></item>
               </list>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.CommentsFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame">
             <summary>
                This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
                ID3v2 Event Time Codes (ETCO) Frames.
             </summary>
             <remarks>
                Event time codes Frames should contain a list of events occurring 
                throughout the track such as the start of the main part and the end of it.
                To see all available event types see <see cref="T:VisioForge.Libs.TagLib.Id3v2.EventType"/>.
             </remarks>
             <example>
                <para>Reading the Event Time Codes from a tag.</para>
                <code lang="C#">
             using TagLib;
             using TagLib.Id3v2;
             
             public static class LookupUtil
             {
             	public static ByteVector GetTrackEvents(string filename)
             	{
             		File file = File.Create (filename, ReadStyle.None);
             		Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, false) as Id3v2.Tag;
             		if (tag == null)
             			return new ByteVector ();
             		
             		EventTimeCodesFrame frame = EventTimeCodesFrame.Get (tag, false);
             		if (frame == null)
             			return new ByteVector ();
            
             		return frame.Data;
             	}
             }
                </code>
                <code lang="C++">
             #using &lt;System.dll>
             #using &lt;taglib-sharp.dll>
            
             using System;
             using TagLib;
             using TagLib::Id3v2;
             
             public ref class LookupUtil abstract sealed
             {
             public:
             	static ByteVector^ GetTrackEvents (String^ filename)
             	{
             		File^ file = File::Create (filename, ReadStyle::None);
             		Id3v2::Tag^ tag = dynamic_cast&lt;Id3v2::Tag^> (file.GetTag (TagTypes::Id3v2, false));
             		if (tag == null)
             			return gcnew ByteVector;
             		
             		EventTimeCodesFrame^ frame = EventTimeCodesFrame::Get (tag, false);
             		if (frame == null)
             			return gcnew ByteVector;
            
             		return frame->Data;
             	}
             }
                </code>
                <code lang="VB">
             Imports TagLib
             Imports TagLib.Id3v2
             
             Public Shared Class LookupUtil
             	Public Shared Sub GetTrackEvents (filename As String) As TagLib.ByteVector
             		Dim file As File = File.Create (filename, ReadStyle.None)
             		Dim tag As Id3v2.Tag = file.GetTag (TagTypes.Id3v2, False)
             		If tag Is Nothing Return New ByteVector ()
             		
             		Dim frame As EventTimeCodesFrame = EventTimeCodesFrame.Get (tag, False)
             		If frame Is Nothing Return New ByteVector ()
            
             		Return frame.Data
             	End Sub
             End Class
                </code>
                <code lang="Boo">
             import TagLib
             import TagLib.Id3v2
             
             public static class LookupUtil:
             	static def GetTrackEvents (filename as string) as TagLib.ByteVector:
             		file as File = File.Create (filename, ReadStyle.None)
             		tag as Id3v2.Tag = file.GetTag (TagTypes.Id3v2, false)
             		if tag == null:
             			return ByteVector ()
             		
             		frame as EventTimeCodesFrame = EventTimeCodesFrame.Get (tag, false)
             		if frame == null:
             			return ByteVector ()
            
             		return frame.Data
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame" /> with empty
               identifier data.
            </summary>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.#ctor(VisioForge.Libs.TagLib.Id3v2.TimestampFormat)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="timestampFormat">
               A <see cref="P:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.TimestampFormat" /> Specifies the time unit to use in this frame.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.#ctor(VisioForge.Libs.TagLib.Id3v2.FrameHeader)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="frameHeader">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the frame
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.TimestampFormat">
            <summary>
            Gets or sets the timestamp format for this frame instance.
            </summary>
            <value>
            A <see cref="P:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.TimestampFormat"/> that will be used in this frame instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.Events">
            <summary>
            Gets or sets the events this frame contains.
            Each <see cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCode"/> represents a single event at a certain point in time.
            </summary>
            <value>
            A <see cref="T:System.Collections.Generic.List`1"/> that are stored in this frame instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.Boolean)">
            <summary>
               Gets a play count frame from a specified tag, optionally
               creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame">
             <summary>
                This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
                ID3v2 Music CD Identifier (MCDI) Frames.
             </summary>
             <remarks>
                Music CD Identifier Frames should contain the table of
                contents data as stored on the physical CD. It is primarily used
                for track information lookup by through web sources like CDDB.
             </remarks>
             <example>
                <para>Reading the music CD identifier from a tag.</para>
                <code lang="C#">
             using TagLib;
             using TagLib.Id3v2;
             
             public static class LookupUtil
             {
             	public static ByteVector GetCdIdentifier (string filename)
             	{
             		File file = File.Create (filename, ReadStyle.None);
             		Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, false) as Id3v2.Tag;
             		if (tag == null)
             			return new ByteVector ();
             		
             		MusicCdIdentifierFrame frame = MusicCdIdentifierFrame.Get (tag, false);
             		if (frame == null)
             			return new ByteVector ();
            
             		return frame.Data;
             	}
             }
                </code>
                <code lang="C++">
             #using &lt;System.dll>
             #using &lt;taglib-sharp.dll>
            
             using System;
             using TagLib;
             using TagLib::Id3v2;
             
             public ref class LookupUtil abstract sealed
             {
             public:
             	static ByteVector^ GetCdIdentifier (String^ filename)
             	{
             		File^ file = File::Create (filename, ReadStyle::None);
             		Id3v2::Tag^ tag = dynamic_cast&lt;Id3v2::Tag^> (file.GetTag (TagTypes::Id3v2, false));
             		if (tag == null)
             			return gcnew ByteVector;
             		
             		MusicCdIdentifierFrame^ frame = MusicCdIdentifierFrame::Get (tag, false);
             		if (frame == null)
             			return gcnew ByteVector;
            
             		return frame->Data;
             	}
             }
                </code>
                <code lang="VB">
             Imports TagLib
             Imports TagLib.Id3v2
             
             Public Shared Class LookupUtil
             	Public Shared Sub GetCdIdentifier (filename As String) As TagLib.ByteVector
             		Dim file As File = File.Create (filename, ReadStyle.None)
             		Dim tag As Id3v2.Tag = file.GetTag (TagTypes.Id3v2, False)
             		If tag Is Nothing Return New ByteVector ()
             		
             		Dim frame As MusicCdIdentifierFrame = MusicCdIdentifierFrame.Get (tag, False)
             		If frame Is Nothing Return New ByteVector ()
            
             		Return frame.Data
             	End Sub
             End Class
                </code>
                <code lang="Boo">
             import TagLib
             import TagLib.Id3v2
             
             public static class LookupUtil:
             	static def GetCdIdentifier (filename as string) as TagLib.ByteVector:
             		file as File = File.Create (filename, ReadStyle.None)
             		tag as Id3v2.Tag = file.GetTag (TagTypes.Id3v2, false)
             		if tag == null:
             			return ByteVector ()
             		
             		frame as MusicCdIdentifierFrame = MusicCdIdentifierFrame.Get (tag, false)
             		if frame == null:
             			return ByteVector ()
            
             		return frame.Data
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame" /> with empty
               identifier data.
            </summary>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.Data">
            <summary>
               Gets and sets the identifier data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the identifier
               data stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.Boolean)">
            <summary>
               Gets a music CD identifier frame from a specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame" /> object containing
               the matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.MusicCdIdentifierFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame">
             <summary>
                This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
                ID3v2 Play Count (PCNT) Frames.
             </summary>
             <example>
                <para>Getting and incrementing the play count of a file.</para>
                <code lang="C#">
             using TagLib;
             using TagLib.Id3v2;
            
             public static class TrackUtil
             {
             	public static int GetPlayCount (string filename)
             	{
             		File file = File.Create (filename, ReadStyle.None);
             		Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, false) as Id3v2.Tag;
             		if (tag == null)
             			return 0;
             		
             		PlayCountFrame frame = PlayCountFrame.Get (tag, false);
             		if (frame == null)
             			return 0;
            
             		return frame.PlayCount;
             	}
             	
             	public static void IncrementPlayCount (string filename)
             	{
             		File file = File.Create (filename, ReadStyle.None);
             		Id3v2.Tag tag = file.GetTag (TagTypes.Id3v2, true) as Id3v2.Tag;
             		if (tag == null)
             			return;
             		
             		PlayCountFrame.Get (tag, true).PlayCount ++;
             		file.Save ();
             	}
             }
                </code>
                <code lang="C++">
             #using &lt;System.dll>
             #using &lt;taglib-sharp.dll>
            
             using System;
             using TagLib;
             using TagLib::Id3v2;
            
             public ref class TrackUtil abstract sealed
             {
             public:
             	static int GetPlayCount (String^ filename)
             	{
             		File^ file = File.Create (filename, ReadStyle.None);
             		Id3v2::Tag^ tag = dynamic_cast&lt;Id3v2::Tag^> (file.GetTag (TagTypes::Id3v2, false));
             		if (tag == null)
             			return 0;
             		
             		PlayCountFrame^ frame = PlayCountFrame::Get (tag, false);
             		if (frame == null)
             			return 0;
            
             		return frame->PlayCount;
             	}
             	
             	static void IncrementPlayCount (String^ filename)
             	{
             		File^ file = File::Create (filename, ReadStyle::None);
             		Id3v2.Tag^ tag = dynamic_cast&lt;Id3v2::Tag^> (file.GetTag (TagTypes::Id3v2, true));
             		if (tag == null)
             			return;
             		
             		PlayCountFrame::Get (tag, true)->PlayCount ++;
             		file->Save ();
             	}
             }
                </code>
                <code lang="VB">
             Imports TagLib
             Imports TagLib.Id3v2
            
             Public Shared Class TrackUtil
             	Public Shared Sub GetPlayCount (filename As String) As Integer
             		Dim file As File = File.Create (filename, ReadStyle.None)
             		Dim tag As Id3v2.Tag = file.GetTag (TagTypes.Id3v2, False)
             		If tag Is Nothing Then Return 0
             		
             		Dim frame As PlayCountFrame = PlayCountFrame.Get (tag, False)
            		If frame Is Nothing Then Return 0
            
             		Return frame.PlayCount
             	End Sub
            
            	Public Shared Sub IncrementPlayCount (filename As String)
             		Dim file As File = File.Create (filename, ReadStyle.None)
             		Dim tag As Id3v2.Tag = file.GetTag (TagTypes.Id3v2, True)
             		If tag Is Nothing Then Exit Sub
             		
             		PlayCountFrame.Get (tag, True).PlayCount += 1
             		file.Save ()
             	End Sub
             End Class
                </code>
                <code lang="Boo">
             import TagLib
             import TagLib.Id3v2
             
             public static class TrackUtil:
             	static def GetPlayCount (filename as string) as int:
             		file As File = File.Create (filename, ReadStyle.None)
             		tag as Id3v2.Tag = file.GetTag (TagTypes.Id3v2, false)
            		if tag == null:
             			return 0
             		
             		frame as PlayCountFrame = PlayCountFrame.Get (tag, false)
             		if frame == null:
            			return 0
            
             		return frame.PlayCount
            
            	static def IncrementPlayCount (filename as string):
             		file as File = File.Create (filename, ReadStyle.None)
             		tag as Id3v2.Tag = file.GetTag (TagTypes.Id3v2, True)
            		if tag == null:
             			return
             		
             		PlayCountFrame.Get (tag, true).PlayCount ++
             		file.Save ()
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame" /> with a count of zero.
            </summary>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.PlayCount">
            <summary>
               Gets and sets the play count of the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> containing the play count of the
               current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.Boolean)">
            <summary>
               Gets a play count frame from a specified tag, optionally
               creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PlayCountFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Popularimeter (POPM) Frames.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.user">
            <summary>
               Contains the email of the user this frame belongs to.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame" /> for a specified user with a
               rating and play count of zero.
            </summary>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.User">
            <summary>
               Gets and sets the user to whom the current instance
               belongs.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the user to whom the
               current instance belongs.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.Rating">
            <summary>
               Gets and sets the rating of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> containing the rating of the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.PlayCount">
            <summary>
               Gets and sets the play count of the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt64" /> containing the play count of the
               current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a popularimeter frame from a specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="user">
               A <see cref="T:System.String" /> containing the user to search for
               in the current instance.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PopularimeterFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame">
             <summary>
                This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
                ID3v2 Private (PRIV) Frames.
             </summary>
             <remarks>
                <para>A <see cref="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame" /> should be used for storing
                values specific to the application that cannot or should not be
                stored in another frame type.</para>
             </remarks>
             <example>
                <para>Serializing a database entry and storing it in a private
                field.</para>
                <code lang="C#">
             using System;
             using System.IO;
             using System.Runtime.Serialization;
             using System.Text;
             using System.Xml.Serialization;
             using TagLib.Id3v2;
            
             public static class DbUtil
             {
             	public static void StoreDatabaseEntry (Tag tag, ISerializable dbEntry)
             	{
             		StringWriter data = new StringWriter (new StringBuilder ());
             		XmlSerializer serializer = new XmlSerializer (dbEntry.GetType ());
             		serializer.Serialize (data, dbEntry);
             		PrivateFrame frame = PrivateFrame.Get (tag, "org.MyProgram.DatabaseEntry", true);
             		frame.PrivateData = Encoding.UTF8.GetBytes (data.ToString ());
             	}
             	
             	public static object GetDatabaseEntry (Tag tag, Type type)
             	{
             		PrivateFrame frame = PrivateFrame.Get (tag, "org.MyProgram.DatabaseEntry", false);
             		if (frame == null)
             			return null;
             	
             		XmlSerializer serializer = new XmlSerializer (type);
             		return serializer.Deserialize (new MemoryStream (frame.PrivateData));
             	}
             }
                </code>
                <code lang="C++">
             #using &lt;System.dll>
             #using &lt;System.Xml.dll>
             #using &lt;taglib-sharp.dll>
             
             using System;
             using System::IO;
             using System::Runtime::Serialization;
             using System::Text;
             using System::Xml::Serialization;
             using TagLib::Id3v2;
             
             public ref class DbUtil abstract sealed
             {
             public:
             	static void StoreDatabaseEntry (Tag^ tag, ISerializable^ dbEntry)
             	{
             		StringWriter^ data = gcnew StringWriter (gcnew StringBuilder);
             		XmlSerializer serializer = gcnew XmlSerializer (dbEntry->GetType ());
             		serializer->Serialize (data, dbEntry);
             		PrivateFrame frame = PrivateFrame::Get (tag, L"org.MyProgram.DatabaseEntry", true);
             		frame.PrivateData = Encoding::UTF8->GetBytes (data->ToString ());
             	}
             	
             	static Object^ GetDatabaseEntry (Tag^ tag, Type^ type)
             	{
             		PrivateFrame^ frame = PrivateFrame::Get (tag, L"org.MyProgram.DatabaseEntry", false);
             		if (frame == null)
             			return null;
             	
             		XmlSerializer serializer = gcnew XmlSerializer (type);
             		return serializer->Deserialize (gcnew MemoryStream (frame->PrivateData));
             	}
             }
                </code>
                <code lang="VB">
             Imports System
             Imports System.IO
             Imports System.Runtime.Serialization
             Imports System.Text
             Imports System.Xml.Serialization
             Imports TagLib.Id3v2
            
             Public Shared Class DbUtil
             	Public Shared Sub StoreDatabaseEntry (tag As Tag, dbEntry As ISerializable)
             		Dim data As New StringWriter (New StringBuilder ())
             		Dim serializer As New XmlSerializer (dbEntry.GetType ())
             		serializer.Serialize (data, dbEntry)
             		Dim frame As PrivateFrame = PrivateFrame.Get (tag, "org.MyProgram.DatabaseEntry", True)
             		frame.PrivateData = Encoding.UTF8.GetBytes (data.ToString ())
             	End Sub
             	
             	Public Shared Sub GetDatabaseEntry (tag As Tag, type As Type)
             		Dim frame As PrivateFrame = PrivateFrame.Get (tag, "org.MyProgram.DatabaseEntry", False)
             		If frame Is Nothing Then Return Nothing
             	
             		Dim serializer As XmlSerializer = New XmlSerializer (type)
             		Return serializer.Deserialize (New MemoryStream (frame.PrivateData))
             	End Sub
             End Class
                </code>
                <code lang="Boo">
             import System
             import System.IO
             import System.Runtime.Serialization
             import System.Text
             import System.Xml.Serialization
             import TagLib.Id3v2
             
             public static class DbUtil:
             	static def StoreDatabaseEntry (tag as Tag, dbEntry as ISerializable):
             		data as StringWriter = StringWriter (StringBuilder ())
             		serializer as XmlSerializer = XmlSerializer (dbEntry.GetType ())
             		serializer.Serialize (data, dbEntry)
             		frame as PrivateFrame = PrivateFrame.Get (tag, "org.MyProgram.DatabaseEntry", true)
             		frame.PrivateData = Encoding.UTF8.GetBytes (data.ToString ())
            	
             	static def GetDatabaseEntry (tag As Tag, type As Type):
             		frame as PrivateFrame = PrivateFrame.Get (tag, "org.MyProgram.DatabaseEntry", false)
             		if frame == null:
            			return null
             		
             		serializer as XmlSerializer = XmlSerializer (type)
             		return serializer.Deserialize (MemoryStream (frame.PrivateData))
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.#ctor(System.String,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame" /> for a specified owner and data.
            </summary>
            <param name="owner">
               A <see cref="T:System.String" /> containing the owner of the new
               frame.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               for the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame" /> without data for a specified
               owner.
            </summary>
            <param name="owner">
               A <see cref="T:System.String" /> containing the owner of the new
               frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.Owner">
            <summary>
               Gets the owner of the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the owner of the
               current instance.
            </value>
            <remarks>
               There should only be one frame with a given owner per
               tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.PrivateData">
            <summary>
               Gets and sets the private data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the private data
               stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified private frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="owner">
               A <see cref="T:System.String" /> specifying the owner to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.PrivateFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
            <exception cref="T:System.NotImplementedException">
               <paramref name="version" /> is less than 3. ID3v2.2 does
               not support this frame.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.PrivateFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.ChannelType">
            <summary>
               Specified the type of channel data to get from or set to a
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame" /> object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.Other">
            <summary>
               The channel data is for some other speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.MasterVolume">
            <summary>
               The channel data is for the master volume.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.FrontRight">
            <summary>
               The channel data is for the front right speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.FrontLeft">
            <summary>
               The channel data is for the front left speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.BackRight">
            <summary>
               The channel data is for the back right speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.BackLeft">
            <summary>
               The channel data is for the back left speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.FrontCentre">
            <summary>
               The channel data is for the front center speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.BackCentre">
            <summary>
               The channel data is for the back center speaker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.ChannelType.Subwoofer">
            <summary>
               The channel data is for the subwoofer.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Relative Volume (RVA2) Frames.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.channels">
            <summary>
               Contains the channel data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame" /> with a specified
               identifier.
            </summary>
            <param name="identification">
               A <see cref="T:System.String" /> object containing the
               identification to use for the new frame.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame" /> by reading its raw data in
               a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame" /> by reading its raw data in
               a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.Identification">
            <summary>
               Gets the identification used for the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the
               identification used for the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.Channels">
            <summary>
               Gets a list of the channels in the current instance that
               contain a value.
            </summary>
            <value>
               A <see cref="T:ChannelType[]" /> containing the channels
               which have a value set in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.ToString">
            <summary>
               Creates a text description of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> object containing a description
               of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetVolumeAdjustmentIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType)">
            <summary>
               Gets the volume adjustment index for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to get the value for.
            </param>
            <returns>
               A <see cref="T:System.Int16" /> value containing the volume
               adjustment index.
            </returns>
            <remarks>
               The volume adjustment index is simply the volume
               adjustment multiplied by 512.
            </remarks>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetVolumeAdjustmentIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Int16)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetVolumeAdjustment(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetVolumeAdjustmentIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Int16)">
            <summary>
               Sets the volume adjustment index for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to set the value for.
            </param>
            <param name="index">
               A <see cref="T:System.Int16" /> value containing the volume
               adjustment index.
            </param>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetVolumeAdjustmentIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetVolumeAdjustment(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Single)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetVolumeAdjustment(VisioForge.Libs.TagLib.Id3v2.ChannelType)">
            <summary>
               Gets the volume adjustment for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to get the value for.
            </param>
            <returns>
               A <see cref="T:System.Single" /> value containing the volume
               adjustment in decibles.
            </returns>
            <remarks>
               The value can be between -64dB and +64dB.
            </remarks>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetVolumeAdjustment(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Single)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetVolumeAdjustmentIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetVolumeAdjustment(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Single)">
            <summary>
               Sets the volume adjustment for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to set the value for.
            </param>
            <param name="adjustment">
               A <see cref="T:System.Single" /> value containing the volume
               adjustment in decibles.
            </param>
            <remarks>
               The value can be between -64dB and +64dB.
            </remarks>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetVolumeAdjustment(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetVolumeAdjustmentIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Int16)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetPeakVolumeIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType)">
            <summary>
               Gets the peak volume index for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to get the value for.
            </param>
            <returns>
               A <see cref="T:System.UInt64" /> value containing the peak volume
               index.
            </returns>
            <remarks>
               The peak volume index is simply the peak volume
               multiplied by 512.
            </remarks>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetPeakVolumeIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.UInt64)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetPeakVolume(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetPeakVolumeIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.UInt64)">
            <summary>
               Sets the peak volume index for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to set the value for.
            </param>
            <param name="index">
               A <see cref="T:System.UInt64" /> value containing the peak volume
               index.
            </param>
            <remarks>
               The peak volume index is simply the peak volume
               multiplied by 512.
            </remarks>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetPeakVolumeIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetPeakVolume(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Double)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetPeakVolume(VisioForge.Libs.TagLib.Id3v2.ChannelType)">
            <summary>
               Gets the peak volume for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to get the value for.
            </param>
            <returns>
               A <see cref="T:System.Double" /> value containing the peak volume.
            </returns>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetPeakVolume(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Double)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetPeakVolumeIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetPeakVolume(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.Double)">
            <summary>
               Sets the peak volume for a specified channel.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.ChannelType" /> value specifying which
               channel to set the value for.
            </param>
            <param name="peak">
               A <see cref="T:System.Double" /> value containing the peak volume.
            </param>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.GetPeakVolume(VisioForge.Libs.TagLib.Id3v2.ChannelType)"/>
            <seealso cref="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.SetPeakVolumeIndex(VisioForge.Libs.TagLib.Id3v2.ChannelType,System.UInt64)"/>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified volume adjustment frame from the
               specified tag, optionally creating it if it does not
               exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="identification">
               A <see cref="T:System.String" /> specifying the identification to
               match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame" /> object containing
               the matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 5 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.RelativeVolumeFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Synchronised Lyrics and Text (SYLT) Frames.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.language">
            <summary>
               Contains the ISO-639-2 language code.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.text">
            <summary>
               Contains the text.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.#ctor(System.String,System.String,VisioForge.Libs.TagLib.Id3v2.SynchedTextType,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> with a specified
               description, ISO-639-2 language code, text type, and text
               encoding.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> object containing the description
               of the new instnace.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> object containing the ISO-639-2
               language code of the new instance.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.SynchedTextType" /> containing the type of
               text to be stored in the new instance.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> containing the text encoding
               to use when rendering the new instance.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,VisioForge.Libs.TagLib.Id3v2.SynchedTextType,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.#ctor(System.String,System.String,VisioForge.Libs.TagLib.Id3v2.SynchedTextType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> with a specified
               description, ISO-639-2 language code, and text type.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> object containing the description
               of the new instnace.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> object containing the ISO-639-2
               language code of the new instance.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.SynchedTextType" /> containing the type of
               text to be stored in the new instance.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,VisioForge.Libs.TagLib.Id3v2.SynchedTextType,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new instance.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> by reading its raw data
               in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new instance.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when storing the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the text encoding to
               use when storing the current instance.
            </value>
            <remarks>
               This encoding is overridden when rendering if <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is <see
               langword="true" /> or the render version does not support
               it.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Language">
            <summary>
               Gets and sets the ISO-639-2 language code stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description, type, and ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Description">
            <summary>
               Gets and sets the description stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the description
               stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description, type, and ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Format">
            <summary>
               Gets and sets the timestamp format used by the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TimestampFormat" /> value describing the
               timestamp format used by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Type">
            <summary>
               Gets and sets the type of text contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TimestampFormat" /> value describing the
               type of text contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Text">
            <summary>
               Gets and sets the text contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:SynchedText[]" /> containing the text
               contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,VisioForge.Libs.TagLib.Id3v2.SynchedTextType,System.Boolean)">
            <summary>
               Gets a specified lyrics frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> object specifying the description
               to match.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> object specifying the ISO-639-2
               language code to match.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.SynchedTextType" /> value specifying the
               text type to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.GetPreferred(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,VisioForge.Libs.TagLib.Id3v2.SynchedTextType)">
            <summary>
               Gets a specified lyrics frame from the specified tag,
               trying to to match the description and language but
               accepting an incomplete match.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> object specifying the description
               to match.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> object specifying the ISO-639-2
               language code to match.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.SynchedTextType" /> value specifying the
               text type to match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found.
            </returns>
            <remarks>
               <para>The method tries matching with the following order
               of precidence:</para>
               <list type="number">
                  <item><term>The first frame with a matching
                  description, language, and type.</term></item>
                  <item><term>The first frame with a matching
                  description and language.</term></item>
                  <item><term>The first frame with a matching
                  language.</term></item>
                  <item><term>The first frame with a matching
                  description.</term></item>
                  <item><term>The first frame with a matching
                  type.</term></item>
                  <item><term>The first frame.</term></item>
               </list>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.SynchedText">
            <summary>
               This structure contains a single entry in a <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> object.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchedText.#ctor(System.Int64,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchedText" /> with a specified time and text.
            </summary>
            <param name="time">
               A <see cref="T:System.Int64" /> value representing an amount of
               time in a format define in the class using it. The
               specific format is specified in <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Format" />.
            </param>
            <param name="text">
               A <see cref="T:System.String" /> object containing the text
               for the point in time.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchedText.Time">
            <summary>
               Gets and sets the time offset of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value representing an amount of
               time in a format define in the class using it. The
               specific format is specified in <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame.Format" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.SynchedText.Text">
            <summary>
               Gets and sets the text for the point in time represented
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the text
               for the point in time.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Terms of Use (USER) Frames.
            </summary>
            <remarks>
               This frame contains license text or restrictions on the use of a
               media file.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.language">
            <summary>
               Contains the ISO-639-2 language code of the current
               instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.#ctor(System.String,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame" /> with a specified language and
               encoding.
            </summary>
            <param name="language">
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code of the new frame.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> containing the text encoding
               to use when rendering the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.#ctor(System.String)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame" /> with a specified language.
            </summary>
            <param name="language">
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code of the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when storing the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the text encoding to
               use when storing the current instance.
            </value>
            <remarks>
               This encoding is overridden when rendering if <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is <see
               langword="true" /> or the render version does not support
               it.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.Language">
            <summary>
               Gets and sets the ISO-639-2 language code stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code stored in the current instance.
            </value>
            <remarks>
               There should only be one file with a matching 
               ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.Text">
            <summary>
               Gets and sets the terms of use stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the terms of
               use.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the terms of use.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified terms of use frame from the specified
               tag, optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> specifying the ISO-639-2 language
              code to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found and <paramref name="create" /> is <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.GetPreferred(VisioForge.Libs.TagLib.Id3v2.Tag,System.String)">
            <summary>
               Gets a specified terms of use frame from the specified
               tag, trying to to match the language but accepting one
               with a different language if a match was not found.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> specifying the ISO-639-2 language
              code to match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame" /> object containing the
               matching frame, or <see langword="null" /> if a match
               wasn't found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TermsOfUseFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> to provide support ID3v2
               Text Information Frames (Section 4.2), covering "<c>T000</c>" to
               "<c>TZZZ</c>", excluding "<c>TXXX</c>".
            </summary>
            <remarks>
               <para>Text Information Frames contain the most commonly used
               values in tagging, including the artist, the track name, and just
               about any value that can be expressed as text.</para>
               <para>The following table contains types and descriptions as
               found in the ID3 2.4.0 native frames specification. (Copyright
               (C) Martin Nilsson 2000.)</para>
               
               <list type="table">
                  <listheader>
                     <term>ID</term>
                     <description>Description</description>
                  </listheader>
                  <item>
                     <term>TIT1</term>
                     <description>The 'Content group description' frame is used
                     if the sound belongs to a larger category of sounds/music.
                     For example, classical music is often sorted in different
                     musical sections (e.g. "Piano Concerto", "Weather -
                     Hurricane").</description>
                  </item>
                  <item>
                     <term>TIT2</term>
                     <description>The 'Title/Songname/Content description' frame
                     is the actual name of the piece (e.g. "Adagio", "Hurricane
                     Donna").</description>
                  </item>
                  <item>
                     <term>TIT3</term>
                     <description>The 'Subtitle/Description refinement' frame is
                     used for information directly related to the contents title
                     (e.g. "Op. 16" or "Performed live at
                     Wembley").</description>
                  </item>
                  <item>
                     <term>TALB</term>
                     <description>The 'Album/Movie/Show title' frame is intended
                     for the title of the recording (or source of sound) from
                     which the audio in the file is taken.</description>
                  </item>
                  <item>
                     <term>TOAL</term>
                     <description>The 'Original album/movie/show title' frame is
                     intended for the title of the original recording (or source
                     of sound), if for example the music in the file should be a
                     cover of a previously released song.</description>
                  </item>
                  <item>
                     <term>TRCK</term>
                     <description>The 'Track number/Position in set' frame is a
                     numeric string containing the order number of the
                     audio-file on its original recording. This MAY be extended
                     with a "/" character and a numeric string containing the
                     total number of tracks/elements on the original recording.
                     E.g. "4/9".</description>
                  </item>
                  <item>
                     <term>TPOS</term>
                     <description>The 'Part of a set' frame is a numeric string
                     that describes which part of a set the audio came from.
                     This frame is used if the source described in the "TALB"
                     frame is divided into several mediums, e.g. a double CD.
                     The value MAY be extended with a "/" character and a
                     numeric string containing the total number of parts in the
                     set. E.g. "1/2".</description>
                  </item>
                  <item>
                     <term>TSST</term>
                     <description>The 'Set subtitle' frame is intended for the
                     subtitle of the part of a set this track belongs
                     to.</description>
                  </item>
                  <item>
                     <term>TSRC</term>
                     <description>The 'ISRC' frame should contain the
                     International Standard Recording Code [ISRC] (12
                     characters).</description>
                  </item>
                  <item>
                     <term>TPE1</term>
                     <description>The
                     'Lead artist/Lead performer/Soloist/Performing group' is
                     used for the main artist.</description>
                  </item>
                  <item>
                     <term>TPE2</term>
                     <description>The 'Band/Orchestra/Accompaniment' frame is
                     used for additional information about the performers in the
                     recording.</description>
                  </item>
                  <item>
                     <term>TPE3</term>
                     <description>The 'Conductor' frame is used for the name of
                     the conductor.</description>
                  </item>
                  <item>
                     <term>TPE4</term>
                     <description>The 'Interpreted, remixed, or otherwise
                     modified by' frame contains more information about the
                     people behind a remix and similar interpretations of
                     another existing piece.</description>
                  </item>
                  <item>
                     <term>TOPE</term>
                     <description>The 'Original artist/performer' frame is
                     intended for the performer of the original recording, if
                     for example the music in the file should be a cover of a
                     previously released song.</description>
                  </item>
                  <item>
                     <term>TEXT</term>
                     <description>The 'Lyricist/Text writer' frame is intended
                     for the writer of the text or lyrics in the
                     recording.</description>
                  </item>
                  <item>
                     <term>TOLY</term>
                     <description>The 'Original lyricist/text writer' frame is
                     intended for the text writer of the original recording, if
                     for example the music in the file should be a cover of a
                     previously released song.</description>
                  </item>
                  <item>
                     <term>TCOM</term>
                     <description>The 'Composer' frame is intended for the name
                     of the composer.</description>
                  </item>
                  <item>
                     <term>TMCL</term>
                     <description>The 'Musician credits list' is intended as a
                     mapping between instruments and the musician that played
                     it. Every odd field is an instrument and every even is an
                     artist or a comma delimited list of artists.</description>
                  </item>
                  <item>
                     <term>TIPL</term>
                     <description>The 'Involved people list' is very similar to
                     the musician credits list, but maps between functions, like
                     producer, and names.</description>
                  </item>
                  <item>
                     <term>TENC</term>
                     <description>The 'Encoded by' frame contains the name of
                     the person or organisation that encoded the audio file.
                     This field may contain a copyright message, if the audio
                     file also is copyrighted by the encoder.</description>
                  </item>
                  <item>
                     <term>TBPM</term>
                     <description>The 'BPM' frame contains the number of beats
                     per minute in the main part of the audio. The BPM is an
                     integer and represented as a numerical
                     string.</description>
                  </item>
                  <item>
                     <term>TLEN</term>
                     <description>The 'Length' frame contains the length of the
                     audio file in milliseconds, represented as a numeric
                     string.</description>
                  </item>
                  <item>
                     <term>TKEY</term>
                     <description>The 'Initial key' frame contains the musical
                     key in which the sound starts. It is represented as a
                     string with a maximum length of three characters. The
                     ground keys are represented with "A","B","C","D","E", "F"
                     and "G" and halfkeys represented with "b" and "#". Minor is
                     represented as "m", e.g. "Dbm". Off key is represented with
                     an "o" only.</description>
                  </item>
                  <item>
                     <term>TLAN</term>
                     <description>The 'Language' frame should contain the
                     languages of the text or lyrics spoken or sung in the
                     audio. The language is represented with three characters
                     according to ISO-639-2. If more than one language is used
                     in the text their language codes should follow according to
                     the amount of their usage.</description>
                  </item>
                  <item>
                     <term>TCON</term>
                     <description>The 'Content type', which ID3v1 was stored as
                     a one byte numeric value only, is now a string. You may use
                     one or several of the ID3v1 types as numerical strings, or,
                     since the category list would be impossible to maintain
                     with accurate and up to date categories, define your
                     own.</description>
                  </item>
                  <item>
                     <term>TFLT</term>
                     <description>The 'File type' frame indicates which type of
                     audio this tag defines. (See the specification for more
                     details.)</description>
                  </item>
                  <item>
                     <term>TMED</term>
                     <description>The 'Media type' frame describes from which
                     media the sound originated. (See the specification for more
                     details.)</description>
                  </item>
                  <item>
                     <term>TMOO</term>
                     <description>The 'Mood' frame is intended to reflect the
                     mood of the audio with a few keywords, e.g. "Romantic" or
                     "Sad".</description>
                  </item>
                  <item>
                     <term>TCOP</term>
                     <description>The 'Copyright message' frame, in which the
                     string must begin with a year and a space character (making
                     five characters), is intended for the copyright holder of
                     the original sound, not the audio file itself. The absence
                     of this frame means only that the copyright information is
                     unavailable or has been removed, and must not be
                     interpreted to mean that the audio is public domain. Every
                     time this field is displayed the field must be preceded
                     with "Copyright " (C) " ", where (C) is one character
                     showing a C in a circle.</description>
                  </item>
                  <item>
                     <term>TPRO</term>
                     <description>The 'Produced notice' frame, in which the
                     string must begin with a year and a space character (making
                     five characters), is intended for the production copyright
                     holder of the original sound, not the audio file itself.
                     The absence of this frame means only that the production
                     copyright information is unavailable or has been removed,
                     and must not be interpreted to mean that the audio is
                     public domain. Every time this field is displayed the field
                     must be preceded with "Produced " (P) " ", where (P) is one
                     character showing a P in a circle.</description>
                  </item>
                  <item>
                     <term>TPUB</term>
                     <description>The 'Publisher' frame simply contains the name
                     of the label or publisher.</description>
                  </item>
                  <item>
                     <term>TOWN</term>
                     <description>The 'File owner/licensee' frame contains the
                     name of the owner or licensee of the file and it's
                     contents.</description>
                  </item>
                  <item>
                     <term>TRSN</term>
                     <description>The 'Internet radio station name' frame
                     contains the name of the internet radio station from which
                     the audio is streamed.</description>
                  </item>
                  <item>
                     <term>TRSO</term>
                     <description>The 'Internet radio station owner' frame
                     contains the name of the owner of the internet radio
                     station from which the audio is streamed.</description>
                  </item>
                  <item>
                     <term>TOFN</term>
                     <description>The 'Original filename' frame contains the
                     preferred filename for the file, since some media doesn't
                     allow the desired length of the filename. The filename is
                     case sensitive and includes its suffix.</description>
                  </item>
                  <item>
                     <term>TDLY</term>
                     <description>The 'Playlist delay' defines the numbers of
                     milliseconds of silence that should be inserted before this
                     audio. The value zero indicates that this is a part of a
                     multifile audio track that should be played
                     continuously.</description>
                  </item>
                  <item>
                     <term>TDEN</term>
                     <description>The 'Encoding time' frame contains a timestamp
                     describing when the audio was encoded. Timestamp format is
                     described in the ID3v2 structure document.</description>
                  </item>
                  <item>
                     <term>TDOR</term>
                     <description>The 'Original release time' frame contains a
                     timestamp describing when the original recording of the
                     audio was released. Timestamp format is described in the
                     ID3v2 structure document.</description>
                  </item>
                  <item>
                     <term>TDRC</term>
                     <description>The 'Recording time' frame contains a
                     timestamp describing when the audio was recorded. Timestamp
                     format is described in the ID3v2 structure
                     document.</description>
                  </item>
                  <item>
                     <term>TDRL</term>
                     <description>The 'Release time' frame contains a timestamp
                     describing when the audio was first released. Timestamp
                     format is described in the ID3v2 structure
                     document.</description>
                  </item>
                  <item>
                     <term>TDTG</term>
                     <description>The 'Tagging time' frame contains a timestamp
                     describing then the audio was tagged. Timestamp format is
                     described in the ID3v2 structure document.</description>
                  </item>
                  <item>
                     <term>TSSE</term>
                     <description>The 'Software/Hardware and settings used for
                     encoding' frame includes the used audio encoder and its
                     settings when the file was encoded. Hardware refers to
                     hardware encoders, not the computer on which a program was
                     run.</description>
                  </item>
                  <item>
                     <term>TSOA</term>
                     <description>The 'Album sort order' frame defines a string
                     which should be used instead of the album name (TALB) for
                     sorting purposes. E.g. an album named "A Soundtrack" might
                     preferably be sorted as "Soundtrack".</description>
                  </item>
                  <item>
                     <term>TSOP</term>
                     <description>The 'Performer sort order' frame defines a
                     string which should be used instead of the performer (TPE2)
                     for sorting purposes.</description>
                  </item>
                  <item>
                     <term>TSOT</term>
                     <description>The 'Title sort order' frame defines a string
                     which should be used instead of the title (TIT2) for
                     sorting purposes.</description>
                  </item>
               </list>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.encoding">
            <summary>
               Contains the encoding to use for the text.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.text_fields">
            <summary>
               Contains the text fields.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.raw_data">
            <summary>
               Contains the raw data from the frame, or <see
               langword="null" /> if it has been processed.
            </summary>
            <remarks>
               Rather than processing the data when the frame is loaded,
               it is parsed on demand, reducing the ammount of
               unnecessary conversion.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.raw_version">
            <summary>
               Contains the ID3v2 version of <see cref="F:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.raw_data" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.raw_encoding">
            <summary>
               Contains the Encoding of the raw_data
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> with a specified
               identifier and text encoding.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an ID3v2.4
               frame identifier.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value specifying the encoding
               to use for the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> with a specified
               identifer.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an ID3v2.4
               frame identifier.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> by reading its raw
               contents in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the
               frame to read.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               in which <paramref name="data" /> is encoded.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> by reading its raw
               contents from a specifed position in a <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               to read.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the offset in
               <paramref name="data" /> at which the frame begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> value containing the header
               that would be read in the frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               in which <paramref name="data" /> is encoded.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.FieldList">
            <summary>
               Gets the text contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               text contained in the current instance.
            </value>
            <remarks>
               Modifying the contents of the returned value will not
               modify the contents of the current instance.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Text">
             <summary>
                Gets and sets the text contained in the current
                instance.
             </summary>
             <value>
                A <see cref="T:string[]" /> containing the text contained
                in the current instance.
             </value>
             <remarks>
                <para>Modifying the contents of the returned value will
                not modify the contents of the current instance. The
                value must be reassigned for the value to change.</para>
             </remarks>
             <example>
                <para>Modifying the values text values of a frame.</para>
                <code> TextInformationFrame frame = TextInformationFrame.Get (myTag, "TPE1", true);
             /* Upper casing all the text: */
             string[] text = frame.Text;
             for (int i = 0; i &lt; text.Length; i++)
            	text [i] = text [i].ToUpper ();
             frame.Text = text;
            
             /* Replacing the value completely: */
             frame.Text = new string [] {"DJ Jazzy Jeff"};</code>
             </example>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when rendering
               the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value specifying the encoding
               to use when rendering the current instance.
            </value>
            <remarks>
               This value will be overwritten if <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is <see
               langword="true" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.SetText(VisioForge.Libs.TagLib.StringCollection)">
            <summary>
               Sets the text contained in the current instance.
            </summary>
            <param name="fields">
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing text
               to store in the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.SetText(System.String[])">
            <summary>
               Sets the text contained in the current instance.
            </summary>
            <param name="text">
               A <see cref="T:string[]" /> containing text to store in the
               current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the joined text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Render(System.Byte)">
            <summary>
               Renders the current instance, encoded in a specified
               ID3v2 version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> value specifying the version of
               ID3v2 to use when encoding the current instance.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.StringType,System.Boolean)">
            <summary>
               Gets a <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> object of a
               specified type from a specified tag, optionally creating
               and adding one with a specified encoding if none is
               found.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search for the specified
               tag in.
            </param>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifer to search for.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value specifying the encoding
               to use if a new frame is created.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               create a new frame if an existing frame was not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> object containing
               the frame found in or added to <paramref name="tag" /> or
               <see langword="null" /> if no value was found <paramref
               name="create" /> is <see langword="false" />.
            </returns>
            <remarks>
               To create a frame without having to specify the encoding,
               use <see cref="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.ByteVector,System.Boolean)" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="tag" /> or <paramref name="ident" /> is
               <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.ByteVector,System.Boolean)">
            <summary>
               Gets a <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> object of a
               specified type from a specified tag, optionally creating
               and adding one if none is found.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search for the specified
               tag in.
            </param>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifer to search for.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               create a new frame if an existing frame was not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> object containing
               the frame found in or added to <paramref name="tag" /> or
               <see langword="null" /> if no value was found <paramref
               name="create" /> is <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="tag" /> or <paramref name="ident" /> is
               <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets a <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> object of a
               specified type from a specified tag.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search for the specified
               tag in.
            </param>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifer to search for.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> object containing
               the frame found in <paramref name="tag" /> or <see
               langword="null" /> if no value was found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="tag" /> or <paramref name="ident" /> is
               <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.ParseRawData">
            <summary>
               Performs the actual parsing of the raw data.
            </summary>
            <remarks>
               Because of the high parsing cost and relatively low usage
               of the class, <see cref="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)" /> only stores the
               field data so it can be parsed on demand. Whenever a
               property or method is called which requires the data,
               this method is called, and only on the first call does it
               actually parse the data.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.TextInformationFrame" /> to provide
               support for ID3v2 User Text Information (TXXX) Frames.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.#ctor(System.String,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> with a specified
               description and text encoding.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> containing the text encoding
               to use when rendering the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.StringType,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> with a specified
               description.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more integrated frame
               creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Description">
            <summary>
               Gets and sets the description stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the description
               stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Text">
            <summary>
               Gets and sets the text contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the text contained
               in the current instance.
            </value>
            <remarks>
               <para>Modifying the contents of the returned value will
               not modify the contents of the current instance. The
               value must be reassigned for the value to change.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the joined text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.StringType,System.Boolean,System.Boolean)">
            <summary>
               Gets a specified user text frame from the specified tag,
               optionally creating it if it does not exist and optionally
               searching for the frame case-insensitive.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> specifying the encoding to
               use if creating a new frame.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <param name="caseSensitive">
               A <see cref="T:System.Boolean" /> specifying whether or not to search
               for the frame case-sensitive.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.StringType,System.Boolean)">
            <summary>
               Gets a specified user text frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> specifying the encoding to
               use if creating a new frame.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified user text frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String)">
            <summary>
               Gets a specified user text frame from the specified tag.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Unique File Identifier (UFID) Frames.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.#ctor(System.String,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame" /> with a specified
               owner and identifier data.
            </summary>
            <param name="owner">
               A <see cref="T:System.String" /> containing the owner of the new
               frame.
            </param>
            <param name="identifier">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier for the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more integrated frame
               creation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="owner" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame" /> with a specified
               owner.
            </summary>
            <param name="owner">
               A <see cref="T:System.String" /> containing the owner of the new
               frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see
               cref="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more integrated frame
               creation.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="owner" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.Owner">
            <summary>
               Gets and sets the owner of the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the owner of the
               current instance.
            </value>
            <remarks>
               There should only be one frame with a matching owner per
               tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.Identifier">
            <summary>
               Gets and sets the identifier data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containiner the unique
               file identifier frame.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified unique file identifer frame from the
               specified tag, optionally creating it if it does not
               exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="owner">
               A <see cref="T:System.String" /> specifying the owner to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserTextInformationFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UniqueFileIdentifierFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.UnknownFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> to provide a fallback
               type when no other frame class works for a given frame.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnknownFrame" /> with a specified type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an ID3v2.4
               frame identifier.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the contents
               of the frame.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnknownFrame" /> with a specified type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an ID3v2.4
               frame identifier.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnknownFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnknownFrame" /> by reading its raw data in a
               specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.Data">
            <summary>
               Gets and sets the field data in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the field data.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnknownFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />, implementing support for
               ID3v2 Unsynchronised Lyrics (USLT) Frames.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.language">
            <summary>
               Contains the ISO-639-2 language code of the current
               instance.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.description">
            <summary>
               Contains the description of the current instance.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.text">
            <summary>
               Contains the lyrics text of the current instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.#ctor(System.String,System.String,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> with a specified
               description, ISO-639-2 language code, and text encoding.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code of the new frame.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> containing the text encoding
               to use when rendering the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.#ctor(System.String,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> with a specified
               description and ISO-639-2 language code.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code of the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> with a specified
               description.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using <see cref="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when storing the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the text encoding to
               use when storing the current instance.
            </value>
            <remarks>
               This encoding is overridden when rendering if <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is <see
               langword="true" /> or the render version does not support
               it.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Language">
            <summary>
               Gets and sets the ISO-639-2 language code stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the ISO-639-2 language
               code stored in the current instance.
            </value>
            <remarks>
               There should only be one file with a matching description
               and ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Description">
            <summary>
               Gets and sets the description stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the description
               stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description and ISO-639-2 language code per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Text">
            <summary>
               Gets and sets the lyrical text stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the lyrical text
               stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the lyrical text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String,System.Boolean)">
            <summary>
               Gets a specified lyrics frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> specifying the ISO-639-2 language
              code to match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.GetPreferred(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.String)">
            <summary>
               Gets a specified comments frame from the specified tag,
               trying to to match the description and language but
               accepting an incomplete match.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="language">
               A <see cref="T:System.String" /> specifying the ISO-639-2 language
              code to match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found.
            </returns>
            <remarks>
               <para>The method tries matching with the following order
               of precidence:</para>
               <list type="number">
                  <item><term>The first frame with a matching
                  description and language.</term></item>
                  <item><term>The first frame with a matching
                  language.</term></item>
                  <item><term>The first frame with a matching
                  description.</term></item>
                  <item><term>The first frame.</term></item>
               </list>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UnsynchronisedLyricsFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame">
             <summary>
                This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> to provide support ID3v2
                Url Link Frames (Section 4.3.1), covering "<c>W000</c>" to
                "<c>WZZZ</c>", excluding "<c>WXXX</c>".
             </summary>
             <remarks>
                <para>With these frames dynamic data such as webpages with touring
                information, price information or plain ordinary news can be added to
                the tag. There may only be one URL [URL] link frame of its kind in an
                tag, except when stated otherwise in the frame description. If the
                text string is followed by a string termination, all the following
                information should be ignored and not be displayed.</para>
                <para>The following table contains types and descriptions as
                found in the ID3 2.4.0 native frames specification. (Copyright
                (C) Martin Nilsson 2000.)</para>
            
                <list type="table">
                   <listheader>
                      <term>ID</term>
                      <description>Description</description>
                   </listheader>
                   <item>
                      <term>WCOM</term>
                      <description>The 'Commercial information' frame is a URL pointing at a webpage
                      with information such as where the album can be bought. There may be
                      more than one "WCOM" frame in a tag, but not with the same content.
                      </description>
                   </item>
                   <item>
                      <term>WCOP</term>
                      <description>The 'Copyright/Legal information' frame is a URL pointing at a
                      webpage where the terms of use and ownership of the file is described.
                      </description>
                   </item>
                   <item>
                      <term>WOAF</term>
                      <description>The 'Official audio file webpage' frame is a URL pointing at a file
                      specific webpage.
                      </description>
                   </item>
                   <item>
                      <term>WOAR</term>
                      <description>The 'Official artist/performer webpage' frame is a URL pointing at
                      the artists official webpage. There may be more than one "WOAR" frame
                      in a tag if the audio contains more than one performer, but not with
                      the same content.
                      </description>
                   </item>
                   <item>
                      <term>WOAS</term>
                      <description>The 'Official audio source webpage' frame is a URL pointing at the
                      official webpage for the source of the audio file, e.g. a movie.
                      </description>
                   </item>
                   <item>
                      <term>WORS</term>
                      <description>The 'Official Internet radio station homepage' contains a URL
                      pointing at the homepage of the internet radio station.
                      </description>
                   </item>
                   <item>
                      <term>WPAY</term>
                      <description>The 'Payment' frame is a URL pointing at a webpage that will handle
                      the process of paying for this file.
                      </description>
                   </item>
                   <item>
                      <term>WPUB</term>
                      <description>The 'Publishers official webpage' frame is a URL pointing at the
                      official webpage for the publisher.
                      </description>
                   </item>
                </list>
             </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.encoding">
            <summary>
               Contains the encoding to use for the text.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.text_fields">
            <summary>
               Contains the text fields.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.raw_data">
            <summary>
               Contains the raw data from the frame, or
               <see langword="null" /> if it has been processed.
            </summary>
            <remarks>
               Rather than processing the data when the frame is loaded,
               it is parsed on demand, reducing the ammount of
               unnecessary conversion.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.raw_version">
            <summary>
               Contains the ID3v2 version of <see cref="F:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.raw_data" />.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame" /> with a specified
               identifier and text encoding.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an ID3v2.4
               frame identifier.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame" /> by reading its raw
               contents in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the
               frame to read.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               in which <paramref name="data" /> is encoded.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame" /> by reading its raw
               contents from a specifed position in a
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               to read.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the offset in
               <paramref name="data" /> at which the frame begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> value containing the header
               that would be read in the frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the ID3v2 version
               in which <paramref name="data" /> is encoded.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.Text">
             <summary>
                Gets and sets the text contained in the current
                instance.
             </summary>
             <value>
                A <see cref="T:string[]" /> containing the text contained
                in the current instance.
             </value>
             <remarks>
                <para>Modifying the contents of the returned value will
                not modify the contents of the current instance. The
                value must be reassigned for the value to change.</para>
             </remarks>
             <example>
                <para>Modifying the values text values of a frame.</para>
                <code> UrlLinkFrame frame = UrlLinkFrame.Get (myTag, "WCOP", true);
             /* Upper casing all the text: */
             string[] text = frame.Text;
             for (int i = 0; i &lt; text.Length; i++)
            	text [i] = text [i].ToUpper ();
             frame.Text = text;
            
             /* Replacing the value completely: */
             frame.Text = new string [] {"http://www.somewhere.com"};</code>
             </example>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.TextEncoding">
            <summary>
               Gets and sets the text encoding to use when rendering
               the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value specifying the encoding
               to use when rendering the current instance.
            </value>
            <remarks>
               This value will be overwritten if
               <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding" /> is
               <see langword="true" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the joined text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.ByteVector,System.Boolean)">
            <summary>
               Gets a <see cref="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame" /> object of a
               specified type from a specified tag, optionally creating
               and adding one with a specified encoding if none is
               found.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search for the specified
               tag in.
            </param>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifer to search for.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               create a new frame if an existing frame was not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame" /> object containing
               the frame found in or added to <paramref name="tag" /> or
               <see langword="null" /> if no value was found
               <paramref name="create" /> is <see langword="false" />.
            </returns>
            <remarks>
               To create a frame without having to specify the encoding,
               use <see cref="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,VisioForge.Libs.TagLib.ByteVector,System.Boolean)" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="tag" /> or <paramref name="ident" /> is
               <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Populates the values in the current instance by parsing
               its field data in a specified version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               extracted field data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.ParseRawData">
            <summary>
               Performs the actual parsing of the raw data.
            </summary>
            <remarks>
               Because of the high parsing cost and relatively low usage
               of the class, <see cref="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.ParseFields(VisioForge.Libs.TagLib.ByteVector,System.Byte)" /> only stores the
               field data so it can be parsed on demand. Whenever a
               property or method is called which requires the data,
               this method is called, and only on the first call does it
               actually parse the data.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.RenderFields(System.Byte)">
            <summary>
               Renders the values in the current instance into field
               data for a specified version.
            </summary>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               field data is to be encoded in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered field data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object identical to the
               current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Id3v2.UrlLinkFrame" /> to provide
               support for ID3v2 User Url Link (WXXX) Frames.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.#ctor(System.String,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame" /> with a specified
               description and text encoding.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <param name="encoding">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> containing the text encoding
               to use when rendering the new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using
               <see cref="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.StringType,System.Boolean)" /> for more
               integrated frame creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame" /> with a specified
               description.
            </summary>
            <param name="description">
               A <see cref="T:System.String" /> containing the description of the
               new frame.
            </param>
            <remarks>
               When a frame is created, it is not automatically added to
               the tag. Consider using
               <see cref="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)" /> for more integrated frame
               creation.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object starting with the raw
               representation of the new frame.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32,VisioForge.Libs.TagLib.Id3v2.FrameHeader,System.Byte)">
            <summary>
               Constructs and initializes a new instance of
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame" /> by reading its raw
               data in a specified ID3v2 version.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               representation of the new frame.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> indicating at what offset in
               <paramref name="data" /> the frame actually begins.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameHeader" /> containing the header of the
               frame found at <paramref name="offset" /> in the data.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> indicating the ID3v2 version the
               raw frame is encoded in.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.Description">
            <summary>
               Gets and sets the description stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the description
               stored in the current instance.
            </value>
            <remarks>
               There should only be one frame with a matching
               description per tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.Text">
            <summary>
               Gets and sets the text contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the text contained
               in the current instance.
            </value>
            <remarks>
               <para>Modifying the contents of the returned value will
               not modify the contents of the current instance. The
               value must be reassigned for the value to change.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.ToString">
            <summary>
               Gets a string representation of the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String" /> containing the joined text.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,VisioForge.Libs.TagLib.StringType,System.Boolean)">
            <summary>
               Gets a specified user text frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> specifying the encoding to
               use if creating a new frame.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame.Get(VisioForge.Libs.TagLib.Id3v2.Tag,System.String,System.Boolean)">
            <summary>
               Gets a specified user text frame from the specified tag,
               optionally creating it if it does not exist.
            </summary>
            <param name="tag">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object to search in.
            </param>
            <param name="description">
               A <see cref="T:System.String" /> specifying the description to
               match.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> specifying whether or not to create
               and add a new frame to the tag if a match is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.UserUrlLinkFrame" /> object
               containing the matching frame, or <see langword="null" />
               if a match wasn't found and <paramref name="create" /> is
               <see langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.FrameType">
            <summary>
               <see cref="T:VisioForge.Libs.TagLib.Id3v2.FrameType" /> provides references to different frame
               types used by the library.
            </summary>
            <remarks>
               <para>This class is used to severely reduce the number of times
               these types are created in <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" />,
               greatly improving the speed at which warm files are read. It is,
               however, not necessary for external users to use this class. While
               the library may use <c>GetTextAsString (FrameType.TIT2);</c> an
               external user could use <c>tag.GetTextAsString ("TIT2");</c> with
               the same result.</para>
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.HeaderFlags">
            <summary>
               Indicates the flags applied to a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Header" /> object.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.HeaderFlags.None">
            <summary>
               The header contains no flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.HeaderFlags.Unsynchronisation">
            <summary>
               The tag described by the header has been unsynchronized.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.HeaderFlags.ExtendedHeader">
            <summary>
               The tag described by the header has contains an extended
               header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.HeaderFlags.ExperimentalIndicator">
            <summary>
               The tag described by the header is experimental.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.HeaderFlags.FooterPresent">
            <summary>
               The tag described by the header contains a footer.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.Header">
            <summary>
               This structure provides a representation of an ID3v2 tag header
               which can be read from and written to disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Header.major_version">
            <summary>
               Contains the tag's major version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Header.flags">
            <summary>
               Contains tag's flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Header.Size">
            <summary>
               The size of a ID3v2 header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Header.FileIdentifier">
            <summary>
               The identifier used to recognize a ID3v2 headers.
            </summary>
            <value>
               "ID3"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Header.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Header" /> by reading it from raw header data.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data to build the new instance from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is smaller than <see
               cref="F:VisioForge.Libs.TagLib.Id3v2.Header.Size" />, does not begin with <see
               cref="F:VisioForge.Libs.TagLib.Id3v2.Header.FileIdentifier" />, contains invalid flag data,
               or contains invalid size data.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Header.MajorVersion">
            <summary>
               Gets and sets the major version of the tag described by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value specifying the ID3v2 version
               of tag described by the current instance.
            </value>
            <remarks>
               When the version is set, unsupported header flags will
               automatically be removed from the tag.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="value" /> is less than 2 or more than 4.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Header.RevisionNumber">
            <summary>
               Gets and sets the version revision number of the tag
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value containing the version
               revision number of the tag represented by the current
               instance.
            </value>
            <remarks>
               This value should always be zeroed. A non-zero value
               indicates an experimental or new version of the format
               which may not be completely understood by the current
               implementation. Some software may refuse to read tags
               with a non-zero value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Header.Flags">
            <summary>
               Gets and sets the flags applied to the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.Id3v2.HeaderFlags" /> value
               containing the flags applied to the current instance.
            </value>
            <exception cref="T:System.ArgumentException">
               <paramref name="value" /> contains a flag not supported
               by the the ID3v2 version of the current instance.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Header.TagSize">
            <summary>
               Gets and sets the size of the tag described by the
               current instance, minus the header and footer.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               tag described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Header.CompleteTagSize">
            <summary>
               Gets the complete size of the tag described by the
               current instance, including the header and footer.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the complete size
               of the tag described by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Header.Render">
            <summary>
               Renders the current instance as a raw ID3v2 header.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered header.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.SynchData">
            <summary>
               This static class provides support for encoding and decoding
               unsynchronized data and numbers.
            </summary>
            <remarks>
               Unsynchronization is designed so that portions of the tag won't
               be misinterpreted as MPEG audio stream headers by removing the
               possibility of the synch bytes occuring in the tag.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchData.ToUInt(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Decodes synchronized integer data into a <see
               cref="T:System.UInt32" /> value.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the number
               to decode. Only the first 4 bytes of this value will be
               used.
            </param>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the decoded
               number.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchData.FromUInt(System.UInt32)">
            <summary>
               Encodes a <see cref="T:System.UInt32" /> value as synchronized
               integer data.
            </summary>
            <param name="value">
               A <see cref="T:System.UInt32" /> value containing the number to
               encode.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the encoded
               number.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="value" /> is greater than 268435455.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchData.UnsynchByteVector(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Unsynchronizes a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object by
               inserting empty bytes where necessary.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to unsynchronize.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.SynchData.ResynchByteVector(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Resynchronizes a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object by
               removing the added bytes.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to resynchronize.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.SynchedTextType">
            <summary>
               Specifies the type of text contained in a <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.Other">
            <summary>
               The text is some other type of text.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.Lyrics">
            <summary>
               The text contains lyrical data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.TextTranscription">
            <summary>
               The text contains a transcription.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.Movement">
            <summary>
               The text lists the movements in the piece.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.Events">
            <summary>
               The text describes events that occur.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.Chord">
            <summary>
               The text contains chord changes that occur in the music.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.Trivia">
            <summary>
               The text contains trivia or "pop up" information about
               the media.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.WebpageUrls">
            <summary>
               The text contains URL's for relevant webpages.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.SynchedTextType.ImageUrls">
            <summary>
                The text contains URL's for relevant images.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.Tag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> and implements <see
               cref="T:System.Collections.Generic.IEnumerable`1" /> to provide support for reading and
               writing ID3v2 tags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Tag.language">
            <summary>
               Contains the language to use for language specific
               fields.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Tag.default_version">
            <summary>
               Contains the field to use for new tags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Tag.header">
            <summary>
               Contains the tag's header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Tag.extended_header">
            <summary>
               Contains the tag's extended header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Tag.frame_list">
            <summary>
               Contains the tag's frames.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.Tag.performers_role">
            <summary>
            Store the PerformersRole property
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.#ctor(VisioForge.Libs.TagLib.File,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> by reading the contents from a specified
               position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file from
               which the contents of the new instance is to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the tag.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> by reading the contents from a specified
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to read the tag from.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not contain enough data.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetTextAsString(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the text value from a specified Text Information
               Frame.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifier of the Text Information Frame to get the value
               from.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the text of the
               specified frame, or <see langword="null" /> if no value
               was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetFrames">
            <summary>
               Gets all frames contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the frames.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetFrames(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets all frames with a specified identifier contained in
               the current instance.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier of the frames to return.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the frames.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="ident" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetFrames``1">
            <summary>
               Gets all frames with of a specified type contained in
               the current instance.
            </summary>
            <typeparam name="T">
               The type of object, derived from <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />,
               to return from in the current instance.
            </typeparam>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the frames.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetFrames``1(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets all frames with a of type <typeparamref name="T" />
               with a specified identifier contained in the current
               instance.
            </summary>
            <typeparam name="T">
               The type of object, derived from <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" />,
               to return from in the current instance.
            </typeparam>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier of the frames to return.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating
               through the frames.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="ident" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.AddFrame(VisioForge.Libs.TagLib.Id3v2.Frame)">
            <summary>
               Adds a frame to the current instance.
            </summary>
            <param name="frame">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object to add to the current
               instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="frame" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.ReplaceFrame(VisioForge.Libs.TagLib.Id3v2.Frame,VisioForge.Libs.TagLib.Id3v2.Frame)">
            <summary>
               Replaces an existing frame with a new one in the list
               contained in the current instance, or adds a new one if
               the existing one is not contained.
            </summary>
            <param name="oldFrame">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object to be replaced.
            </param>
            <param name="newFrame">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object to add to the current
               instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="oldFrame" /> or <paramref name="newFrame"
               /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.RemoveFrame(VisioForge.Libs.TagLib.Id3v2.Frame)">
            <summary>
               Removes a specified frame from the current instance.
            </summary>
            <param name="frame">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object to remove from the current
               instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="frame" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.RemoveFrames(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Removes all frames with a specified identifier from the
               current instance.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier of the frames to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="ident" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.SetTextFrame(VisioForge.Libs.TagLib.ByteVector,System.String[])">
            <summary>
               Sets the text for a specified Text Information Frame.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier of the frame to set the data for.
            </param>
            <param name="text">
               A <see cref="T:string[]" /> containing the text to set for
               the specified frame, or <see langword="null" /> to unset
               the value.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="ident" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.SetTextFrame(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.StringCollection)">
            <summary>
               Sets the text for a specified Text Information Frame.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier of the frame to set the data for.
            </param>
            <param name="text">
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               text to set for the specified frame, or <see
               langword="null" /> to unset the value.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="ident" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.SetNumberFrame(VisioForge.Libs.TagLib.ByteVector,System.UInt32,System.UInt32,System.String)">
            <summary>
               Sets the numeric values for a specified Text Information
               Frame.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               identifier of the frame to set the data for.
            </param>
            <param name="number">
               A <see cref="T:System.UInt32" /> value containing the number to
               store.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32" /> value representing a total which
               <paramref name="number" /> is a part of, or zero if
               <paramref name="number" /> is not part of a set.
            </param>
            <param name="format">
               A <see cref="T:System.String" /> value representing the format
               to be used to repreesent the <paramref name="number"/>.
               Default: simple decimal number ("0").
            </param>
            <remarks>
               If both <paramref name="number" /> and <paramref
               name="count" /> are equal to zero, the value will be
               cleared. If <paramref name="count" /> is zero, <paramref
               name="number" /> by itself will be stored. Otherwise, the
               values will be stored as "<paramref name="number"
               />/<paramref name="count" />".
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="ident" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="ident" /> is not exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.Render">
            <summary>
               Renders the current instance as a raw ID3v2 tag.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered tag.
            </returns>
            <remarks>
               By default, tags will be rendered in the version they
               were loaded in, and new tags using the version specified
               by <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.DefaultVersion" />. If <see
               cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultVersion" /> is <see langword="true" />,
               all tags will be rendered in using the version specified
               by <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.DefaultVersion" />, except for tags with
               footers, which must be in version 4.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Flags">
            <summary>
               Gets and sets the header flags applied to the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.Id3v2.HeaderFlags" /> value
               containing flags applied to the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Version">
            <summary>
               Gets and sets the ID3v2 version of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value specifying the ID3v2 version
               of the current instance.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="value" /> is less than 2 or more than 4.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Language">
            <summary>
               Gets and sets the ISO-639-2 language code to use when
               searching for and storing language specific values.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing an ISO-639-2
               language code fto use when searching for and storing
               language specific values.
            </value>
            <remarks>
               If the language is unknown, "   " is the appropriate
               filler.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.DefaultVersion">
            <summary>
               Gets and sets the the default version to use when
               creating new tags.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value specifying the default ID3v2
               version. The default version for this library is 3.
            </value>
            <remarks>
               If <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultVersion" /> is <see
               langword="true" />, all tags will be rendered with this
               version.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="value" /> is less than 2 or more than 4.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultVersion">
            <summary>
               Gets and sets whether or not to save all tags in the
               default version rather than their original version.
            </summary>
            <value>
               If <see langword="true"/>, tags will be saved in
               <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.DefaultVersion" /> rather than their original
               format, with the exception of tags with footers, which
               will be saved in version 4.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.DefaultEncoding">
            <summary>
               Gets and sets the encoding to use when creating new
               frames.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> value specifying the encoding
               to use when creating new frames.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ForceDefaultEncoding">
            <summary>
               Gets and sets whether or not to render all frames with
               the default encoding rather than their original encoding.
            </summary>
            <value>
               If <see langword="true"/>, fames will be rendered in
               <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.DefaultEncoding" /> rather than their original
               encoding.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.UseNumericGenres">
            <summary>
               Gets and sets whether or not to use ID3v1 style numeric
               genres when possible.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               use genres with numeric values when possible.
            </value>
            <remarks>
               If <see langword="true" />, TagLib# will try looking up
               the numeric genre code when storing the value. For
               ID3v2.2 and ID3v2.3, "Rock" would be stored as "(17)" and
               for ID3v2.4 it would be stored as "17".
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.Read(VisioForge.Libs.TagLib.File,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Populates the current instance be reading in a tag from
               a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the tag from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to read the tag.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than 0 or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.Parse(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.File,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Populates the current instance by parsing the contents of
               a raw ID3v2 tag, minus the header.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the content
               of an ID3v2 tag, minus the header.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File"/> object containing
               abstraction of the file to read. 
               Ignored if <paramref name="data"/> is not null.
            </param>
            <param name="position">
               A <see cref="T:System.Int32" /> value reference specifying at what
               index in <paramref name="file" />
               at which the frame begins. 
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <remarks>
               This method must only be called after the internal
               header has been read from the file, otherwise the data
               cannot be parsed correctly.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetTextAsArray(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the text values from a specified Text Information
               Frame.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifier of the Text Information Frame to get the value
               from.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the text of the
               specified frame, or an empty array if no values were
               found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetTextAsUInt32(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Gets an integer value from a "/" delimited list in a
               specified Text Information Frame.
            </summary>
            <param name="ident">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the frame
               identifier of the Text Information Frame to read from.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the index in the
               integer list of the value to return.
            </param>
            <returns>
               A <see cref="T:System.UInt32" /> value read from the list in the
               frame, or 0 if the value wasn't found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetUserTextAsString(System.String,System.Boolean)">
            <summary>
            Gets a TXXX frame via reference of the description field, optionally searching for the
            frame in a case-sensitive manner.
            </summary>
            <param name="description">String containing the description field</param>
            <param name="caseSensitive">case-sensitive search if true.</param>
            <returns>UserTextInformationFrame (TXXX) that corresponds to the description</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetUserTextAsString(System.String)">
            <summary>
            Gets a TXXX frame via reference of the description field.
            </summary>
            <param name="description">String containing the description field</param>
            <returns>UserTextInformationFrame (TXXX) that corresponds to the description</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.SetUserTextAsString(System.String,System.String,System.Boolean)">
            <summary>
            Creates and/or sets a UserTextInformationFrame (TXXX)  with the given
            description and text, optionally searching for the frame in a case-sensitive manner.
            </summary>
            <param name="description">String containing the Description field for the
            TXXX frame</param>
            <param name="text">String containing the Text field for the TXXX frame</param>
            <param name="caseSensitive">case-sensitive search if true.</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.SetUserTextAsString(System.String,System.String)">
            <summary>
            Creates and/or sets a UserTextInformationFrame (TXXX)  with the given
            description and text.
            </summary>
            <param name="description">String containing the Description field for the
            TXXX frame</param>
            <param name="text">String containing the Text field for the TXXX frame</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetUfidText(System.String)">
            <summary>
            Gets the text from a particular UFID frame, referenced by the owner field
            </summary>
            <param name="owner">String containing the "Owner" data</param>
            <returns>String containing the text from the UFID frame, or null</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.SetUfidText(System.String,System.String)">
            <summary>
            Creates and/or sets the text for a UFID frame, referenced by owner
            </summary>
            <param name="owner">String containing the Owner field</param>
            <param name="text">String containing the text to set for the frame</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.MakeFirstOfType(VisioForge.Libs.TagLib.Id3v2.Frame)">
            <summary>
               Moves a specified frame so it is the first of its type in
               the tag.
            </summary>
            <param name="frame">
               A <see cref="T:VisioForge.Libs.TagLib.Id3v2.Frame" /> object to make the first of its
               type.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the frames.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the frames.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v2" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TIT2" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.TitleSort">
            <summary>
               Gets and sets the sort names of the Title of the
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names for
               the Title of the media described by the current instance,
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TSOT" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field gives a nice/short precision to 
               the title, which is typically below the title on the
               front cover of a media.
               For example, for "Back to the future", this would be 
               "It's About Time". 
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "TIT3" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This is especially relevant for a movie.
               For example, for "Back to the Future 2", this could be
               "After visiting 2015, Marty McFly must repeat his visit 
               to 1955 to prevent disastrous changes to 1985...without
               interfering with his first trip".
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the "TPE1" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TSOP" Text
               Information Frame. http://www.id3.org/id3v2.4.0-frames
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               <para> This is typically usefull for movies, although the
               instrument played by each artist in a music may be of
               relevance.
               </para>
               <para>It is highly important to match each role to the 
               performers. This means that a role may be <see 
               langword="null"/> to keep the match between a
               Performers[i] and PerformersRole[i].
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "TMCL" Text
               Information Frame: The 'Musician credits list' is 
               intended as a mapping between instruments and the 
               musician that played it.Every odd field is an 
               instrument and every even is an artist or a comma 
               delimited list of artists.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names of the band or artist who is 
               credited in the creation of the entire album or collection
               containing the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TSO2" Text
               Information Frame. http://www.id3.org/iTunes
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TPE2" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TCOM" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ComposersSort">
            <summary>
               Gets and sets the sort names of the composers of the
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TSOC" Text
               Information Frame. http://www.id3.org/id3v2.4.0-frames
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TALB" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.AlbumSort">
            <summary>
               Gets and sets the sort names of the Album title of the
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names for
               the Title in the media described by the current instance,
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TSOA" Text
               Information Frame. http://www.id3.org/id3v2.4.0-frames
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMM" Comments
               Frame with an empty description and the language
               specified by <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.Language" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TCON" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TDRC" Text
               Information Frame. If a value greater than 9999 is set,
               this property will be cleared.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TRCK" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TRCK" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               This property is implemented using the "TPOS" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TPOS" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "USLT"
               Unsynchronized Lyrics Frame with an empty description and
               the language specified by <see cref="P:VisioForge.Libs.TagLib.Id3v2.Tag.Language" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TIT1" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TBPM" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "TPE3" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "TCOP" Text
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "TDTG" Timestamp
               Information Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz ArtistID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ArtistID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Artist Id" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz ReleaseGroupID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseGroupID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Release Group Id" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz ReleaseID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Album Id" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz ReleaseArtistID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseArtistID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Album Artist Id" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz TrackID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               TrackID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "UFID:http://musicbrainz.org" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz DiscID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               DiscID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Disc Id" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIP PUID
               for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicIP PUID" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.AmazonId">
            <summary>
               Gets and sets the Amazon ID (ASIN)
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the Amazon Id
               for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:ASIN" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz ReleaseStatus
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseStatus for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Album Status" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz ReleaseType
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseType for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Album Type" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz ReleaseCountry
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseCountry for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "TXXX:MusicBrainz Album Release Country" frame.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain track gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the track gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the "TXXX:REPLAYGAIN_TRACK_GAIN" frame.
               http://wiki.hydrogenaudio.org/index.php?title=ReplayGain_specification#ID3v2
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain track peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the track peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the "TXXX:REPLAYGAIN_TRACK_PEAK" frame.
               http://wiki.hydrogenaudio.org/index.php?title=ReplayGain_specification#ID3v2
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain album gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the album gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the "TXXX:REPLAYGAIN_ALBUM_GAIN" frame.
               http://wiki.hydrogenaudio.org/index.php?title=ReplayGain_specification#ID3v2
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain album peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the album peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the "TXXX:REPLAYGAIN_ALBUM_PEAK" frame.
               http://wiki.hydrogenaudio.org/index.php?title=ReplayGain_specification#ID3v2
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.InitialKey">
            <summary>
               Gets and sets the initial key of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the initial key of the song.
            </value>
            <remarks>
               This property is implemented using the "TKEY" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.RemixedBy">
            <summary>
               Gets and sets the remixer of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the remixer of the song.
            </value>
            <remarks>
               This property is implemented using the "TPE4" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Publisher">
            <summary>
               Gets and sets the publisher of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the publisher of the song.
            </value>
            <remarks>
               This property is implemented using the "TPUB" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.ISRC">
            <summary>
               Gets and sets the ISRC (International Standard Recording Code) of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the ISRC of the song.
            </value>
            <remarks>
               This property is implemented using the "TSRC" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               This property is implemented using the "APIC" Attached
               Picture Frame.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Id3v2.Tag.IsCompilation">
            <summary>
               Gets and sets whether or not the album described by the
               current instance is a compilation.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               album described by the current instance is a compilation.
            </value>
            <remarks>
               This property is implemented using the "TCMP" Text
               Information Frame to provide support for a feature of the
               Apple iPod and iTunes products.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.CopyTo(VisioForge.Libs.TagLib.Tag,System.Boolean)">
            <summary>
               Copies the values from the current instance to another
               <see cref="T:VisioForge.Libs.TagLib.Tag" />, optionally overwriting
               existing values.
            </summary>
            <param name="target">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the target
               tag to copy values to.
            </param>
            <param name="overwrite">
               A <see cref="T:System.Boolean" /> specifying whether or not to copy
               values over existing one.
            </param>
            <remarks>
               <para>If <paramref name="target" /> is of type <see
               cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> a complete copy of all values
               will be performed. Otherwise, only standard values will
               be copied.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="target" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Id3v2.Tag.Clone">
            <summary>
               Creates a deep copy of the current instance.
            </summary>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> object identical to the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Id3v2.TimestampFormat">
            <summary>
               Specifies the timestamp format used by a <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.SynchronisedLyricsFrame" /> and <see cref="T:VisioForge.Libs.TagLib.Id3v2.EventTimeCodesFrame"/>.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TimestampFormat.Unknown">
            <summary>
               The timestamp is of unknown format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TimestampFormat.AbsoluteMpegFrames">
            <summary>
               The timestamp represents the number of MPEG frames since
               the beginning of the audio stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Id3v2.TimestampFormat.AbsoluteMilliseconds">
            <summary>
               The timestamp represents the number of milliseconds since
               the beginning of the audio stream.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.ByteIFDEntry">
            <summary>
               Contains a byte value
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ByteIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ByteIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ByteIFDEntry.#ctor(System.UInt16,System.Byte)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.Byte"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ByteIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.ByteVectorIFDEntry">
            <summary>
               Contains an BYTE value with a count > 1 (byte sequence).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ByteVectorIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ByteVectorIFDEntry.Data">
            <value>
               The data which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ByteVectorIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ByteVectorIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.LongArrayIFDEntry">
            <summary>
               Contains a LONG value with a count > 1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.LongArrayIFDEntry.#ctor(System.UInt16,System.UInt32[])">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="values">
               A <see cref="T:System.UInt32[]"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.LongArrayIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.LongIFDEntry">
            <summary>
               Contains a LONG value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.LongIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.LongIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.LongIFDEntry.#ctor(System.UInt16,System.UInt32)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.UInt32"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.LongIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType">
            <summary>
               An enum to represent the manufactor of the makernote
               The information of the makernote types is from:
               http://exiv2.org/makernote.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Unknown">
            <summary>
               The manufactor could not be determined
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Canon">
            <summary>
               Canon makernote.
               Standard IFD without a special prefix.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Panasonic">
            <summary>
               Panasonic makernote.
               "Panasonic\0\0\0" prefix and IFD starting at offset 12.
               The next-IFD pointer is missing
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Leica">
            <summary>
               Leica makernote.
               "LEICA\0\0\0" prefix and IFD starting at offset 10.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Pentax">
            <summary>
               Pentax makernote.
               "AOC\0" + 2 unknown bytes as prefix. The IFD starts at
               offset 6.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Nikon1">
            <summary>
               Nikon makernote (type 1).
               Standard IFD without a special prefix.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Nikon2">
            <summary>
               Nikon makernote (type 2).
               "Nikon\0" + 2 unknown bytes prefix. The IFD starts at
               offset 8.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Nikon3">
            <summary>
               Nikon makernote (type 3).
               "Nikon\0" + 4 bytes with verison code + Tiff header.
               The IFD starts usually at offset 18. The offsets of the IFD
               are relative to start of the Tiff header (byte 10)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Olympus1">
            <summary>
               Olympus makernote (type 1).
               "OLYMP\0" + 2 unknown bytes as prefix. The IFD starts at
               offset 8.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Olympus2">
            <summary>
               Olympus makernote (type 2)
               "OLYMPUS\0II" + 2 unknown bytes as prefix. The IFD starts at
               offset 12. The offsets of the IFD are relative to the
               beginning of the makernote.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteType.Sony">
            <summary>
               Sony makernote (type 1).
               "SONY DSC \0\0\0" as prefix. The IFD starts at offset 12. A
               next-IFD pointer is missing.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry">
            <summary>
               Contains a Makernote IFD.
            </summary>
            <remarks>
               Makernote IFDs are mostly of the same form. They start with and
               Manufactor specific prefix indicating the type and contain then
               a IFD structure.
               It must be distinguished, where the offsets in the IFD belongs to.
               For some makernotes the offset refers to the beginning of the
               surrounding metadata IFD structure, for others they refer to the
               start of the makernote.
               In addition the endianess of the makernote can be different to the
               endianess of the surrounding metadata.
               This class takes care about all those things.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.prefix">
            <value>
               Stores the prefix of the makernote
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.ifd_offset">
            <value>
               Stores the offset of the IFD contained in makernote
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.absolute_offset">
            <value>
               Indicates, if the offsets are relative to the current makernote
               or absolut to the base_offset of the surrounding IFD.
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.is_bigendian">
            <value>
               Stores, if the makernote is encoded in big- or little endian.
               If the field is <see langword="null"/>, the endianess of the
               surrounding IFD is used.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.MakernoteType">
            <value>
               The type of the makernote the current instance represents
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.Structure">
            <value>
               The pure <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> which is stored by the
               makernote.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.IFD.IFDStructure,VisioForge.Libs.TagLib.IFD.Entries.MakernoteType,VisioForge.Libs.TagLib.ByteVector,System.UInt32,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> with the IFD structure, which is stored by this
               instance
            </param>
            <param name="makernoteType">
               A <see cref="P:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.MakernoteType"/> with the type of the makernote.
            </param>
            <param name="prefix">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing the prefix, which should be rendered
               before the real IFD.
            </param>
            <param name="ifdOffset">
               A <see cref="T:System.UInt32"/> with the offset in addition to the relative
               offsets in the IFD
            </param>
            <param name="absoluteOffset">
               A <see cref="T:System.Boolean"/> indicating if the offsets of the IFD are relative
               to the <paramref name="ifdOffset"/>, or absolut to the base offset of the
               surrounding IFD.
            </param>
            <param name="is_bigendian">
               A <see cref="T:System.Nullable"/> indicating if the current IFD is encoded in
               big- or little endian. It it is <see langword="null"/>, the endianess of the
               surrounding IFD is used.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.IFD.IFDStructure,VisioForge.Libs.TagLib.IFD.Entries.MakernoteType)">
            <summary>
               Constructor. Creates a makernote instance just containing an IFD and
               without any special prefix or offset behavior.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> with the IFD structure, which is stored by this
               instance
            </param>
            <param name="makernote_type">
               A <see cref="P:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.MakernoteType"/> with the type of the makernote.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.MakernoteIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.Rational">
            <summary>
               Representation of an unsigned rational value
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.Rational.denominator">
            <summary>
               The denominator of the rational value
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.Rational.#ctor(System.UInt32,System.UInt32)">
            <summary>
               Creates a new Rational value
            </summary>
            <param name="numerator">
               A <see cref="T:System.UInt32"/> with the numerator of the
               rational value
            </param>
            <param name="denominator">
               A <see cref="T:System.UInt32"/> with the denominator of the
               rational value. It must be not 0.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.Rational.Reduce">
            <summary>
               Returns a rational value with reduced nominator and denominator
            </summary>
            <returns>
            A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/>
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.Rational.ToString(System.String,System.IFormatProvider)">
            <summary>
               Formatprovider to allow formatting of a value. <see cref="T:System.IFormattable"/>
            </summary>
            <param name="format">
               A <see cref="T:System.String"/>. <see cref="T:System.IFormattable"/>
            </param>
            <param name="provider">
               A <see cref="T:System.IFormatProvider"/>. <see cref="T:System.IFormattable"/>
            </param>
            <returns>
               A <see cref="T:System.String"/> formated according to the given parameter
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.Rational.ToString">
            <summary>
               Converts the value to a <see cref="T:System.String"/>.
            </summary>
            <returns>
               A <see cref="T:System.String"/> with the current value.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.Rational.Numerator">
            <value>
               The numerator of the rational value
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.Rational.Denominator">
            <value>
               The denominator of the rational value
            </value>
            <remarks>
               Cannot be 0.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.Rational.op_Implicit(VisioForge.Libs.TagLib.IFD.Entries.Rational)~System.Double">
            <summary>
               Cast the <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> value to a <see cref="T:System.Double"/>.
            </summary>
            <param name="rat">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> with the value to cast.
            </param>
            <returns>
               A <see cref="T:System.Double"/> with the double.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.RationalArrayIFDEntry">
            <summary>
               Contains a RATIONAL value with a count > 1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.RationalArrayIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.IFD.Entries.Rational[])">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="entries">
               A <see cref="T:Rational[]"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.RationalArrayIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry">
            <summary>
               Contains a RATIONAL value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.IFD.Entries.Rational)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
            A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/>
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SByteIFDEntry">
            <summary>
               Contains a signed byte value
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SByteIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SByteIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SByteIFDEntry.#ctor(System.UInt16,System.SByte)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.SByte"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SByteIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.ShortArrayIFDEntry">
            <summary>
               Contains a SHORT value with a count > 1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ShortArrayIFDEntry.#ctor(System.UInt16,System.UInt16[])">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="values">
               A <see cref="T:System.UInt16[]"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ShortArrayIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.ShortIFDEntry">
            <summary>
               Contains a SHORT value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ShortIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ShortIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ShortIFDEntry.#ctor(System.UInt16,System.UInt16)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.UInt16"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ShortIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SLongArrayIFDEntry">
            <summary>
               Contains a SLONG value with a count > 1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SLongArrayIFDEntry.#ctor(System.UInt16,System.Int32[])">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="values">
               A <see cref="T:System.Int32[]"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SLongArrayIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SLongIFDEntry">
            <summary>
               Contains a signed LONG value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SLongIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SLongIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SLongIFDEntry.#ctor(System.UInt16,System.Int32)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.Int32"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SLongIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SRational">
            <summary>
               Representation of a signed rational value
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.SRational.denominator">
            <summary>
               The denominator of the rational value
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRational.#ctor(System.Int32,System.Int32)">
            <summary>
               Creates a new Rational value
            </summary>
            <param name="numerator">
               A <see cref="T:System.Int32"/> with the numerator of the
               rational value
            </param>
            <param name="denominator">
               A <see cref="T:System.Int32"/> with the denominator of the
               rational value. It must be not 0.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRational.Reduce">
            <summary>
               Returns a rational value with reduced nominator and denominator
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.SRational"/>
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRational.ToString(System.String,System.IFormatProvider)">
            <summary>
               Formatprovider to allow formatting of a value. <see cref="T:System.IFormattable"/>
            </summary>
            <param name="format">
               A <see cref="T:System.String"/>. <see cref="T:System.IFormattable"/>
            </param>
            <param name="provider">
               A <see cref="T:System.IFormatProvider"/>. <see cref="T:System.IFormattable"/>
            </param>
            <returns>
               A <see cref="T:System.String"/> formated according to the given parameter
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRational.ToString">
            <summary>
               Converts the value to a <see cref="T:System.String"/>.
            </summary>
            <returns>
               A <see cref="T:System.String"/> with the current value.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SRational.Numerator">
            <value>
               The numerator of the rational value
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SRational.Denominator">
            <value>
               The denominator of the rational value
            </value>
            <remarks>
               Cannot be 0.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRational.op_Implicit(VisioForge.Libs.TagLib.IFD.Entries.SRational)~System.Double">
            <summary>
               Cast the <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> value to a <see cref="T:System.Double"/>.
            </summary>
            <param name="rat">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> with the value to cast.
            </param>
            <returns>
               A <see cref="T:System.Double"/> with the double.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SRationalArrayIFDEntry">
            <summary>
               Contains a SRATIONAL value with a count > 1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRationalArrayIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.IFD.Entries.SRational[])">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="entries">
               A <see cref="T:SRational[]"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRationalArrayIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SRationalIFDEntry">
            <summary>
               Contains a SRATIONAL value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SRationalIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SRationalIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRationalIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.IFD.Entries.SRational)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.SRational"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SRationalIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SShortArrayIFDEntry">
            <summary>
               Contains a SSHORT value with a count > 1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SShortArrayIFDEntry.#ctor(System.UInt16,System.Int16[])">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="values">
               A <see cref="T:System.Int16[]"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SShortArrayIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SShortIFDEntry">
            <summary>
               Contains a Signed SHORT value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SShortIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SShortIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SShortIFDEntry.#ctor(System.UInt16,System.UInt16)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.Int16"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SShortIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry">
            <summary>
               Contains an ASCII STRING value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry.#ctor(System.UInt16,System.String)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.String"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.StripOffsetsIFDEntry">
            <summary>
               Contains the offsets to the image data strips.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.StripOffsetsIFDEntry.byte_counts">
            <value>
               Store the strip length to read them before writing.
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.StripOffsetsIFDEntry.file">
            <value>
               The file the offsets belong to
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.StripOffsetsIFDEntry.#ctor(System.UInt16,System.UInt32[],System.UInt32[],VisioForge.Libs.TagLib.File)">
            <summary>
               Constructor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="values">
               A <see cref="T:System.UInt32[]"/> with the strip offsets.
            </param>
            <param name="byte_counts">
               The length of the strips.
            </param>
            <param name="file">
               The file from which the strips will be read.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.StripOffsetsIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SubIFDArrayEntry">
            <summary>
               Contains the SubIFDs IFD entry.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDArrayEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDArrayEntry.Entries">
            <value>
               The structures of the IFDs to which this entry points.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SubIFDArrayEntry.#ctor(System.UInt16,System.Collections.Generic.List{VisioForge.Libs.TagLib.IFD.IFDStructure})">
            <summary>
               Constructor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="entries">
               A set of ifd structures.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SubIFDArrayEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry">
            <summary>
               Contains a Sub IFD.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.Type">
            <value>
               The type of the IFD entry.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.Count">
            <value>
               The count of the IFD entry.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.Structure">
            <value>
               The structure of the sub-ifd which is stored by the current
               instance
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.ChildCount">
            <value>
               The number of entries in the entire IFD.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.#ctor(System.UInt16,System.UInt16,System.UInt32,VisioForge.Libs.TagLib.IFD.IFDStructure)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> with the type of the IFD entry.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the IFD entry.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.ThumbnailDataIFDEntry">
            <summary>
               Contains the data of a Thumbnail. Since the thumbnail is
               referenced by two long entries (offset to the data and length)
               we need to take care of this special case.
               This entry acts as the offset-entry but holds also the
               thumbail data. When rendering the entry, we have to render the
               data but write a long entry.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ThumbnailDataIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.ThumbnailDataIFDEntry.Data">
            <value>
               The data of the thumbnail which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ThumbnailDataIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the thumbnail data to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.ThumbnailDataIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.UndefinedIFDEntry">
            <summary>
               Contains an Undefined value type, represented by a byte vector
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.UndefinedIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.UndefinedIFDEntry.Data">
            <value>
               The data which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.UndefinedIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.UndefinedIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry">
            <summary>
               Contains an ASCII STRING value.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.COMMENT_ASCII_CODE">
            <summary>
              Marker for an ASCII-encoded UserComment tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.COMMENT_JIS_CODE">
            <summary>
              Marker for a JIS-encoded UserComment tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.COMMENT_UNICODE_CODE">
            <summary>
              Marker for a UNICODE-encoded UserComment tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.COMMENT_BAD_UNICODE_CODE">
            <summary>
              Corrupt marker that seems to be resembling unicode.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.COMMENT_UNDEFINED_CODE">
            <summary>
              Marker for a UserComment tag with undefined encoding.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.Value">
            <value>
               The value which is stored by the current instance
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.#ctor(System.UInt16,System.String)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="value">
               A <see cref="T:System.String"/> to be stored
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.#ctor(System.UInt16,VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.File)">
            <summary>
               Construcor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to be stored
            </param>
            <param name="file">
               The file that's currently being parsed, used for reporting corruptions.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Entries.UserCommentIFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDDirectory">
            <summary>
               Contains the entries in this IFD.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDEntry">
            <summary>
               An IFD entry, which is a key/value pair inside an IFD.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDEntry.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDEntry.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.ArrayIFDEntry`1">
            <summary>
               This class abstracts common stuff for array IFD entries
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.ArrayIFDEntry`1.Tag">
            <value>
               The ID of the tag, the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.ArrayIFDEntry`1.Values">
            <value>
               The values stored by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.ArrayIFDEntry`1.#ctor(System.UInt16)">
            <summary>
               Constructor.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag ID of the entry this instance
               represents
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.ArrayIFDEntry`1.Render(System.Boolean,System.UInt32,System.UInt16@,System.UInt32@)">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>
            </summary>
            <param name="is_bigendian">
               A <see cref="T:System.Boolean"/> indicating the endianess for rendering.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset, the data is stored.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> the ID of the type, which is rendered
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the count of the values which are
               rendered.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered data.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDEntryType">
            <summary>
               A type indicator, which identifies how the corresponding value
               field should be interpreted.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Unknown">
            <summary>
               Unknown (shouldn't occur)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Byte">
            <summary>
               8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Ascii">
            <summary>
               8-bit byte that contains a 7-bit ASCII code; the last byte
               must be NUL (binary zero).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Short">
            <summary>
               16-bit (2-byte) unsigned integer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Long">
            <summary>
               32-bit (4-byte) unsigned integer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Rational">
            <summary>
               Two LONGs: the first represents the numerator of a
               fraction; the second, the denominator.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.SByte">
            <summary>
               An 8-bit signed (twos-complement) integer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Undefined">
            <summary>
               An 8-bit byte that may contain anything, depending on
               the definition of the field.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.SShort">
            <summary>
               A 16-bit (2-byte) signed (twos-complement) integer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.SLong">
            <summary>
               A 32-bit (4-byte) signed (twos-complement) integer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.SRational">
            <summary>
               Two SLONG’s: the first represents the numerator of a
               fraction, the second the denominator.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Float">
            <summary>
               Single precision (4-byte) IEEE format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.Double">
            <summary>
               Double precision (8-byte) IEEE format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDEntryType.IFD">
            <summary>
               IFD
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDReader">
            <summary>
                This class contains all the IFD reading and parsing code.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.file">
            <summary>
               The <see cref="T:VisioForge.Libs.TagLib.File" /> where this IFD is found in.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.is_bigendian">
            <summary>
               If IFD is encoded in BigEndian or not
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.structure">
            <summary>
               The IFD structure that will be populated
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.base_offset">
            <summary>
                A <see cref="T:System.Int64"/> value describing the base were the IFD offsets
                refer to. E.g. in Jpegs the IFD are located in an Segment and the offsets
                inside the IFD refer from the beginning of this segment. So base_offset must
                contain the beginning of the segment.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.ifd_offset">
            <summary>
                A <see cref="T:System.UInt32"/> value with the beginning of the IFD relative to
                base_offset.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.max_offset">
            <summary>
               A <see cref="T:System.UInt32"/> with the maximal offset, which should occur in the
               IFD. Greater offsets, would reference beyond the considered data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDReader.parse_makernote">
            <summary>
               Whether or not the makernote should be parsed.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDReader.ShouldParseMakernote">
            <summary>
               Whether or not the makernote should be parsed.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.#ctor(VisioForge.Libs.TagLib.File,System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Constructor. Reads an IFD from given file, using the given endianness.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File"/> to read from.
            </param>
            <param name="is_bigendian">
                A <see cref="T:System.Boolean"/>, it must be true, if the data of the IFD should be
                read as bigendian, otherwise false.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> that will be populated.
            </param>
            <param name="base_offset">
                A <see cref="T:System.Int64"/> value describing the base were the IFD offsets
                refer to. E.g. in Jpegs the IFD are located in an Segment and the offsets
                inside the IFD refer from the beginning of this segment. So <paramref
                name="base_offset"/> must contain the beginning of the segment.
            </param>
            <param name="ifd_offset">
                A <see cref="T:System.UInt32"/> value with the beginning of the IFD relative to
                <paramref name="base_offset"/>.
            </param>
            <param name="max_offset">
            	A <see cref="T:System.UInt32"/> value with maximal possible offset. This is to limit
                the size of the possible data;
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.Read">
            <summary>
               Read all IFD segments from the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.Read(System.Int32)">
            <summary>
               Read IFD segments from the file.
            </summary>
            <para>
               The number of IFDs that may be read can be restricted using the count
               parameter. This might be needed for fiels that have invalid next-ifd
               pointers (such as some IFDs in the Nikon Makernote). This condition is
               tested in the Nikon2 unit test, which contains such a file.
            </para>
            <param name="count">
                A <see cref="T:System.Int32"/> with the maximal number of IFDs to read.
                Passing -1 means unlimited.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.StartIFDLoopDetect">
            <summary>
               Add to the reference count for the IFD loop detection.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.DetectIFDLoop(System.Int64)">
            <summary>
               Attempts to detect whether or not this file has an endless IFD loop.
            </summary>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset at which the next IFD
               can be found.
            </param>
            <returns>
               True if we have gone into a loop, false otherwise.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.StopIFDLoopDetect">
            <summary>
               End the IFD loop detection, cleanup if we're the last.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadIFD(System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Reads an IFD from file at position <paramref name="offset"/> relative
               to <paramref name="baseOffset"/>.
            </summary>
            <param name="baseOffset">
               A <see cref="T:System.Int64"/> with the base offset which every offset
               in IFD is relative to.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset of the IFD relative to
               <paramref name="baseOffset"/>
            </param>
            <param name="maxOffset">
               A <see cref="T:System.UInt32"/> with the maximal offset to consider for
               the IFD.
            </param>
            <returns>
               A <see cref="T:System.UInt32"/> with the offset of the next IFD, the
               offset is also relative to <paramref name="baseOffset"/>
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.CreateIFDEntry(System.UInt16,System.UInt16,System.UInt32,System.Int64,VisioForge.Libs.TagLib.ByteVector,System.UInt32)">
            <summary>
               Creates an IFDEntry from the given values. This method is used for
               every entry. Custom parsing can be hooked in by overriding the
               <see cref="M:VisioForge.Libs.TagLib.IFD.IFDReader.ParseIFDEntry(System.UInt16,System.UInt16,System.UInt32,System.Int64,System.UInt32)"/> method.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> with the type of the entry.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the data count of the entry.
            </param>
            <param name="baseOffset">
               A <see cref="T:System.Int64"/> with the base offset which every
               offsets in the IFD are relative to.
            </param>
            <param name="offsetData">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing exactly 4 byte with the data
               of the offset of the entry. Since this field isn't interpreted as
               an offset if the data can be directly stored in the 4 byte, we
               pass the <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to easier interpret it.
            </param>
            <param name="maxOffset">
               A <see cref="T:System.UInt32"/> with the maximal offset to consider for
               the IFD.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> with the given parameter.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadShort">
            <summary>
               Reads a 2-byte signed short from the current file.
            </summary>
            <returns>
               A <see cref="T:System.Int16" /> value containing the short read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadUShort">
            <summary>
               Reads a 2-byte unsigned short from the current file.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the short read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadInt">
            <summary>
               Reads a 4-byte int from the current file.
            </summary>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the int read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadUInt">
            <summary>
               Reads a 4-byte unsigned int from the current file.
            </summary>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the int read
               from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadRational">
            <summary>
               Reads a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> by two following unsigned
               int from the current file.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> value created by the read values.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadSRational">
            <summary>
               Reads a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.SRational"/> by two following unsigned
               int from the current file.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.SRational"/> value created by the read values.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadUShortArray(System.UInt32)">
            <summary>
               Reads an array of 2-byte shorts from the current file.
            </summary>
            <returns>
               An array of <see cref="T:System.UInt16" /> values containing the
               shorts read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadShortArray(System.UInt32)">
            <summary>
               Reads an array of 2-byte signed shorts from the current file.
            </summary>
            <returns>
               An array of <see cref="T:System.Int16" /> values containing the
               shorts read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadIntArray(System.UInt32)">
            <summary>
               Reads an array of 4-byte int from the current file.
            </summary>
            <returns>
               An array of <see cref="T:System.Int32" /> values containing the
               shorts read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadUIntArray(System.UInt32)">
            <summary>
               Reads an array of 4-byte unsigned int from the current file.
            </summary>
            <returns>
               An array of <see cref="T:System.UInt32" /> values containing the
               shorts read from the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ReadAsciiString(System.Int32)">
            <summary>
               Reads an ASCII string from the current file.
            </summary>
            <returns>
               A <see cref="T:System.String" /> read from the current instance.
            </returns>
            <remarks>
               The exif standard allows to store multiple string separated
               by '\0' in one ASCII-field. On the other hand some programs
               (e.g. CanonZoomBrowser) fill some ASCII fields by trailing
               '\0's.
               We follow the Adobe practice as described in XMP Specification
               Part 3 (Storeage in Files), and process the ASCII string only
               to the first '\0'.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.FixupDirectory(System.Int64,VisioForge.Libs.TagLib.IFD.IFDDirectory)">
            <summary>
               Performs some fixups to a read <see cref="T:VisioForge.Libs.TagLib.IFD.IFDDirectory"/>. For some
               special cases multiple <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> instances contained
               in the directory are needed. Therfore, we do the fixups after reading the
               whole directory to be sure, all entries are present.
            </summary>
            <param name="baseOffset">
               A <see cref="T:System.Int64"/> value with the base offset, all offsets in the
               directory refers to.
            </param>
            <param name="directory">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDDirectory"/> instance which was read and needs fixes.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.ParseIFDEntry(System.UInt16,System.UInt16,System.UInt32,System.Int64,System.UInt32)">
            <summary>
               Try to parse the given IFD entry, used to discover format-specific entries.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> with the type of the entry.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the data count of the entry.
            </param>
            <param name="baseOffset">
               A <see cref="T:System.Int64"/> with the base offset which every offsets in the
               IFD are relative to.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset of the entry.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> with the given parameters, or null if none was parsed, after
               which the normal TIFF parsing is used.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDReader.CreateSubIFDReader(VisioForge.Libs.TagLib.File,System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Create a reader for Sub IFD entries.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File"/> to read from.
            </param>
            <param name="isBigendian">
                A <see cref="T:System.Boolean"/>, it must be true, if the data of the IFD should be
                read as bigendian, otherwise false.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> that will be populated.
            </param>
            <param name="baseOffset">
               A <see cref="T:System.Int64"/> with the base offset which every offsets in the
               IFD are relative to.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset of the entry.
            </param>
            <param name="maxOffset">
               A <see cref="T:System.UInt32"/> with the maximal offset to consider for
               the IFD.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDReader"/> which can be used to read the specified sub IFD.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDRenderer">
            <summary>
                This class contains all the IFD rendering code.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDRenderer.structure">
            <summary>
               The IFD structure that will be rendered.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDRenderer.is_bigendian">
            <summary>
               If IFD should be encoded in BigEndian or not.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDRenderer.ifd_offset">
            <summary>
               A <see cref="T:System.UInt32"/> value with the offset of the
               current IFD. All offsets inside the IFD must be adjusted
               according to this given offset.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDRenderer.#ctor(System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.UInt32)">
            <summary>
               Constructor. Will render the given IFD structure.
            </summary>
            <param name="is_bigendian">
               If IFD should be encoded in BigEndian or not.
            </param>
            <param name="structure">
               The IFD structure that will be rendered.
            </param>
            <param name="ifd_offset">
               A <see cref="T:System.UInt32"/> value with the offset of the
               current IFD. All offsets inside the IFD must be adjusted
               according to this given offset.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDRenderer.Render">
            <summary>
               Renders the current instance to a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/>.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing the rendered IFD.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDRenderer.RenderIFD(VisioForge.Libs.TagLib.IFD.IFDDirectory,System.UInt32,System.Boolean)">
            <summary>
               Renders the IFD to an ByteVector where the offset of the IFD
               itself is <paramref name="ifd_offset"/> and all offsets
               contained in the IFD are adjusted accroding it.
            </summary>
            <param name="directory">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDDirectory"/> with the directory to render.
            </param>
            <param name="ifd_offset">
               A <see cref="T:System.UInt32"/> with the offset of the IFD
            </param>
            <param name="last">
               A <see cref="T:System.Boolean"/> which is true, if the IFD is
               the last one, i.e. the offset to the next IFD, which is
               stored inside the IFD, is 0. If the value is false, the
               offset to the next IFD is set that it starts directly after
               the current one.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered IFD.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDRenderer.RenderEntry(VisioForge.Libs.TagLib.ByteVector,System.UInt16,System.UInt16,System.UInt32,System.UInt32)">
            <summary>
               Adds the data of a single entry to <paramref name="entry_data"/>.
            </summary>
            <param name="entry_data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to add the entry to.
            </param>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> with the type of the entry.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the data count of the entry,
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset field of the entry.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDRenderer.RenderEntryData(VisioForge.Libs.TagLib.IFD.IFDEntry,VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.UInt32)">
            <summary>
               Renders a complete entry together with the data. The entry itself
               is stored in <paramref name="entry_data"/> and the data of the
               entry is stored in <paramref name="offset_data"/> if it cannot be
               stored in the offset. This method is called for every <see
               cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> of this IFD and can be overwritten in subclasses
               to provide special behavior.
            </summary>
            <param name="entry">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> with the entry to render.
            </param>
            <param name="entry_data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to add the entry to.
            </param>
            <param name="offset_data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> to add the entry data to if it cannot be
               stored in the offset field.
            </param>
            <param name="data_offset">
               A <see cref="T:System.UInt32"/> with the offset, were the data of the
               entries starts. It is needed to adjust the offsets of the entries
               itself.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDRenderer.CreateSubRenderer(System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.UInt32)">
            <summary>
               Constructs a new IFD Renderer used to render a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.SubIFDEntry"/>.
            </summary>
            <param name="is_bigendian">
               If IFD should be encoded in BigEndian or not.
            </param>
            <param name="structure">
               The IFD structure that will be rendered.
            </param>
            <param name="ifd_offset">
               A <see cref="T:System.UInt32"/> value with the offset of the
               current IFD. All offsets inside the IFD must be adjusted
               according to this given offset.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDStructure">
            <summary>
               This class resembles the structure of a TIFF file. It can either be a
               top-level IFD, or a nested IFD (in the case of Exif).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDStructure.directories">
            <summary>
               Contains the IFD directories in this tag.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDStructure.Directories">
            <summary>
               Gets the IFD directories contained in the current instance.
            </summary>
            <value>
               An array of <see cref="T:VisioForge.Libs.TagLib.IFD.IFDDirectory"/> instances.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.ContainsTag(System.Int32,System.UInt16)">
            <summary>
               Checks, if a value for the given tag is contained in the IFD.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> value with the directory index that
               contains the tag.
            </param>
            <param name="tag">
               A <see cref="T:System.UInt16"/> value with the tag.
            </param>
            <returns>
               A <see cref="T:System.Boolean"/>, which is true, if the tag is already
               contained in the IFD, otherwise false.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.RemoveTag(System.Int32,System.UInt16)">
            <summary>
               Removes a given tag from the IFD.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> value with the directory index that
               contains the tag to remove.
            </param>
            <param name="tag">
               A <see cref="T:System.UInt16"/> value with the tag to remove.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.RemoveTag(System.Int32,VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag)">
            <summary>
               Removes a given tag from the IFD.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> value with the directory index that
               contains the tag to remove.
            </param>
            <param name="entry_tag">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag"/> value with the tag to remove.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.AddEntry(System.Int32,VisioForge.Libs.TagLib.IFD.IFDEntry)">
            <summary>
               Adds an <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> to the IFD, if it is not already
               contained in, it fails otherwise.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> value with the directory index that
               should contain the tag that will be added.
            </param>
            <param name="entry">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> to add to the IFD.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.SetEntry(System.Int32,VisioForge.Libs.TagLib.IFD.IFDEntry)">
            <summary>
               Adds an <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> to the IFD. If it is already contained
               in the IFD, it is overwritten.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> value with the directory index that
               contains the tag that will be set.
            </param>
            <param name="entry">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> to add to the IFD.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetEntry(System.Int32,System.UInt16)">
            <summary>
              Returns the <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> belonging to the given tag.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the directory that contains
               the wanted tag.
            </param>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag to get.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> belonging to the given tag, or
               null, if no such tag is contained in the IFD.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetEntry(System.Int32,VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag)">
            <summary>
              Returns the <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> belonging to the given tag.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the directory that contains
               the wanted tag.
            </param>
            <param name="entry_tag">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag"/> with the tag to get.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> belonging to the given tag, or
               null, if no such tag is contained in the IFD.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetStringValue(System.Int32,System.UInt16)">
            <summary>
               Returns the <see cref="T:System.String"/> stored in the
               entry defined by <paramref name="entry_tag"/>.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to search for the entry.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <returns>
               A <see cref="T:System.String"/> with the value stored in the entry
               or <see langword="null" /> if no such entry is contained or it
               does not contain a <see cref="T:System.String"/> value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetByteValue(System.Int32,System.UInt16)">
            <summary>
               Returns a <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.Byte"/> stored in the entry defined
               by <paramref name="entry_tag"/>.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to search for the entry.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <returns>
               A <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.Byte"/> stored in the entry, or
               <see langword="null" /> if no such entry is contained or it
               does not contain a <see cref="T:System.Byte"/> value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetLongValue(System.Int32,System.UInt16)">
            <summary>
               Returns a <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.UInt32"/> stored in the entry defined
               by <paramref name="entry_tag"/>.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to search for the entry.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <returns>
               A <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.UInt32"/> stored in the entry, or
               <see langword="null" /> if no such entry is contained or it
               does not contain a <see cref="T:System.UInt32"/> value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetRationalValue(System.Int32,System.UInt16)">
            <summary>
               Returns a <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.Double"/> stored in the entry defined
               by <paramref name="entry_tag"/>. The entry can be of type
               <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry"/> or
               <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.SRationalIFDEntry"/>
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to search for the entry.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <returns>
               A <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.Double"/> stored in the entry, or
               <see langword="null" /> if no such entry is contained.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.GetDateTimeValue(System.Int32,System.UInt16)">
            <summary>
               Returns a <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.DateTime"/> stored in the entry defined
               by <paramref name="entry_tag"/>. The entry must be of type
               <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry"/> and contain an datestring
               according to the Exif specification.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to search for the entry.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <returns>
               A <see cref="T:System.Nullable"/> containing the
               <see cref="T:System.DateTime"/> stored in the entry, or
               <see langword="null" /> if no such entry is contained or it
               does not contain a valid value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.SetStringValue(System.Int32,System.UInt16,System.String)">
            <summary>
               Adds a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry"/> to the directory with tag
               given by <paramref name="entry_tag"/> and value given by <paramref name="value"/>
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to add the entry to.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <param name="value">
               A <see cref="T:System.String"/> with the value to add. If it is <see langword="null" />
               an possibly already contained entry is removed for given tag.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.SetByteValue(System.Int32,System.UInt16,System.Byte)">
            <summary>
               Adds a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.ByteIFDEntry"/> to the directory with tag
               given by <paramref name="entry_tag"/> and value given by <paramref name="value"/>
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to add the entry to.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <param name="value">
               A <see cref="T:System.Byte"/> with the value to add.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.SetLongValue(System.Int32,System.UInt16,System.UInt32)">
            <summary>
               Adds a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.LongIFDEntry"/> to the directory with tag
               given by <paramref name="entry_tag"/> and value given by <paramref name="value"/>
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to add the entry to.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <param name="value">
               A <see cref="T:System.UInt32"/> with the value to add.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.SetRationalValue(System.Int32,System.UInt16,System.Double)">
            <summary>
               Adds a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.RationalIFDEntry"/> to the directory with tag
               given by <paramref name="entry_tag"/> and value given by <paramref name="value"/>
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to add the entry to.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <param name="value">
               A <see cref="T:System.Double"/> with the value to add. It must be possible to
               represent the value by a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/>.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDStructure.SetDateTimeValue(System.Int32,System.UInt16,System.DateTime)">
            <summary>
               Adds a <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.StringIFDEntry"/> to the directory with tag
               given by <paramref name="entry_tag"/> and value given by <paramref name="value"/>.
               The value is stored as a date string according to the Exif specification.
            </summary>
            <param name="directory">
               A <see cref="T:System.Int32"/> with the number of the directory
               to add the entry to.
            </param>
            <param name="entry_tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry
            </param>
            <param name="value">
               A <see cref="T:System.DateTime"/> with the value to add.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.IFDTag">
            <summary>
               Contains the metadata for one IFD (Image File Directory).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDTag.exif_ifd">
            <summary>
               A reference to the Exif IFD (which can be found by following the
               pointer in IFD0, ExifIFD tag). This variable should not be used
               directly, use the <see cref="P:VisioForge.Libs.TagLib.IFD.IFDTag.ExifIFD"/> property instead.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.IFDTag.gps_ifd">
            <summary>
               A reference to the GPS IFD (which can be found by following the
               pointer in IFD0, GPSIFD tag). This variable should not be used
               directly, use the <see cref="P:VisioForge.Libs.TagLib.IFD.IFDTag.GPSIFD"/> property instead.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Structure">
            <value>
               The IFD structure referenced by the current instance
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.ExifIFD">
            <summary>
               The Exif IFD. Will create one if the file doesn't alread have it.
            </summary>
            <remarks>
               <para>Note how this also creates an empty IFD for exif, even if
               you don't set a value. That's okay, empty nested IFDs get ignored
               when rendering.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.GPSIFD">
            <summary>
               The GPS IFD. Will create one if the file doesn't alread have it.
            </summary>
            <remarks>
               <para>Note how this also creates an empty IFD for GPS, even if
               you don't set a value. That's okay, empty nested IFDs get ignored
               when rendering.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.TiffIFD" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDTag.#ctor">
            <summary>
               Constructor. Creates an empty IFD tag. Can be populated manually, or via
               <see cref="T:VisioForge.Libs.TagLib.IFD.IFDReader"/>.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Comment">
            <summary>
               Gets or sets the comment for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the comment of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Creator">
            <summary>
               Gets or sets the creator of the image.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the name of the creator.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Software">
            <summary>
               Gets or sets the software the image, the current instance
               belongs to, was created with.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the name of the
               software the current instace was created with.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.DateTime">
            <summary>
               Gets or sets the time when the image, the current instance
               belongs to, was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time the image was taken.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.DateTimeOriginal">
            <summary>
               The time of capturing.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time of capturing.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.DateTimeDigitized">
            <summary>
               The time of digitization.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time of digitization.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Latitude">
            <summary>
               Gets or sets the latitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the latitude ranging from -90.0
               to +90.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Longitude">
            <summary>
               Gets or sets the longitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the longitude ranging from -180.0
               to +180.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Altitude">
            <summary>
               Gets or sets the altitude of the GPS coordinate the current
               image was taken. The unit is meter.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the altitude. A positive value
               is above sea level, a negative one below sea level. The unit is meter.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.ExposureTime">
            <summary>
               Gets the exposure time the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the exposure time in seconds.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.FNumber">
            <summary>
               Gets the FNumber the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the FNumber.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.ISOSpeedRatings">
            <summary>
               Gets the ISO speed the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the ISO speed as defined in ISO 12232.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.FocalLength">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.FocalLengthIn35mmFilm">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with, assuming a 35mm film camera.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in 35mm equivalent in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Orientation">
            <summary>
               Gets or sets the orientation of the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageOrientation" /> containing the orientation of the
               image
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Make">
            <summary>
               Gets the manufacture of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the manufacture name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IFD.IFDTag.Model">
            <summary>
               Gets the model name of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the model name.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDTag.InitGpsDirectory">
            <summary>
               Initilazies the GPS IFD with some basic entries.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.IFDTag.DegreeToRationals(System.Double)">
            <summary>
               Converts a given (positive) angle value to three rationals like they
               are used to store an angle for GPS data.
            </summary>
            <param name="angle">
               A <see cref="T:System.Double"/> between 0.0d and 180.0d with the angle
               in degrees
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.Entries.Rational"/> representing the same angle by degree, minutes
               and seconds of the angle.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Makernotes.Nikon3MakernoteReader">
            <summary>
                This class contains Nikon3 makernote specific reading logic.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Makernotes.Nikon3MakernoteReader.#ctor(VisioForge.Libs.TagLib.File,System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Constructor. Reads an IFD from given file, using the given endianness.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File"/> to read from.
            </param>
            <param name="is_bigendian">
                A <see cref="T:System.Boolean"/>, it must be true, if the data of the IFD should be
                read as bigendian, otherwise false.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> that will be populated.
            </param>
            <param name="base_offset">
                A <see cref="T:System.Int64"/> value describing the base were the IFD offsets
                refer to. E.g. in Jpegs the IFD are located in an Segment and the offsets
                inside the IFD refer from the beginning of this segment. So <paramref
                name="base_offset"/> must contain the beginning of the segment.
            </param>
            <param name="ifd_offset">
                A <see cref="T:System.UInt32"/> value with the beginning of the IFD relative to
                <paramref name="base_offset"/>.
            </param>
            <param name="max_offset">
            	A <see cref="T:System.UInt32"/> value with maximal possible offset. This is to limit
                the size of the possible data;
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IFD.Makernotes.Nikon3MakernoteReader.ParseIFDEntry(System.UInt16,System.UInt16,System.UInt32,System.Int64,System.UInt32)">
            <summary>
               Try to parse the given IFD entry, used to discover format-specific entries.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> with the type of the entry.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the data count of the entry.
            </param>
            <param name="base_offset">
               A <see cref="T:System.Int64"/> with the base offset which every offsets in the
               IFD are relative to.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset of the entry.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> with the given parameters, or null if none was parsed, after
               which the normal TIFF parsing is used.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag">
            <summary>
               Label tags for Canon File Info.
               Based on http://www.exiv2.org/tags-canon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.FileNumber">
            <summary>
               File Number. (Hex: 0X0001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.BracketMode">
            <summary>
               Bracket Mode. (Hex: 0X0003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.BracketValue">
            <summary>
               Bracket Value. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.BracketShotNumber">
            <summary>
               Bracket Shot Number. (Hex: 0X0005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.RawJpgQuality">
            <summary>
               Raw Jpg Quality. (Hex: 0X0006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.RawJpgSize">
            <summary>
               Raw Jpg Size. (Hex: 0X0007)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.NoiseReduction">
            <summary>
               Noise Reduction. (Hex: 0X0008)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.WBBracketMode">
            <summary>
               WB Bracket Mode. (Hex: 0X0009)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.WBBracketValueAB">
            <summary>
               WB Bracket Value AB. (Hex: 0X000C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.WBBracketValueGM">
            <summary>
               WB Bracket Value GM. (Hex: 0X000D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.FilterEffect">
            <summary>
               Filter Effect. (Hex: 0X000E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonFileInfoEntryTag.ToningEffect">
            <summary>
               Toning Effect. (Hex: 0X000F)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag">
            <summary>
               Label tags for Canon Makernote.
               Based on http://www.burren.cx/david/canon.html and http://www.exiv2.org/tags-canon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.Unknown0">
            <summary>
               Unknown field at tag 0x0000. (Hex: 0x0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.CameraSettings">
            <summary>
               Camera Settings. (Hex: 0x0001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.FocalLength">
            <summary>
               Focal Length. (Hex: 0x0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.Unknown3">
            <summary>
               Unknown field at tag 0x0000. (Hex: 0x0003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.ShotInfo">
            <summary>
               Shot Information. (Hex: 0x0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.Panorama">
            <summary>
               Panorama. (Hex: 0x0005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.ImageType">
            <summary>
               Image Type. (Hex: 0x0006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.FirmwareVersion">
            <summary>
               Firmware Version. (Hex: 0x0007)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.ImageNumber">
            <summary>
               Image Number. (Hex: 0x0008)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.OwnerName">
            <summary>
               Owner Name. (Hex: 0x0009)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.SerialNumber">
            <summary>
               Serial Number. (Hex: 0x000C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.Unknown13">
            <summary>
               Unknown field at tag 0x0000. (Hex: 0x000D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.CustomFunctions">
            <summary>
               Custom Functions. (Hex: 0x000F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.ModelID">
            <summary>
               Model ID. (Hex: 0x0010)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.PictureInfo">
            <summary>
               Picture Info. (Hex: 0x0012)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.SerialNumberFormat">
            <summary>
               Serial Number Format. (Hex: 0x0015)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.CanonFileInfo">
            <summary>
               Canon File Info. (Hex: 0x0093)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.LensModel">
            <summary>
               Lens Model. (Hex: 0x0095)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.SerialInfo">
            <summary>
               Serial Info. (Hex: 0x0096)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.ProcessingInfo">
            <summary>
               Processing Info. (Hex: 0x00A0)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.WhiteBalanceTable">
            <summary>
               White Balance Table. (Hex: 0x00A9)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.MeasuredColor">
            <summary>
               Measured Color. (Hex: 0x00AA)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.ColorSpace">
            <summary>
               Color Space. (Hex: 0x00B4)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.SensorInfo">
            <summary>
               Sensor Info. (Hex: 0x00E0)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonMakerNoteEntryTag.BlackLevel">
            <summary>
               Black Level. (Hex: 0x4008)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag">
            <summary>
               Label tags for Canon Picture Info.
               Based on http://www.exiv2.org/tags-canon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag.ImageWidth">
            <summary>
               Image width. (Hex: 0X0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag.ImageHeight">
            <summary>
               Image height. (Hex: 0X0003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag.ImageWidthAsShot">
            <summary>
               Image width (as shot). (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag.ImageHeightAsShot">
            <summary>
               Image height (as shot). (Hex: 0X0005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag.AFPointsUsed">
            <summary>
               AF points used. (Hex: 0X0016)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.CanonPictureInfoEntryTag.AFPointsUsed20D">
            <summary>
               AF points used (20D). (Hex: 0X001A)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag">
            <summary>
               Entry tags occuring in the Exif IFD
               The complete overview can be obtained at:
               http://www.awaresystems.be/imaging/tiff.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.CFARepeatPatternDim">
            <summary>
                Contains two values representing the minimum rows and columns
                to define the repeating patterns of the color filter array.
                (Hex: 0x828D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.CFAPattern">
            <summary>
                Contains two values representing the minimum rows and columns
                to define the repeating patterns of the color filter array.
                (Hex: 0x828E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ExposureTime">
            <summary>
                Exposure time, given in seconds. (Hex: 0x829A)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/exposuretime.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FNumber">
            <summary>
                The F number. (Hex: 0x829D)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/fnumber.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ExposureProgram">
            <summary>
                The class of the program used by the camera to set exposure when the picture is taken. (Hex: 0x8822)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/exposureprogram.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SpectralSensitivity">
            <summary>
                Indicates the spectral sensitivity of each channel of the camera used. (Hex: 0x8824)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/spectralsensitivity.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ISOSpeedRatings">
            <summary>
                Indicates the ISO Speed and ISO Latitude of the camera or input device as specified in ISO 12232. (Hex: 0x8827)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/isospeedratings.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.OECF">
            <summary>
                Indicates the Opto-Electric Conversion Function (OECF) specified in ISO 14524. (Hex: 0x8828)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/oecf.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ExifVersion">
            <summary>
                The version of the supported Exif standard. (Hex: 0x9000)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/exifversion.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.DateTimeOriginal">
            <summary>
                The date and time when the original image data was generated. (Hex: 0x9003)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/datetimeoriginal.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.DateTimeDigitized">
            <summary>
                The date and time when the image was stored as digital data. (Hex: 0x9004)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/datetimedigitized.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ComponentsConfiguration">
            <summary>
                Specific to compressed data; specifies the channels and complements PhotometricInterpretation (Hex: 0x9101)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/componentsconfiguration.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.CompressedBitsPerPixel">
            <summary>
                Specific to compressed data; states the compressed bits per pixel. (Hex: 0x9102)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/compressedbitsperpixel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ShutterSpeedValue">
            <summary>
                Shutter speed. (Hex: 0x9201)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/shutterspeedvalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ApertureValue">
            <summary>
                The lens aperture. (Hex: 0x9202)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/aperturevalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.BrightnessValue">
            <summary>
                The value of brightness. (Hex: 0x9203)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/brightnessvalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ExposureBiasValue">
            <summary>
                The exposure bias. (Hex: 0x9204)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/exposurebiasvalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.MaxApertureValue">
            <summary>
                The smallest F number of the lens. (Hex: 0x9205)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/maxaperturevalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubjectDistance">
            <summary>
                The distance to the subject, given in meters. (Hex: 0x9206)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subjectdistance.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.MeteringMode">
            <summary>
                The metering mode. (Hex: 0x9207)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/meteringmode.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.LightSource">
            <summary>
                The kind of light source. (Hex: 0x9208)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/lightsource.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.Flash">
            <summary>
                Indicates the status of flash when the image was shot. (Hex: 0x9209)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/flash.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FocalLength">
            <summary>
                The actual focal length of the lens, in mm. (Hex: 0x920A)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/focallength.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubjectArea">
            <summary>
                Indicates the location and area of the main subject in the overall scene. (Hex: 0x9214)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subjectarea.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.MakerNote">
            <summary>
                Manufacturer specific information. (Hex: 0x927C)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/makernote.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.UserComment">
            <summary>
                Keywords or comments on the image; complements ImageDescription. (Hex: 0x9286)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/usercomment.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubsecTime">
            <summary>
                A tag used to record fractions of seconds for the DateTime tag. (Hex: 0x9290)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subsectime.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubsecTimeOriginal">
            <summary>
                A tag used to record fractions of seconds for the DateTimeOriginal tag. (Hex: 0x9291)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subsectimeoriginal.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubsecTimeDigitized">
            <summary>
                A tag used to record fractions of seconds for the DateTimeDigitized tag. (Hex: 0x9292)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subsectimedigitized.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FlashpixVersion">
            <summary>
                The Flashpix format version supported by a FPXR file. (Hex: 0xA000)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/flashpixversion.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ColorSpace">
            <summary>
                The color space information tag is always recorded as the color space specifier. (Hex: 0xA001)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/colorspace.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.PixelXDimension">
            <summary>
                Specific to compressed data; the valid width of the meaningful image. (Hex: 0xA002)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/pixelxdimension.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.PixelYDimension">
            <summary>
                Specific to compressed data; the valid height of the meaningful image. (Hex: 0xA003)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/pixelydimension.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.RelatedSoundFile">
            <summary>
                Used to record the name of an audio file related to the image data. (Hex: 0xA004)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/relatedsoundfile.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FlashEnergy">
            <summary>
                Indicates the strobe energy at the time the image is captured, as measured in Beam Candle Power Seconds (Hex: 0xA20B)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/flashenergy.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SpatialFrequencyResponse">
            <summary>
                Records the camera or input device spatial frequency table and SFR values in the direction of image width, image height, and diagonal direction, as specified in ISO 12233. (Hex: 0xA20C)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/spatialfrequencyresponse.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FocalPlaneXResolution">
            <summary>
                Indicates the number of pixels in the image width (X) direction per FocalPlaneResolutionUnit on the camera focal plane. (Hex: 0xA20E)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/focalplanexresolution.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FocalPlaneYResolution">
            <summary>
                Indicates the number of pixels in the image height (Y) direction per FocalPlaneResolutionUnit on the camera focal plane. (Hex: 0xA20F)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/focalplaneyresolution.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FocalPlaneResolutionUnit">
            <summary>
                Indicates the unit for measuring FocalPlaneXResolution and FocalPlaneYResolution. (Hex: 0xA210)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/focalplaneresolutionunit.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubjectLocation">
            <summary>
                Indicates the location of the main subject in the scene. (Hex: 0xA214)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subjectlocation.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ExposureIndex">
            <summary>
                Indicates the exposure index selected on the camera or input device at the time the image is captured. (Hex: 0xA215)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/exposureindex.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SensingMethod">
            <summary>
                Indicates the image sensor type on the camera or input device. (Hex: 0xA217)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/sensingmethod.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FileSource">
            <summary>
                Indicates the image source. (Hex: 0xA300)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/filesource.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SceneType">
            <summary>
                Indicates the type of scene. (Hex: 0xA301)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/scenetype.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.CFAPattern2">
            <summary>
                Indicates the color filter array (CFA) geometric pattern of the image sensor when a one-chip color area sensor is used. (Hex: 0xA302)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/cfapattern.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.CustomRendered">
            <summary>
                Indicates the use of special processing on image data, such as rendering geared to output. (Hex: 0xA401)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/customrendered.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ExposureMode">
            <summary>
                Indicates the exposure mode set when the image was shot. (Hex: 0xA402)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/exposuremode.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.WhiteBalance">
            <summary>
                Indicates the white balance mode set when the image was shot. (Hex: 0xA403)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/whitebalance.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.DigitalZoomRatio">
            <summary>
                Indicates the digital zoom ratio when the image was shot. (Hex: 0xA404)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/digitalzoomratio.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.FocalLengthIn35mmFilm">
            <summary>
                Indicates the equivalent focal length assuming a 35mm film camera, in mm. (Hex: 0xA405)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/focallengthin35mmfilm.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SceneCaptureType">
            <summary>
                Indicates the type of scene that was shot. (Hex: 0xA406)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/scenecapturetype.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.GainControl">
            <summary>
                Indicates the degree of overall image gain adjustment. (Hex: 0xA407)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/gaincontrol.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.Contrast">
            <summary>
                Indicates the direction of contrast processing applied by the camera when the image was shot. (Hex: 0xA408)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/contrast.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.Saturation">
            <summary>
                Indicates the direction of saturation processing applied by the camera when the image was shot. (Hex: 0xA409)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/saturation.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.Sharpness">
            <summary>
                Indicates the direction of sharpness processing applied by the camera when the image was shot. (Hex: 0xA40A)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/sharpness.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.DeviceSettingDescription">
            <summary>
                This tag indicates information on the picture-taking conditions of a particular camera model. (Hex: 0xA40B)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/devicesettingdescription.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.SubjectDistanceRange">
            <summary>
                Indicates the distance to the subject. (Hex: 0xA40C)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/subjectdistancerange.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.ExifEntryTag.ImageUniqueID">
            <summary>
                Indicates an identifier assigned uniquely to each image. (Hex: 0xA420)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/imageuniqueid.html
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag">
            <summary>
               Entry tags occuring in the GPS IFD
               The complete overview can be obtained at:
               http://www.awaresystems.be/imaging/tiff.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSVersionID">
            <summary>
                Indicates the version of GPSInfoIFD. (Hex: 0x0000)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsversionid.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSLatitudeRef">
            <summary>
                Indicates whether the latitude is north or south latitude. (Hex: 0x0001)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpslatituderef.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSLatitude">
            <summary>
                Indicates the latitude. (Hex: 0x0002)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpslatitude.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSLongitudeRef">
            <summary>
                Indicates whether the longitude is east or west longitude. (Hex: 0x0003)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpslongituderef.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSLongitude">
            <summary>
                Indicates the longitude. (Hex: 0x0004)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpslongitude.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSAltitudeRef">
            <summary>
                Indicates the altitude used as the reference altitude. (Hex: 0x0005)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsaltituderef.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSAltitude">
            <summary>
                Indicates the altitude based on the reference in GPSAltitudeRef. (Hex: 0x0006)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsaltitude.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSTimeStamp">
            <summary>
                Indicates the time as UTC (Coordinated Universal Time). (Hex: 0x0007)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpstimestamp.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSSatellites">
            <summary>
                Indicates the GPS satellites used for measurements. (Hex: 0x0008)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpssatellites.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSStatus">
            <summary>
                Indicates the status of the GPS receiver when the image is recorded. (Hex: 0x0009)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsstatus.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSMeasureMode">
            <summary>
                Indicates the GPS measurement mode. (Hex: 0x000A)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsmeasuremode.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDOP">
            <summary>
                Indicates the GPS DOP (data degree of precision). (Hex: 0x000B)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdop.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSSpeedRef">
            <summary>
                Indicates the unit used to express the GPS receiver speed of movement. (Hex: 0x000C)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsspeedref.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSSpeed">
            <summary>
                Indicates the speed of GPS receiver movement. (Hex: 0x000D)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsspeed.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSTrackRef">
            <summary>
                Indicates the reference for giving the direction of GPS receiver movement. (Hex: 0x000E)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpstrackref.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSTrack">
            <summary>
                Indicates the direction of GPS receiver movement. (Hex: 0x000F)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpstrack.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSImgDirectionRef">
            <summary>
                Indicates the reference for giving the direction of the image when it is captured. (Hex: 0x0010)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsimgdirectionref.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSImgDirection">
            <summary>
                Indicates the direction of the image when it was captured. (Hex: 0x0011)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsimgdirection.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSMapDatum">
            <summary>
                Indicates the geodetic survey data used by the GPS receiver. (Hex: 0x0012)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsmapdatum.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestLatitudeRef">
            <summary>
                Indicates whether the latitude of the destination point is north or south latitude. (Hex: 0x0013)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestlatituderef.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestLatitude">
            <summary>
                Indicates the latitude of the destination point. (Hex: 0x0014)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestlatitude.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestLongitudeRef">
            <summary>
                Indicates whether the longitude of the destination point is east or west longitude. (Hex: 0x0015)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestlongituderef.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestLongitude">
            <summary>
                Indicates the longitude of the destination point. (Hex: 0x0016)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestlongitude.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestBearingRef">
            <summary>
                Indicates the reference used for giving the bearing to the destination point. (Hex: 0x0017)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestbearingref.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestBearing">
            <summary>
                Indicates the bearing to the destination point. (Hex: 0x0018)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestbearing.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestDistanceRef">
            <summary>
                Indicates the unit used to express the distance to the destination point. (Hex: 0x0019)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestdistanceref.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDestDistance">
            <summary>
                Indicates the distance to the destination point. (Hex: 0x001A)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdestdistance.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSProcessingMethod">
            <summary>
                A character string recording the name of the method used for location finding. (Hex: 0x001B)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsprocessingmethod.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSAreaInformation">
            <summary>
                A character string recording the name of the GPS area. (Hex: 0x001C)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsareainformation.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDateStamp">
            <summary>
                A character string recording date and time information relative to UTC (Coordinated Universal Time). (Hex: 0x001D)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdatestamp.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.GPSEntryTag.GPSDifferential">
            <summary>
                Indicates whether differential correction is applied to the GPS receiver. (Hex: 0x001E)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/gps/gpsdifferential.html
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag">
            <summary>
               Entry tags occuring in a Tiff IFD, or IFD0 for Jpegs. They are mostly
               defined by the TIFF specification:
               http://partners.adobe.com/public/developer/en/tiff/TIFF6.pdf
               The complete overview can be obtained at:
               http://www.awaresystems.be/imaging/tiff.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.NewSubfileType">
            <summary>
                A general indication of the kind of data contained in this subfile. (Hex: 0x00FE)
                http://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.SubfileType">
            <summary>
                A general indication of the kind of data contained in this subfile. (Hex: 0x00FF)
                http://www.awaresystems.be/imaging/tiff/tifftags/subfiletype.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ImageWidth">
            <summary>
                The number of columns in the image, i.e., the number of pixels per row. (Hex: 0x0100)
                http://www.awaresystems.be/imaging/tiff/tifftags/imagewidth.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ImageLength">
            <summary>
                The number of rows of pixels in the image. (Hex: 0x0101)
                http://www.awaresystems.be/imaging/tiff/tifftags/imagelength.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BitsPerSample">
            <summary>
                Number of bits per component. (Hex: 0x0102)
                http://www.awaresystems.be/imaging/tiff/tifftags/bitspersample.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Compression">
            <summary>
                Compression scheme used on the image data. (Hex: 0x0103)
                http://www.awaresystems.be/imaging/tiff/tifftags/compression.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.PhotometricInterpretation">
            <summary>
                The color space of the image data. (Hex: 0x0106)
                http://www.awaresystems.be/imaging/tiff/tifftags/photometricinterpretation.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Threshholding">
            <summary>
                For black and white TIFF files that represent shades of gray, the technique used to convert from gray to black and white pixels. (Hex: 0x0107)
                http://www.awaresystems.be/imaging/tiff/tifftags/threshholding.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CellWidth">
            <summary>
                The width of the dithering or halftoning matrix used to create a dithered or halftoned bilevel file. (Hex: 0x0108)
                http://www.awaresystems.be/imaging/tiff/tifftags/cellwidth.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CellLength">
            <summary>
                The length of the dithering or halftoning matrix used to create a dithered or halftoned bilevel file. (Hex: 0x0109)
                http://www.awaresystems.be/imaging/tiff/tifftags/celllength.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.FillOrder">
            <summary>
                The logical order of bits within a byte. (Hex: 0x010A)
                http://www.awaresystems.be/imaging/tiff/tifftags/fillorder.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DocumentName">
            <summary>
                The name of the document from which this image was scanned. (Hex: 0x010D)
                http://www.awaresystems.be/imaging/tiff/tifftags/documentname.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ImageDescription">
            <summary>
                A string that describes the subject of the image. (Hex: 0x010E)
                http://www.awaresystems.be/imaging/tiff/tifftags/imagedescription.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Make">
            <summary>
                The scanner manufacturer. (Hex: 0x010F)
                http://www.awaresystems.be/imaging/tiff/tifftags/make.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Model">
            <summary>
                The scanner model name or number. (Hex: 0x0110)
                http://www.awaresystems.be/imaging/tiff/tifftags/model.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.StripOffsets">
            <summary>
                For each strip, the byte offset of that strip. (Hex: 0x0111)
                http://www.awaresystems.be/imaging/tiff/tifftags/stripoffsets.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Orientation">
            <summary>
                The orientation of the image with respect to the rows and columns. (Hex: 0x0112)
                http://www.awaresystems.be/imaging/tiff/tifftags/orientation.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.SamplesPerPixel">
            <summary>
                The number of components per pixel. (Hex: 0x0115)
                http://www.awaresystems.be/imaging/tiff/tifftags/samplesperpixel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.RowsPerStrip">
            <summary>
                The number of rows per strip. (Hex: 0x0116)
                http://www.awaresystems.be/imaging/tiff/tifftags/rowsperstrip.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.StripByteCounts">
            <summary>
                For each strip, the number of bytes in the strip after compression. (Hex: 0x0117)
                http://www.awaresystems.be/imaging/tiff/tifftags/stripbytecounts.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MinSampleValue">
            <summary>
                The minimum component value used. (Hex: 0x0118)
                http://www.awaresystems.be/imaging/tiff/tifftags/minsamplevalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MaxSampleValue">
            <summary>
                The maximum component value used. (Hex: 0x0119)
                http://www.awaresystems.be/imaging/tiff/tifftags/maxsamplevalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.XResolution">
            <summary>
                The number of pixels per ResolutionUnit in the ImageWidth direction. (Hex: 0x011A)
                http://www.awaresystems.be/imaging/tiff/tifftags/xresolution.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.YResolution">
            <summary>
                The number of pixels per ResolutionUnit in the ImageLength direction. (Hex: 0x011B)
                http://www.awaresystems.be/imaging/tiff/tifftags/yresolution.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.PlanarConfiguration">
            <summary>
                How the components of each pixel are stored. (Hex: 0x011C)
                http://www.awaresystems.be/imaging/tiff/tifftags/planarconfiguration.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.PageName">
            <summary>
                The name of the page from which this image was scanned. (Hex: 0x011D)
                http://www.awaresystems.be/imaging/tiff/tifftags/pagename.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.XPosition">
            <summary>
                X position of the image. (Hex: 0x011E)
                http://www.awaresystems.be/imaging/tiff/tifftags/xposition.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.YPosition">
            <summary>
                Y position of the image. (Hex: 0x011F)
                http://www.awaresystems.be/imaging/tiff/tifftags/yposition.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.FreeOffsets">
            <summary>
                For each string of contiguous unused bytes in a TIFF file, the byte offset of the string. (Hex: 0x0120)
                http://www.awaresystems.be/imaging/tiff/tifftags/freeoffsets.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.FreeByteCounts">
            <summary>
                For each string of contiguous unused bytes in a TIFF file, the number of bytes in the string. (Hex: 0x0121)
                http://www.awaresystems.be/imaging/tiff/tifftags/freebytecounts.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GrayResponseUnit">
            <summary>
                The precision of the information contained in the GrayResponseCurve. (Hex: 0x0122)
                http://www.awaresystems.be/imaging/tiff/tifftags/grayresponseunit.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GrayResponseCurve">
            <summary>
                For grayscale data, the optical density of each possible pixel value. (Hex: 0x0123)
                http://www.awaresystems.be/imaging/tiff/tifftags/grayresponsecurve.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.T4Options">
            <summary>
                Options for Group 3 Fax compression (Hex: 0x0124)
                http://www.awaresystems.be/imaging/tiff/tifftags/t4options.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.T6Options">
            <summary>
                Options for Group 4 Fax compression (Hex: 0x0125)
                http://www.awaresystems.be/imaging/tiff/tifftags/t6options.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ResolutionUnit">
            <summary>
                The unit of measurement for XResolution and YResolution. (Hex: 0x0128)
                http://www.awaresystems.be/imaging/tiff/tifftags/resolutionunit.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.PageNumber">
            <summary>
                The page number of the page from which this image was scanned. (Hex: 0x0129)
                http://www.awaresystems.be/imaging/tiff/tifftags/pagenumber.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TransferFunction">
            <summary>
                Describes a transfer function for the image in tabular style. (Hex: 0x012D)
                http://www.awaresystems.be/imaging/tiff/tifftags/transferfunction.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Software">
            <summary>
                Name and version number of the software package(s) used to create the image. (Hex: 0x0131)
                http://www.awaresystems.be/imaging/tiff/tifftags/software.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DateTime">
            <summary>
                Date and time of image creation. (Hex: 0x0132)
                http://www.awaresystems.be/imaging/tiff/tifftags/datetime.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Artist">
            <summary>
                Person who created the image. (Hex: 0x013B)
                http://www.awaresystems.be/imaging/tiff/tifftags/artist.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.HostComputer">
            <summary>
                The computer and/or operating system in use at the time of image creation. (Hex: 0x013C)
                http://www.awaresystems.be/imaging/tiff/tifftags/hostcomputer.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Predictor">
            <summary>
                A mathematical operator that is applied to the image data before an encoding scheme is applied. (Hex: 0x013D)
                http://www.awaresystems.be/imaging/tiff/tifftags/predictor.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.WhitePoint">
            <summary>
                The chromaticity of the white point of the image. (Hex: 0x013E)
                http://www.awaresystems.be/imaging/tiff/tifftags/whitepoint.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.PrimaryChromaticities">
            <summary>
                The chromaticities of the primaries of the image. (Hex: 0x013F)
                http://www.awaresystems.be/imaging/tiff/tifftags/primarychromaticities.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ColorMap">
            <summary>
                A color map for palette color images. (Hex: 0x0140)
                http://www.awaresystems.be/imaging/tiff/tifftags/colormap.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.HalftoneHints">
            <summary>
                Conveys to the halftone function the range of gray levels within a colorimetrically-specified image that should retain tonal detail. (Hex: 0x0141)
                http://www.awaresystems.be/imaging/tiff/tifftags/halftonehints.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TileWidth">
            <summary>
                The tile width in pixels. This is the number of columns in each tile. (Hex: 0x0142)
                http://www.awaresystems.be/imaging/tiff/tifftags/tilewidth.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TileLength">
            <summary>
                The tile length (height) in pixels. This is the number of rows in each tile. (Hex: 0x0143)
                http://www.awaresystems.be/imaging/tiff/tifftags/tilelength.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TileOffsets">
            <summary>
                For each tile, the byte offset of that tile, as compressed and stored on disk. (Hex: 0x0144)
                http://www.awaresystems.be/imaging/tiff/tifftags/tileoffsets.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TileByteCounts">
            <summary>
                For each tile, the number of (compressed) bytes in that tile. (Hex: 0x0145)
                http://www.awaresystems.be/imaging/tiff/tifftags/tilebytecounts.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BadFaxLines">
            <summary>
                Used in the TIFF-F standard, denotes the number of 'bad' scan lines encountered by the facsimile device. (Hex: 0x0146)
                http://www.awaresystems.be/imaging/tiff/tifftags/badfaxlines.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CleanFaxData">
            <summary>
                Used in the TIFF-F standard, indicates if 'bad' lines encountered during reception are stored in the data, or if 'bad' lines have been replaced by the receiver. (Hex: 0x0147)
                http://www.awaresystems.be/imaging/tiff/tifftags/cleanfaxdata.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ConsecutiveBadFaxLines">
            <summary>
                Used in the TIFF-F standard, denotes the maximum number of consecutive 'bad' scanlines received. (Hex: 0x0148)
                http://www.awaresystems.be/imaging/tiff/tifftags/consecutivebadfaxlines.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.SubIFDs">
            <summary>
                Offset to child IFDs. (Hex: 0x014A)
                http://www.awaresystems.be/imaging/tiff/tifftags/subifds.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.InkSet">
            <summary>
                The set of inks used in a separated (PhotometricInterpretation=5) image. (Hex: 0x014C)
                http://www.awaresystems.be/imaging/tiff/tifftags/inkset.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.InkNames">
            <summary>
                The name of each ink used in a separated image. (Hex: 0x014D)
                http://www.awaresystems.be/imaging/tiff/tifftags/inknames.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.NumberOfInks">
            <summary>
                The number of inks. (Hex: 0x014E)
                http://www.awaresystems.be/imaging/tiff/tifftags/numberofinks.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DotRange">
            <summary>
                The component values that correspond to a 0% dot and 100% dot. (Hex: 0x0150)
                http://www.awaresystems.be/imaging/tiff/tifftags/dotrange.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TargetPrinter">
            <summary>
                A description of the printing environment for which this separation is intended. (Hex: 0x0151)
                http://www.awaresystems.be/imaging/tiff/tifftags/targetprinter.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ExtraSamples">
            <summary>
                Description of extra components. (Hex: 0x0152)
                http://www.awaresystems.be/imaging/tiff/tifftags/extrasamples.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.SampleFormat">
            <summary>
                Specifies how to interpret each data sample in a pixel. (Hex: 0x0153)
                http://www.awaresystems.be/imaging/tiff/tifftags/sampleformat.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.SMinSampleValue">
            <summary>
                Specifies the minimum sample value. (Hex: 0x0154)
                http://www.awaresystems.be/imaging/tiff/tifftags/sminsamplevalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.SMaxSampleValue">
            <summary>
                Specifies the maximum sample value. (Hex: 0x0155)
                http://www.awaresystems.be/imaging/tiff/tifftags/smaxsamplevalue.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.TransferRange">
            <summary>
                Expands the range of the TransferFunction. (Hex: 0x0156)
                http://www.awaresystems.be/imaging/tiff/tifftags/transferrange.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ClipPath">
            <summary>
                Mirrors the essentials of PostScript's path creation functionality. (Hex: 0x0157)
                http://www.awaresystems.be/imaging/tiff/tifftags/clippath.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.XClipPathUnits">
            <summary>
                The number of units that span the width of the image, in terms of integer ClipPath coordinates. (Hex: 0x0158)
                http://www.awaresystems.be/imaging/tiff/tifftags/xclippathunits.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.YClipPathUnits">
            <summary>
                The number of units that span the height of the image, in terms of integer ClipPath coordinates. (Hex: 0x0159)
                http://www.awaresystems.be/imaging/tiff/tifftags/yclippathunits.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Indexed">
            <summary>
                Aims to broaden the support for indexed images to include support for any color space. (Hex: 0x015A)
                http://www.awaresystems.be/imaging/tiff/tifftags/indexed.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGTables">
            <summary>
                JPEG quantization and/or Huffman tables. (Hex: 0x015B)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegtables.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.OPIProxy">
            <summary>
                OPI-related. (Hex: 0x015F)
                http://www.awaresystems.be/imaging/tiff/tifftags/opiproxy.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GlobalParametersIFD">
            <summary>
                Used in the TIFF-FX standard to point to an IFD containing tags that are globally applicable to the complete TIFF file. (Hex: 0x0190)
                http://www.awaresystems.be/imaging/tiff/tifftags/globalparametersifd.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ProfileType">
            <summary>
                Used in the TIFF-FX standard, denotes the type of data stored in this file or IFD. (Hex: 0x0191)
                http://www.awaresystems.be/imaging/tiff/tifftags/profiletype.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.FaxProfile">
            <summary>
                Used in the TIFF-FX standard, denotes the 'profile' that applies to this file. (Hex: 0x0192)
                http://www.awaresystems.be/imaging/tiff/tifftags/faxprofile.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CodingMethods">
            <summary>
                Used in the TIFF-FX standard, indicates which coding methods are used in the file. (Hex: 0x0193)
                http://www.awaresystems.be/imaging/tiff/tifftags/codingmethods.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.VersionYear">
            <summary>
                Used in the TIFF-FX standard, denotes the year of the standard specified by the FaxProfile field. (Hex: 0x0194)
                http://www.awaresystems.be/imaging/tiff/tifftags/versionyear.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ModeNumber">
            <summary>
                Used in the TIFF-FX standard, denotes the mode of the standard specified by the FaxProfile field. (Hex: 0x0195)
                http://www.awaresystems.be/imaging/tiff/tifftags/modenumber.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Decode">
            <summary>
                Used in the TIFF-F and TIFF-FX standards, holds information about the ITULAB (PhotometricInterpretation = 10) encoding. (Hex: 0x01B1)
                http://www.awaresystems.be/imaging/tiff/tifftags/decode.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DefaultImageColor">
            <summary>
                Defined in the Mixed Raster Content part of RFC 2301, is the default color needed in areas where no image is available. (Hex: 0x01B2)
                http://www.awaresystems.be/imaging/tiff/tifftags/defaultimagecolor.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGProc">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0200)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegproc.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGInterchangeFormat">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0201)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpeginterchangeformat.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGInterchangeFormatLength">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0202)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpeginterchangeformatlength.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGRestartInterval">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0203)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegrestartinterval.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGLosslessPredictors">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0205)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpeglosslesspredictors.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGPointTransforms">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0206)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegpointtransforms.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGQTables">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0207)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegqtables.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGDCTables">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0208)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegdctables.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.JPEGACTables">
            <summary>
                Old-style JPEG compression field. TechNote2 invalidates this part of the specification. (Hex: 0x0209)
                http://www.awaresystems.be/imaging/tiff/tifftags/jpegactables.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.YCbCrCoefficients">
            <summary>
                The transformation from RGB to YCbCr image data. (Hex: 0x0211)
                http://www.awaresystems.be/imaging/tiff/tifftags/ycbcrcoefficients.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.YCbCrSubSampling">
            <summary>
                Specifies the subsampling factors used for the chrominance components of a YCbCr image. (Hex: 0x0212)
                http://www.awaresystems.be/imaging/tiff/tifftags/ycbcrsubsampling.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.YCbCrPositioning">
            <summary>
                Specifies the positioning of subsampled chrominance components relative to luminance samples. (Hex: 0x0213)
                http://www.awaresystems.be/imaging/tiff/tifftags/ycbcrpositioning.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ReferenceBlackWhite">
            <summary>
                Specifies a pair of headroom and footroom image data values (codes) for each pixel component. (Hex: 0x0214)
                http://www.awaresystems.be/imaging/tiff/tifftags/referenceblackwhite.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.StripRowCounts">
            <summary>
                Defined in the Mixed Raster Content part of RFC 2301, used to replace RowsPerStrip for IFDs with variable-sized strips. (Hex: 0x022F)
                http://www.awaresystems.be/imaging/tiff/tifftags/striprowcounts.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.XMP">
            <summary>
                XML packet containing XMP metadata (Hex: 0x02BC)
                http://www.awaresystems.be/imaging/tiff/tifftags/xmp.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Rating">
            <summary>
                Rating tag used by Windows (Hex: 0x4746)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.RatingPercent">
            <summary>
                Rating tag used by Windows, value in percent (Hex: 0x4749)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ImageID">
            <summary>
                OPI-related. (Hex: 0x800D)
                http://www.awaresystems.be/imaging/tiff/tifftags/imageid.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.WangAnnotation">
            <summary>
                Annotation data, as used in 'Imaging for Windows'. (Hex: 0x80A4)
                http://www.awaresystems.be/imaging/tiff/tifftags/wangannotation.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Copyright">
            <summary>
                Copyright notice. (Hex: 0x8298)
                http://www.awaresystems.be/imaging/tiff/tifftags/copyright.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDFileTag">
            <summary>
                Specifies the pixel data format encoding in the Molecular Dynamics GEL file format. (Hex: 0x82A5)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdfiletag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDScalePixel">
            <summary>
                Specifies a scale factor in the Molecular Dynamics GEL file format. (Hex: 0x82A6)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdscalepixel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDColorTable">
            <summary>
                Used to specify the conversion from 16bit to 8bit in the Molecular Dynamics GEL file format. (Hex: 0x82A7)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdcolortable.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDLabName">
            <summary>
                Name of the lab that scanned this file, as used in the Molecular Dynamics GEL file format. (Hex: 0x82A8)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdlabname.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDSampleInfo">
            <summary>
                Information about the sample, as used in the Molecular Dynamics GEL file format. (Hex: 0x82A9)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdsampleinfo.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDPrepDate">
            <summary>
                Date the sample was prepared, as used in the Molecular Dynamics GEL file format. (Hex: 0x82AA)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdprepdate.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDPrepTime">
            <summary>
                Time the sample was prepared, as used in the Molecular Dynamics GEL file format. (Hex: 0x82AB)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdpreptime.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MDFileUnits">
            <summary>
                Units for data in this file, as used in the Molecular Dynamics GEL file format. (Hex: 0x82AC)
                http://www.awaresystems.be/imaging/tiff/tifftags/mdfileunits.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ModelPixelScaleTag">
            <summary>
                Used in interchangeable GeoTIFF files. (Hex: 0x830E)
                http://www.awaresystems.be/imaging/tiff/tifftags/modelpixelscaletag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.IPTC">
            <summary>
                IPTC (International Press Telecommunications Council) metadata. (Hex: 0x83BB)
                http://www.awaresystems.be/imaging/tiff/tifftags/iptc.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.INGRPacketDataTag">
            <summary>
                Intergraph Application specific storage. (Hex: 0x847E)
                http://www.awaresystems.be/imaging/tiff/tifftags/ingrpacketdatatag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.INGRFlagRegisters">
            <summary>
                Intergraph Application specific flags. (Hex: 0x847F)
                http://www.awaresystems.be/imaging/tiff/tifftags/ingrflagregisters.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.IrasBTransformationMatrix">
            <summary>
                Originally part of Intergraph's GeoTIFF tags, but likely understood by IrasB only. (Hex: 0x8480)
                http://www.awaresystems.be/imaging/tiff/tifftags/irasbtransformationmatrix.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ModelTiepointTag">
            <summary>
                Originally part of Intergraph's GeoTIFF tags, but now used in interchangeable GeoTIFF files. (Hex: 0x8482)
                http://www.awaresystems.be/imaging/tiff/tifftags/modeltiepointtag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ModelTransformationTag">
            <summary>
                Used in interchangeable GeoTIFF files. (Hex: 0x85D8)
                http://www.awaresystems.be/imaging/tiff/tifftags/modeltransformationtag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.Photoshop">
            <summary>
                Collection of Photoshop 'Image Resource Blocks'. (Hex: 0x8649)
                http://www.awaresystems.be/imaging/tiff/tifftags/photoshop.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ExifIFD">
            <summary>
                A pointer to the Exif IFD. (Hex: 0x8769)
                http://www.awaresystems.be/imaging/tiff/tifftags/exififd.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ICCProfile">
            <summary>
                ICC profile data. (Hex: 0x8773)
                http://www.awaresystems.be/imaging/tiff/tifftags/iccprofile.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ImageLayer">
            <summary>
                Defined in the Mixed Raster Content part of RFC 2301, used to denote the particular function of this Image in the mixed raster scheme. (Hex: 0x87AC)
                http://www.awaresystems.be/imaging/tiff/tifftags/imagelayer.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GeoKeyDirectoryTag">
            <summary>
                Used in interchangeable GeoTIFF files. (Hex: 0x87AF)
                http://www.awaresystems.be/imaging/tiff/tifftags/geokeydirectorytag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GeoDoubleParamsTag">
            <summary>
                Used in interchangeable GeoTIFF files. (Hex: 0x87B0)
                http://www.awaresystems.be/imaging/tiff/tifftags/geodoubleparamstag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GeoAsciiParamsTag">
            <summary>
                Used in interchangeable GeoTIFF files. (Hex: 0x87B1)
                http://www.awaresystems.be/imaging/tiff/tifftags/geoasciiparamstag.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GPSIFD">
            <summary>
                A pointer to the Exif-related GPS Info IFD. (Hex: 0x8825)
                http://www.awaresystems.be/imaging/tiff/tifftags/gpsifd.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.HylaFAXFaxRecvParams">
            <summary>
                Used by HylaFAX. (Hex: 0x885C)
                http://www.awaresystems.be/imaging/tiff/tifftags/hylafaxfaxrecvparams.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.HylaFAXFaxSubAddress">
            <summary>
                Used by HylaFAX. (Hex: 0x885D)
                http://www.awaresystems.be/imaging/tiff/tifftags/hylafaxfaxsubaddress.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.HylaFAXFaxRecvTime">
            <summary>
                Used by HylaFAX. (Hex: 0x885E)
                http://www.awaresystems.be/imaging/tiff/tifftags/hylafaxfaxrecvtime.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ImageSourceData">
            <summary>
                Used by Adobe Photoshop. (Hex: 0x935C)
                http://www.awaresystems.be/imaging/tiff/tifftags/imagesourcedata.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.InteroperabilityIFD">
            <summary>
                A pointer to the Exif-related Interoperability IFD. (Hex: 0xA005)
                http://www.awaresystems.be/imaging/tiff/tifftags/interoperabilityifd.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GDAL_METADATA">
            <summary>
                Used by the GDAL library, holds an XML list of name=value 'metadata' values about the image as a whole, and about specific samples. (Hex: 0xA480)
                http://www.awaresystems.be/imaging/tiff/tifftags/gdal_metadata.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.GDAL_NODATA">
            <summary>
                Used by the GDAL library, contains an ASCII encoded nodata or background pixel value. (Hex: 0xA481)
                http://www.awaresystems.be/imaging/tiff/tifftags/gdal_nodata.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.OceScanjobDescription">
            <summary>
                Used in the Oce scanning process. (Hex: 0xC427)
                http://www.awaresystems.be/imaging/tiff/tifftags/ocescanjobdescription.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.OceApplicationSelector">
            <summary>
                Used in the Oce scanning process. (Hex: 0xC428)
                http://www.awaresystems.be/imaging/tiff/tifftags/oceapplicationselector.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.OceIdentificationNumber">
            <summary>
                Used in the Oce scanning process. (Hex: 0xC429)
                http://www.awaresystems.be/imaging/tiff/tifftags/oceidentificationnumber.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.OceImageLogicCharacteristics">
            <summary>
                Used in the Oce scanning process. (Hex: 0xC42A)
                http://www.awaresystems.be/imaging/tiff/tifftags/oceimagelogiccharacteristics.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DNGVersion">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC612)
                http://www.awaresystems.be/imaging/tiff/tifftags/dngversion.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DNGBackwardVersion">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC613)
                http://www.awaresystems.be/imaging/tiff/tifftags/dngbackwardversion.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.UniqueCameraModel">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC614)
                http://www.awaresystems.be/imaging/tiff/tifftags/uniquecameramodel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.LocalizedCameraModel">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC615)
                http://www.awaresystems.be/imaging/tiff/tifftags/localizedcameramodel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CFAPlaneColor">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC616)
                http://www.awaresystems.be/imaging/tiff/tifftags/cfaplanecolor.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CFALayout">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC617)
                http://www.awaresystems.be/imaging/tiff/tifftags/cfalayout.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.LinearizationTable">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC618)
                http://www.awaresystems.be/imaging/tiff/tifftags/linearizationtable.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BlackLevelRepeatDim">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC619)
                http://www.awaresystems.be/imaging/tiff/tifftags/blacklevelrepeatdim.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BlackLevel">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC61A)
                http://www.awaresystems.be/imaging/tiff/tifftags/blacklevel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BlackLevelDeltaH">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC61B)
                http://www.awaresystems.be/imaging/tiff/tifftags/blackleveldeltah.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BlackLevelDeltaV">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC61C)
                http://www.awaresystems.be/imaging/tiff/tifftags/blackleveldeltav.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.WhiteLevel">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC61D)
                http://www.awaresystems.be/imaging/tiff/tifftags/whitelevel.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DefaultScale">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC61E)
                http://www.awaresystems.be/imaging/tiff/tifftags/defaultscale.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DefaultCropOrigin">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC61F)
                http://www.awaresystems.be/imaging/tiff/tifftags/defaultcroporigin.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DefaultCropSize">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC620)
                http://www.awaresystems.be/imaging/tiff/tifftags/defaultcropsize.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ColorMatrix1">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC621)
                http://www.awaresystems.be/imaging/tiff/tifftags/colormatrix1.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ColorMatrix2">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC622)
                http://www.awaresystems.be/imaging/tiff/tifftags/colormatrix2.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CameraCalibration1">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC623)
                http://www.awaresystems.be/imaging/tiff/tifftags/cameracalibration1.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CameraCalibration2">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC624)
                http://www.awaresystems.be/imaging/tiff/tifftags/cameracalibration2.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ReductionMatrix1">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC625)
                http://www.awaresystems.be/imaging/tiff/tifftags/reductionmatrix1.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ReductionMatrix2">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC626)
                http://www.awaresystems.be/imaging/tiff/tifftags/reductionmatrix2.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.AnalogBalance">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC627)
                http://www.awaresystems.be/imaging/tiff/tifftags/analogbalance.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.AsShotNeutral">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC628)
                http://www.awaresystems.be/imaging/tiff/tifftags/asshotneutral.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.AsShotWhiteXY">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC629)
                http://www.awaresystems.be/imaging/tiff/tifftags/asshotwhitexy.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BaselineExposure">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC62A)
                http://www.awaresystems.be/imaging/tiff/tifftags/baselineexposure.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BaselineNoise">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC62B)
                http://www.awaresystems.be/imaging/tiff/tifftags/baselinenoise.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BaselineSharpness">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC62C)
                http://www.awaresystems.be/imaging/tiff/tifftags/baselinesharpness.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BayerGreenSplit">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC62D)
                http://www.awaresystems.be/imaging/tiff/tifftags/bayergreensplit.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.LinearResponseLimit">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC62E)
                http://www.awaresystems.be/imaging/tiff/tifftags/linearresponselimit.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CameraSerialNumber">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC62F)
                http://www.awaresystems.be/imaging/tiff/tifftags/cameraserialnumber.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.LensInfo">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC630)
                http://www.awaresystems.be/imaging/tiff/tifftags/lensinfo.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.ChromaBlurRadius">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC631)
                http://www.awaresystems.be/imaging/tiff/tifftags/chromablurradius.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.AntiAliasStrength">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC632)
                http://www.awaresystems.be/imaging/tiff/tifftags/antialiasstrength.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.DNGPrivateData">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC634)
                http://www.awaresystems.be/imaging/tiff/tifftags/dngprivatedata.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.MakerNoteSafety">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC635)
                http://www.awaresystems.be/imaging/tiff/tifftags/makernotesafety.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CalibrationIlluminant1">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC65A)
                http://www.awaresystems.be/imaging/tiff/tifftags/calibrationilluminant1.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.CalibrationIlluminant2">
            <summary>
                Used in IFD 0 of DNG files. (Hex: 0xC65B)
                http://www.awaresystems.be/imaging/tiff/tifftags/calibrationilluminant2.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.BestQualityScale">
            <summary>
                Used in Raw IFD of DNG files. (Hex: 0xC65C)
                http://www.awaresystems.be/imaging/tiff/tifftags/bestqualityscale.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IFDEntryTag.AliasLayerMetadata">
            <summary>
                Alias Sketchbook Pro layer usage description. (Hex: 0xC660)
                http://www.awaresystems.be/imaging/tiff/tifftags/aliaslayermetadata.html
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.IOPEntryTag">
            <summary>
               Entry tags occuring in the Interoperability IFD
               The complete overview can be obtained at:
               http://www.awaresystems.be/imaging/tiff.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IOPEntryTag.InteroperabilityIndex">
            <summary>
                Indicates the identification of the Interoperability rule. (Hex: 0x0001)
                http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/interoperability/interoperabilityindex.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IOPEntryTag.InteroperabilityVersion">
            <summary>
                Interoperability version. (Hex: 0x0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IOPEntryTag.RelatedImageFileFormat">
            <summary>
                File format of image file. (Hex: 0x1000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IOPEntryTag.RelatedImageWidth">
            <summary>
                Image Width. (Hex: 0x1001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.IOPEntryTag.RelatedImageLength">
            <summary>
                Image Height. (Hex: 0x1002)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag">
            <summary>
               Nikon format 3 makernote tags.
               Based on http://www.exiv2.org/tags-nikon.html and
               http://park2.wakwak.com/~tsuruzoh/Computer/Digicams/exif-e.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Version">
            <summary>
               Makernote version. (Hex: 0x0001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ISOSpeed">
            <summary>
               ISO speed setting. (Hex: 0X0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ColorMode">
            <summary>
               Color mode. (Hex: 0X0003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Quality">
            <summary>
               Image quality setting. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.WhiteBalance">
            <summary>
               White balance. (Hex: 0X0005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Sharpening">
            <summary>
               Image sharpening setting. (Hex: 0X0006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Focus">
            <summary>
               Focus mode. (Hex: 0X0007)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FlashSetting">
            <summary>
               Flash setting. (Hex: 0X0008)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FlashDevice">
            <summary>
               Flash device. (Hex: 0X0009)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Unknown10">
            <summary>
               Unknown. (Hex: 0X000A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.WhiteBalanceBias">
            <summary>
               White balance bias. (Hex: 0X000B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.WB_RBLevels">
            <summary>
               WB RB levels. (Hex: 0X000C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ProgramShift">
            <summary>
               Program shift. (Hex: 0X000D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ExposureDiff">
            <summary>
               Exposure difference. (Hex: 0X000E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ISOSelection">
            <summary>
               ISO selection. (Hex: 0X000F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.DataDump">
            <summary>
               Data dump. (Hex: 0X0010)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Preview">
            <summary>
               Offset to an IFD containing a preview image. (Hex: 0x0011)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FlashComp">
            <summary>
               Flash compensation setting. (Hex: 0X0012)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ISOSettings">
            <summary>
               ISO setting. (Hex: 0X0013)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageBoundary">
            <summary>
               Image boundary. (Hex: 0X0016)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Unknown23">
            <summary>
               Unknown. (Hex: 0X0017)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FlashBracketComp">
            <summary>
               Flash bracket compensation applied. (Hex: 0X0018)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ExposureBracketComp">
            <summary>
               AE bracket compensation applied. (Hex: 0X0019)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageProcessing">
            <summary>
               Image processing. (Hex: 0X001A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.CropHiSpeed">
            <summary>
               Crop high speed. (Hex: 0X001B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.SerialNumber">
            <summary>
               Serial Number. (Hex: 0X001D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ColorSpace">
            <summary>
               Color space. (Hex: 0X001E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.VRInfo">
            <summary>
               VR info. (Hex: 0X001F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageAuthentication">
            <summary>
               Image authentication. (Hex: 0X0020)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ActiveDLighting">
            <summary>
               ActiveD-lighting. (Hex: 0X0022)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.PictureControl">
            <summary>
               Picture control. (Hex: 0X0023)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.WorldTime">
            <summary>
               World time. (Hex: 0X0024)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ISOInfo">
            <summary>
               ISO info. (Hex: 0X0025)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.VignetteControl">
            <summary>
               Vignette control. (Hex: 0X002A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageAdjustment">
            <summary>
               Image adjustment setting. (Hex: 0X0080)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ToneComp">
            <summary>
               Tone compensation. (Hex: 0X0081)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.AuxiliaryLens">
            <summary>
               Auxiliary lens (adapter). (Hex: 0X0082)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.LensType">
            <summary>
               Lens type. (Hex: 0X0083)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Lens">
            <summary>
               Lens. (Hex: 0X0084)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FocusDistance">
            <summary>
               Manual focus distance. (Hex: 0X0085)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.DigitalZoom">
            <summary>
               Digital zoom setting. (Hex: 0X0086)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FlashMode">
            <summary>
               Mode of flash used. (Hex: 0X0087)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.AFInfo">
            <summary>
               AF info. (Hex: 0X0088)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ShootingMode">
            <summary>
               Shooting mode. (Hex: 0X0089)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.AutoBracketRelease">
            <summary>
               Auto bracket release. (Hex: 0X008A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.LensFStops">
            <summary>
               Lens FStops. (Hex: 0X008B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ContrastCurve">
            <summary>
               Contrast curve. (Hex: 0X008C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ColorHue">
            <summary>
               Color hue. (Hex: 0X008D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.SceneMode">
            <summary>
               Scene mode. (Hex: 0X008F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.LightSource">
            <summary>
               Light source. (Hex: 0X0090)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ShotInfo">
            <summary>
               Shot info. (Hex: 0X0091)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.HueAdjustment">
            <summary>
               Hue adjustment. (Hex: 0X0092)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.NEFCompression">
            <summary>
               NEF compression. (Hex: 0X0093)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Saturation">
            <summary>
               Saturation. (Hex: 0X0094)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.NoiseReduction">
            <summary>
               Noise reduction. (Hex: 0X0095)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.LinearizationTable">
            <summary>
               Linearization table. (Hex: 0X0096)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ColorBalance">
            <summary>
               Color balance. (Hex: 0X0097)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.LensData">
            <summary>
               Lens data settings. (Hex: 0X0098)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.RawImageCenter">
            <summary>
               Raw image center. (Hex: 0X0099)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.SensorPixelSize">
            <summary>
               Sensor pixel size. (Hex: 0X009A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Unknown155">
            <summary>
               Unknown. (Hex: 0X009B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.SceneAssist">
            <summary>
               Scene assist. (Hex: 0X009C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.RetouchHistory">
            <summary>
               Retouch history. (Hex: 0X009E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Unknown159">
            <summary>
               Unknown. (Hex: 0X009F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.SerialNO">
            <summary>
               Camera serial number, usually starts with "NO= ". (Hex: 0X00A0)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageDataSize">
            <summary>
               Image data size. (Hex: 0X00A2)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Unknown163">
            <summary>
               Unknown. (Hex: 0X00A3)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageCount">
            <summary>
               Image count. (Hex: 0X00A5)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.DeletedImageCount">
            <summary>
               Deleted image count. (Hex: 0X00A6)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ShutterCount">
            <summary>
               Number of shots taken by camera. (Hex: 0X00A7)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FlashInfo">
            <summary>
               Flash info. (Hex: 0X00A8)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageOptimization">
            <summary>
               Image optimization. (Hex: 0X00A9)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.Saturation2">
            <summary>
               Saturation. (Hex: 0X00AA)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.VariProgram">
            <summary>
               Program variation. (Hex: 0X00AB)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ImageStabilization">
            <summary>
               Image stabilization. (Hex: 0X00AC)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.AFResponse">
            <summary>
               AF response. (Hex: 0X00AD)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.MultiExposure">
            <summary>
               Multi exposure. (Hex: 0X00B0)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.HighISONoiseReduction">
            <summary>
               High ISO Noise Reduction. (Hex: 0X00B1)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ToningEffect">
            <summary>
               Toning effect. (Hex: 0X00B3)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.AFInfo2">
            <summary>
               AF info 2. (Hex: 0X00B7)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.FileInfo">
            <summary>
               File info. (Hex: 0X00B8)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.PrintIM">
            <summary>
               PrintIM information. (Hex: 0X0E00)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.CaptureData">
            <summary>
               Capture data. (Hex: 0X0E01)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.CaptureVersion">
            <summary>
               Capture version. (Hex: 0X0E09)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.CaptureOffsets">
            <summary>
               Capture offsets. (Hex: 0X0E0E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ScanIFD">
            <summary>
               Scan IFD. (Hex: 0X0E10)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.ICCProfile">
            <summary>
               ICC profile. (Hex: 0X0E1D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.Nikon3MakerNoteEntryTag.CaptureOutput">
            <summary>
               Capture output. (Hex: 0X0E1E)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonIsoInfoEntryTag">
            <summary>
               Nikon Iso Info entry tags.
               Based on:
               http://exiv2.org/tags-nikon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonIsoInfoEntryTag.ISO">
            <summary>
               ISO. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonIsoInfoEntryTag.ISOExpansion">
            <summary>
               ISO expansion. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonIsoInfoEntryTag.ISO2">
            <summary>
               ISO 2. (Hex: 0X0006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonIsoInfoEntryTag.ISOExpansion2">
            <summary>
               ISO expansion 2. (Hex: 0X000A)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag">
            <summary>
               Nikon lens data entry tags.
               Based on:
               http://exiv2.org/tags-nikon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.Version">
            <summary>
               Version. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.ExitPupilPosition">
            <summary>
               Exit pupil position. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.AFAperture">
            <summary>
               AF aperture. (Hex: 0X0005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.FocusPosition">
            <summary>
               Focus position. (Hex: 0X0008)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.FocusDistance">
            <summary>
               Focus distance. (Hex: 0X000A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.FocalLength">
            <summary>
               Focal length. (Hex: 0X000B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.LensIDNumber">
            <summary>
               Lens ID number. (Hex: 0X000C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.LensFStops">
            <summary>
               Lens F-stops. (Hex: 0X000D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.MinFocalLength">
            <summary>
               Min focal length. (Hex: 0X000E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.MaxFocalLength">
            <summary>
               Max focal length. (Hex: 0X000F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.MaxApertureAtMinFocal">
            <summary>
               Max aperture at min focal length. (Hex: 0X0010)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.MaxApertureAtMaxFocal">
            <summary>
               Max aperture at max focal length. (Hex: 0X0011)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.MCUVersion">
            <summary>
               MCU version. (Hex: 0X0012)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonLensData3EntryTag.EffectiveMaxAperture">
            <summary>
               Effective max aperture. (Hex: 0X0013)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag">
            <summary>
               Nikon picture control entry tags.
               Based on:
               http://exiv2.org/tags-nikon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Version">
            <summary>
               Version. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Name">
            <summary>
               Name. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Base">
            <summary>
               Base. (Hex: 0X0018)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Adjust">
            <summary>
               Adjust. (Hex: 0X0030)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.QuickAdjust">
            <summary>
               Quick adjust. (Hex: 0X0031)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Sharpness">
            <summary>
               Sharpness. (Hex: 0X0032)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Contrast">
            <summary>
               Contrast. (Hex: 0X0033)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Brightness">
            <summary>
               Brightness. (Hex: 0X0034)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.Saturation">
            <summary>
               Saturation. (Hex: 0X0035)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.HueAdjustment">
            <summary>
               Hue adjustment. (Hex: 0X0036)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.FilterEffect">
            <summary>
               Filter effect. (Hex: 0X0037)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.ToningEffect">
            <summary>
               Toning effect. (Hex: 0X0038)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPictureControlEntryTag.ToningSaturation">
            <summary>
               Toning saturation. (Hex: 0X0039)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag">
            <summary>
               Nikon makernote preview image tags
               The preview image is contained in a sub-IFD stored by the tag
               Nikon3MakerNoteEntryTag.Preview.
               Based on:
               http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/Nikon.html#PreviewImage
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.Compression">
            <summary>
                Compression scheme used on the image data. (Hex: 0x0103)
                http://www.awaresystems.be/imaging/tiff/tifftags/compression.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.XResolution">
            <summary>
                The number of pixels per ResolutionUnit in the ImageWidth direction. (Hex: 0x011A)
                http://www.awaresystems.be/imaging/tiff/tifftags/xresolution.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.YResolution">
            <summary>
                The number of pixels per ResolutionUnit in the ImageLength direction. (Hex: 0x011B)
                http://www.awaresystems.be/imaging/tiff/tifftags/yresolution.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.ResolutionUnit">
            <summary>
                The unit of measurement for XResolution and YResolution. (Hex: 0x0128)
                http://www.awaresystems.be/imaging/tiff/tifftags/resolutionunit.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.PreviewImageStart">
            <summary>
                Start of the preview image data. (Hex: 0x0201)
                http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/Nikon.html#PreviewImage
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.PreviewImageLength">
            <summary>
                Length of the preview image data. (Hex: 0x0202)
                http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/Nikon.html#PreviewImage
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag.YCbCrPositioning">
            <summary>
                Specifies the positioning of subsampled chrominance components relative to luminance samples. (Hex: 0x0213)
                http://www.awaresystems.be/imaging/tiff/tifftags/ycbcrpositioning.html
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag">
            <summary>
               Nikon shot info entry tags.
               Based on:
               http://exiv2.org/tags-nikon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.Version">
            <summary>
               Version. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.ShutterCount1">
            <summary>
               Shutter count 1. (Hex: 0X006A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.DeletedImageCount">
            <summary>
               Deleted image count. (Hex: 0X006E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.VibrationReduction">
            <summary>
               Vibration reduction. (Hex: 0X0075)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.VibrationReduction1">
            <summary>
               . (Hex: 0X0082)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.ShutterCount2">
            <summary>
               Shutter count 2. (Hex: 0X0157)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.VibrationReduction2">
            <summary>
               Vibration reduction 2. (Hex: 0X01AE)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.ISO">
            <summary>
               ISO. (Hex: 0X0256)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonShotInfoEntryTag.ShutterCount">
            <summary>
               Shutter count. (Hex: 0X0276)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonVibrationReductionEntryTag">
            <summary>
               Nikon vibration reduction entry tags.
               Based on:
               http://exiv2.org/tags-nikon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonVibrationReductionEntryTag.Version">
            <summary>
               Version. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonVibrationReductionEntryTag.VibrationReduction">
            <summary>
               Vibration reduction. (Hex: 0X0004)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.NikonWorldTimeEntryTag">
            <summary>
               Nikon world time entry tags.
               Based on:
               http://exiv2.org/tags-nikon.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonWorldTimeEntryTag.Timezone">
            <summary>
               Timezone. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonWorldTimeEntryTag.DaylightSavings">
            <summary>
               Daylight savings. (Hex: 0X0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.NikonWorldTimeEntryTag.DateDisplayFormat">
            <summary>
               Date display format. (Hex: 0X0003)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag">
            <summary>
               Olympus makernote tags.
               Based on http://www.exiv2.org/tags-olympus.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ThumbnailImage">
            <summary>
               Thumbnail image. (Hex: 0X0100)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.SpecialMode">
            <summary>
               Picture taking mode. (Hex: 0X0200)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Quality">
            <summary>
               Image quality setting. (Hex: 0X0201)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Macro">
            <summary>
               Macro mode. (Hex: 0X0202)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.BWMode">
            <summary>
               Black and white mode. (Hex: 0X0203)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.DigitalZoom">
            <summary>
               Digital zoom ratio. (Hex: 0X0204)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FocalPlaneDiagonal">
            <summary>
               Focal plane diagonal. (Hex: 0X0205)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.LensDistortionParams">
            <summary>
               Lens distortion parameters. (Hex: 0X0206)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FirmwareVersion">
            <summary>
               Software firmware version. (Hex: 0X0207)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.PictureInfo">
            <summary>
               ASCII format data such as [PictureInfo]. (Hex: 0X0208)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.CameraID">
            <summary>
               Camera ID data. (Hex: 0X0209)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.PreCaptureFrames">
            <summary>
               Pre-capture frames. (Hex: 0X0300)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.OneTouchWB">
            <summary>
               One touch white balance. (Hex: 0X0302)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.SerialNumber">
            <summary>
               Serial number. (Hex: 0X0404)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.PrintIM">
            <summary>
               PrintIM information. (Hex: 0X0E00)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.DataDump1">
            <summary>
               Various camera settings 1. (Hex: 0X0F00)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.DataDump2">
            <summary>
               Various camera settings 2. (Hex: 0X0F01)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ShutterSpeed">
            <summary>
               Shutter speed value. (Hex: 0X1000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ISOSpeed">
            <summary>
               ISO speed value. (Hex: 0X1001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ApertureValue">
            <summary>
               Aperture value. (Hex: 0X1002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Brightness">
            <summary>
               Brightness value. (Hex: 0X1003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FlashMode">
            <summary>
               Flash mode. (Hex: 0X1004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FlashDevice">
            <summary>
               Flash device. (Hex: 0X1005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Bracket">
            <summary>
               Exposure compensation value. (Hex: 0X1006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.SensorTemperature">
            <summary>
               Sensor temperature. (Hex: 0X1007)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.LensTemperature">
            <summary>
               Lens temperature. (Hex: 0X1008)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FocusMode">
            <summary>
               Focus mode. (Hex: 0X100B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FocusDistance">
            <summary>
               Manual focus distance. (Hex: 0X100C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Zoom">
            <summary>
               Zoom step count. (Hex: 0X100D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.MacroFocus">
            <summary>
               Macro focus step count. (Hex: 0X100E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.SharpnessFactor">
            <summary>
               Sharpness factor. (Hex: 0X100F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FlashChargeLevel">
            <summary>
               Flash charge level. (Hex: 0X1010)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ColorMatrix">
            <summary>
               Color matrix. (Hex: 0X1011)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.BlackLevel">
            <summary>
               Black level. (Hex: 0X1012)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.WhiteBalance">
            <summary>
               White balance mode. (Hex: 0X1015)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.RedBalance">
            <summary>
               Red balance. (Hex: 0X1017)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.BlueBalance">
            <summary>
               Blue balance. (Hex: 0X1018)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.SerialNumber2">
            <summary>
               Serial number 2. (Hex: 0X101A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FlashBias">
            <summary>
               Flash exposure compensation. (Hex: 0X1023)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ExternalFlashBounce">
            <summary>
               External flash bounce. (Hex: 0X1026)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ExternalFlashZoom">
            <summary>
               External flash zoom. (Hex: 0X1027)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ExternalFlashMode">
            <summary>
               External flash mode. (Hex: 0X1028)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Contrast">
            <summary>
               Contrast setting. (Hex: 0X1029)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.SharpnessFactor2">
            <summary>
               Sharpness factor. (Hex: 0X102A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ColorControl">
            <summary>
               Color control. (Hex: 0X102B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ValidBits">
            <summary>
               Valid bits. (Hex: 0X102C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.CoringFilter">
            <summary>
               Coring filter. (Hex: 0X102D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ImageWidth">
            <summary>
               Image width. (Hex: 0X102E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ImageHeight">
            <summary>
               Image height. (Hex: 0X102F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.CompressionRatio">
            <summary>
               Compression ratio. (Hex: 0X1034)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Thumbnail">
            <summary>
               Preview image embedded. (Hex: 0X1035)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ThumbnailOffset">
            <summary>
               Offset of the preview image. (Hex: 0X1036)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ThumbnailLength">
            <summary>
               Size of the preview image. (Hex: 0X1037)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.CCDScanMode">
            <summary>
               CCD scan mode. (Hex: 0X1039)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.NoiseReduction">
            <summary>
               Noise reduction. (Hex: 0X103A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.InfinityLensStep">
            <summary>
               Infinity lens step. (Hex: 0X103B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.NearLensStep">
            <summary>
               Near lens step. (Hex: 0X103C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.Equipment">
            <summary>
               Camera equipment sub-IFD. (Hex: 0X2010)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.CameraSettings">
            <summary>
               Camera Settings sub-IFD. (Hex: 0X2020)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.RawDevelopment">
            <summary>
               Raw development sub-IFD. (Hex: 0X2030)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.RawDevelopment2">
            <summary>
               Raw development 2 sub-IFD. (Hex: 0X2031)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.ImageProcessing">
            <summary>
               Image processing sub-IFD. (Hex: 0X2040)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.FocusInfo">
            <summary>
               Focus sub-IFD. (Hex: 0X2050)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.OlympusMakerNoteEntryTag.RawInfo">
            <summary>
               Raw sub-IFD. (Hex: 0X3000)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag">
            <summary>
               Panasonic makernote tags.
               Based on http://www.exiv2.org/tags-panasonic.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Quality">
            <summary>
               Image Quality. (Hex: 0x0001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.FirmwareVersion">
            <summary>
               Firmware version. (Hex: 0X0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WhiteBalance">
            <summary>
               White balance setting. (Hex: 0X0003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Unknown4">
            <summary>
               Unknown. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.FocusMode">
            <summary>
               Focus mode. (Hex: 0X0007)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.AFMode">
            <summary>
               AF mode. (Hex: 0X000F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ISO">
            <summary>
               ISO Speed. (Hex: 0X0017)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ImageStabilization">
            <summary>
               Image stabilization. (Hex: 0X001A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Macro">
            <summary>
               Macro mode. (Hex: 0X001C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ShootingMode">
            <summary>
               Shooting mode. (Hex: 0X001F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Audio">
            <summary>
               Audio. (Hex: 0X0020)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.DataDump">
            <summary>
               Data dump. (Hex: 0X0021)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Unknown34">
            <summary>
               Unknown. (Hex: 0X0022)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WhiteBalanceBias">
            <summary>
               White balance adjustment. (Hex: 0X0023)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.FlashBias">
            <summary>
               Flash bias. (Hex: 0X0024)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.InternalSerialNumber">
            <summary>
               This number is unique, and contains the date of manufacture, but
               is not the same as the number printed on the camera body.
               (Hex: 0X0025)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ExifVersion">
            <summary>
               Exif version. (Hex: 0X0026)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Unknown39">
            <summary>
               Unknown. (Hex: 0X0027)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ColorEffect">
            <summary>
               Color effect. (Hex: 0X0028)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.TimeSincePowerOn">
            <summary>
               Time in 1/100s from when the camera was powered on to when the
               image is written to memory card. (Hex: 0X0029)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.BurstMode">
            <summary>
               Burst mode. (Hex: 0X002A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.SequenceNumber">
            <summary>
               Sequence number. (Hex: 0X002B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Contrast">
            <summary>
               Contrast setting. (Hex: 0X002C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.NoiseReduction">
            <summary>
               Noise reduction. (Hex: 0X002D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.SelfTimer">
            <summary>
               Self timer. (Hex: 0X002E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Unknown47">
            <summary>
               Unknown. (Hex: 0X002F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Rotation">
            <summary>
               Rotation. (Hex: 0X0030)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Unknown49">
            <summary>
               Unknown. (Hex: 0X0031)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ColorMode">
            <summary>
               Color mode. (Hex: 0X0032)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.BabyAge">
            <summary>
               Baby (or pet) age. (Hex: 0X0033)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.OpticalZoomMode">
            <summary>
               Optical zoom mode. (Hex: 0X0034)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ConversionLens">
            <summary>
               Conversion lens. (Hex: 0X0035)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.TravelDay">
            <summary>
               Travel day. (Hex: 0X0036)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Contrast2">
            <summary>
               Contrast. (Hex: 0X0039)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WorldTimeLocation">
            <summary>
               World time location. (Hex: 0X003A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.ProgramISO">
            <summary>
               Program ISO. (Hex: 0X003C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Saturation">
            <summary>
               Saturation. (Hex: 0X0040)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Sharpness">
            <summary>
               Sharpness. (Hex: 0X0041)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.FilmMode">
            <summary>
               Film mode. (Hex: 0X0042)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WBAdjustAB">
            <summary>
               WB adjust AB. Positive is a shift toward blue. (Hex: 0X0046)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WBAdjustGM">
            <summary>
               WBAdjustGM. Positive is a shift toward green. (Hex: 0X0047)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.LensType">
            <summary>
               Lens type. (Hex: 0X0051)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.LensSerialNumber">
            <summary>
               Lens serial number. (Hex: 0X0052)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.AccessoryType">
            <summary>
               Accessory type. (Hex: 0X0053)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.PrintIM">
            <summary>
               PrintIM information. (Hex: 0X0E00)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.Unknown17481">
            <summary>
               Unknown. (Hex: 0X4449)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.MakerNoteVersion">
            <summary>
               MakerNote version. (Hex: 0X8000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.SceneMode">
            <summary>
               Scene mode. (Hex: 0X8001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WBRedLevel">
            <summary>
               WB red level. (Hex: 0X8004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WBGreenLevel">
            <summary>
               WB green level. (Hex: 0X8005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.WBBlueLevel">
            <summary>
               WB blue level. (Hex: 0X8006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PanasonicMakerNoteEntryTag.BabyAge2">
            <summary>
               Baby (or pet) age. (Hex: 0X8010)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag">
            <summary>
               Pentax makernote tags.
               Based on http://www.exiv2.org/tags-pentax.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Version">
            <summary>
               Pentax Makernote version. (Hex: 0X0000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Mode">
            <summary>
               Camera shooting mode. (Hex: 0X0001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.PreviewResolution">
            <summary>
               Resolution of a preview image. (Hex: 0X0002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.PreviewLength">
            <summary>
               Size of an IFD containing a preview image. (Hex: 0X0003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.PreviewOffset">
            <summary>
               Offset to an IFD containing a preview image. (Hex: 0X0004)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ModelID">
            <summary>
               Pentax model idenfication. (Hex: 0X0005)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Date">
            <summary>
               Date. (Hex: 0X0006)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Time">
            <summary>
               Time. (Hex: 0X0007)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Quality">
            <summary>
               Image quality settings. (Hex: 0X0008)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Size">
            <summary>
               Image size settings. (Hex: 0X0009)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Flash">
            <summary>
               Flash mode settings. (Hex: 0X000C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Focus">
            <summary>
               Focus mode settings. (Hex: 0X000D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AFPoint">
            <summary>
               Selected AF point. (Hex: 0X000E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AFPointInFocus">
            <summary>
               AF point in focus. (Hex: 0X000F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ExposureTime">
            <summary>
               Exposure time. (Hex: 0X0012)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FNumber">
            <summary>
               F-Number. (Hex: 0X0013)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ISO">
            <summary>
               ISO sensitivity settings. (Hex: 0X0014)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ExposureCompensation">
            <summary>
               Exposure compensation. (Hex: 0X0016)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.MeteringMode">
            <summary>
               MeteringMode. (Hex: 0X0017)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AutoBracketing">
            <summary>
               AutoBracketing. (Hex: 0X0018)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WhiteBallance">
            <summary>
               White ballance. (Hex: 0X0019)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WhiteBallanceMode">
            <summary>
               White ballance mode. (Hex: 0X001A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.BlueBalance">
            <summary>
               Blue color balance. (Hex: 0X001B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.RedBalance">
            <summary>
               Red color balance. (Hex: 0X001C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FocalLength">
            <summary>
               FocalLength. (Hex: 0X001D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.DigitalZoom">
            <summary>
               Digital zoom. (Hex: 0X001E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Saturation">
            <summary>
               Saturation. (Hex: 0X001F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Contrast">
            <summary>
               Contrast. (Hex: 0X0020)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Sharpness">
            <summary>
               Sharpness. (Hex: 0X0021)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Location">
            <summary>
               Location. (Hex: 0X0022)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Hometown">
            <summary>
               Home town. (Hex: 0X0023)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Destination">
            <summary>
               Destination. (Hex: 0X0024)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.HometownDST">
            <summary>
               Whether day saving time is active in home town. (Hex: 0X0025)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.DestinationDST">
            <summary>
               Whether day saving time is active in destination. (Hex: 0X0026)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.DSPFirmwareVersion">
            <summary>
               DSPFirmwareVersion. (Hex: 0X0027)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.CPUFirmwareVersion">
            <summary>
               CPUFirmwareVersion. (Hex: 0X0028)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FrameNumber">
            <summary>
               Frame number. (Hex: 0X0029)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.EffectiveLV">
            <summary>
               Camera calculated light value, includes exposure compensation. (Hex: 0X002D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ImageProcessing">
            <summary>
               Image processing. (Hex: 0X0032)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.PictureMode">
            <summary>
               Picture mode. (Hex: 0X0033)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.DriveMode">
            <summary>
               Drive mode. (Hex: 0X0034)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ColorSpace">
            <summary>
               Color space. (Hex: 0X0037)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ImageAreaOffset">
            <summary>
               Image area offset. (Hex: 0X0038)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.RawImageSize">
            <summary>
               Raw image size. (Hex: 0X0039)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.PreviewImageBorders">
            <summary>
               Preview image borders. (Hex: 0X003E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.LensType">
            <summary>
               Lens type. (Hex: 0X003F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.SensitivityAdjust">
            <summary>
               Sensitivity adjust. (Hex: 0X0040)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.DigitalFilter">
            <summary>
               Digital filter. (Hex: 0X0041)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.Temperature">
            <summary>
               Camera temperature. (Hex: 0X0047)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AELock">
            <summary>
               AE lock. (Hex: 0X0048)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.NoiseReduction">
            <summary>
               Noise reduction. (Hex: 0X0049)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FlashExposureCompensation">
            <summary>
               Flash exposure compensation. (Hex: 0X004D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ImageTone">
            <summary>
               Image tone. (Hex: 0X004F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ColorTemperature">
            <summary>
               Colort temperature. (Hex: 0X0050)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ShakeReduction">
            <summary>
               Shake reduction information. (Hex: 0X005C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ShutterCount">
            <summary>
               Shutter count. (Hex: 0X005D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.DynamicRangeExpansion">
            <summary>
               Dynamic range expansion. (Hex: 0X0069)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.HighISONoiseReduction">
            <summary>
               High ISO noise reduction. (Hex: 0X0071)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AFAdjustment">
            <summary>
               AF Adjustment. (Hex: 0X0072)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.BlackPoint">
            <summary>
               Black point. (Hex: 0X0200)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WhitePoint">
            <summary>
               White point. (Hex: 0X0201)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ShotInfo">
            <summary>
               ShotInfo. (Hex: 0X0205)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AEInfo">
            <summary>
               AEInfo. (Hex: 0X0206)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.LensInfo">
            <summary>
               LensInfo. (Hex: 0X0207)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FlashInfo">
            <summary>
               FlashInfo. (Hex: 0X0208)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AEMeteringSegments">
            <summary>
               AEMeteringSegments. (Hex: 0X0209)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FlashADump">
            <summary>
               FlashADump. (Hex: 0X020A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.FlashBDump">
            <summary>
               FlashBDump. (Hex: 0X020B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsDaylight">
            <summary>
               WB_RGGBLevelsDaylight. (Hex: 0X020D)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsShade">
            <summary>
               WB_RGGBLevelsShade. (Hex: 0X020E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsCloudy">
            <summary>
               WB_RGGBLevelsCloudy. (Hex: 0X020F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsTungsten">
            <summary>
               WB_RGGBLevelsTungsten. (Hex: 0X0210)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsFluorescentD">
            <summary>
               WB_RGGBLevelsFluorescentD. (Hex: 0X0211)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsFluorescentN">
            <summary>
               WB_RGGBLevelsFluorescentN. (Hex: 0X0212)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsFluorescentW">
            <summary>
               WB_RGGBLevelsFluorescentW. (Hex: 0X0213)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.WB_RGGBLevelsFlash">
            <summary>
               WB_RGGBLevelsFlash. (Hex: 0X0214)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.CameraInfo">
            <summary>
               CameraInfo. (Hex: 0X0215)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.BatteryInfo">
            <summary>
               BatteryInfo. (Hex: 0X0216)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.AFInfo">
            <summary>
               AFInfo. (Hex: 0X021F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.ColorInfo">
            <summary>
               ColorInfo. (Hex: 0X0222)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.PentaxMakerNoteEntryTag.SerialNumber">
            <summary>
               Serial Number. (Hex: 0X0229)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag">
            <summary>
               Label tags for Sony Makernote.
               Based on http://www.exiv2.org/tags-sony.html
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.Quality">
            <summary>
               Image quality. (Hex: 0X0102)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.FlashExposureComp">
            <summary>
               Flash exposure compensation in EV. (Hex: 0X0104)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.Teleconverter">
            <summary>
               Teleconverter Model. (Hex: 0X0105)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.WhiteBalanceFineTune">
            <summary>
               White Balance Fine Tune Value. (Hex: 0X0112)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.CameraSettings">
            <summary>
               Camera Settings. (Hex: 0X0114)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.WhiteBalance">
            <summary>
               White balance. (Hex: 0X0115)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.PrintIM">
            <summary>
               PrintIM information. (Hex: 0X0E00)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.MultiBurstMode">
            <summary>
               Multi Burst Mode. (Hex: 0X1000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.MultiBurstImageWidth">
            <summary>
               Multi Burst Image Width. (Hex: 0X1001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.MultiBurstImageHeight">
            <summary>
               Multi Burst Image Height. (Hex: 0X1002)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.Panorama">
            <summary>
               Panorama. (Hex: 0X1003)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.PreviewImage">
            <summary>
               Preview Image. (Hex: 0X2001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.AutoHDR">
            <summary>
               Auto High Definition Range. (Hex: 0X200A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ShotInfo">
            <summary>
               Shot Information. (Hex: 0X3000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.FileFormat">
            <summary>
               File Format. (Hex: 0XB000)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.SonyModelID">
            <summary>
               Sony Model ID. (Hex: 0XB001)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ColorReproduction">
            <summary>
               Color Reproduction. (Hex: 0XB020)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ColorTemperature">
            <summary>
               Color Temperature. (Hex: 0XB021)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ColorCompensationFilter">
            <summary>
               Color Compensation Filter: negative is green, positive is magenta. (Hex: 0XB022)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.SceneMode">
            <summary>
               Scene Mode. (Hex: 0XB023)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ZoneMatching">
            <summary>
               Zone Matching. (Hex: 0XB024)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.DynamicRangeOptimizer">
            <summary>
               Dynamic Range Optimizer. (Hex: 0XB025)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ImageStabilization">
            <summary>
               Image stabilization. (Hex: 0XB026)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.LensID">
            <summary>
               Lens identifier. (Hex: 0XB027)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.MinoltaMakerNote">
            <summary>
               Minolta MakerNote. (Hex: 0XB028)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ColorMode">
            <summary>
               Color Mode. (Hex: 0XB029)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.FullImageSize">
            <summary>
               Full Image Size. (Hex: 0XB02B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.PreviewImageSize">
            <summary>
               Preview Image Size. (Hex: 0XB02C)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.Macro">
            <summary>
               Macro. (Hex: 0XB040)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ExposureMode">
            <summary>
               Exposure Mode. (Hex: 0XB041)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.FocusMode">
            <summary>
               Focus mode. (Hex: 0XB042)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.AFMode">
            <summary>
               AF Mode. (Hex: 0XB043)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.AFIlluminator">
            <summary>
               AF Illuminator. (Hex: 0XB044)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.Quality2">
            <summary>
               Quality. (Hex: 0XB047)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.FlashLevel">
            <summary>
               Flash Level. (Hex: 0XB048)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.ReleaseMode">
            <summary>
               Release Mode. (Hex: 0XB049)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.SequenceNumber">
            <summary>
               Shot number in continous burst mode. (Hex: 0XB04A)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.AntiBlur">
            <summary>
               Anti-Blur. (Hex: 0XB04B)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.LongExposureNoiseReduction">
            <summary>
               Long Exposure Noise Reduction. (Hex: 0XB04E)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.DynamicRangeOptimizer2">
            <summary>
               Dynamic Range Optimizer. (Hex: 0XB04F)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.IntelligentAuto">
            <summary>
               Intelligent Auto. (Hex: 0XB052)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IFD.Tags.SonyMakerNoteEntryTag.WhiteBalance2">
            <summary>
               White Balance. (Hex: 0XB054)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IIM.IIMReader">
            <summary>
            Processes all IPTC-IIM segments
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.IIM.IIMReader.IPTC_IIM_SEGMENT">
            <summary>
            The magic bytes that start a new IPTC-IIM segment
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IIM.IIMReader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
            Constructor
            </summary>
            <param name="data">Bytes contained in the reader</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IIM.IIMReader.Process">
            <summary>
            Proceed with the reading of the IIM
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IIM.IIMTag">
            <summary>
            Represents an IIM Tag
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IIM.IIMTag.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IIM.IIMTag.TagTypes">
            <summary>
            Defines the supported TagType
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.IIM.IIMTag.Clear">
            <summary>
            Clear IIM content
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IIM.IIMTag.Title">
            <summary>
            Get or Set the Title Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IIM.IIMTag.Creator">
            <summary>
            Get or Set the Creator Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IIM.IIMTag.Copyright">
            <summary>
            Get or Set the Copyright Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IIM.IIMTag.Comment">
            <summary>
            Get or Set the comment Tag
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IIM.IIMTag.Keywords">
            <summary>
            Get or Set the Keywords Tag
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ILazy">
            <summary>
               This interface provides generic information about ab object,
               from which the content can be load only on demand.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ILazy.IsLoaded">
            <summary>
               Gets an indication whether the object is loaded.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ILazy.Load">
            <summary>
            Load the object data if not done yet.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.Codec">
            <summary>
               A photo codec. Contains basic photo details.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.Codec.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.Codec.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="P:VisioForge.Libs.TagLib.Image.Codec.MediaTypes" /> containing
               the types of media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.Codec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.Codec.PhotoWidth">
            <summary>
               Gets the width of the photo represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               photo represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.Codec.PhotoHeight">
            <summary>
               Gets the height of the photo represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               photo represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.Codec.PhotoQuality">
            <summary>
               Gets the (format specific) quality indicator of the photo
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value indicating the quality. A value
               0 means that there was no quality indicator for the format
               or the file.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.Codec.#ctor(System.Int32,System.Int32)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Image.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Image.Codec" /> instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.Codec.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Image.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <param name="quality">
               The quality indicator for the photo, if the format supports it.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Image.Codec" /> instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.CombinedImageTag">
            <summary>
               Combines some <see cref="T:VisioForge.Libs.TagLib.Image.ImageTag"/> instance to behave as one.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Exif">
            <summary>
               Direct access to the Exif (IFD) tag (if any)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Xmp">
            <summary>
               Direct access to the Xmp tag (if any)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.OtherTags">
            <summary>
               Other image tags available in this tag.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.AllowedTypes">
            <summary>
               Stores the types of the tags, which are allowed for
               the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.AllTags">
            <summary>
               Returns all image tags in this tag, with XMP
               and Exif first.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.CombinedImageTag.#ctor(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.CombinedImageTag" /> with a restriction on the
               allowed tag types contained in this combined tag.
            </summary>
            <param name="allowedTypes">
               A <see cref="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.TagTypes" /> value, which restricts the
               types of metadata that can be contained in this
               combined tag.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" />
               containing the tag types contained in the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.CombinedImageTag.Clear">
            <summary>
               Clears all of the child tags.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Keywords">
            <summary>
               Gets or sets the keywords for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the keywords of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Rating">
            <summary>
               Gets or sets the rating for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> containing the rating of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.DateTime">
            <summary>
               Gets or sets the time when the image, the current instance
               belongs to, was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time the image was taken.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Orientation">
            <summary>
               Gets or sets the orientation of the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageOrientation" /> containing the orienatation of the
               image
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Software">
            <summary>
               Gets or sets the software the image, the current instance
               belongs to, was created with.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the name of the
               software the current instace was created with.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Latitude">
            <summary>
               Gets or sets the latitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the latitude ranging from -90.0
               to +90.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Longitude">
            <summary>
               Gets or sets the longitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the longitude ranging from -180.0
               to +180.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Altitude">
            <summary>
               Gets or sets the altitude of the GPS coordinate the current
               image was taken. The unit is meter.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the altitude. A positive value
               is above sea level, a negative one below sea level. The unit is meter.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.ExposureTime">
            <summary>
               Gets the exposure time the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the exposure time in seconds.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.FNumber">
            <summary>
               Gets the FNumber the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the FNumber.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.ISOSpeedRatings">
            <summary>
               Gets the ISO speed the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the ISO speed as defined in ISO 12232.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.FocalLength">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.FocalLengthIn35mmFilm">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with, assuming a 35mm film camera.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in 35mm equivalent in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Make">
            <summary>
               Gets the manufacture of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the manufacture name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Model">
            <summary>
               Gets the model name of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the model name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Creator">
            <summary>
               Gets or sets the creator of the image.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the name of the creator.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.CombinedImageTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide basic
               functionality common to all image types.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.File.ImageTag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Image.CombinedImageTag" /> object
               representing all image tags stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.File.EnsureAvailableTags">
            <summary>
               The method creates all tags which are allowed for the current
               instance of the image file. This method can be used to ensure,
               that all tags are in place and properties can be safely used
               to set values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Image.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.File.CopyFrom(VisioForge.Libs.TagLib.Image.File)">
            <summary>
            	Copies metadata from the given file..
            </summary>
            <param name='file'>
            	File to copy metadata from.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.ImageBlockFile">
            <summary>
               Some image file formats are organized as a sequence of mostly
               independent data blocks whose order can be changed. Metadata is
               stored in some of those blocks and when metadata is saved, often the
               same task remains: Delete some blocks which contain metadata and
               overwrite some blocks with other metadata.
               This class extends <see cref="T:VisioForge.Libs.TagLib.Image.File" /> to provide this
               functionality. Blocks can be marked as metadata and when metadata is
               saved their space is used or they are deleted.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock">
            <summary>
               This class represents a metadata block to overwrite.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.Start">
            <summary>
               The start index
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.Length">
            <summary>
               The length of the block
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.#ctor(System.Int64,System.Int64)">
            <summary>
               Constructor
            </summary>
            <param name="start">
               A <see cref="T:System.Int64"/> with the start of the block
            </param>
            <param name="length">
               A <see cref="T:System.Int64"/> with the length of the block
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.#ctor">
            <summary>
               Constructor. Creates a new instance with an empty block
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.OverlapsWith(VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock)">
            <summary>
               Checks if the given block overlaps with this instance.
            </summary>
            <param name="block">
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock"/> with the block to check
               overlapping.
            </param>
            <returns>
               A <see cref="T:System.Boolean"/> which is true, if the given
               block overlapps with the current instance.
            </returns>
            <remarks>
               Overlapping means here also that blocks directly follow.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.Add(VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock)">
            <summary>
               Adds the given block to the current instance, if this is possible.
            </summary>
            <param name="block">
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock"/> with the block to add.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.Before(VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock)">
            <summary>
               Checks, if the one block is before the other. That means,
               if the current instance ends before the given block starts.
            </summary>
            <param name="block">
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock"/> to compare with.
            </param>
            <returns>
               A <see cref="T:System.Boolean"/> which is true if the current
               instance is before the given block.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.MetadataBlock.ToString">
            <summary>
               Provides a readable <see cref="T:System.String"/> for
               the current instance.
            </summary>
            <returns>
               A <see cref="T:System.String"/> representing the current
               instance.
            </returns>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageBlockFile.metadata_blocks">
            <summary>
               An odered list of the metadata blocks. The blocks do not overlap.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.AddMetadataBlock(System.Int64,System.Int64)">
            <summary>
               Adds a range to be treated as metadata.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64"/> with the start index of the metadata block
            </param>
            <param name="length">
               A <see cref="T:System.Int64"/> with the length of the metadata block
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.SaveMetadata(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Saves the given data at the given position. All metadata blocks are
               either deleted or overwritten.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the metadata to write.
            </param>
            <param name="start">
               A <see cref="T:System.Int64"/> with the index to save the metadata at.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance for a specified
               path in the local file system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.ImageBlockFile.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance for a specified
               file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.ImageOrientation">
            
            	  1        2       3      4         5            6           7          8
            
            	888888  888888      88  88      8888888888  88                  88  8888888888
            	88          88      88  88      88  88      88  88          88  88      88  88
            	8888      8888    8888  8888    88          8888888888  8888888888          88
            	88          88      88  88
            	88          88  888888  888888
            
            	t-l     t-r     b-r     b-l     l-t         r-t         r-b             l-b
            
            	*
            <summary>
            Describes the orientation of an image.
            Values are viewed in terms of rows and columns.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.None">
            <summary>
            No value is known.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.TopLeft">
            <summary>
            No need to do any transformations.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.TopRight">
            <summary>
            Mirror image vertically.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.BottomRight">
            <summary>
            Rotate image 180 degrees.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.BottomLeft">
            <summary>
            Mirror image horizontally
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.LeftTop">
            <summary>
            Mirror image horizontally and rotate 90 degrees clockwise.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.RightTop">
            <summary>
            Rotate image 90 degrees clockwise.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.RightBottom">
            <summary>
            Mirror image vertically and rotate 90 degrees clockwise.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Image.ImageOrientation.LeftBottom">
            <summary>
            Rotate image 270 degrees clockwise.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.ImageTag">
            <summary>
               A class to abstract the image tags. It extends the <see cref="T:VisioForge.Libs.TagLib.Tag"/>
               class and adds some image specific propties.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Keywords">
            <summary>
               Gets or sets the keywords for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the keywords of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Rating">
            <summary>
               Gets or sets the rating for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> containing the rating of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.DateTime">
            <summary>
               Gets or sets the time when the image, the current instance
               belongs to, was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time the image was taken.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Orientation">
            <summary>
               Gets or sets the orientation of the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageOrientation" /> containing the orientation of the
               image
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Software">
            <summary>
               Gets or sets the software the image, the current instance
               belongs to, was created with.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the name of the
               software the current instace was created with.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Latitude">
            <summary>
               Gets or sets the latitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the latitude ranging from -90.0
               to +90.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Longitude">
            <summary>
               Gets or sets the longitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the longitude ranging from -180.0
               to +180.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Altitude">
            <summary>
               Gets or sets the altitude of the GPS coordinate the current
               image was taken. The unit is meter.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the altitude. A positive value
               is above sea level, a negative one below sea level. The unit is meter.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.ExposureTime">
            <summary>
               Gets the exposure time the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the exposure time in seconds.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.FNumber">
            <summary>
               Gets the FNumber the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the FNumber.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.ISOSpeedRatings">
            <summary>
               Gets the ISO speed the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the ISO speed as defined in ISO 12232.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.FocalLength">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.FocalLengthIn35mmFilm">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with, assuming a 35mm film camera.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in 35mm equivalent in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Make">
            <summary>
               Gets the manufacture of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the manufacture name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Model">
            <summary>
               Gets the model name of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the model name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.ImageTag.Creator">
            <summary>
               Gets or sets the creator of the image.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the name of the creator.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Image.NoMetadata.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Image.File" /> to provide tagging
               some sort of support for files that don't support metadata. You
               obviously can't write to them, but you can populate an XMP tag, for
               sidecar purposes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.NoMetadata.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Image.NoMetadata.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.NoMetadata.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.NoMetadata.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.NoMetadata.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.NoMetadata.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.NoMetadata.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.NoMetadata.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.NoMetadata.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Image.NoMetadata.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Image.NoMetadata.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Jpeg.Codec">
            <summary>
               A Jpeg photo codec. Contains basic photo details.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Jpeg.Codec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.Codec.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Jpeg.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <param name="quality">
               The quality of the photo.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Jpeg.Codec" /> instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Jpeg.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Image.ImageBlockFile" /> to provide tagging
               and properties support for Jpeg files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.EXIF_IDENTIFIER">
            <summary>
               The magic bits used to recognize an Exif segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.IPTC_IIM_IDENTIFIER">
            <summary>
            The magic strings used to identifiy an IPTC-IIM section
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.BASIC_JFIF_HEADER">
            <summary>
               Standard (empty) JFIF header to add, if no one is contained
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.properties">
            <summary>
               Contains the media properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.jfif_header">
            <summary>
               For now, we do not allow to change the jfif header. As long as this is
               the case, the header is kept as it is.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.width">
            <summary>
               The image width, as parsed from the Frame
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.height">
            <summary>
               The image height, as parsed from the Frame
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.File.quality">
            <summary>
               Quality of the image, stored as we parse the file
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Jpeg.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Jpeg.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Jpeg.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Jpeg.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Jpeg.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
             Gets a tag of a specified type from the current instance, optionally creating a
            new tag if possible.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the information from file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Jpeg.File.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ValidateHeader">
            <summary>
               Validates if the opened file is actually a JPEG.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadSegmentMarker">
            <summary>
               Reads a segment marker for a segment starting at current position.
               The second byte of the marker is returned, since the first is equal
               to 0xFF in every case.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Jpeg.Marker"/> with the second byte of the segment marker.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadSegmentSize">
            <summary>
               Reads the size of a segment at the current position.
            </summary>
            <returns>
               A <see cref="T:System.UInt16"/> with the size of the current segment.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadMetadata">
            <summary>
               Extracts the metadata from the current file by reading every segment in file.
               Method should be called with read position at first segment marker.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadJFIFHeader(System.UInt16)">
            <summary>
               Reads a JFIF header at current position
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadAPP1Segment(System.UInt16)">
            <summary>
               Reads an APP1 segment to find EXIF or XMP metadata.
            </summary>
            <param name="length">
               The length of the segment that will be read.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadAPP13Segment(System.UInt16)">
            <summary>
               Reads an APP13 segment to find IPTC-IIM metadata.
            </summary>
            <param name="length">
               The length of the segment that will be read.
            </param>
            <remarks>More info and specs for IPTC-IIM:
            - Guidelines for Handling Image Metadata (http://www.metadataworkinggroup.org/specs/)
            - IPTC Standard Photo Metadata (July 2010) (http://www.iptc.org/std/photometadata/specification/IPTC-PhotoMetadata-201007_1.pdf)
            - Extracting IPTC header information from JPEG images (http://www.codeproject.com/KB/graphics/iptc.aspx?fid=2301&amp;df=90&amp;mpp=25&amp;noise=3&amp;prof=False&amp;sort=Position&amp;view=Quick&amp;fr=51#xx0xx)
            - Reading IPTC APP14 Segment Header Information from JPEG Images (http://www.codeproject.com/KB/graphics/ReadingIPTCAPP14.aspx?q=iptc)
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.WriteMetadata">
            <summary>
               Writes the metadata back to file. All metadata is stored in the first segments
               of the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.RenderExifSegment">
            <summary>
               Creates a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> for the Exif segment of this file
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the whole Exif segment, if exif tags
               exists, otherwise null.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.RenderXMPSegment">
            <summary>
               Creates a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> for the Xmp segment of this file
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the whole Xmp segment, if xmp tags
               exists, otherwise null.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadCOMSegment(System.Int32)">
            <summary>
               Reads a COM segment to find the JPEG comment.
            </summary>
            <param name="length">
               The length of the segment that will be read.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.RenderCOMSegment">
            <summary>
               Creates a <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> for the comment segment of this file
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the whole comment segment, if a comment tag
               exists, otherwise null.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadSOFSegment(System.Int32,VisioForge.Libs.TagLib.Jpeg.Marker)">
            <summary>
               Reads and parse a SOF segment
            </summary>
            <param name="length">
               The length of the segment that will be read.
            </param>
            <param name="marker">
               The SOFx marker.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.File.ReadDQTSegment(System.Int32)">
            <summary>
               Reads the DQT Segment, and Guesstimate the image quality from it
            </summary>
            <param name="length">
               The length of the segment that will be read
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag">
            <summary>
               Contains the JPEG comment.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag.#ctor(System.String)">
            <summary>
               Constructor.
            </summary>
            <param name="value">
               The value of the comment.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag.#ctor">
            <summary>
               Constructor. Creates a new empty comment.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag.Value">
            <summary>
               The value of the comment represented by the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag.Comment">
            <summary>
               Gets or sets the comment for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the comment of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.JpegComment" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Jpeg.JpegCommentTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Jpeg.Marker">
             <summary>
                This enum defines the different markers used in JPEG segments.
            
                See CCITT Rec. T.81 (1992 E), Table B.1 (p.32)
             </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF0">
            <summary>
               Start Of Frame marker, non-differential, Huffman coding, Baseline DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF1">
            <summary>
               Start Of Frame marker, non-differential, Huffman coding, Extended Sequential DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF2">
            <summary>
               Start Of Frame marker, non-differential, Huffman coding, Progressive DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF3">
            <summary>
               Start Of Frame marker, non-differential, Huffman coding, Lossless (sequential)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF5">
            <summary>
               Start Of Frame marker, differential, Huffman coding, Differential Sequential DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF6">
            <summary>
               Start Of Frame marker, differential, Huffman coding, Differential Progressive DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF7">
            <summary>
               Start Of Frame marker, differential, Huffman coding, Differential Lossless (sequential)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG">
            <summary>
               Reserved for JPG extensions
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF9">
            <summary>
               Start Of Frame marker, non-differential, arithmetic coding, Extended Sequential DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF10">
            <summary>
               Start Of Frame marker, non-differential, arithmetic coding, Progressive DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF11">
            <summary>
               Start Of Frame marker, non-differential, arithmetic coding, Lossless (sequential)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF13">
            <summary>
               Start Of Frame marker, differential, arithmetic coding, Differential Sequential DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF14">
            <summary>
               Start Of Frame marker, differential, arithmetic coding, Differential Progressive DCT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOF15">
            <summary>
               Start Of Frame marker, differential, arithmetic coding, Differential Lossless (sequential)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.DHT">
            <summary>
               Define Huffman table(s)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.DAC">
            <summary>
               Define arithmetic coding conditioning(s)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST0">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST1">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST2">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST3">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST4">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST5">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST6">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.RST7">
            <summary>
               Restart
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOI">
            <summary>
               Start of Image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.EOI">
            <summary>
               End of Image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.SOS">
            <summary>
               Start of scan
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.DQT">
            <summary>
               Define quantization table (s)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.DNL">
            <summary>
               Define number of lines
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.DRI">
            <summary>
               Define restart interval
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.DHP">
            <summary>
               Define hierarchical progression
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.EXP">
            <summary>
               Define reference component
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP0">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP1">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP2">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP3">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP4">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP5">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP6">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP7">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP8">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP9">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP10">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP11">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP12">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP13">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP14">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.APP15">
            <summary>
               Reserved for application segment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG0">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG1">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG2">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG3">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG4">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG5">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG6">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG7">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG8">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG9">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG10">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG11">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG12">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.JPG13">
            <summary>
               Reserved for JPEG extension
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Marker.COM">
            <summary>
              Comment
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Jpeg.Table">
            <summary>
               Contains static predefined tables and helpers
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Table.StandardLuminanceQuantization">
             <summary>
                Standard Luminance Quantization table
            
                See CCIT Rec. T.81 (1992 E), K.1 (p143)
             </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Jpeg.Table.StandardChrominanceQuantization">
             <summary>
                Standard Chrominance Quantization table
            
                See CCIT Rec. T.81 (1992 E), K.1 (p143)
             </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ListBase`1">
            <summary>
               This class implements <see cref="T:System.Collections.Generic`1"/>
               for objects that implement <see cref="T:System.IComparable`1"/>,
               providing extra features used in lists in TagLib#.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.ListBase`1.data">
            <summary>
               Contains the internal list.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ListBase`1" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.#ctor(VisioForge.Libs.TagLib.ListBase{`0})">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ListBase`1" /> with specified contents.
            </summary>
            <param name="list">
              A <see cref="T:System.Collections.Generic.IEnumerable`1"
              /> containing objects to add to the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.#ctor(`0[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ListBase`1" /> with specified contents.
            </summary>
            <param name="list">
              A <see cref="T:System.Array" /> containing objects to add to
              the current instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance is empty;
               otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Add(VisioForge.Libs.TagLib.ListBase{`0})">
            <summary>
               Adds a collection of elements to the current instance.
            </summary>
            <param name="list">
               A <see cref="T:VisioForge.Libs.TagLib.ListBase`1"/> object containing
               elements to add to the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
               Adds a collection of elements to the current instance.
            </summary>
            <param name="list">
               A <see cref="T:System.Collections.Generic.IEnumerable`1"/> object containing
               elements to add to the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Add(`0[])">
            <summary>
               Adds a collection of elements to the current instance.
            </summary>
            <param name="list">
               An array containing elements to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.SortedInsert(`0,System.Boolean)">
            <summary>
               Performs a sorted insert of an object into the current
               instance, optionally only adding if the item is unique.
            </summary>
            <param name="item">
               An object to add to the current instance.
            </param>
            <param name="unique">
               If <see langword="true" />, the object will only be added
               if an identical value is not already contained in the
               current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="item" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.SortedInsert(`0)">
            <summary>
               Performs a sorted insert of an object into the current
               instance.
            </summary>
            <param name="item">
               An object to add to the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="item" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.ToArray">
            <summary>
               Converts the current instance to an array.
            </summary>
            <returns>
               A <see cref="T:System.Array" /> containing the contents of
               the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.IsReadOnly">
            <summary>
               Gets whether or not the current instance is read-only.
            </summary>
            <value>
               Always <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.IsFixedSize">
            <summary>
               Gets whether or not the current instance has a fixed
               size.
            </summary>
            <value>
               Always <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.Item(System.Int32)">
            <summary>
               Gets and sets the value as a specified index.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Add(`0)">
            <summary>
               Adds a single item to end of the current instance.
            </summary>
            <param name="item">
               An object to add to the end of the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Clear">
            <summary>
               Clears the contents of the current instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Contains(`0)">
            <summary>
               Gets whether or not the current instance contains a
               specified object.
            </summary>
            <param name="item">
               An object to look for in the current instance.
            </param>
            <returns>
               <see langword="true" /> if the item could be found;
               otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.IndexOf(`0)">
            <summary>
               Gets the index of the first occurance of a value.
            </summary>
            <param name="item">
               A object to find in the current instance.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the first index
               at which the value was found, or -1 if it was not found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Insert(System.Int32,`0)">
            <summary>
               Inserts a single value into the current instance at a
               specified index.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the position at
               which to insert the value.
            </param>
            <param name="item">
               An object to insert into the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.Remove(`0)">
            <summary>
               Removes the first occurance of an object from the current
               instance.
            </summary>
            <param name="item">
               An object to remove from the current instance.
            </param>
            <returns>
               <see langword="true" /> if the value was removed;
               otherwise the value did not appear in the current
               instance and <see langword="false" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.RemoveAt(System.Int32)">
            <summary>
               Removes the item at the specified index.
            </summary>
            <param name="index">
               A <see cref="T:System.Int32" /> value specifying the position at
               which to remove an item.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.ToString(System.String)">
            <summary>
               Gets a string representation of the contents of the
               current instance, joined by a separator.
            </summary>
            <param name="separator">
               A <see cref="T:System.String" /> object to separate the items
               with.
            </param>
            <returns>
               A <see cref="T:System.String" /> object containing the contents
               of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.ToString">
            <summary>
               Gets a string representation of the contents of the
               current instance, joined by commas.
            </summary>
            <returns>
               A <see cref="T:System.String" /> object containing the contents
               of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.Count">
            <summary>
               Gets the number of elements in the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               elements in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.IsSynchronized">
            <summary>
               Gets whether or not the current instance is synchronized.
            </summary>
            <value>
               Always <see langword="false" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ListBase`1.SyncRoot">
            <summary>
               Gets the object that can be used to synchronize the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Object" /> that can be used to synchronize
               the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.CopyTo(`0[],System.Int32)">
            <summary>
               Copies the current instance to an array, starting at a
               specified index.
            </summary>
            <param name="array">
               An array to copy to.
            </param>
            <param name="arrayIndex">
               A <see cref="T:System.Int32" /> value indicating the index in
               <paramref name="array" /> at which to start copying.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ListBase`1.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the elements
               in the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the tag's data boxes.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.Attachment">
            <summary>
            Describes a Matroska Attachment. 
            Attachments may be pictures, but also any other content type.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.Attachment" /> with no data or values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.Attachment" /> by reading in the contents of a
               specified file.
            </summary>
            <param name="path">
               A <see cref="T:System.String"/> object containing the path of the
               file to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,System.Int64,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.Attachment" /> by reading in the contents of a
               specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> object containing
               abstraction of the file to read.
            </param>
            <param name="offset">
               The position in bytes where the picture is located in the
               <see cref="T:File.IFileAbstraction"/>.
            </param>
            <param name="size">
               The size in bytes of the picture in the
               <see cref="T:File.IFileAbstraction"/> (default: read all).
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.Attachment" /> by using the contents of a <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing picture data
               to use.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.#ctor(VisioForge.Libs.TagLib.IPicture)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.Attachment" /> by doing a shallow copy of <see 
               cref="T:VisioForge.Libs.TagLib.IPicture" />.
            </summary>
            <param name="picture">
               A <see cref="T:VisioForge.Libs.TagLib.IPicture"/> object containing picture data
               to convert to an Attachment.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.SetTypeFromFilename">
            <summary>
            Derive the Picture-type from the the file-name. 
            It change the <see cref="P:Type"/> from the <see cref="P:Filename"/>.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Attachment.SetFilenameFromType">
            <summary>
            Derive thefile-name from the the Piture type. 
            It change the <see cref="P:Filename"/> from the <see cref="P:Type"/> if required, 
            but not if the filename already matches the type.
            </summary>
            <returns>true if <see cref="P:Filename"/> changed</returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Attachment.UID">
            <summary>
            Unique ID representing the element, as random as possible (setting zero will generate automatically a new one).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Attachment.UIDType">
            <summary>
            Get the Tag type the UID should be represented by, or 0 if undefined
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.AudioTrack">
            <summary>
            Describes a Matroska Audio track.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.AudioTrack.#ctor(VisioForge.Libs.TagLib.Matroska.File,VisioForge.Libs.TagLib.Matroska.EBMLreader)">
            <summary>
             Construct a <see cref="T:VisioForge.Libs.TagLib.Matroska.AudioTrack" /> reading information from 
             provided file data.
            Parsing will be done reading from _file at position references by 
            parent element's data section.
            </summary>
            <param name="_file"><see cref="T:VisioForge.Libs.TagLib.Matroska.File" /> instance to read from.</param>
            <param name="element">Parent <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" />.</param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.AudioTrack.UnknownElements">
            <summary>
            List of unknown elements encountered while parsing.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.AudioTrack.MediaTypes">
            <summary>
            This type of track only has audio media type.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.AudioTrack.AudioBitrate">
            <summary>
            Audio track bitrate.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.AudioTrack.AudioSampleRate">
            <summary>
            Audio track sampling rate.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.AudioTrack.AudioChannels">
            <summary>
            Number of audio channels in this track.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.EBMLelement">
            <summary>
            Represent a generic EBML Element and its content.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.#ctor">
            <summary>
            Constructs an empty <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLelement" />.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.#ctor(VisioForge.Libs.TagLib.Matroska.MatroskaID)">
            <summary>
            Construct a <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLelement" /> to contain children elements.
            </summary>
            <param name="ebmlid">EBML ID of the element to be created.</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.#ctor(VisioForge.Libs.TagLib.Matroska.MatroskaID,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
            Construct a <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLelement" /> to contain data.
            </summary>
            <param name="ebmlid">EBML ID of the element to be created.</param>
            <param name="data">EBML data of the element to be created.</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.#ctor(VisioForge.Libs.TagLib.Matroska.MatroskaID,System.UInt64)">
            <summary>
            Construct <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLelement" /> to contain data.
            </summary>
            <param name="ebmlid">EBML ID of the element to be created.</param>
            <param name="value">EBML data as an <see cref="T:System.UInt64"/> value.</param>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLelement.ID">
            <summary>
            EBML Element Identifier.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLelement.Data">
            <summary>
            Get or set the data represented by the EBML
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLelement.Children">
            <summary>
            Get or set the element embedded in the EBML
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLelement.IncSize">
            <summary>
            Get or set whether the EBML should have a size of one byte more 
            than the optimal size.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLelement.Size">
            <summary>
            EBML Element size in bytes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLelement.IDSize">
            <summary>
            Get the size of the EBML ID, in bytes
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLelement.DataSizeSize">
            <summary>
            Get the size of the EBML data-size, in bytes
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLelement.DataSize">
            <summary>
            EBML Element data/content size in bytes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.IncrementSize">
            <summary>
            Try to increase the size of the EBML by 1 byte.
            </summary>
            <returns>True if successfully increased size, false if failed.</returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLelement.Header">
            <summary>
            Get the EBML ID and data-size as a vector of bytes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.EBMLByteSize(System.UInt64)">
            <summary>
            Get the byte-size required to encode an EBML value with the leading 1. 
            </summary>
            <param name="value">Encoded value</param>
            <returns>size in bytes</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.GetString">
            <summary>
            Get a string from EBML Element's data section (UTF-8).
            Handle null-termination.
            </summary>
            <returns>a string object containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.GetBool">
            <summary>
            Get a boolean from EBML Element's data section.
            </summary>
            <returns>a bool containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.GetDouble">
            <summary>
            Get a double from EBML Element's data section.
            </summary>
            <returns>a double containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.GetULong">
            <summary>
            Get an unsigned integer (any size from 1 to 8 bytes) from EBML Element's data section.
            </summary>
            <returns>a ulong containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.GetBytes">
            <summary>
            Get a bytes vector from EBML Element's data section.
            </summary>
            <returns>a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.SetData(System.String)">
            <summary>
            Set data content as <see cref="T:System.String"/> to the EBML file
            </summary>
            <param name="data">data as <see cref="T:System.String"/></param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.SetData(System.UInt64)">
            <summary>
             Set data content as <see cref="T:System.UInt64"/> to the EBML file
            </summary>
            <param name="data">unsigned long number to write</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLelement.Write(VisioForge.Libs.TagLib.Matroska.File,System.Int64,System.Int64)">
            <summary>
            Write the EMBL (and all its data/content) to a file.
            </summary>
            <param name="file">A <see cref="T:VisioForge.Libs.TagLib.Matroska.File"/> representing the file to write to.</param>
            <param name="position">The byte-position in the file to write the EBML to.</param>
            <param name="reserved">The reserved size in bytes that the EBML may overwrite from the given position. (Default: 0, insert)</param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.EBMLID">
            <summary>
            Public enumeration listing the possible EBML element identifiers.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLHeader">
            <summary>
            Indicates an EBML Header element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLVersion">
            <summary>
            Indicates an EBML Version element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLReadVersion">
            <summary>
            Indicates an EBML Read Version element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLMaxIDLength">
            <summary>
            Indicates an EBML Max ID Length element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLMaxSizeLength">
            <summary>
            Indicates an EBML Max Size Length element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLDocType">
            <summary>
            Indicates an EBML Doc Type element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLDocTypeVersion">
            <summary>
            Indicates an EBML Doc Type Version element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLDocTypeReadVersion">
            <summary>
            Indicates an EBML Doc Type Read Version element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.EBMLID.EBMLVoid">
            <summary>
            Indicates an EBML Void element.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.EBMLreader">
            <summary>
            Read a Matroska EBML element from a file, but also provides basic modifications to an 
            EBML element directly on the file (write). This can also represent an abstract EBML 
            on the file (placeholder).
            </summary>
            <remarks>
             This was intitialy called <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLelement"/>, but this was in fact a file-reader.
             The name <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLelement"/> correspond more to the class which has been created to
             represent an EBML structure (regardless of file-issues) to support the EBML writing to file.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.#ctor(VisioForge.Libs.TagLib.Matroska.File,System.UInt64)">
            <summary>
            Constructs a root <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" /> instance, by reading from
            the provided file position.
            </summary>
            <param name="_file"><see cref="T:VisioForge.Libs.TagLib.Matroska.File" /> File instance to read from.</param>
            <param name="position">Position in the file to start reading from.</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.#ctor(VisioForge.Libs.TagLib.Matroska.EBMLreader,System.UInt64)">
            <summary>
            Constructs a child <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" /> reading the data from the
            EBML parent at the provided file position.
            </summary>
            <param name="parent">The <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" /> that contains the instance to be created.</param>
            <param name="position">Position in the file to start reading from.</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.#ctor(VisioForge.Libs.TagLib.Matroska.EBMLreader,System.UInt64,VisioForge.Libs.TagLib.Matroska.MatroskaID,System.UInt64)">
            <summary>
            Create a new abstract <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" /> with arbitrary attributes, 
            without reading its information on the file.
            </summary>
            <param name="parent">The <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" /> that contains the instance to be described.</param>
            <param name="position">Position in the file.</param>
            <param name="ebmlid">EBML ID of the element</param>
            <param name="size">Total size of the EBML, in bytes</param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.ID">
            <summary>
            EBML Element Identifier.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.Parent">
            <summary>
            EBML Parent instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.Size">
            <summary>
            EBML Element size in bytes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.DataSize">
            <summary>
            EBML Element data size in bytes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.DataOffset">
            <summary>
            EBML Element data offset position in file in bytes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.Offset">
            <summary>
            EBML Element offset position in file in bytes.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.Abstract">
            <summary>
            Defines that the EBML element is not read-out from file,
            but is an abstract representation of an element on the disk.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.Read(System.Boolean)">
            <summary>
            Read EBML header and data-size if it is an abstract one. 
            It then becomes a non abstract EBML.
            </summary>
            <param name="throwException">Throw exception on invalid EBML read if true (Default: false).</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.ReadBytes">
            <summary>
            Reads a vector of bytes (raw data) from EBML Element's data section.
            </summary>
            <returns>a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.ReadString">
            <summary>
            Reads a string from EBML Element's data section (UTF-8).
            </summary>
            <returns>a string object containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.ReadBool">
            <summary>
            Reads a boolean from EBML Element's data section.
            </summary>
            <returns>a bool containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.ReadDouble">
            <summary>
            Reads a double from EBML Element's data section.
            </summary>
            <returns>a double containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.ReadULong">
            <summary>
            Reads an unsigned integer (any size from 1 to 8 bytes) from EBML Element's data section.
            </summary>
            <returns>a ulong containing the parsed value.</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.WriteDataSize">
            <summary>
            Write the <see cref="P:VisioForge.Libs.TagLib.Matroska.EBMLreader.DataSize"/> to the EBML file.
            Resize the data-size length to 8 bytes.
            This will *not* insert extra bytes, but overwrite next contiguous bytes.
            It will claim the size added on the value of the data-size.
            </summary>
            <returns>Offset created in Writing the new data-size</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.SetVoid">
            <summary>
            Change an EBML element to a Abstract Void element, but do not write to the file.
            </summary>
            <remarks>
            To do a real conversion to Void EBML element on the file, use <see cref="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.WriteVoid"/>.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.WriteVoid">
            <summary>
            Change an EBML element to a Void element directly on the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.EBMLreader.Remove">
            <summary>
            Remove the EBML element from the file
            </summary>
            <returns>Size difference compare to previous EBML size</returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.TrackType">
            <summary>
            Enumeration listing supported Matroska track types.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Video">
            <summary>
            Video track type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Audio">
            <summary>
            Audio track type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Complex">
            <summary>
            Complex track type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Logo">
            <summary>
            Logo track type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Subtitle">
            <summary>
            Subtitle track type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Buttons">
            <summary>
            Buttons track type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TrackType.Control">
            <summary>
            Control track type.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide tagging
               and properties support for Matroska files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.File.tags">
            <summary>
              Contains the tags for the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.File.properties">
            <summary>
               Contains the media properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Matroska.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Matroska.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.ReadWrite(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads (and Write, if file Mode is Write) the file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.WriteSegment(VisioForge.Libs.TagLib.Matroska.EBMLreader,VisioForge.Libs.TagLib.Matroska.EBMLelement,System.Collections.Generic.List{VisioForge.Libs.TagLib.Matroska.EBMLreader})">
            <summary>
            Central point for the Writing, after the master elements of the EBML Segment have been referenced.
            </summary>
            <param name="ebml_segm">EBML Segment containing the EBML to be written</param>
            <param name="ebml_sinfo">EBML SegmentInfo</param>
            <param name="segm_list">description of the mapping of EBML level 1 in the EBML Segment, ordered</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.WriteReservedEBML(VisioForge.Libs.TagLib.Matroska.EBMLreader,System.Collections.Generic.List{VisioForge.Libs.TagLib.Matroska.EBMLreader},System.Int64)">
            <summary>
            Make sure there is a Void at the begining of a Segment EBML, big enough to contain the reserved (leading) space.
            This is the longest part of the Write if space must be reserved.
            </summary>
            <param name="ebml_segm">EBML Segment containing the EBML to be written</param>
            <param name="segm_list">description of the mapping of EBML level 1 in the EBML Segment, ordered</param>
            <param name="minSize">Size to be reserved. A Margin will be added to it.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.WriteEBML(VisioForge.Libs.TagLib.Matroska.EBMLelement,VisioForge.Libs.TagLib.Matroska.EBMLreader,System.Collections.Generic.List{VisioForge.Libs.TagLib.Matroska.EBMLreader},System.Int64)">
            <summary>
            Write an EMBL in an existing Void or at the end of the
            </summary>
            <param name="element">EBML to write</param>
            <param name="ebml_segm">EBML Segment containing the EBML to be written</param>
            <param name="segm_list">description of the mapping of EBML level 1 in the EBML Segment, ordered</param>
            <param name="reserved">Reserved space at the Segment, do not write there</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.File.UpdateSegmentsMergeVoids(VisioForge.Libs.TagLib.Matroska.EBMLreader,System.Collections.Generic.List{VisioForge.Libs.TagLib.Matroska.EBMLreader})">
            <summary>
            This tries to create a sensible map of the Voids between the other master element of the Segment.
            It will try to identify Voids hidden after a meaningful EBML. It will merge contiguous Voids as one.
            </summary>
            <param name="ebml_segm">EBML Segment containing the EBML to be written</param>
            <param name="segm_list">description of the mapping of EBML level 1 in the EBML Segment, ordered</param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.IUIDElement">
            <summary>
            Represent a Matroska element that has an Unique Identifier, and can be tagged.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.IUIDElement.UID">
            <summary>
            Unique ID representing the file, as random as possible (setting zero will generate automatically a new one).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.IUIDElement.UIDType">
            <summary>
            Get the Tag type the UID should be represented by, or 0 if undefined
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.UIDElement">
            <summary>
            Represent a basic Matroska UID element
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.UIDElement.#ctor(VisioForge.Libs.TagLib.Matroska.MatroskaID,System.UInt64)">
            <summary>
            Create a UIDElement Stub
            </summary>
            <param name="type">Tag-type the UID represents</param>
            <param name="uid">UID of the element</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.UIDElement.GenUID(System.UInt64)">
            <summary>
            Generate a new random UID
            </summary>
            <param name="ret">Value of the UID to be generated. A zero value will randomize it.</param>
            <returns>Generated UID.</returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.UIDElement.UID">
            <summary>
            Unique ID representing the element, as random as possible (setting zero will generate automatically a new one).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.UIDElement.UIDType">
            <summary>
            Get the Tag type the UID should be represented by, or 0 if undefined
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.MatroskaID">
            <summary>
            Public enumeration listing Matroska specific EBML Identifiers.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Segment">
            <summary>
            Indicates a Matroska Segment EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SegmentInfo">
            <summary>
            Indicates a Matroska Segment Info EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Tracks">
            <summary>
            Indicates a Matroska Tracks EBML Element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Cues">
            <summary>
            Indicates a Matroska Cues EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Tags">
            <summary>
            Indicates a Matroska Tags EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SeekHead">
            <summary>
            Indicates a Matroska Seek Head EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Cluster">
            <summary>
            Indicates a Matroska Cluster EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Attachments">
            <summary>
            Indicates a Matroska Attachments EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Chapters">
            <summary>
            Indicates a Matroska Chapters EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TimeCodeScale">
            <summary>
            Indicate a Matroska Code Scale EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Duration">
            <summary>
            Indicates a Matroska Duration EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.WrittingApp">
            <summary>
            Indicates a Matroska Writing App EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.MuxingApp">
            <summary>
            Indicates a Matroska Muxing App EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.DateUTC">
            <summary>
            Indicate a Matroska Date UTC EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SegmentUID">
            <summary>
            Indicate a Matroska Segment UID EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SegmentFileName">
            <summary>
            Indicate a Matroska Segment File Name EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.PrevUID">
            <summary>
            Indicate a Matroska Prev UID EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.PrevFileName">
            <summary>
            Indicate a Matroska Prev File Name EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.NexUID">
            <summary>
            Indicate a Matroska Nex UID EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.NexFileName">
            <summary>
            Indicate a Matroska Nex File Name EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Title">
            <summary>
            Indicate a Matroska Title EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SegmentFamily">
            <summary>
            Indicate a Matroska Segment Family EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.ChapterTranslate">
            <summary>
            Indicate a Matroska Chapter Translate EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackEntry">
            <summary>
            Indicate a Matroska Track Entry EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackNumber">
            <summary>
            Indicate a Matroska Track Number EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackUID">
            <summary>
            Indicate a Matroska Track UID EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackType">
            <summary>
            Indicate a Matroska Track Type EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackAudio">
            <summary>
            Indicate a Matroska Track Audio EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackVideo">
            <summary>
            Indicate a Matroska Track Video EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Void">
            <summary>
            Indicate a Matroska Void EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CRC32">
            <summary>
            Indicate a Matroska CRC-32 EBML element.
            </summary>
            <remarks>
            The CRC is computed on all the data of the Master-element it's in. 
            The CRC Element should be the first in it's parent master for easier reading. 
            All level 1 Elements should include a CRC-32. The CRC in use is the IEEE CRC32 Little Endian.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.ContentEncodings">
            <summary>
            Indicate a Matroska Track Encoding EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecID">
            <summary>
            Indicate a Matroska Codec ID EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecPrivate">
            <summary>
            Indicate a Matroska Codec Private EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecName">
            <summary>
            Indicate a Matroska Codec Name EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackName">
            <summary>
            Indicate a Matroska Track Name EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackLanguage">
            <summary>
            Indicate a Matroska Track Language EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackFlagEnabled">
            <summary>
            Indicate a Matroska Track Enabled EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackFlagDefault">
            <summary>
            Indicate a Matroska Track Flag Default EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackFlagForced">
            <summary>
            Indicate a Matroska Track Flag Forced EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackFlagLacing">
            <summary>
            Indicate a Matroska Track Flag Lacing EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackMinCache">
            <summary>
            Indicate a Matroska Track Min Cache EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackMaxCache">
            <summary>
            Indicate a Matroska Track Max Cache EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackDefaultDuration">
            <summary>
            Indicate a Matroska Track Default Duration EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackTimeCodeScale">
            <summary>
            Indicate a Matroska Track Time Code Scale EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.MaxBlockAdditionID">
            <summary>
            Indicate a Matroska Track Max Block Addition EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackAttachmentLink">
            <summary>
            Indicate a Matroska Track Attachment Link EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackOverlay">
            <summary>
            Indicate a Matroska Track Overlay EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackTranslate">
            <summary>
            Indicate a Matroska Track Translate EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TrackOffset">
            <summary>
            Indicate a Matroska Track Offset element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecSettings">
            <summary>
            Indicate a Matroska Codec Settings EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecInfoUrl">
            <summary>
            Indicate a Matroska Codec Info URL EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecDownloadUrl">
            <summary>
            Indicate a Matroska Codec Download URL EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.CodecDecodeAll">
            <summary>
            Indicate a Matroska Codec Decode All EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoFrameRate">
            <summary>
            Indicate a Matroska Video Frame Rate EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoDisplayWidth">
            <summary>
            Indicate a Matroska Video Display Width EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoDisplayHeight">
            <summary>
            Indicate a Matroska Video Display Height EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoDisplayUnit">
            <summary>
            Indicate a Matroska Video Display Unit EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoPixelWidth">
            <summary>
            Indicate a Matroska Video Pixel Width EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoPixelHeight">
            <summary>
            Indicate a Matroska Video Pixel Height EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoPixelCropBottom">
            <summary>
            Indicate a Matroska Video Pixel Crop Bottom EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoPixelCropTop">
            <summary>
            Indicate a Matroska Video Pixel Crop Top EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoPixelCropLeft">
            <summary>
            Indicate a Matroska Video Pixel Crop Left EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoPixelCropRight">
            <summary>
            Indicate a Matroska Video Pixel Crop Right EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoFlagInterlaced">
            <summary>
            Indicate a Matroska Video Flag Interlaced EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoStereoMode">
            <summary>
            Indicate a Matroska Video Stereo Mode EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoAspectRatioType">
            <summary>
            Indicate a Matroska Video Aspect Ratio Type EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoColourSpace">
            <summary>
            Indicate a Matroska Video Colour Space EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.VideoGammaValue">
            <summary>
            Indicate a Matroska Video Gamma Value EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Seek">
            <summary>
            Indicate a Matroska Seek Entry (Master).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SeekID">
            <summary>
            Indicate a Matroska Seek ID (Binary).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SeekPosition">
            <summary>
            Indicate a Matroska Seek Position (uint).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.AudioSamplingFreq">
            <summary>
            Indicate a Matroska Audio Sampling Freq EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.AudioBitDepth">
            <summary>
            Indicate a Matroska Audio Bit Depth EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.AudioChannels">
            <summary>
            Indicate a Matroska Audio Channels EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.AudioChannelsPositions">
            <summary>
            Indicate a Matroska Audio Channels Position EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.AudioOutputSamplingFreq">
            <summary>
            Indicate a Matroska Audio Output Sampling Freq EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Tag">
            <summary>
            Indicate a Matroska Tag EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.SimpleTag">
            <summary>
            Indicate a Matroska Simple Tag EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.Targets">
            <summary>
            Indicate a Matroska Targets EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagName">
            <summary>
            Indicate a Matroska Tag Name EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagString">
            <summary>
            Indicate a Matroska Tag String EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagLanguage">
            <summary>
            Indicate a Matroska Tag Language EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagDefault">
            <summary>
            Indicate a Matroska Tag Default EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagBinary">
            <summary>
            Indicate a Matroska Tag Binary EBML element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TargetTypeValue">
            <summary>
            Indicate a Matroska Target Type Value  EBML element (UINT).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TargetType">
            <summary>
            Indicate a Matroska Target Type EBML element (string).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagTrackUID">
            <summary>
            Indicate a Matroska Target Tag Track UID EBML element (UINT).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagEditionUID">
            <summary>
            Indicate a Matroska Target Tag Edition UID EBML element (UINT).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagChapterUID">
            <summary>
            Indicate a Matroska Target Tag Chapter UID EBML element (UINT).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.TagAttachmentUID">
            <summary>
            Indicate a Matroska Target Tag Attachment UID EBML element (UINT).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.AttachedFile">
            <summary>
            Indicate a Matroska attached file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.FileDescription">
            <summary>
            Indicate a Matroska human-friendly name for the attached file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.FileName">
            <summary>
            Indicate a Matroska Filename of the attached file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.FileMimeType">
            <summary>
            Indicate a Matroska MIME type of the file. 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.FileData">
            <summary>
            Indicate a Matroska data of the file. 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.MatroskaID.FileUID">
            <summary>
            Indicate a Matroska Unique ID representing the file, as random as possible.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.SimpleTag">
            <summary>
            Describes a SimpleTag content. The TagName property is not part of the SimpleTag. 
            A <see cref="T:VisioForge.Libs.TagLib.Matroska.Tag"/> object may contain several <see cref="T:VisioForge.Libs.TagLib.Matroska.SimpleTag"/>.
            A <see cref="T:VisioForge.Libs.TagLib.Matroska.SimpleTag"/> object may contains several <see cref="T:VisioForge.Libs.TagLib.Matroska.SimpleTag"/>.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.SimpleTag.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.SimpleTag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
            Construct from value
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.SimpleTag.TagBinary">
            <summary>
            Indicate if the content of the SimpleTag is in binary (true) or as a string (false).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.SimpleTag.TagDefault">
            <summary>
            Indication to know if this is the default/original language to use for the given tag.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.SimpleTag.TagLanguage">
            <summary>
            Specifies the language of the tag, as a string.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.SimpleTag.Language">
            <summary>
            Specifies the language of the tag.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.SimpleTag.Value">
            <summary>
            Get/Set the data contained in the SimpleTag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.SimpleTag.SimpleTags">
            <summary>
            Children SimpleTag nested inside this SimpleTag
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.SimpleTag.op_Implicit(VisioForge.Libs.TagLib.Matroska.SimpleTag)~System.String">
            <summary>
            Convert a SimpleTag to a String in the Default encoding
            </summary>
            <param name="v"></param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.SubtitleTrack">
            <summary>
            Describes a Matroska Subtitle Track.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.SubtitleTrack.#ctor(VisioForge.Libs.TagLib.Matroska.File,VisioForge.Libs.TagLib.Matroska.EBMLreader)">
            <summary>
            Constructs a <see cref="T:VisioForge.Libs.TagLib.Matroska.SubtitleTrack" /> parsing from provided
            file data.
            Parsing will be done reading from _file at position references by 
            parent element's data section.
            </summary>
            <param name="_file"><see cref="T:VisioForge.Libs.TagLib.Matroska.File" /> instance to read from.</param>
            <param name="element">Parent <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" />.</param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.SubtitleTrack.UnknownElements">
            <summary>
            List of unknown elements encountered while parsing.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.SubtitleTrack.MediaTypes">
            <summary>
            This type of track only has text media type.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.Tag">
            <summary>
            Describes a Matroska Tag.
            A <see cref="T:VisioForge.Libs.TagLib.Matroska.Tag"/> object may contain several <see cref="T:VisioForge.Libs.TagLib.Matroska.SimpleTag"/>.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.IsVideo">
            <summary>
            Define if this represent a video content (true), or an audio content (false)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.#ctor(VisioForge.Libs.TagLib.Matroska.Tags,VisioForge.Libs.TagLib.Matroska.TargetType,VisioForge.Libs.TagLib.Matroska.IUIDElement)">
            <summary>
            Constructor
            </summary>
            <param name="tags">The Tags object this Tag should be added to.</param>
            <param name="targetTypeValue">the Target Type ValueTags this Tag represents.</param>
            <param name="element">The UID element that should be represented by this tag.</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.MakeTargetType(System.UInt16)">
            <summary>
            Create a TargetType from a given TargetTypeValue, depending on the media-type
            </summary>
            <param name="targetTypeValue">TargetTypeValue to be converted to TargetType (text)</param>
            <returns>Representation of the TargetTypeValue</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.TagsGet(System.Boolean,VisioForge.Libs.TagLib.Matroska.TargetType)">
            <summary>
            Return a Tag of a certain Target type.  
            </summary>
            <param name="create">Create one if it doesn't exist yet.</param>
            <param name="targetType">Target Type Value.</param>
            <returns>the Tag representing the collection</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.TagsAlbum(System.Boolean)">
            <summary>
            Return the Tag representing the Album the medium belongs to.  
            </summary>
            <param name="create">Create one if it doesn't exist yet.</param>
            <returns>the Tag representing the collection</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.Remove(System.String,System.String)">
            <summary>
            Remove a Tag
            </summary>
            <param name="key">Tag Name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.Set(System.String,System.String,System.String)">
            <summary>
            Set a Tag value. A null value removes the Tag.
            </summary>
            <param name="key">Tag Name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
            <param name="value">value to be set. A list can be passed for a subtag by separating the values by ';'</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.Set(System.String,System.String,System.UInt32,System.String)">
            <summary>
            Set a Tag value as unsigned integer. Please note that a value zero removes the Tag.
            </summary>
            <param name="key">Tag Name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
            <param name="value">unsigned integer value to be set</param>
            <param name="format">Format for string convertion to be used (default: null)</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.Set(System.String,System.String,System.String[])">
            <summary>
            Create or overwrite the actual tags of a given name/sub-name by new values. 
            </summary>
            <param name="key">Tag Name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
            <param name="values">Array of values. for each subtag value, a list can be passed by separating the values by ';'</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.Get(System.String,System.String,System.Boolean)">
            <summary>
            Retrieve a Tag list. If there are multiple tag inside a SimpleTag (when
            accessing a sub-key), these sub-list are represented as semicolon-separated
            values.
            </summary>
            <param name="key">Tag name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
            <param name="recu">Also search in parent Tag if true (default: true)</param>
            <returns>Array of values. Nested sub-list are represented by a semicolon-
            separated string 
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.GetString(System.String,System.String,System.Boolean)">
            <summary>
            Retrieve a Tag value as string
            </summary>
            <param name="key">Tag name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
            <param name="recu">Also search in parent Tag if true (default: true)</param>
            <returns>Tag value</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.GetUint(System.String,System.String,System.Boolean)">
            <summary>
            Retrieve a Tag value as unsigned integer
            </summary>
            <param name="key">Tag name</param>
            <param name="subkey">Nested SimpleTag to find (if non null) Tag name</param>
            <param name="recu">Also search in parent Tag if true (default: false)</param>
            <returns>Tag value as unsigned integer</returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Tags">
            <summary>
            Retrieve a list of Matroska Tags 
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Parent">
            <summary>
            Retrieve the parent Tag, of higher TargetTypeValue (if any, null if none).
            This will only match the tag applying to the  same target as the current tag, or to more elements.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.TargetTypeValue">
            <summary>
               Gets the Matroska Target Type Value of this Tag.
               This value can be change with the <see cref="P:VisioForge.Libs.TagLib.Matroska.Tag.TargetType"/> property. 
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.TargetType">
            <summary>
            Get or set the Matroska Target Type of this Tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.Tag.Elements">
            <summary>
            Array of UID elements the tag applies to. If null, the tag apply to all elements.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.Tag.SimpleTags">
            <summary>
            List SimpleTag contained in the current Tag (must never be null)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Matroska" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the TITLE tag and the Segment Title.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.TitleSort">
            <summary>
               Gets and sets the sort names for the Track Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Track Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the nested Matroska 
               SimpleTag "SORT_WITH" inside the "TITLE" SimpleTag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the Matroska 
               SimpleTag "SUBTITLE".
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the Matroska 
               SimpleTag "SUMMARY" (note that this is not the
               "DESCRIPTION" tag).
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the ACTOR/PERFORMER stored in
               the MKV Tag element.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the nested Matroska 
               SimpleTag "SORT_WITH" inside the "ACTOR" or "PERFORMER" SimpleTag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.PerformersRole">
            <summary>
               Gets and sets the role of the performers or artists
               who performed in the media described by the current instance.
               For an movie, this represents a character of an actor.
               For a music, this may represent the instrument of the artist.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the roles for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the nested Matroska 
               SimpleTag "CHARACTER" or "INSTRUMENTS" inside the 
               "ACTOR" or "PERFORMER" SimpleTag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ARTIST" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               This property is implemented using the nested Matroska 
               SimpleTag "SORT_WITH" inside the "ARTIST" SimpleTag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMPOSER" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.ComposersSort">
            <summary>
               Gets and sets the sort names for the composers of the 
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the composers of the media represented by the 
               current instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field is typically optional but aids in the
               sorting of compilations or albums with multiple Composers.
               </para>
               <para>As this value is to be used as a sorting key, it
               should be used with less variation than <see
               cref="P:VisioForge.Libs.TagLib.Matroska.Tag.Composers" />. Where performers can be broken into
               muliple artist it is best to stick with a single composer.
               For example, "McCartney, Paul".</para>
            </remarks>
            <remarks>
               This property is implemented using the nested Matroska 
               SimpleTag "SORT_WITH" inside the "COMPOSER" SimpleTag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TITLE" Tag in the Collection Tags.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.AlbumSort">
            <summary>
               Gets and sets the sort names for the Album Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Album Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the nested Matroska 
               SimpleTag "SORT_WITH" inside the "TITLE" SimpleTag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMMENT" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "GENRE" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing item (album, disc, episode, collection...).
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "PART_NUMBER" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.TrackCount">
            <summary>
               Gets and sets the number of items contained in the parent Tag (album, disc, episode, collection...)
               the media represented by the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TOTAL_PARTS" Tag
               in the parent tag (one level up).
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               This property is implemented using the "PART_NUMBER" Tag in
               a parent tag (VOLUME for video, PART for audio).
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TOTAL_PARTS" Tag in
               a parent tag (COLLECTION for video, ALBUM for audio).
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "COPYRIGHT" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "DATE_TAGGED" Tag.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ArtistID for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseGroupID for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseID for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseArtistID for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               TrackID for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               DiscID for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIPPUID 
               for the media described by the current instance or
               null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseStatus for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseType for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz 
               ReleaseCountry for the media described by the current
               instance or null if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.Tags">
            <summary>
            Describes all the Matroska Tags in a file as a list, ordered from higher TargetTypeValue to lower. 
            A <see cref="T:VisioForge.Libs.TagLib.Matroska.Tags"/> object contains several <see cref="T:VisioForge.Libs.TagLib.Matroska.Tag"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tags.#ctor(System.Collections.Generic.List{VisioForge.Libs.TagLib.Matroska.Track})">
            <summary>
            Constructor
            </summary>
            <param name="tracks">List of Matroska tracks</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tags.InsertItem(System.Int32,VisioForge.Libs.TagLib.Matroska.Tag)">
            <summary>
            Try to Insert an element to the Tag list at a given index, but can insert it at another index if the 
            index doesn't keep this list sorted by descending TargetTypeValue
            </summary>
            <param name="index">index at which the Tag element should be preferably inserted</param>
            <param name="tag">Tag element to be inserted in the Tag list</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tags.SetItem(System.Int32,VisioForge.Libs.TagLib.Matroska.Tag)">
            <summary>
            Replace a tag in the list.
            </summary>
            <param name="index">Index of the lement to be replaced</param>
            <param name="tag">tag to replace the older one</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tags.ClearItems">
            <summary>
            Clears the values stored in the current Tags and Children.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tags.Get(VisioForge.Libs.TagLib.Matroska.TargetType,System.Nullable{System.Boolean})">
            <summary>
            Find the first Tag of a given TargetTypeValue
            </summary>
            <param name="targetType">TargetTypeValue to find</param>
            <param name="medium">null: any kind, true: represent the current medium, false: represent a sub-element</param>
            <returns>the Tag if match found, null otherwise</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Tags.Get(VisioForge.Libs.TagLib.Matroska.IUIDElement,System.UInt16)">
            <summary>
             Find the first Tag applying to an object (Matroska UID), matching a TargetTypeValue
            </summary>
            <param name="UIDelement">Matroska Track, Edition, Chapter or Attachment (element having an UID)</param>
            <param name="targetTypeValue">TargetTypeValue to match (default: match any)</param>
            <returns>the first matching Tag representing the UID, or null if not found.</returns>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.Tags.IsVideo">
            <summary>
            Define if this represent a video content (true), or an audio content (false)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tags.Title">
            <summary>
            Title of the medium, from the Segment
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tags.Medium">
            <summary>
            Get/set the Tag that represents the current medium (file)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tags.Album">
            <summary>
            Get/set the Tag that represents the Collection the current medium (file) belongs to.
            For Audio, this should be an Album, type 50 (itself if the mka file represents an album).
            For Video, this should be a Collection, type 70.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tags.Attachments">
            <summary>
               Gets and sets a collection of Attachments associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:Attachment[]" /> containing a collection of
               attachments associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Tags.Tracks">
            <summary>
            Get direct access to the Matroska Tracks. 
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.TargetType">
            <summary>
            Represents a Matroska TargetType.
            The TargetType element allows tagging of different parts that are inside or outside a given file. 
            For example in an audio file with one song you could have information about the album it comes 
            from and even the CD set even if it's not found in the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.COLLECTION">
            <summary>
            Audio/Video: The high hierarchy consisting of many different lower items
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.VOLUME">
            <summary>
            Audio/Video: a list of lower levels grouped together
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.EDITION">
            <summary>
            Audio: a list of lower levels grouped together
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.ISSUE">
            <summary>
            Audio: a list of lower levels grouped together
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.OPUS">
            <summary>
            Audio: a list of lower levels grouped together
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SEASON">
            <summary>
            Video: a list of lower levels grouped together
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SEQUEL">
            <summary>
            Video: a list of lower levels grouped together
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.ALBUM">
            <summary>
            Audio: the most common grouping level of music and video (equals to an episode for TV series)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.OPERA">
            <summary>
            Audio: the most common grouping level of music and video (equals to an episode for TV series)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.CONCERT">
            <summary>
            Audio/Video: the most common grouping level of music and video (equals to an episode for TV series)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.MOVIE">
            <summary>
            Video: the most common grouping level of music and video (equals to an episode for TV series)
            </summary>    
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.EPISODE">
            <summary>
            Video: the most common grouping level of music and video (equals to an episode for TV series)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.DEFAULT">
            <summary>
            Represent the default TargetType (an empty Targets), i.e. targets everything in the segment.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.PART">
            <summary>
            Audio/Video: when an album or episode has different logical parts
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SESSION">
            <summary>
            Audio/Video: when an album or episode has different logical parts
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.TRACK">
            <summary>
            Audio: the common parts of an album or a movie 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SONG">
            <summary>
            Audio: the common parts of an album or a movie 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.CHAPTER">
            <summary>
            Video: the common parts of an album or a movie 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SUBTRACK">
            <summary>
            Audio: corresponds to parts of a track for audio (like a movement)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.MOVEMENT">
            <summary>
            Audio: corresponds to parts of a track for audio (like a movement)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SCENE">
            <summary>
            Video: corresponds to parts of a track for audio (like a movement)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.TargetType.SHOT">
            <summary>
            Video: the lowest hierarchy found in music or movies
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.Track">
            <summary>
            Describes a Matroska Track.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.Track.#ctor(VisioForge.Libs.TagLib.Matroska.File,VisioForge.Libs.TagLib.Matroska.EBMLreader)">
            <summary>
            Constructs a <see cref="T:VisioForge.Libs.TagLib.Matroska.Track" /> parsing from provided 
            file data.
            Parsing will be done reading from _file at position references by 
            parent element's data section.
            </summary>
            <param name="_file"><see cref="T:VisioForge.Libs.TagLib.Matroska.File" /> instance to read from.</param>
            <param name="element">Parent <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" />.</param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Track.UnknownElements">
            <summary>
            List of unknown elements encountered while parsing.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Track.Duration">
            <summary>
            Describes track duration.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Track.MediaTypes">
            <summary>
            Describes track media types.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Track.Description">
            <summary>
            Track description.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Track.UID">
            <summary>
            Unique ID representing the element, as random as possible (setting zero will generate automatically a new one).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.Track.UIDType">
            <summary>
            Get the Tag type the UID should be represented by, or 0 if undefined
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.VideoAspectRatioType">
            <summary>
            Enumeration describing supported Video Aspect Ratio types.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.VideoAspectRatioType.AspectRatioModeFree">
            <summary>
            Free Aspect Ratio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.VideoAspectRatioType.AspectRatioModeKeep">
            <summary>
            Keep Aspect Ratio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Matroska.VideoAspectRatioType.AspectRatioModeFixed">
            <summary>
            Fixed Aspect Ratio.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Matroska.VideoTrack">
            <summary>
            Describes a Matroska Video Track.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Matroska.VideoTrack.#ctor(VisioForge.Libs.TagLib.Matroska.File,VisioForge.Libs.TagLib.Matroska.EBMLreader)">
            <summary>
            Constructs a <see cref="T:VisioForge.Libs.TagLib.Matroska.VideoTrack" /> parsing from provided
            file data.
            Parsing will be done reading from _file at position references by 
            parent element's data section.
            </summary>
            <param name="_file"><see cref="T:VisioForge.Libs.TagLib.Matroska.File" /> instance to read from.</param>
            <param name="element">Parent <see cref="T:VisioForge.Libs.TagLib.Matroska.EBMLreader" />.</param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.VideoTrack.UnknownElements">
            <summary>
            List of unknown elements encountered while parsing.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.VideoTrack.MediaTypes">
            <summary>
            This type of track only has video media type.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.VideoTrack.VideoWidth">
            <summary>
            Describes video track width in pixels.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Matroska.VideoTrack.VideoHeight">
            <summary>
            Describes video track height in pixels.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.MusePack.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for MusePack files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added automatically to
               any file that doesn't contain one. This change does not effect
               the file and can be reversed using the following method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               If a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> is added to the
               current instance, it will be placed at the start of the
               file. On the other hand, <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" />
               <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added to the end of
               the file. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.MusePack.StreamHeader">
            <summary>
               This struct implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide
               support for reading MusePack audio properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.stream_length">
            <summary>
               Contains the number of bytes in the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.version">
            <summary>
               Contains the MusePack version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.header_data">
            <summary>
               Contains additional header information.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.sample_rate">
            <summary>
               Contains the sample rate of the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.frames">
            <summary>
               Contains the number of frames in the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.channels">
            <summary>
               Contains the number of channels in the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.framecount">
            <summary>
               Contains the count of frames in the stream. 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.SizeSV7">
            <summary>
               The size of a MusePack SV7 header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.FileIdentifierSv7">
            <summary>
               The identifier used to recognize a Musepack SV7 file.
            </summary>
            <value>
               "MP+"
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.FileIdentifierSv8">
            <summary>
               The identifier used to recognize a Musepack SV8 file.
            </summary>
            <value>
               "MPCK"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.StreamHeader.#ctor(VisioForge.Libs.TagLib.MusePack.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> for a specified header block and
               stream length.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.MusePack.File" /> object containing the stream
               header data.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value containing the length of the
               MusePAck stream in bytes.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="file" /> does not begin with <see
               cref="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.FileIdentifierSv7" />  or with <see 
               cref="F:VisioForge.Libs.TagLib.MusePack.StreamHeader.FileIdentifierSv8" /> or is less than 
               <see cref="P:File.Size" /> bytes long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.MusePack.StreamHeader.Version">
            <summary>
               Gets the WavPack version of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the WavPack version
               of the audio represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.StreamHeader.GetHashCode">
            <summary>
               Generates a hash code for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value containing the hash code for
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.StreamHeader.Equals(System.Object)">
            <summary>
               Checks whether or not the current instance is equal to
               another object.
            </summary>
            <param name="other">
               A <see cref="T:System.Object" /> to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.StreamHeader.Equals(VisioForge.Libs.TagLib.MusePack.StreamHeader)">
            <summary>
               Checks whether or not the current instance is equal to
               another instance of <see cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" />.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> object to compare to the
               current instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.StreamHeader.op_Equality(VisioForge.Libs.TagLib.MusePack.StreamHeader,VisioForge.Libs.TagLib.MusePack.StreamHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> are equal to eachother.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               equal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.MusePack.StreamHeader.op_Inequality(VisioForge.Libs.TagLib.MusePack.StreamHeader,VisioForge.Libs.TagLib.MusePack.StreamHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> differ.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.MusePack.StreamHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               unequal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleTag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> to provide support
               for processing Apple "ilst" tags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleTag.meta_box">
            <summary>
               Contains the ISO meta box in which that tag will be
               stored.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ilst_box">
            <summary>
               Contains the ILST box which holds all the values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.#ctor(VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleTag" /> for a specified ISO user data box.
            </summary>
            <param name="box">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox" /> from which the tag is to
               be read.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.IsCompilation">
            <summary>
               Gets and sets whether or not the album described by the
               current instance is a compilation.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               album described by the current instance is a compilation.
            </value>
            <remarks>
               This property is implemented using the "cpil" data box.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.DataBoxes(System.Collections.Generic.IEnumerable{VisioForge.Libs.TagLib.ByteVector})">
            <summary>
               Gets all data boxes that match any of the provided types.
            </summary>
            <param name="types">
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating a list
               of box types to match.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               matching boxes.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.DataBoxes(VisioForge.Libs.TagLib.ByteVector[])">
            <summary>
               Gets all data boxes that match any of the provided types.
            </summary>
            <param name="types">
               A <see cref="T:ByteVector[]" /> containing list of box
               types to match.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               matching boxes.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.DataBoxes(System.String,System.String)">
            <summary>
               Gets all custom data boxes that match the specified mean
               and name pair.
            </summary>
            <param name="mean">
               A <see cref="T:System.String" /> object containing the "mean" to
               match.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object containing the name to
               match.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               matching boxes.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.GetText(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets all text values contained in a specified box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               type to match.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing text from all
               matching boxes.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.SetData(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.Mpeg4.AppleDataBox[])">
            <summary>
               Sets the data for a specified box type to a collection of
               boxes.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type to
               add to the new instance.
            </param>
            <param name="boxes">
               A <see cref="T:AppleDataBox[]" /> containing boxes to add
               for the specified type.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.SetData(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVectorCollection,System.UInt32)">
            <summary>
               Sets the data for a specified box type using values from
               a <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type to
               add to the new instance.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               data to add for the specified type.
            </param>
            <param name="flags">
               A <see cref="T:System.UInt32" /> value containing flags to use for
               the added boxes.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.SetData(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.UInt32)">
            <summary>
               Sets the data for a specified box type using a single
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type to
               add to the new instance.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing data to add
               for the specified type.
            </param>
            <param name="flags">
               A <see cref="T:System.UInt32" /> value containing flags to use for
               the added box.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.SetText(VisioForge.Libs.TagLib.ByteVector,System.String[])">
            <summary>
               Sets the text for a specified box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type to
               add to the new instance.
            </param>
            <param name="text">
               A <see cref="T:string[]" /> containing text to store.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.SetText(VisioForge.Libs.TagLib.ByteVector,System.String)">
            <summary>
               Sets the text for a specified box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type to
               add to the new instance.
            </param>
            <param name="text">
               A <see cref="T:System.String" /> object containing text to store.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ClearData(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Clears all data for a specified box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the type of
               box to remove from the current instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.DetachIlst">
            <summary>
               Detaches the internal "ilst" box from its parent element.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.GetDashBox(System.String,System.String)">
            <summary>
            Gets the text string from a specific data box in a Dash (----) atom
            </summary>
            <param name="meanstring">String specifying text from mean box</param>
            <param name="namestring">String specifying text from name box</param>
            <returns>Text string from data box</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.SetDashBox(System.String,System.String,System.String)">
            <summary>
            Sets a specific strings in Dash (----) atom.  This method updates
            and existing atom, or creates a new one.  If an empty datastring is
            specified, the Dash box and its children are removed.
            </summary>
            <param name="meanstring">String specifying text for mean box</param>
            <param name="namestring">String specifying text for name box</param>
            <param name="datastring">String specifying text for data box</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.GetDashAtoms(System.String,System.String)">
            <summary>
            Gets the AppleDataBox that corresponds to the specified mean and name values.
            </summary>
            <param name="meanstring">String specifying text for mean box</param>
            <param name="namestring">String specifying text for name box</param>
            <returns>Existing AppleDataBox or null if one does not exist</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.GetParentDashBox(System.String,System.String)">
            <summary>
            Returns the Parent Dash box object for a given mean/name combination
            </summary>
            <param name="meanstring">String specifying text for mean box</param>
            <param name="namestring">String specifying text for name box</param>
            <returns>AppleAnnotationBox object that is the parent for the mean/name combination</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.FixId(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Converts the provided ID into a readonly ID and fixes a
               3 byte ID.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an ID to
               fix.
            </param>
            <returns>
               A fixed <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> or <see
               langword="null" /> if the ID could not be fixed.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the tag's data
               boxes.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the tag's data boxes.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Apple" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@nam" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Subt" data box.
               Should be: ----:com.apple.iTunes:SUBTITLE
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "Desc" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the "@ART" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               This property is implemented using the "role" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "aART" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@wrt" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@alb" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@cmt" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@gen" and "gnre"
               data boxes.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@day" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "trkn" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "trkn" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               This property is implemented using the "disk" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "disk" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@lyr" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "@grp" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "tmpo" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "cond" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "cprt" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "dtag" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               This property is implemented using the "soaa"
               Box type.
               http://musicbrainz.org/doc/PicardTagMapping
               http://code.google.com/p/mp4v2/wiki/iTunesMetadata
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "soar" box type.
               http://musicbrainz.org/doc/PicardTagMapping
               http://code.google.com/p/mp4v2/wiki/iTunesMetadata
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ComposersSort">
            <summary>
               Gets and sets the sort names of the Composer credited
               in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the Composers in the media described by the current instance,
               or an empty array if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "soar" box type.
               http://musicbrainz.org/doc/PicardTagMapping
               http://code.google.com/p/mp4v2/wiki/iTunesMetadata
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.AlbumSort">
            <summary>
               Gets and sets the sort names of the Album Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names for
               the Album Title in the media described by the current
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "soal" box type.
               http://musicbrainz.org/doc/PicardTagMapping
               http://code.google.com/p/mp4v2/wiki/iTunesMetadata
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.TitleSort">
            <summary>
               Gets and sets the sort names of the Track Title in the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names for
               the Track Title in the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "sonm" box type.
               http://musicbrainz.org/doc/PicardTagMapping
               http://code.google.com/p/mp4v2/wiki/iTunesMetadata
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz ArtistID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ArtistID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz ReleaseGroupID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseGroupID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz ReleaseID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz ReleaseArtistID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseArtistID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz TrackID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               TrackID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz DiscID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               DiscID for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIP Puid
               for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.AmazonId">
            <summary>
               Gets and sets the AmazonID
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the AmazonID
               for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz ReleaseStatus
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseStatus for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz ReleaseType
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseType for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseCountry for the media described by the current 
               instance, or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain Track Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Track Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain Peak Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Peak Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain Album Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Album Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain Album Peak Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Album Peak Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.InitialKey">
            <summary>
               Gets and sets the InitialKey
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the InitialKey
               for the media described by the current  instance, 
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.ISRC">
            <summary>
               Gets and sets the ISRC
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the ISRC
               for the media described by the current  instance, 
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Publisher">
            <summary>
               Gets and sets the Publisher
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the Publisher
               for the media described by the current  instance, 
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.RemixedBy">
            <summary>
               Gets and sets the Remixer
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the Remixer
               for the media described by the current  instance, 
               or null if no value is present. 
            </value>
            <remarks>
               This property is implemented using the "dash"/"----" box type.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               This property is implemented using the "covr" data box.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleTag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.Box">
            <summary>
               This abstract class provides a generic implementation of a
               ISO/IEC 14496-12 box.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.Box.header">
            <summary>
               Contains the box header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.Box.data_position">
            <summary>
               Contains the position of the box data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> with a specified header and handler.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object describing the new
               instance.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance, or <see
               langword="null" /> if no handler applies.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> with a specified header.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object describing the new
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> with a specified box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               type to use for the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.BoxType">
            <summary>
               Gets the MPEG-4 box type of the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the four
               byte box type of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.Size">
            <summary>
               Gets the total size of the current instance as it last
               appeared on disk.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the total size of
               the current instance as it last appeared on disk.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.Handler">
            <summary>
               Gets the handler box that applies to the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the current instance, or <see
               langword="null" /> if no handler applies.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.Render">
            <summary>
               Renders the current instance, including its children, to
               a new <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.GetChild(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets a child box from the current instance by finding
               a matching box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               type to match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object containing the matched box,
               or <see langword="null" /> if no matching box was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.GetChildRecursively(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets a child box from the current instance by finding
               a matching box type, searching recursively.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               type to match.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object containing the matched box,
               or <see langword="null" /> if no matching box was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.RemoveChild(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Removes all children with a specified box type from the
               current instance.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               type to remove.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.RemoveChild(VisioForge.Libs.TagLib.Mpeg4.Box)">
            <summary>
               Removes a specified box from the current instance.
            </summary>
            <param name="box">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object to remove from the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.AddChild(VisioForge.Libs.TagLib.Mpeg4.Box)">
            <summary>
               Adds a specified box to the current instance.
            </summary>
            <param name="box">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.ClearChildren">
            <summary>
               Removes all children from the current instance.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.HasChildren">
            <summary>
               Gets whether or not the current instance has children.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance has any children.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.DataSize">
            <summary>
               Gets the size of the data contained in the current
               instance, minux the size of any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the size of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.Box.Header">
            <summary>
               Gets the header of the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               of the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.LoadChildren(VisioForge.Libs.TagLib.File)">
            <summary>
               Loads the children of the current instance from a
               specified file using the internal data position and size.
            </summary>
            <param name="file">
               The <see cref="T:VisioForge.Libs.TagLib.File" /> from which the current
               instance was read and from which to read the children.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               boxes read from the file.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.LoadData(VisioForge.Libs.TagLib.File)">
            <summary>
               Loads the data of the current instance from a specified
               file using the internal data position and size.
            </summary>
            <param name="file">
               The <see cref="T:VisioForge.Libs.TagLib.File" /> from which the current
               instance was read and from which to read the data.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               read from the file.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.Box.Render(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Renders the current instance, including its children, to
               a new <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object, preceeding the
               contents with a specified block of data.
            </summary>
            <param name="topData">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing box
               specific header data to preceed the content.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of an Apple AdditionalInfoBox.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox.data">
            <summary>
               Contains the box data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox" /> with a provided header
               and handler by reading the contents from a specified
               file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte,System.UInt32)">
            <summary>
            Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox" /> using specified header, version and flags
            </summary>
            <param name="header">defines the header data</param>
            <param name="version"></param>
            <param name="flags"></param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleAdditionalInfoBox.Text">
            <summary>
               Gets and sets the text contained in the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the text
               contained in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleAnnotationBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of an Apple AnnotationBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleAnnotationBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleAnnotationBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleAnnotationBox.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleAnnotationBox" /> of specified type with no
               children.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a 4-byte
               box type.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleAnnotationBox.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of an Apple DataBox.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType">
            <summary>
               Specifies the type of data contained in a box.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType.ContainsText">
            <summary>
               The box contains UTF-8 text.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType.ContainsData">
            <summary>
               The box contains binary data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType.ForTempo">
            <summary>
               The box contains data for a tempo box.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType.ContainsJpegData">
            <summary>
               The box contains a raw JPEG image.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType.ContainsPngData">
            <summary>
               The box contains a raw PNG image.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.FlagType.ContainsBmpData">
            <summary>
               The box contains a raw BMP image.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.data">
            <summary>
               Contains the box data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox" /> with a provided header and handler
               by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.#ctor(VisioForge.Libs.TagLib.ByteVector,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox" /> with specified data and flags.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data to
               store in the new instance.
            </param>
            <param name="flags">
               A <see cref="T:System.UInt32" /> value containing flags to use for
               the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.Text">
            <summary>
               Gets and sets the text contained in the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the text
               contained in the current instance, or <see
               langword="null" /> if the box is not flagged as
               containing text.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleDataBox.Render(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Renders the current instance, including its children, to
               a new <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object, preceeding the
               contents with a specified block of data.
            </summary>
            <param name="topData">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing box
               specific header data to preceed the content.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of an Apple ElementaryStreamDescriptor.
            </summary>
            <remarks>
               This box may appear as a child of a <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry" /> and provided further information
               about an audio stream.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.DescriptorTag">
            <summary>
            Descriptor Tags
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.dependsOn_ES_ID">
            <summary>
            the ES_ID of another elementary stream on which this elementary stream depends
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.stream_dependence_flag">
            <summary>
            Indicates that a dependsOn_ES_ID will follow
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.ocr_stream_flag">
            <summary>
            OCR Stream Flag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.OCR_ES_Id">
            <summary>
            OCR ES_ID
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.URL_flag">
            <summary>
            Indicates that a URLstring will follow
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.URLlength">
            <summary>
            Length of URL String
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.URLstring">
            <summary>
            URL String of URLlength, contains a URL that shall point to the location of an SL-packetized stream by name
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.upStream">
            <summary>
            Indicates that this stream is used for upstream information
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.max_bitrate">
            <summary>
               Contains the maximum bitrate.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.average_bitrate">
            <summary>
               Contains the average bitrate.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor" /> with a provided
               header and handler by reading the contents from a
               specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               Valid data could not be read.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.StreamId">
            <summary>
               Gets the ID of the stream described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the ID of the
               stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.StreamPriority">
            <summary>
               Gets the priority of the stream described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value containing the priority of
               the stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.ObjectTypeId">
            <summary>
               Gets the object type ID of the stream described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value containing the object type ID
               of the stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.StreamType">
            <summary>
               Gets the type the stream described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value containing the type the
               stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.BufferSizeDB">
            <summary>
               Gets the buffer size DB value the stream described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the buffer size DB
               value the stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.MaximumBitrate">
            <summary>
               Gets the maximum bitrate the stream described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the maximum
               bitrate the stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.AverageBitrate">
            <summary>
               Gets the maximum average the stream described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the average
               bitrate the stream described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.DecoderConfig">
            <summary>
               Gets the decoder config data of stream described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the decoder
               config data of the stream described by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleElementaryStreamDescriptor.ReadLength(VisioForge.Libs.TagLib.ByteVector,System.Int32@)">
            <summary>
               Reads a section length and updates the offset to the end
               of of the length block.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to read from.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value reference specifying the
               offset at which to read. This value gets updated to the
               position following the size data.
            </param>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the length that
               was read.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.AppleItemListBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of an Apple ItemListBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleItemListBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleItemListBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.AppleItemListBox.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleItemListBox" /> with no children.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.AppleItemListBox.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.FullBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of a ISO/IEC 14496-12 FullBox.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FullBox.version">
            <summary>
               Contains the box version.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FullBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> with a provided header and handler by
               reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FullBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,System.Byte,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> with a provided header, version, and
               flags.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the version of the
               new instance.
            </param>
            <param name="flags">
               A <see cref="T:System.Byte" /> value containing the flags for the
               new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FullBox.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Byte,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> with a provided header, version, and
               flags.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the four
               byte box type.
            </param>
            <param name="version">
               A <see cref="T:System.Byte" /> value containing the version of the
               new instance.
            </param>
            <param name="flags">
               A <see cref="T:System.Byte" /> value containing the flags for the
               new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="type" /> is <see langword="null" /> of
               equal to "<c>uuid</c>".
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="type" /> isn't exactly 4 bytes long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FullBox.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FullBox.Version">
            <summary>
               Gets and sets the version number of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Byte" /> value containing the version
               number of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FullBox.Flags">
            <summary>
               Gets and sets the flags that apply to the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the flags that
               apply to the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FullBox.Render(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Renders the current instance, including its children, to
               a new <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object, preceeding the
               contents with a specified block of data.
            </summary>
            <param name="topData">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing box
               specific header data to preceed the content.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry" /> and implements
               <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide an implementation of a
               ISO/IEC 14496-12 AudioSampleEntry and support for reading MPEG-4
               video properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.channel_count">
            <summary>
               Contains the channel count.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.sample_size">
            <summary>
               Contains the sample size.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.sample_rate">
            <summary>
               Contains the sample rate.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.children">
            <summary>
               Contains the children of the box.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:System.TimeSpan.Zero" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Video" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry.AudioSampleSize">
            <summary>
               Gets the sample size of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample size of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of a ISO/IEC 14496-12 ChunkLargeOffsetBox.
            </summary>
            <remarks>
               <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox" /> and <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox" /> contain offsets of media data
               within the file. As such, if the file changes by even one byte,
               these values are devalidatated and the box will have to be
               overwritten to maintain playability.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox" /> with a provided header
               and handler by reading the contents from a specified
               file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox.Offsets">
            <summary>
               Gets the offset table contained in the current instance.
            </summary>
            <value>
               A <see cref="T:ulong[]" /> containing the offset table
               contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox.Overwrite(VisioForge.Libs.TagLib.Mpeg4.File,System.Int64,System.Int64)">
            <summary>
               Overwrites the existing box in the file after updating
               the table for a size change.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> object containing the file to which
               the current instance belongs and wo which modifications
               must be applied.
            </param>
            <param name="sizeDifference">
               A <see cref="T:System.Int64" /> value containing the size
               change that occurred in the file.
            </param>
            <param name="after">
               A <see cref="T:System.Int64" /> value containing the position in
               the file after which offsets will be invalidated. If an
               offset is before this point, it won't be updated.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <see param="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox.Render(System.Int64,System.Int64)">
            <summary>
               Renders the current instance after updating the table for
               a size change.
            </summary>
            <param name="sizeDifference">
               A <see cref="T:System.Int64" /> value containing the size
               change that occurred in the file.
            </param>
            <param name="after">
               A <see cref="T:System.Int64" /> value containing the position in
               the file after which offsets will be invalidated. If an
               offset is before this point, it won't be updated.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the file.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of a ISO/IEC 14496-12 ChunkOffsetBox.
            </summary>
            <remarks>
               <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox" /> and <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkLargeOffsetBox" /> contain offsets of media data
               within the file. As such, if the file changes by even one byte,
               these values are devalidatated and the box will have to be
               overwritten to maintain playability.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox.Offsets">
            <summary>
               Gets the offset table contained in the current instance.
            </summary>
            <value>
               A <see cref="T:uint[]" /> containing the offset table
               contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox.Overwrite(VisioForge.Libs.TagLib.Mpeg4.File,System.Int64,System.Int64)">
            <summary>
               Overwrites the existing box in the file after updating
               the table for a size change.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> object containing the file to which
               the current instance belongs and wo which modifications
               must be applied.
            </param>
            <param name="sizeDifference">
               A <see cref="T:System.Int64" /> value containing the size
               change that occurred in the file.
            </param>
            <param name="after">
               A <see cref="T:System.Int64" /> value containing the position in
               the file after which offsets will be invalidated. If an
               offset is before this point, it won't be updated.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <see param="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoChunkOffsetBox.Render(System.Int64,System.Int64)">
            <summary>
               Renders the current instance after updating the table for
               a size change.
            </summary>
            <param name="sizeDifference">
               A <see cref="T:System.Int64" /> value containing the size
               change that occurred in the file.
            </param>
            <param name="after">
               A <see cref="T:System.Int64" /> value containing the position in
               the file after which offsets will be invalidated. If an
               offset is before this point, it won't be updated.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the file.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of a ISO/IEC 14496-12 FreeSpaceBox.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox.padding">
            <summary>
               Contains the size of the padding.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox.#ctor(System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox" /> to occupy a specified number of
               bytes.
            </summary>
            <param name="padding">
               A <see cref="T:System.Int64" /> value specifying the number of
               bytes the new instance should occupy when rendered.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox.Data">
            <summary>
               Gets and sets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the data
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoFreeSpaceBox.PaddingSize">
            <summary>
               Gets and sets the size the current instance will occupy
               when rendered.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the size the
               current instance will occupy when rendered.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of a ISO/IEC 14496-12 FullBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox.#ctor(VisioForge.Libs.TagLib.ByteVector,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> with a specified type and name.
            </summary>
            <param name="handlerType">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object specifying a 4 byte
               handler type.
            </param>
            <param name="name">
               A <see cref="T:System.String" /> object specifying the handler
               name.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="handlerType" /> is <see langword="null"
               />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="handlerType" /> is less than 4 bytes
               long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox.Data">
            <summary>
               Gets the data contained in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the data contained in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox.HandlerType">
            <summary>
               Gets the handler type of the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               handler type of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox.Name">
            <summary>
               Gets the name of the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the name of the
               current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of a ISO/IEC 14496-12 MetaBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox.#ctor(VisioForge.Libs.TagLib.ByteVector,System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox" /> with a specified handler.
            </summary>
            <param name="handlerType">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object specifying a 4 byte
               handler type.
            </param>
            <param name="handlerName">
               A <see cref="T:System.String" /> object specifying the handler
               name.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="handlerType" /> is <see langword="null"
               />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="handlerType" /> is less than 4 bytes
               long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMetaBox.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of a ISO/IEC 14496-12 MovieHeaderBox.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.creation_time">
            <summary>
               Contains the creation time of the movie.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.modification_time">
            <summary>
               Contains the modification time of the movie.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.timescale">
            <summary>
               Contains the timescale.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.duration">
            <summary>
               Contains the duration.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.rate">
            <summary>
               Contains the rate.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.volume">
            <summary>
               Contains the volume.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.CreationTime">
            <summary>
               Gets the creation time of movie represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.DateTime" /> value containing the creation
               time of the movie represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.ModificationTime">
            <summary>
               Gets the modification time of movie represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.DateTime" /> value containing the
               modification time of the movie represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.Duration">
            <summary>
               Gets the duration of the movie represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> value containing the duration
               of the movie represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.Rate">
            <summary>
               Gets the playback rate of the movie represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> value containing the playback
               rate of the movie represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.Volume">
            <summary>
               Gets the playback volume of the movie represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> value containing the playback
               volume of the movie represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox.NextTrackId">
            <summary>
               Gets the ID of the next track in the movie represented by
               the current instance.
            </summary>
            <value>
              A <see cref="T:System.UInt32" /> value containing the ID of the next
              track in the movie represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleDescriptionBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.FullBox" /> to provide an
               implementation of a ISO/IEC 14496-12 SampleDescriptionBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoSampleDescriptionBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleDescriptionBox" /> with a provided header
               and handler by reading the contents from a specified
               file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoSampleDescriptionBox.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoSampleDescriptionBox.EntryCount">
            <summary>
               Gets the number of boxes at the begining of the children
               that will be stored as <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry" />
               of <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry" /> objects, depending
               on the handler.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               children that will appear as sample entries.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoSampleDescriptionBox.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of a ISO/IEC 14496-12 SampleEntry.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry.DataReferenceIndex">
            <summary>
               Gets the data reference index of the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the data
               reference index of the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleTableBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of a ISO/IEC 14496-12 SampleTableBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoSampleTableBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleTableBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoSampleTableBox.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide an
               implementation of a ISO/IEC 14496-12 UserDataBox.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox" /> with no children.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox.Children">
            <summary>
               Gets the children of the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object enumerating the
               children of the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox.ParentTree">
            <summary>
               Gets the box headers for the current "<c>udta</c>" box and
               all parent boxes up to the top of the file.
            </summary>
            <value>
               A <see cref="T:BoxHeader[]" /> containing the headers for
               the current "<c>udta</c>" box and its parent boxes up to
               the top of the file, in the order they appear, or <see
               langword="null" /> if none is present.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoSampleEntry" /> and implements
               <see cref="T:VisioForge.Libs.TagLib.IVideoCodec" /> to provide an implementation of a
               ISO/IEC 14496-12 VisualSampleEntry and support for reading MPEG-4
               video properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.width">
            <summary>
               Contains the width of the visual.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.height">
            <summary>
               Contains the height of the visual.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry" /> with a provided header and
               handler by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.DataPosition">
            <summary>
               Gets the position of the data contained in the current
               instance, after any box specific headers.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position of
               the data contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:System.TimeSpan.Zero" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Video" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.VideoWidth">
            <summary>
               Gets the width of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> containing the width of the video
               represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry.VideoHeight">
            <summary>
               Gets the height of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> containing the height of the video
               represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.UnknownBox">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> to provide a simple
               implementation of a box of unknown type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.UnknownBox.data">
            <summary>
               Contains the box's data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.UnknownBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.UnknownBox" /> with a provided header and handler
               by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.UnknownBox.Data">
            <summary>
               Gets and sets the box data contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               data contained in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.BoxFactory">
            <summary>
               This static class provides support for reading boxes from a file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxFactory.CreateBox(VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox,System.Int32)">
            <summary>
               Creates a box by reading it from a file given its header,
               parent header, handler, and index in its parent.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               to read from.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               of the box to create.
            </param>
            <param name="parent">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               of the parent box.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new box.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               new box in its parent.
            </param>
            <returns>
               A newly created <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxFactory.CreateBox(VisioForge.Libs.TagLib.File,System.Int64,VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox,System.Int32)">
            <summary>
               Creates a box by reading it from a file given its
               position in the file, parent header, handler, and index
               in its parent.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               to read from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying at what seek
               position in <paramref name="file" /> to start reading.
            </param>
            <param name="parent">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               of the parent box.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new box.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               new box in its parent.
            </param>
            <returns>
               A newly created <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxFactory.CreateBox(VisioForge.Libs.TagLib.File,System.Int64,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Creates a box by reading it from a file given its
               position in the file and handler.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               to read from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying at what seek
               position in <paramref name="file" /> to start reading.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new box.
            </param>
            <returns>
               A newly created <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxFactory.CreateBox(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Creates a box by reading it from a file given its
               position in the file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               to read from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying at what seek
               position in <paramref name="file" /> to start reading.
            </param>
            <returns>
               A newly created <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxFactory.CreateBox(VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Creates a box by reading it from a file given its header
               and handler.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               to read from.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               of the box to create.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new box.
            </param>
            <returns>
               A newly created <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxFactory.CreateBox(VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.BoxHeader)">
            <summary>
               Creates a box by reading it from a file given its header
               and handler.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               to read from.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               of the box to create.
            </param>
            <returns>
               A newly created <see cref="T:VisioForge.Libs.TagLib.Mpeg4.Box" /> object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader">
            <summary>
               This structure provides support for reading and writing headers
               for ISO/IEC 14496-12 boxes.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.box_size">
            <summary>
               Contains the box size.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.header_size">
            <summary>
               Contains the header size.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.position">
            <summary>
               Contains the position of the header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.from_disk">
            <summary>
               Indicated that the header was read from a file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.Empty">
            <summary>
               An empty box header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.#ctor(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> by reading it from a specified seek
               position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the new
               instance from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifiying the seek position
               in <paramref name="file" /> at which to start reading.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               There isn't enough data in the file to read the complete
               header.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> with a specified box type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the four
               byte box type.
            </param>
            <remarks>
               <see cref="M:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)" /> must be
               used to create a header of type "<c>uuid</c>".
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="type" /> is <see langword="null" /> or is
               equal to "<c>uuid</c>".
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="type" /> isn't exactly 4 bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> with a specified box type and
               optionally extended type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the four
               byte box type.
            </param>
            <param name="extendedType">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the four
               byte box type.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="type" /> is <see langword="null" /> - or -
               <paramref name="type" /> is equal to "<c>uuid</c>" and
               <paramref name="extendedType" /> is <see langword="null"
               />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="type" /> isn't exactly 4 bytes long - or
               - <paramref name="type" /> isn't "<c>uuid</c>" but
               <paramref name="extendedType" /> isn't <see
               langword="null" /> - or - paramref name="type" /> is
               "<c>uuid</c>" but <paramref name="extendedType" /> isn't
               exactly 16 bytes long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.BoxType">
            <summary>
               Gets the type of box represented by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the 4 byte
               box type.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.ExtendedType">
            <summary>
               Gets the extended type of the box represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the 16 byte
               extended type, or <see langword="null" /> if <see
               cref="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.BoxType" /> is not "<c>uuid</c>".
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.HeaderSize">
            <summary>
               Gets the size of the header represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the size of the
               header represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.DataSize">
            <summary>
               Gets and sets the size of the data in the box described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the size of the
               data in the box described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.DataOffset">
            <summary>
               Gets the offset of the box data from the position of the
               header.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the offset of the
               box data from the position of the header.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.TotalBoxSize">
            <summary>
               Gets the total size of the box described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the total size of
               the box described by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.Position">
            <summary>
               Gets the position box represented by the current instance
               in the file it comes from.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the position box
               represented by the current instance in the file it comes
               from.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.Overwrite(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Overwrites the header on disk, updating it to include a
               change in the size of the box.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the box originates.
            </param>
            <param name="sizeChange">
               A <see cref="T:System.Int64" /> value indicating the change in the
               size of the box described by the current instance.
            </param>
            <returns>
               The size change encountered by the box that parents the
               box described the the current instance, equal to the
               size change of the box plus any size change that should
               happen in the header.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.Render">
            <summary>
               Renders the header represented by the current instance.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.BoxHeader.Box">
            <summary>
               Gets and sets the box represented by the current instance
               as a means of temporary storage for internal uses.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.BoxType">
            <summary>
               <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxType" /> provides references to different box types
               used by the library.
            </summary>
            <remarks>
               <para>This class is used to severely reduce the number of times
               these types are created in <see cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleTag" />, greatly
               improving the speed at which warm files are read.</para>
               <para>The reason it is marked as internal is because I'm not sure
               I like the way the fields are named, and it is really
               unneccessary for external uses. While the library may use
               <c>DataBoxes (BoxType.Gen, BoxType.Gnre);</c>, an external user
               could use <c>tag.DataBoxes ("gen", "gnre");</c> with the same
               result.</para>
               <see url="https://picard.musicbrainz.org/docs/mappings/"/> 
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide tagging
               and properties support for MPEG-4 files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.File.apple_tag">
            <summary>
               Contains the Apple tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.File.tag">
            <summary>
               Contains the combined tag.
            </summary>
            <remarks>
               TODO: Add support for ID3v2 tags.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.File.properties">
            <summary>
               Contains the media properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.File.UdtaBoxes">
            <summary>
            Get the UDTA Boxes
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg4.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               At the time of this writing, only <see cref="T:VisioForge.Libs.TagLib.Mpeg4.AppleTag" />
               is supported. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.FindAppleTagUdta">
            <summary>
               Find the udta box within our collection that contains the Apple ILST data.
            </summary>
            <remarks>
            	If there is a single udta in a file, we return that.
            	If there are multiple udtas, we search for the one that contains the ILST box.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.File.IsAppleTagUdtaPresent">
            <summary>
               Returns true if there is a udta with ILST present in our collection
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg4.FileParser">
            <summary>
               This class provides methods for reading important information
               from an MPEG-4 file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.file">
            <summary>
               Contains the file to read from.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.first_header">
            <summary>
               Contains the first header found in the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.mvhd_box">
            <summary>
               Contains the ISO movie header box.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.udta_boxes">
            <summary>
               Contains the ISO user data boxes.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.moov_tree">
            <summary>
               Contains the box headers from the top of the file to the
               "moov" box.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.udta_tree">
            <summary>
               Contains the box headers from the top of the file to the
               "udta" box.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.stco_boxes">
            <summary>
               Contains the "stco" boxes found in the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.stsd_boxes">
            <summary>
               Contains the "stsd" boxes found in the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.mdat_start">
            <summary>
               Contains the position at which the "mdat" box starts.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg4.FileParser.mdat_end">
            <summary>
               Contains the position at which the "mdat" box ends.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.#ctor(VisioForge.Libs.TagLib.File)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.FileParser" /> for a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to perform operations
               on.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="file" /> does not start with a
               "<c>ftyp</c>" box.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.MovieHeaderBox">
            <summary>
               Gets the movie header box read by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoMovieHeaderBox" /> object read by the
               current instance, or <see langword="null" /> if not found.
            </value>
            <remarks>
               This value will only be set by calling <see
               cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTagAndProperties" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.UserDataBoxes">
            <summary>
               Gets all user data boxes read by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoUserDataBox" /> array read by the
               current instance.
            </value>
            <remarks>
               This value will only be set by calling <see
               cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTag" /> and <see
               cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTagAndProperties" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.UserDataBox">
            <summary>
            Get the User Data Box
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.AudioSampleEntry">
            <summary>
               Gets the audio sample entry read by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoAudioSampleEntry" /> object read by the
               current instance, or <see langword="null" /> if not found.
            </value>
            <remarks>
               This value will only be set by calling <see
               cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTagAndProperties" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.VisualSampleEntry">
            <summary>
               Gets the visual sample entry read by the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoVisualSampleEntry" /> object read by the
               current instance, or <see langword="null" /> if not found.
            </value>
            <remarks>
               This value will only be set by calling <see
               cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTagAndProperties" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.MoovTree">
            <summary>
               Gets the box headers for the first "<c>moov</c>" box and
               all parent boxes up to the top of the file as read by the
               current instance.
            </summary>
            <value>
               A <see cref="T:BoxHeader[]" /> containing the headers for
               the first "<c>moov</c>" box and its parent boxes up to
               the top of the file, in the order they appear, or <see
               langword="null" /> if none is present.
            </value>
            <remarks>
               This value is useful for overwriting box headers, and is
               only be set by calling <see cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseBoxHeaders" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.UdtaTree">
            <summary>
               Gets the box headers for the first "<c>udta</c>" box and
               all parent boxes up to the top of the file as read by the
               current instance.
            </summary>
            <value>
               A <see cref="T:BoxHeader[]" /> containing the headers for
               the first "<c>udta</c>" box and its parent boxes up to
               the top of the file, in the order they appear, or <see
               langword="null" /> if none is present.
            </value>
            <remarks>
               This value is useful for overwriting box headers, and is
               only be set by calling <see cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseBoxHeaders" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.ChunkOffsetBoxes">
            <summary>
               Gets all chunk offset boxes read by the current instance.
            </summary>
            <value>
               A <see cref="T:Box[]" /> containing all chunk offset boxes
               read by the current instance.
            </value>
            <remarks>
               These boxes contain offset information for media data in
               the current instance and can be devalidated by size
               change operations, in which case they need to be
               corrected. This value will only be set by calling <see
               cref="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseChunkOffsets" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.MdatStartPosition">
            <summary>
               Gets the position at which the "<c>mdat</c>" box starts.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the "<c>mdat</c>" box starts.
            </value>
            <remarks>
               The "<c>mdat</c>" box contains the media data for the
               file and is used for estimating the invariant data
               portion of the file.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg4.FileParser.MdatEndPosition">
            <summary>
               Gets the position at which the "<c>mdat</c>" box ends.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the "<c>mdat</c>" box ends.
            </value>
            <remarks>
               The "<c>mdat</c>" box contains the media data for the
               file and is used for estimating the invariant data
               portion of the file.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseBoxHeaders">
            <summary>
               Parses the file referenced by the current instance,
               searching for box headers that will be useful in saving
               the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTag">
            <summary>
               Parses the file referenced by the current instance,
               searching for tags.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTagAndProperties">
            <summary>
               Parses the file referenced by the current instance,
               searching for tags and properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseChunkOffsets">
            <summary>
               Parses the file referenced by the current instance,
               searching for chunk offset boxes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseBoxHeaders(System.Int64,System.Int64,System.Collections.Generic.List{VisioForge.Libs.TagLib.Mpeg4.BoxHeader})">
            <summary>
               Parses boxes for a specified range, looking for headers.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to start reading.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to stop reading.
            </param>
            <param name="parents">
               A <see cref="T:System.Collections.Generic.List`1" /> object containing all the parent
               handlers that apply to the range.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTag(System.Int64,System.Int64,System.Collections.Generic.List{VisioForge.Libs.TagLib.Mpeg4.BoxHeader})">
            <summary>
               Parses boxes for a specified range, looking for tags.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to start reading.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to stop reading.
            </param>
            <param name="parents">
               A <see cref="T:List" /> of <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> parents.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseTagAndProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox,System.Collections.Generic.List{VisioForge.Libs.TagLib.Mpeg4.BoxHeader})">
            <summary>
               Parses boxes for a specified range, looking for tags and
               properties.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to start reading.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to stop reading.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object that applied to the
               range being searched.
            </param>
            <param name="parents">
               A <see cref="T:List" /> of <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> parents.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ParseChunkOffsets(System.Int64,System.Int64)">
            <summary>
               Parses boxes for a specified range, looking for chunk
               offset boxes.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to start reading.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value specifying the seek position
               at which to stop reading.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.ResetFields">
            <summary>
               Resets all internal fields.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg4.FileParser.AddParent(System.Collections.Generic.List{VisioForge.Libs.TagLib.Mpeg4.BoxHeader},VisioForge.Libs.TagLib.Mpeg4.BoxHeader)">
            <summary>
               Adds a parent to the end of an existing list of parents.
            </summary>
            <param name="parents">
               A <see cref="T:System.Collections.Generic.List`1" /> object containing an existing
               list of parents.
            </param>
            <param name="current">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object to add to the list.
            </param>
            <returns>
               A new <see cref="T:System.Collections.Generic.List`1" /> object containing the list
               of parents, including the added header.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.TextBox">
            <summary>
            Represent an MP4 text box
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TextBox.data">
            <summary>
               Contains the box's data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.TextBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.UnknownBox" /> with a provided header and handler
               by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.TextBox.Data">
            <summary>
               Gets and sets the box data contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               data contained in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.UrlBox">
            <summary>
            Represent a MP4 URL box
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.UrlBox.data">
            <summary>
               Contains the box's data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.UrlBox.#ctor(VisioForge.Libs.TagLib.Mpeg4.BoxHeader,VisioForge.Libs.TagLib.File,VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg4.UnknownBox" /> with a provided header and handler
               by reading the contents from a specified file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.BoxHeader" /> object containing the header
               to use for the new instance.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the contents
               of the box from.
            </param>
            <param name="handler">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg4.IsoHandlerBox" /> object containing the
               handler that applies to the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.UrlBox.Data">
            <summary>
               Gets and sets the box data contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the box
               data contained in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.AudioFile">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for MPEG-1, MPEG-2, and
               MPEG-2.5 audio files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> and <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> will be added automatically to any
               file that doesn't contain one. This change does not effect the
               file until it is saved and can be reversed using the following
               method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioFile.first_header">
            <summary>
               Contains the first audio header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.AudioFile" /> for a specified path in the local
               file system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.AudioFile" /> for a specified path in the local
               file system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.AudioFile" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.AudioFile" /> for a specified file abstraction with
               an average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               If a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> is added to the
               current instance, it will be placed at the start of the
               file. On the other hand, <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" />
               <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added to the end of
               the file. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <remarks>
               This method only searches for an audio header in the
               first 16384 bytes of code to avoid searching forever in
               corrupt files.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioFile.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.Version">
            <summary>
               Indicates the MPEG version of a file or stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Version.Unknown">
            <summary>
               Unknown version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Version.Version1">
            <summary>
               MPEG-1
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Version.Version2">
            <summary>
               MPEG-2
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Version.Version25">
            <summary>
               MPEG-2.5
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.ChannelMode">
            <summary>
               Indicates the MPEG audio channel mode of a file or stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.ChannelMode.Stereo">
            <summary>
               Stereo
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.ChannelMode.JointStereo">
            <summary>
               Joint Stereo
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.ChannelMode.DualChannel">
            <summary>
               Dual Channel Mono
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.ChannelMode.SingleChannel">
            <summary>
               Single Channel Mono
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.AudioHeader">
            <summary>
               This structure implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> and provides
               information about an MPEG audio stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.sample_rates">
            <summary>
               Contains a sample rate table for MPEG audio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.block_size">
            <summary>
               Contains a block size table for MPEG audio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.bitrates">
            <summary>
               Contains a bitrate table for MPEG audio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.flags">
            <summary>
               Contains the header flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.stream_length">
            <summary>
               Contains the audio stream length.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.xing_header">
            <summary>
               Contains the associated Xing header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.vbri_header">
            <summary>
               Contains the associated VBRI header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.duration">
            <summary>
               Contains the audio stream duration.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Unknown">
            <summary>
               An empty and unset header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.#ctor(System.UInt32,System.Int64,VisioForge.Libs.TagLib.Mpeg.XingHeader,VisioForge.Libs.TagLib.Mpeg.VBRIHeader)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.AudioHeader" /> by populating it with specified
               values.
            </summary>
            <param name="flags">
               A <see cref="T:System.UInt32" /> value specifying flags for the new
               instance.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value specifying the stream length
               of the new instance.
            </param>
            <param name="xingHeader">
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.XingHeader" /> object representing the Xing
               header associated with the new instance.
            </param>
            <param name="vbriHeader">
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.VBRIHeader" /> object representing the VBRI
               header associated with the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.AudioHeader" /> by reading its contents from a
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object and its Xing Header from
               the appropriate location in the specified file.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the header
               to read.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read the Xing
               header from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value indicating the position in
               <paramref name="file" /> at which the header begins.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> is less than 4 bytes long,
               does not begin with a MPEG audio synch, has a negative
               bitrate, or has a sample rate of zero.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Version">
            <summary>
               Gets the MPEG version used to encode the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Version" /> value indicating the MPEG
               version used to encode the audio represented by the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.AudioLayer">
            <summary>
               Gets the MPEG audio layer used to encode the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value indicating the MPEG audio
               layer used to encode the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.AudioFrameLength">
            <summary>
               Gets the length of the frames in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the length of the
               frames in the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
            <remarks>
               If <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.XingHeader" /> is equal to <see
               cref="F:VisioForge.Libs.TagLib.Mpeg.XingHeader.Unknown" /> and <see
               cref="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.SetStreamLength(System.Int64)" /> has not been called, this value
               will not be correct.
               If <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.VBRIHeader" /> is equal to <see
               cref="F:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.Unknown" /> and <see
               cref="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.SetStreamLength(System.Int64)" /> has not been called, this value
               will not be correct.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.IsProtected">
            <summary>
               Gets whether or not the audio represented by the current
               instance is protected.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               audio represented by the current instance is protected.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.IsPadded">
            <summary>
               Gets whether or not the audio represented by the current
               instance is padded.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               audio represented by the current instance is padded.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.IsCopyrighted">
            <summary>
               Gets whether or not the audio represented by the current
               instance is copyrighted.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               audio represented by the current instance is copyrighted.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.IsOriginal">
            <summary>
               Gets whether or not the audio represented by the current
               instance is original.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               audio represented by the current instance is original.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.ChannelMode">
            <summary>
               Gets the MPEG audio channel mode of the audio represented
               by the current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.ChannelMode" /> value indicating the MPEG
               audio channel mode of the audio represented by the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.XingHeader">
            <summary>
               Gets the Xing header found in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.XingHeader" /> object containing the Xing
               header found in the audio represented by the current
               instance, or <see cref="F:VisioForge.Libs.TagLib.Mpeg.XingHeader.Unknown" /> if no
               header was found.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.VBRIHeader">
            <summary>
               Gets the VBRI header found in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.VBRIHeader" /> object containing the VBRI
               header found in the audio represented by the current
               instance, or <see cref="F:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.Unknown" /> if no
               header was found.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.SetStreamLength(System.Int64)">
            <summary>
               Sets the length of the audio stream represented by the
               current instance.
            </summary>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value specifying the length in
               bytes of the audio stream represented by the current
               instance.
            </param>
            <remarks>
               The this value has been set, <see cref="P:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Duration" /> will
               return an incorrect value.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Find(VisioForge.Libs.TagLib.Mpeg.AudioHeader@,VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Searches for an audio header in a <see cref="T:VisioForge.Libs.TagLib.File"
               /> starting at a specified position and searching through
               a specified number of bytes.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.AudioHeader" /> object in which the found
               header will be stored.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to search.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               in <paramref name="file" /> at which to start searching.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the maximum number
               of bytes to search before aborting.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not a
               header was found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.AudioHeader.Find(VisioForge.Libs.TagLib.Mpeg.AudioHeader@,VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Searches for an audio header in a <see cref="T:VisioForge.Libs.TagLib.File"
               /> starting at a specified position and searching to the
               end of the file.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.AudioHeader" /> object in which the found
               header will be stored.
            </param>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to search.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the seek position
               in <paramref name="file" /> at which to start searching.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not a
               header was found.
            </returns>
            <remarks>
               Searching to the end of the file can be very, very slow
               especially for corrupt or non-MPEG files. It is
               recommended to use <see
               cref="M:AudioHeader.Find(AudioHeader,TagLib.File,long,int)" />
               instead.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.Marker">
            <summary>
               Indicates the type of marker found in a MPEG file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.Corrupt">
            <summary>
               An invalid marker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.Zero">
            <summary>
               A zero value marker.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.SystemSyncPacket">
            <summary>
              A marker indicating a system sync packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.VideoSyncPacket">
            <summary>
              A marker indicating a video sync packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.SystemPacket">
            <summary>
              A marker indicating a system packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.PaddingPacket">
            <summary>
              A marker indicating a padding packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.AudioPacket">
            <summary>
              A marker indicating a audio packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.VideoPacket">
            <summary>
              A marker indicating a video packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.Marker.EndOfStream">
            <summary>
              A marker indicating the end of a stream.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for MPEG-1, MPEG-2, and
               MPEG-2.5 video files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" /> and <see
               cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> will be added automatically to any
               file that doesn't contain one. This change does not effect the
               file until it is saved and can be reversed using the following
               method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.version">
            <summary>
               Contains the MPEG version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.audio_header">
            <summary>
               Contains the first audio header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.video_header">
            <summary>
               Contains the first video header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.video_found">
            <summary>
               Indicates whether or not audio was found.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.audio_found">
            <summary>
               Indicates whether or not video was found.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.start_time">
            <summary>
               Contains the start time of the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.File.end_time">
            <summary>
               Contains the end time of the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               If a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> is added to the
               current instance, it will be placed at the start of the
               file. On the other hand, <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" />
               <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added to the end of
               the file. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.GetMarker(System.Int64)">
            <summary>
               Gets the marker at a specified position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the postion in the
               file represented by the current instance at which to
               read.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.Marker" /> value containing the type of
               marker found at the specified position.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A valid marker does not exist at the specified position.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.FindMarker(System.Int64@)">
            <summary>
               Finds the next marker starting at a specified position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start searching. This value
               is updated to the position of the found marker.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.Marker" /> value containing the type of
               marker found at the specified position.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A valid marker could not be found.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.FindMarker(System.Int64@,VisioForge.Libs.TagLib.Mpeg.Marker)">
            <summary>
               Finds the next marker of a specified type, starting at a
               specified position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start searching. This value
               is updated to the position of the found marker.
            </param>
            <param name="marker">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.Marker" /> value specifying the type of
               marker to search for.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A valid marker could not be found.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.RFindMarker(System.Int64@,VisioForge.Libs.TagLib.Mpeg.Marker)">
            <summary>
               Finds the previous marker of a specified type, starting
               at a specified position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start searching. This value
               is updated to the position of the found marker.
            </param>
            <param name="marker">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.Marker" /> value specifying the type of
               marker to search for.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               A valid marker could not be found.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadSystemFile(System.Int64)">
            <summary>
               Reads the contents of the file as a system file, starting
               at a specified position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value specifying the postion in the
               file represented by the current instance at which to
               start reading.
            </param>
            <remarks>
               This method will stop when it has read both an audio and
               a video header, or once it's read 100 packets. This is to
               prevent the entire file from being read if it lacks one
               type of stream.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadAudioPacket(System.Int64@)">
            <summary>
               Reads an audio packet, assigning the audio header and
               advancing the position to the next packet position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start reading the packet. This value
               is updated to the position of the next packet.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadVideoPacket(System.Int64@)">
            <summary>
               Reads a video packet, assigning the video header and
               advancing the position to the next packet position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start reading the packet. This value
               is updated to the position of the next packet.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadSystemSyncPacket(System.Int64@)">
            <summary>
               Reads a system sync packet, filling in version
               information and the first timestamp value, advancing the
               position to the next packet position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying the
               position at which to start reading the packet. If the
               method is called without exception, this is updated to
               the position of the next packet.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               The MPEG version contained in the packet is unknown.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.File.ReadTimestamp(System.Int64)">
            <summary>
               Reads an MPEG timestamp from a specified position in the
               file represented by the current instance.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value containing the position in
               the file at which to read. This should be immediately
               following a system sync packet marker.
            </param>
            <returns>
               A <see cref="T:System.Double" /> value containing the read time in
               seconds.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.VBRIHeader">
            <summary>
               This structure provides information about a variable bitrate MPEG
               audio stream encoded by the Fraunhofer Encoder.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.FileIdentifier">
            <summary>
               Contains te VBRI identifier.
            </summary>
            <value>
               "VBRI"
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.Unknown">
            <summary>
               An empty and unset VBRI header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.#ctor(System.UInt32,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.VBRIHeader" /> with a specified frame count and
               size.
            </summary>
            <param name="frame">
               A <see cref="T:System.UInt32" /> value specifying the frame count of
               the audio represented by the new instance.
            </param>
            <param name="size">
               A <see cref="T:System.UInt32" /> value specifying the stream size of
               the audio represented by the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.VBRIHeader" /> by reading its raw contents.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               VBRI header.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not start with <see
               cref="F:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.FileIdentifier" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.TotalFrames">
            <summary>
               Gets the total number of frames in the file, as indicated
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               frames in the file, or <c>0</c> if not specified.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.TotalSize">
            <summary>
               Gets the total size of the file, as indicated by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the total size of
               the file, or <c>0</c> if not specified.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.Present">
            <summary>
               Gets whether or not a physical VBRI header is present in
               the file.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance represents a physical VBRI header.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.VBRIHeader.VBRIHeaderOffset">
            <summary>
               Gets the offset at which a VBRI header would appear in an
               MPEG audio packet.
               Always 32 bytes after the end of the first MPEG Header.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value indicating the offset in an
               MPEG audio packet at which the VBRI header would appear.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.VideoHeader">
            <summary>
               This structure implements <see cref="T:VisioForge.Libs.TagLib.IVideoCodec" /> and provides
               information about an MPEG video stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.VideoHeader.frame_rates">
            <summary>
               Contains frame rate values.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.VideoHeader.frame_rate_index">
            <summary>
               Contains the index in <see cref="F:VisioForge.Libs.TagLib.Mpeg.VideoHeader.frame_rates" /> of the
               video frame rate.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.VideoHeader.#ctor(VisioForge.Libs.TagLib.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.VideoHeader" /> by reading it from a specified
               location in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object to read from.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value indicating the position in
               <paramref name="file" /> at which the header begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               Insufficient data could be read for the header.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:System.TimeSpan.Zero" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Video" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.VideoWidth">
            <summary>
               Gets the width of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.VideoHeight">
            <summary>
               Gets the height of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.VideoFrameRate">
            <summary>
               Gets the frame rate of the video represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> value containing the frame rate
               of the video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.VideoHeader.VideoBitrate">
            <summary>
               Gets the bitrate of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               video represented by the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Mpeg.XingHeader">
            <summary>
               This structure provides information about a variable bitrate MPEG
               audio stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.XingHeader.FileIdentifier">
            <summary>
               Contains te Xing identifier.
            </summary>
            <value>
               "Xing"
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Mpeg.XingHeader.Unknown">
            <summary>
               An empty and unset Xing header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.XingHeader.#ctor(System.UInt32,System.UInt32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.XingHeader" /> with a specified frame count and
               size.
            </summary>
            <param name="frame">
               A <see cref="T:System.UInt32" /> value specifying the frame count of
               the audio represented by the new instance.
            </param>
            <param name="size">
               A <see cref="T:System.UInt32" /> value specifying the stream size of
               the audio represented by the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.XingHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Mpeg.XingHeader" /> by reading its raw contents.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               Xing header.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not start with <see
               cref="F:VisioForge.Libs.TagLib.Mpeg.XingHeader.FileIdentifier" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.XingHeader.TotalFrames">
            <summary>
               Gets the total number of frames in the file, as indicated
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               frames in the file, or <c>0</c> if not specified.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.XingHeader.TotalSize">
            <summary>
               Gets the total size of the file, as indicated by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the total size of
               the file, or <c>0</c> if not specified.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Mpeg.XingHeader.Present">
            <summary>
               Gets whether or not a physical Xing header is present in
               the file.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance represents a physical Xing header.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Mpeg.XingHeader.XingHeaderOffset(VisioForge.Libs.TagLib.Mpeg.Version,VisioForge.Libs.TagLib.Mpeg.ChannelMode)">
            <summary>
               Gets the offset at which a Xing header would appear in an
               MPEG audio packet based on the version and channel mode.
            </summary>
            <param name="version">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.Version" /> value specifying the version of
               the MPEG audio packet.
            </param>
            <param name="channelMode">
               A <see cref="T:VisioForge.Libs.TagLib.Mpeg.ChannelMode" /> value specifying the channel
               mode of the MPEG audio packet.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value indicating the offset in an
               MPEG audio packet at which the Xing header would appear.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.NonContainer.EndTag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.CombinedTag" />, providing support
               for accessing and modifying a collection of tags appearing at the
               end of a file.
            </summary>
            <remarks>
               <para>This class is used by <see cref="T:VisioForge.Libs.TagLib.NonContainer.File"
               /> to read all the tags appearing at the end of the file but
               could be used by other classes. It currently supports ID3v1,
               ID3v2, and APE tags.</para>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.NonContainer.EndTag.file">
            <summary>
               Contains the file to operate on.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.NonContainer.EndTag.read_size">
            <summary>
               Contains the number of bytes that must be read to
               hold all applicable indicators.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.#ctor(VisioForge.Libs.TagLib.File)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.EndTag" /> for a specified <see cref="T:VisioForge.Libs.TagLib.File"
               />.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object on which the new
               instance will perform its operations.
            </param>
            <remarks>
               Constructing a new instance does not automatically read
               the contents from the disk. <see cref="M:VisioForge.Libs.TagLib.NonContainer.EndTag.Read(VisioForge.Libs.TagLib.ReadStyle)" /> must be
               called to read the tags.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.EndTag.TotalSize">
            <summary>
               Gets the total size of the tags located at the end of the
               file by reading from the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the tags stored at the end of the file into the
               current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int64" /> value indicating the seek position
               in the file at which the read tags begin. This also
               marks the seek position at which the media ends.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.Render">
            <summary>
               Renders the tags contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               physical representation of the tags stored in the current
               instance.
            </returns>
            <remarks>
               The tags are rendered in the order that they are stored
               in the current instance.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.Write">
            <summary>
               Writes the tags contained in the current instance to the
               end of the file that created it, overwriting the existing
               tags.
            </summary>
            <returns>
               A <see cref="T:System.Int64" /> value indicating the seek position
               in the file at which the written tags begin. This also
               marks the seek position at which the media ends.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.AddTag(VisioForge.Libs.TagLib.TagTypes,VisioForge.Libs.TagLib.Tag)">
            <summary>
               Adds a tag of a specified type to the current instance,
               optionally copying values from an existing type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value specifying the type of
               tag to add to the current instance. At the time of this
               writing, this is limited to <see cref="F:VisioForge.Libs.TagLib.TagTypes.Ape" />,
               <see cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v1" />, and <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v2" />.
            </param>
            <param name="copy">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> to copy values from using
               <see cref="M:VisioForge.Libs.TagLib.Tag.CopyTo(VisioForge.Libs.TagLib.Tag,System.Boolean)" />, or <see
               langword="null" /> if no tag is to be copied.
            </param>
            <returns>
               The <see cref="T:VisioForge.Libs.TagLib.Tag" /> object added to the current
               instance, or <see langword="null" /> if it couldn't be
               created.
            </returns>
            <remarks>
               ID3v2 tags are added at the end of the current instance,
               while other tags are added to the beginning.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.ReadTag(System.Int64@,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads a tag ending at a specified position and moves the
               cursor to its start position.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value reference specifying at what
               position the potential tag ends at. If a tag is found,
               this value will be updated to the position at which the
               found tag starts.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing the tag
               found at the specified position, or <see langword="null"
               /> if no tag was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.EndTag.ReadTagInfo(System.Int64@)">
            <summary>
               Looks for a tag ending at a specified position and moves
               the cursor to its start position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying at what
               position the potential tag ends. If a tag is found,
               this value will be updated to the position at which the
               found tag starts.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value specifying the
               type of tag found at the specified position, or <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.None" /> if no tag was found.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.NonContainer.File">
            <summary>
               This abstract class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide
               tagging and properties for files that contain an indeterminite
               number of tags at their beginning or end.
            </summary>
            <remarks>
               <para>When extending this class, <see cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)" />, <see
               cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)" />, and <see cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)" /> should be
               overrided methods that read the format specific information from
               the file.</para>
               <para>The file is read upon construction in the following
               manner:</para>
               <list type="number">
                  <item><term>The file is opened for reading.</term></item>
                  <item><term>The tags at the start of the file are
                  read.</term></item>
                  <item><term><see cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)" /> is called.</term></item>
                  <item><term>The tags at the end of the file are
                  read.</term></item>
                  <item><term><see cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)" /> is called.</term></item>
                  <item><term>If reading with a style other than <see
                  cref="F:VisioForge.Libs.TagLib.ReadStyle.None" />, <see cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)" /> is
                  called.</term></item>
                  <item><term>The file is closed.</term></item>
               </list>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.NonContainer.File.tag">
            <summary>
               Contains the tags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.NonContainer.File.properties">
            <summary>
               Contains the media properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.File.StartTag">
            <summary>
               Gets the collection of tags appearing at the start of the
               file.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.NonContainer.StartTag" /> storing the
               tags for the start of the file.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.File.EndTag">
            <summary>
               Gets the collection of tags appearing at the end of the
               file.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.NonContainer.EndTag" /> storing the
               tags for the end of the file.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <remarks>
               This method is called by the constructor immediately
               after the tags at the start of the file have been read
               and as such (so the internal seek mechanism is close to
               the start). It should be used for reading any content
               specific information, such as an audio header from the
               start of the file.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <remarks>
               This method is called by the constructor immediately
               after the tags at the end of the file have been read
               and as such (so the internal seek mechanism is close to
               the end). It should be used for reading any content
               specific information, such as an audio header from the
               end of the file.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
            <remarks>
               This method is called ONLY IF the file is constructed
               with a read style other than <see cref="F:VisioForge.Libs.TagLib.ReadStyle.None"
               />, and as such MUST NOT return <see langword="null" />.
               It is guaranteed that <see cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)" /> and <see
               cref="M:VisioForge.Libs.TagLib.NonContainer.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)" /> will have been called first and this
               method should be strictly used to perform final
               processing on already read data.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.NonContainer.StartTag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.CombinedTag" />, providing support
               for accessing and modifying a collection of tags appearing at the
               start of a file.
            </summary>
            <remarks>
               <para>This class is used by <see cref="T:VisioForge.Libs.TagLib.NonContainer.File"
               /> to read all the tags appearing at the start of the file but
               could be used by other classes. It currently supports ID3v2
               and APE tags.</para>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.NonContainer.StartTag.file">
            <summary>
               Contains the file to operate on.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.NonContainer.StartTag.read_size">
            <summary>
               Contains the number of bytes that must be read to
               hold all applicable indicators.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.#ctor(VisioForge.Libs.TagLib.File)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.StartTag" /> for a specified <see
               cref="T:VisioForge.Libs.TagLib.File" />.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object on which the new
               instance will perform its operations.
            </param>
            <remarks>
               Constructing a new instance does not automatically read
               the contents from the disk. <see cref="M:VisioForge.Libs.TagLib.NonContainer.StartTag.Read(VisioForge.Libs.TagLib.ReadStyle)" /> must be
               called to read the tags.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.StartTag.TotalSize">
            <summary>
               Gets the total size of the tags located at the end of the
               file by reading from the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the tags stored at the start of the file into the
               current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int64" /> value indicating the seek position
               in the file at which the read tags end. This also
               marks the seek position at which the media begins.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.Render">
            <summary>
               Renders the tags contained in the current instance.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               physical representation of the tags stored in the current
               instance.
            </returns>
            <remarks>
               The tags are rendered in the order that they are stored
               in the current instance.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.Write">
            <summary>
               Writes the tags contained in the current instance to the
               beginning of the file that created it, overwriting the
               existing tags.
            </summary>
            <returns>
               A <see cref="T:System.Int64" /> value indicating the seek position
               in the file at which the written tags end. This also
               marks the seek position at which the media begins.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.AddTag(VisioForge.Libs.TagLib.TagTypes,VisioForge.Libs.TagLib.Tag)">
            <summary>
               Adds a tag of a specified type to the current instance,
               optionally copying values from an existing type.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value specifying the type of
               tag to add to the current instance. At the time of this
               writing, this is limited to <see cref="F:VisioForge.Libs.TagLib.TagTypes.Ape" />
               and <see cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v2" />.
            </param>
            <param name="copy">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> to copy values from using
               <see cref="M:VisioForge.Libs.TagLib.Tag.CopyTo(VisioForge.Libs.TagLib.Tag,System.Boolean)" />, or <see
               langword="null" /> if no tag is to be copied.
            </param>
            <returns>
               The <see cref="T:VisioForge.Libs.TagLib.Tag" /> object added to the current
               instance, or <see langword="null" /> if it couldn't be
               created.
            </returns>
            <remarks>
               ID3v2 tags are added at the end of the current instance,
               while other tags are added to the beginning.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.ReadTag(System.Int64@,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads a tag starting at a specified position and moves the
               cursor to its start position.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value reference specifying at what
               position the potential tag starts. If a tag is found,
               this value will be updated to the position at which the
               found tag ends.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing the tag
               found at the specified position, or <see langword="null"
               /> if no tag was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.StartTag.ReadTagInfo(System.Int64@)">
            <summary>
               Looks for a tag starting at a specified position and moves
               the cursor to its start position.
            </summary>
            <param name="position">
               A <see cref="T:System.Int64" /> value reference specifying at what
               position the potential tag starts. If a tag is found,
               this value will be updated to the position at which the
               found tag ends.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value specifying the
               type of tag found at the specified position, or <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.None" /> if no tag was found.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.NonContainer.Tag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.CombinedTag" />, combining <see
               cref="P:VisioForge.Libs.TagLib.NonContainer.Tag.StartTag" /> and <see cref="P:VisioForge.Libs.TagLib.NonContainer.Tag.EndTag" /> in such a way as
               their children appear as its children.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.#ctor(VisioForge.Libs.TagLib.NonContainer.File)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.NonContainer.Tag" /> for a specified <see cref="T:VisioForge.Libs.TagLib.File" />.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object on which the new
               instance will perform its operations.
            </param>
            <remarks>
               Constructing a new instance does not automatically read
               the contents from the disk. <see cref="M:VisioForge.Libs.TagLib.NonContainer.Tag.Read(System.Int64@,System.Int64@)" /> must be
               called to read the tags.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.Tag.StartTag">
            <summary>
               Gets the collection of tags appearing at the start of the
               file.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.NonContainer.StartTag" /> storing the
               tags for the start of the file.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.Tag.EndTag">
            <summary>
               Gets the collection of tags appearing at the end of the
               file.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.NonContainer.EndTag" /> storing the
               tags for the end of the file.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" />
               containing the tag types contained in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.NonContainer.Tag.Tags">
            <summary>
               Gets the tags combined in the current instance.
            </summary>
            <value>
               A <see cref="T:TagLib.Tag[]" /> containing the tags combined in
               the current instance.
            </value>
            <remarks>
               This contains the combined children of <see
               cref="P:VisioForge.Libs.TagLib.NonContainer.Tag.StartTag" /> and <see cref="P:VisioForge.Libs.TagLib.NonContainer.Tag.EndTag" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.GetTag(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Gets a tag of a specified type from the current instance.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.NonContainer.Tag" /> object containing the tag that was
               found in the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.Read(System.Int64@,System.Int64@)">
            <summary>
               Reads the tags at the start and end of the file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value reference which will be set
               to contain the seek position in the file at which the
               tags at the start end. This also marks the seek position
               at which the media begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value reference which will be set
               to contain the seek position in the file at which the
               tags at the end begin. This also marks the seek position
               at which the media ends.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.ReadStart(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the tags stored at the start of the file into the
               current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int64" /> value indicating the seek position
               in the file at which the read tags end. This also
               marks the seek position at which the media begins.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.ReadEnd(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the tags stored at the end of the file into the
               current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int64" /> value indicating the seek position
               in the file at which the read tags begin. This also
               marks the seek position at which the media ends.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.NonContainer.Tag.Write(System.Int64@,System.Int64@)">
            <summary>
               Writes the tags to the start and end of the file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value reference which will be set
               to contain the new seek position in the file at which the
               tags at the start end. This also marks the seek position
               at which the media begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value reference which will be set
               to contain the new seek position in the file at which the
               tags at the end begin. This also marks the seek position
               at which the media ends.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Bitstream">
            <summary>
               This class accepts a sequence of pages belonging to a single
               logical bitstream, processes them, and extracts the tagging and
               media information.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Bitstream.previous_packet">
            <summary>
               Contains the last packet of the previous page in case it
               is continued in the next frame.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Bitstream.packet_index">
            <summary>
               Contains the index of the next packet to be processed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Bitstream.first_absolute_granular_position">
            <summary>
               Contains the absolute granular position of the first
               page.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Bitstream.#ctor(VisioForge.Libs.TagLib.Ogg.Page)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Bitstream" /> capable of processing a specified
               page.
            </summary>
            <param name="page">
               The first <see cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> object of the stream to be
               processed by the new instance.
            </param>
            <remarks>
               The constructor only sets the new instance up to read the
               packet, but doesn't actually read it.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="page" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               No registered codec capable of processing <paramref
               name="page" /> could be found.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Bitstream.ReadPage(VisioForge.Libs.TagLib.Ogg.Page)">
            <summary>
               Reads the next logical page in the stream.
            </summary>
            <param name="page">
               The next logical <see cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> object in the
               stream.
            </param>
            <returns>
               <see langword="true" /> if the codec has read all the
               necessary packets for the stream and does not need to be
               called again, typically once the Xiph comment has been
               found. Otherwise <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="page" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Bitstream.GetDuration(System.Int64)">
            <summary>
               Gets the duration of the stream represented by the
               current instance.
            </summary>
            <param name="lastAbsoluteGranularPosition">
               A <see cref="T:System.Int64" /> value containing the absolute
               granular position of the last page in the bitstream.
            </param>
            <returns>
               A <see cref="T:System.TimeSpan" /> object containing the duration
               of the stream represented by the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Bitstream.Codec">
            <summary>
               Gets the codec object used to interpret the stream
               represented by the current instance.
            </summary>
            <value>
               The <see cref="P:VisioForge.Libs.TagLib.Ogg.Bitstream.Codec" /> object used by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Bitstream.ReadPacket(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Sents a packet to the codec processor to read it.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the next
               packet in the stream.
            </param>
            <returns>
               <see langword="true" /> if the codec has read all the
               necessary packets for the stream and does not need to be
               called again, typically once the Xiph comment has been
               found. Otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codec">
            <summary>
               This abstract class implements <see cref="T:VisioForge.Libs.TagLib.ICodec" /> to provide
               support for processing packets from an Ogg logical bitstream.
            </summary>
            <remarks>
               Unsupported Ogg codecs can be added by creating child classes and
               registering them using <see cref="M:VisioForge.Libs.TagLib.Ogg.Codec.AddCodecProvider(VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider)" />.
            </remarks>
            <seealso cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider" />
            <seealso cref="M:VisioForge.Libs.TagLib.Ogg.Codec.AddCodecProvider(VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider)" />
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider">
            <summary>
               Represents a method capable of checking an Ogg header
               packet to see it is matches a given codec.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing an Ogg
               header packet.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> object capable of processing the
               stream from which the packet was generated; otherwise
               <see langword="null" />.
            </returns>
            <remarks>
               <para>In order to add support for a new Ogg codec in
               TagLib#, a derivative class of <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> needs
               to be created. The class then needs to be added to the
               codec detection system by creating a <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider" /> and registering it with <see
               cref="M:VisioForge.Libs.TagLib.Ogg.Codec.AddCodecProvider(VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider)"/>.</para>
               <para>A method implementing <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider" />
               should read <paramref name="packet" /> to determine if
               it's subclass can handle the data. If it can, it should
               return a new instance of that class, but in no way act
               upon the data. If the class cannot be used to read the
               packet, <see langref="null" /> indicates to the system
               that it needs to try anther codec provider.</para>
            </remarks>
            <example>
               <para>The following example would check for a Speex
               packet and return a Speex codec:</para>
               <code lang="C++">
            Codec.AddCodecProvider (delegate (ByteVector packet) {
            	return packet.StartsWith ("Speex   ") ? new MySpeexCodec () : null;
            });
               </code>
            </example>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codec.providers">
            <summary>
               Contains registered codec providers.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codec.GetCodec(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Determines the correct codec to use for a stream header
               packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the first
               packet of an Ogg logical bitstream.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> object capable of handling
               <paramref name="packet" /> and subsequent packets from
               the same stream.
            </returns>
            <exception cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
               No registered codec capable of processing <paramref
               name="packet" /> could be found.
            </exception>
            <remarks>
               This method will first use <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider" />
               delegates registered with <see cref="M:VisioForge.Libs.TagLib.Ogg.Codec.AddCodecProvider(VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider)" />
               and then attempt to use the built-in codecs.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codec.AddCodecProvider(VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider)">
            <summary>
               Adds a codec 
            </summary>
            <param name="provider">
            A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider"/>
            </param>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider" /> delegate is used to add
               support for new <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> subclasses in <see
               cref="M:VisioForge.Libs.TagLib.Ogg.Codec.GetCodec(VisioForge.Libs.TagLib.ByteVector)" />.
            </remarks>
            <seealso cref="T:VisioForge.Libs.TagLib.Ogg.Codec.CodecProvider" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codec.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="P:VisioForge.Libs.TagLib.Ogg.Codec.MediaTypes" /> containing
               the types of media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codec.CommentData">
            <summary>
               Gets the raw Xiph comment data contained in the codec.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw Xiph
               comment or <see langword="null"/> if none was found.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codec.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:System.TimeSpan.Zero" />.
            </value>
            <remarks>
               In order to determine the duration of an Ogg stream, the
               first and last granular positions will be passed to <see
               cref="M:VisioForge.Libs.TagLib.Ogg.Codec.GetDuration(System.Int64,System.Int64)" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codec.ReadPacket(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Reads a Ogg packet that has been encountered in the
               stream.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a packet to
               be read by the current instance.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               packet in the stream.
            </param>
            <returns>
               <see langword="true" /> if the codec has read all the
               necessary packets for the stream and does not need to be
               called again, typically once the Xiph comment has been
               found. Otherwise <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packet" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="index" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The data does not conform to the specificiation for the
               codec represented by the current instance.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codec.GetDuration(System.Int64,System.Int64)">
            <summary>
               Computes the duration of the stream using the first and
               last granular positions of the stream.
            </summary>
            <param name="firstGranularPosition">
               A <see cref="T:System.Int64" /> value containing the first granular
               position of the stream.
            </param>
            <param name="lastGranularPosition">
               A <see cref="T:System.Int64" /> value containing the last granular
               position of the stream.
            </param>
            <returns>
               A <see cref="T:System.TimeSpan" /> value containing the duration
               of the stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codec.SetCommentPacket(VisioForge.Libs.TagLib.ByteVectorCollection,VisioForge.Libs.TagLib.Ogg.XiphComment)">
            <summary>
               Replaces the comment packet in a collection of packets
               with the rendered version of a Xiph comment or inserts a
               comment packet if the stream lacks one.
            </summary>
            <param name="packets">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               a collection of packets.
            </param>
            <param name="comment">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object to store the rendered
               version of in <paramref name="packets" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packets" /> or <paramref name="comment"
               /> is <see langword="null" />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codecs.Opus">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> and implements <see
               cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide support for processing Ogg
               Opus bitstreams.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.magic_signature_base">
            <summary>
               Contains the file identifier.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.header">
            <summary>
               Contains the header packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.comment_data">
            <summary>
               Contains the comment data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Codecs.Opus" />.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.ReadPacket(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Reads a Ogg packet that has been encountered in the
               stream.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a packet to
               be read by the current instance.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               packet in the stream.
            </param>
            <returns>
               <see langword="true" /> if the codec has read all the
               necessary packets for the stream and does not need to be
               called again, typically once the Xiph comment has been
               found. Otherwise <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packet" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="index" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The data does not conform to the specificiation for the
               codec represented by the current instance.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.GetDuration(System.Int64,System.Int64)">
            <summary>
               Computes the duration of the stream using the first and
               last granular positions of the stream.
            </summary>
            <param name="firstGranularPosition">
               A <see cref="T:System.Int64" /> value containing the first granular
               position of the stream.
            </param>
            <param name="lastGranularPosition">
               A <see cref="T:System.Int64" /> value containing the last granular
               position of the stream.
            </param>
            <returns>
               A <see cref="T:System.TimeSpan" /> value containing the duration
               of the stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.SetCommentPacket(VisioForge.Libs.TagLib.ByteVectorCollection,VisioForge.Libs.TagLib.Ogg.XiphComment)">
            <summary>
               Replaces the comment packet in a collection of packets
               with the rendered version of a Xiph comment or inserts a
               comment packet if the stream lacks one.
            </summary>
            <param name="packets">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               a collection of packets.
            </param>
            <param name="comment">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object to store the rendered
               version of in <paramref name="packets" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packets" /> or <paramref name="comment"
               /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
            <remarks>
               Always returns zero, since bitrate is variable and no
               information is stored in the Ogg header (unlike e.g. Vorbis).
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the original
               sample rate of the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.CommentData">
            <summary>
               Gets the raw Xiph comment data contained in the codec.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw Xiph
               comment or <see langword="null"/> if none was found.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.FromPacket(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Implements the <see cref="T:CodecProvider" /> delegate to
               provide support for recognizing a Opus stream from the
               header packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header packet.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec"/> object containing a codec capable
               of parsing the stream of <see langref="null" /> if the
               stream is not a Opus stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.MagicSignature(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the magic signature for a specified Opus packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a Opus
               packet.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> value containing the magic
               signature or null if the packet is invalid.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codecs.Opus.HeaderPacket">
            <summary>
               This structure represents a Opus header packet.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codecs.Theora">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> and implements <see
               cref="T:VisioForge.Libs.TagLib.IVideoCodec" /> to provide support for processing Ogg
               Theora bitstreams.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.id">
            <summary>
               Contains the file identifier.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.header">
            <summary>
               Contains the header packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.comment_data">
            <summary>
               Contains the comment data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Codecs.Theora" />.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.ReadPacket(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Reads a Ogg packet that has been encountered in the
               stream.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a packet to
               be read by the current instance.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               packet in the stream.
            </param>
            <returns>
               <see langword="true" /> if the codec has read all the
               necessary packets for the stream and does not need to be
               called again, typically once the Xiph comment has been
               found. Otherwise <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packet" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="index" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The data does not conform to the specificiation for the
               codec represented by the current instance.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.GetDuration(System.Int64,System.Int64)">
            <summary>
               Computes the duration of the stream using the first and
               last granular positions of the stream.
            </summary>
            <param name="firstGranularPosition">
               A <see cref="T:System.Int64" /> value containing the first granular
               position of the stream.
            </param>
            <param name="lastGranularPosition">
               A <see cref="T:System.Int64" /> value containing the last granular
               position of the stream.
            </param>
            <returns>
               A <see cref="T:System.TimeSpan" /> value containing the duration
               of the stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.SetCommentPacket(VisioForge.Libs.TagLib.ByteVectorCollection,VisioForge.Libs.TagLib.Ogg.XiphComment)">
            <summary>
               Replaces the comment packet in a collection of packets
               with the rendered version of a Xiph comment or inserts a
               comment packet if the stream lacks one.
            </summary>
            <param name="packets">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               a collection of packets.
            </param>
            <param name="comment">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object to store the rendered
               version of in <paramref name="packets" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packets" /> or <paramref name="comment"
               /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.VideoWidth">
            <summary>
               Gets the width of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.VideoHeight">
            <summary>
               Gets the height of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Video" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.CommentData">
            <summary>
               Gets the raw Xiph comment data contained in the codec.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw Xiph
               comment or <see langword="null"/> if none was found.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.FromPacket(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Implements the <see cref="T:CodecProvider" /> delegate to
               provide support for recognizing a Theora stream from the
               header packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header packet.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec"/> object containing a codec capable
               of parsing the stream of <see langref="null" /> if the
               stream is not a Theora stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.PacketType(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the packet type for a specified Theora packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a Theora
               packet.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the packet type or
               -1 if the packet is invalid.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.HeaderPacket">
            <summary>
               This structure represents a Theora header packet.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Theora.HeaderPacket.GranuleTime(System.Int64)">
            <summary>
               Converts an absolute granular position into a
               seconds.
            </summary>
            <param name="granularPosition">
               A <see cref="T:System.Int64" /> value containing the
              absolute granular position.
            </param>
            <returns>
               A <see cref="T:System.Double" /> value containing the time
               at <paramref name="granularPosition" /> in
               seconds.</returns>
            <remarks>
               Many thanks to the good people at
               irc://irc.freenode.net#theora for making this
               code a reality.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" /> and implements <see
               cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide support for processing Ogg
               Vorbis bitstreams.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.id">
            <summary>
               Contains the file identifier.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.header">
            <summary>
               Contains the header packet.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.comment_data">
            <summary>
               Contains the comment data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis" />.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.ReadPacket(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Reads a Ogg packet that has been encountered in the
               stream.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a packet to
               be read by the current instance.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               packet in the stream.
            </param>
            <returns>
               <see langword="true" /> if the codec has read all the
               necessary packets for the stream and does not need to be
               called again, typically once the Xiph comment has been
               found. Otherwise <see langword="false" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packet" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="index" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The data does not conform to the specificiation for the
               codec represented by the current instance.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.GetDuration(System.Int64,System.Int64)">
            <summary>
               Computes the duration of the stream using the first and
               last granular positions of the stream.
            </summary>
            <param name="firstGranularPosition">
               A <see cref="T:System.Int64" /> value containing the first granular
               position of the stream.
            </param>
            <param name="lastGranularPosition">
               A <see cref="T:System.Int64" /> value containing the last granular
               position of the stream.
            </param>
            <returns>
               A <see cref="T:System.TimeSpan" /> value containing the duration
               of the stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.SetCommentPacket(VisioForge.Libs.TagLib.ByteVectorCollection,VisioForge.Libs.TagLib.Ogg.XiphComment)">
            <summary>
               Replaces the comment packet in a collection of packets
               with the rendered version of a Xiph comment or inserts a
               comment packet if the stream lacks one.
            </summary>
            <param name="packets">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               a collection of packets.
            </param>
            <param name="comment">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object to store the rendered
               version of in <paramref name="packets" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packets" /> or <paramref name="comment"
               /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.CommentData">
            <summary>
               Gets the raw Xiph comment data contained in the codec.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw Xiph
               comment or <see langword="null"/> if none was found.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.FromPacket(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Implements the <see cref="T:CodecProvider" /> delegate to
               provide support for recognizing a Vorbis stream from the
               header packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header packet.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec"/> object containing a codec capable
               of parsing the stream of <see langref="null" /> if the
               stream is not a Vorbis stream.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.PacketType(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the packet type for a specified Vorbis packet.
            </summary>
            <param name="packet">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a Vorbis
               packet.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the packet type or
               -1 if the packet is invalid.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Codecs.Vorbis.HeaderPacket">
            <summary>
               This structure represents a Vorbis header packet.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide tagging
               and properties support for Ogg files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.File.tag">
            <summary>
              Contains the tags for the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.File.properties">
            <summary>
               Contains the media properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Ogg.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.File.ReadStreams(System.Collections.Generic.List{VisioForge.Libs.TagLib.Ogg.Page},System.Int64@)">
            <summary>
               Reads the file until all streams have finished their
               property and tagging data.
            </summary>
            <param name="pages">
               A <see cref="T:System.Collections.Generic.List`1"/>
               object to be filled with <see cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> objects as
               they are read, or <see langword="null"/> if the pages
               are not to be stored.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value reference to be updated to
               the postion of the first page not read by the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Collections.Generic.Dictionary`2"
               /> object containing stream serial numbers as the keys
               <see cref="T:VisioForge.Libs.TagLib.Ogg.Bitstream" /> objects as the values.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.File.LastPageHeader">
            <summary>
               Gets the last page header in the file.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object containing the last
               page header in the file.
            </value>
            <remarks>
               The last page header is used to determine the last
               absolute granular position of a stream so the duration
               can be calculated.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.GroupedComment">
            <summary>
               This class combines a collection of <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment"/>
               objects so that properties can be read from each but are only set
               to the first comment of the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.GroupedComment.comment_hash">
            <summary>
               Contains a mapping between stream serial numbers and
               comments.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.GroupedComment.tags">
            <summary>
               Contains comments in the order they are added.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.GroupedComment.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.GroupedComment" /> with now contents.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Comments">
            <summary>
               Gets an enumeration of the comments in the current
               instance, in the order they were added.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1"
               /> object enumerating through the <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment"
               /> objects contained in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.GroupedComment.GetComment(System.UInt32)">
            <summary>
               Gets a comment in the current instance for a specified
               stream.
            </summary>
            <param name="streamSerialNumber">
               A <see cref="T:System.UInt32" /> value containing the serial number
               of the stream of the comment to get.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment"/> with the matching serial
               number.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.GroupedComment.AddComment(System.UInt32,VisioForge.Libs.TagLib.Ogg.XiphComment)">
            <summary>
               Adds a Xiph comment to the current instance.
            </summary>
            <param name="streamSerialNumber">
               A <see cref="T:System.UInt32" /> value containing the serial number
               of the stream containing the comment.
            </param>
            <param name="comment">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object to add to the current
               instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.GroupedComment.AddComment(System.UInt32,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Adds a Xiph comment to the current instance.
            </summary>
            <param name="streamSerialNumber">
               A <see cref="T:System.UInt32" /> value containing the serial number
               of the stream containing the comment.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the raw Xiph
               comment to add to the current instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" />
               containing the tag types contained in the current
               instance.
            </value>
            <remarks>
               This value contains a bitwise combined value from all the
               child tags.
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.TagTypes" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Title" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.TitleSort">
            <summary>
               Gets and sets the sort names for the individual track title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name
               for the track title of the media described by the current 
               instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.TitleSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Subtitle" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Description" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Performers" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.PerformersRole" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtistsSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Composers" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.ComposersSort">
            <summary>
               Gets and sets the sort names for the composer of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the composer of the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ComposersSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Album" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.AlbumSort">
            <summary>
               Gets and sets the sort names for the album title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names
               for the album title of the media described by the
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AlbumSort" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Comment" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> array containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Genres" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Year" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Track" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.TrackCount" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Disc" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.DiscCount" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Lyrics" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Grouping" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-zero value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.BeatsPerMinute" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Conductor" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Copyright" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-<see
               langword="null" /> value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.DateTagged" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ArtistID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzArtistId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseGroupID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseGroupId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               ReleaseArtistID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseArtistId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               TrackID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzTrackId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               DiscID for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzDiscId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIP PUID
               for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicIpId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.AmazonId">
            <summary>
               Gets and sets the Amazon ID.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the Amazon ID
               for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.AmazonId" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               Release Status for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseStatus" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               Release Type for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseType" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz
               Release Country for the media described by the 
               current instance or null if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseCountry" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain Track Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Track Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainTrackGain" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain Peak Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Peak Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainTrackPeak" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain Album Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Album Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainAlbumGain" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain Album Peak Value of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Double" /> containing the ReplayGain Album Peak Value of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>When getting the value, the child tags are looped
               through in order and the first non-<see langword="null" />
               and non-empty value is returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.ReplayGainAlbumPeak" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               <para>When getting the value, the child comments are
               looped through in order and the first non-empty value is
               returned.</para>
               <para>When setting the value, it is stored in the first
               comment.</para>
            </remarks>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.Pictures" />
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.GroupedComment.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if all the comments tags are
                empty; otherwise <see langword="false" />.
            </value>
            <seealso cref="P:VisioForge.Libs.TagLib.Tag.IsEmpty" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.GroupedComment.Clear">
            <summary>
               Clears all of the child tags.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Page">
            <summary>
               This class provides a representation of an Ogg page.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Page.packets">
            <summary>
               Contains the packets.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Page.#ctor(VisioForge.Libs.TagLib.Ogg.PageHeader)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> with a specified header and no packets.
            </summary>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader"/> object to use as the header of
               the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Page.#ctor(VisioForge.Libs.TagLib.Ogg.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> by reading a raw Ogg page from a specified
               position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The Ogg identifier could not be found at the correct
               location.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Page.#ctor(VisioForge.Libs.TagLib.ByteVectorCollection,VisioForge.Libs.TagLib.Ogg.PageHeader)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> with a specified header and packets.
            </summary>
            <param name="packets">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               packets to use for the new instance.
            </param>
            <param name="header">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader"/> object to use as the header of
               the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="packets" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Page.Render">
            <summary>
               Renders the current instance as a raw Ogg page.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Page.Header">
            <summary>
               Gets the header of the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object that applies to the
               current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Page.Packets">
            <summary>
               Gets the packets contained in the current instance.
            </summary>
            <value>
               A <see cref="T:ByteVector[]" /> containing the packets
               contained in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.Page.Size">
            <summary>
               Gets the total size of the current instance as it
               appeared on disk.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the size of the
               page, including the header, as it appeared on disk.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Page.OverwriteSequenceNumbers(VisioForge.Libs.TagLib.Ogg.File,System.Int64,System.Collections.Generic.IDictionary{System.UInt32,System.Int32})">
            <summary>
               Overwrites all page headers in a file starting at a
               specified position, shifting the page sequence numbers
               a set amount.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.File" /> object containing the file to
               update.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               start updating.
            </param>
            <param name="shiftTable">
               A <see cref="T:System.Collections.Generic.IDictionary`2"
               /> object where the key is the serial number of the
               stream to update and the value is the amount to offset
               the page sequence numbers in the stream.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> or <paramref name="shiftTable"
               /> is <see langword="null" />.
            </exception>
            <remarks>
               When the number of pages in a stream changes, all
               subsequent pages in the stream need to have their page
               sequence number update in order to remain valid.
               Additionally, when the page sequence number changes, the
               page needs to have its checksum recomputed. This makes
               for a costly recalculation if large comment data is
               added.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.PageFlags">
            <summary>
               Indicates the special properties of a <see cref="T:VisioForge.Libs.TagLib.Ogg.Page" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageFlags.None">
            <summary>
               The page is a normal page.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageFlags.FirstPacketContinued">
            <summary>
               The first packet of the page is continued from the
               previous page.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageFlags.FirstPageOfStream">
            <summary>
               The page is the first page of the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageFlags.LastPageOfStream">
            <summary>
               The page is the last page of the stream.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.PageHeader">
            <summary>
               This structure provides a representation of an Ogg page header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageHeader.packet_sizes">
            <summary>
               Contains the sizes of the packets contained in the
               current instance.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageHeader.version">
            <summary>
               Contains the OGG version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.PageHeader.absolute_granular_position">
            <summary>
               Contains the page absolute granular postion.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.#ctor(System.UInt32,System.UInt32,VisioForge.Libs.TagLib.Ogg.PageFlags)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> with a given serial number, page
               number, and flags.
            </summary>
            <param name="streamSerialNumber">
               A <see cref="T:System.UInt32" /> value containing the serial number
               for the stream containing the page described by the new
               instance.
            </param>
            <param name="pageNumber">
               A <see cref="T:System.UInt32" /> value containing the index of the
               page described by the new instance in the stream.
            </param>
            <param name="flags">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageFlags" /> object containing the flags
               that apply to the page described by the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.#ctor(VisioForge.Libs.TagLib.Ogg.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> by reading a raw Ogg page header
               from a specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.File" /> object containing the file from
               which the contents of the new instance are to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The Ogg identifier could not be found at the correct
               location.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.#ctor(VisioForge.Libs.TagLib.Ogg.PageHeader,System.UInt32,VisioForge.Libs.TagLib.Ogg.PageFlags)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> by copying the values from another
               instance, offsetting the page number and applying new
               flags.
            </summary>
            <param name="original">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader"/> object to copy the values
               from.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> value specifying how much to offset
               the page sequence number in the new instance.
            </param>
            <param name="flags">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageFlags"/> value specifying the flags to
               use in the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.PacketSizes">
            <summary>
               Gets and sets the sizes for the packets in the page
               described by the current instance.
            </summary>
            <value>
               A <see cref="T:int[]" /> containing the packet sizes.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.Flags">
            <summary>
               Gets the flags for the page described by the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageFlags" /> value containing the page
               flags.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.AbsoluteGranularPosition">
            <summary>
               Gets the absolute granular position of the page described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int64" /> value containing the absolute
               granular position of the page.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.PageSequenceNumber">
            <summary>
               Gets the sequence number of the page described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the sequence
               number of the page.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.StreamSerialNumber">
            <summary>
               Gets the serial number of stream that the page described
               by the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the stream serial
               number.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.Size">
            <summary>
               Gets the size of the header as it appeared on disk.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the header size.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.DataSize">
            <summary>
               Gets the size of the data portion of the page described
               by the current instance as it appeared on disk.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the data size.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.Render">
            <summary>
               Renders the current instance as a raw Ogg page header.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.PageHeader.LacingValues">
            <summary>
               Gets the rendered lacing values for the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered lacing values.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.GetHashCode">
            <summary>
               Generates a hash code for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value containing the hash code for
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.Equals(System.Object)">
            <summary>
               Checks whether or not the current instance is equal to
               another object.
            </summary>
            <param name="other">
               A <see cref="T:System.Object" /> to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.Equals(VisioForge.Libs.TagLib.Ogg.PageHeader)">
            <summary>
               Checks whether or not the current instance is equal to
               another instance of <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" />.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object to compare to the
               current instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.op_Equality(VisioForge.Libs.TagLib.Ogg.PageHeader,VisioForge.Libs.TagLib.Ogg.PageHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> are equal to eachother.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               equal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.PageHeader.op_Inequality(VisioForge.Libs.TagLib.Ogg.PageHeader,VisioForge.Libs.TagLib.Ogg.PageHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> differ.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.PageHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               unequal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.Paginator">
            <summary>
               This class accepts a sequence of pages for a single Ogg stream,
               accepts changes, and produces a new sequence of pages to write to
               disk.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Paginator.packets">
            <summary>
               Contains the packets to paginate.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Paginator.first_page_header">
            <summary>
               Contains the first page header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Paginator.codec">
            <summary>
               Contains the codec to use.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.Paginator.pages_read">
            <summary>
               contains the number of pages read.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Paginator.#ctor(VisioForge.Libs.TagLib.Ogg.Codec)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.Paginator" /> for a given <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec" />
               object.
            </summary>
            <param name="codec">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.Codec"/> object to use when processing
               packets.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Paginator.AddPage(VisioForge.Libs.TagLib.Ogg.Page)">
            <summary>
               Adds the next page to the current instance.
            </summary>
            <param name="page">
               The next <see cref="T:VisioForge.Libs.TagLib.Ogg.Page" /> object found in the stream.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Paginator.SetComment(VisioForge.Libs.TagLib.Ogg.XiphComment)">
            <summary>
               Stores a Xiph comment in the codec-specific comment
               packet.
            </summary>
            <param name="comment">
               A <see cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> object to store in the
               comment packet.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Paginator.Paginate">
            <summary>
               Repaginates the pages passed into the current instance to
               handle changes made to the Xiph comment.
            </summary>
            <returns>
               A <see cref="T:Page[]" /> containing the new page
               collection.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Paginator.Paginate(System.Int32@)">
            <summary>
               Repaginates the pages passed into the current instance to
               handle changes made to the Xiph comment.
            </summary>
            <param name="change">
               A <see cref="T:System.Int32" /> value reference containing the
               the difference between the number of pages returned and
               the number of pages that were added to the class.
            </param>
            <returns>
               A <see cref="T:Page[]" /> containing the new page
               collection.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.Paginator.GetLacingValueLength(VisioForge.Libs.TagLib.ByteVectorCollection,System.Int32)">
            <summary>
               Gets the number of lacing value bytes that would be
               required for a given packet.
            </summary>
            <param name="packets">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the packet.
            </param>
            <param name="index">
               A <see cref="T:System.Int32" /> value containing the index of the
               packet to compute.
            </param>
            <returns>
               A <see cref="T:System.Int32" /> value containing the number of bytes
               needed to store the length.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Ogg.XiphComment">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> and implements <see
               cref="T:System.Collections.Generic.IEnumerable`1" /> to provide
               support for reading and writing Xiph comments.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.field_list">
            <summary>
               Contains the comment fields.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.vendor_id">
            <summary>
               Contains the vendor ID.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.SaveBeatsPerMinuteAsTempo">
            <summary>
               Saves BeatsPerMinute tag as either "Tempo" or "BPM"
               based on which was last read.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.pictures">
            <summary>
               Picture instances parsed from the fields.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.picture_fields_dirty">
            <summary>
               true if the picture fields in <see cref="F:VisioForge.Libs.TagLib.Ogg.XiphComment.field_list" />
               should be updated from the <see cref="F:VisioForge.Libs.TagLib.Ogg.XiphComment.pictures"/> array.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.PICTURE_FIELDS">
            <summary>
               Name of picture fields as defined in the norm.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Ogg.XiphComment.EMPTY_PICTURES">
            <summary>
               Cached empty pictures array.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> by reading the contents of a raw
               Xiph Comment from a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw Xiph
               comment.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.GetField(System.String)">
            <summary>
               Gets the field data for a given field identifier.
            </summary>
            <param name="key">
               A <see cref="T:System.String"/> object containing the field
               identifier.
            </param>
            <returns>
               A <see cref="T:string[]"/> containing the field data or an
               empty array if the field was not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.GetFirstField(System.String)">
            <summary>
               Gets the first field for a given field identifier.
            </summary>
            <param name="key">
               A <see cref="T:System.String"/> object containing the field
               identifier.
            </param>
            <returns>
               A <see cref="T:System.String"/> containing the field data or <see
               langword="null" /> if the field was not found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.SetField(System.String,System.UInt32,System.String)">
            <summary>
               Sets the contents of a specified field to a number.
            </summary>
            <param name="key">
               A <see cref="T:System.String"/> object containing the field
               identifier.
            </param>
            <param name="number">
               A <see cref="T:System.UInt32" /> value to set the field to.
            </param>
            <param name="format">
               A <see cref="T:System.String" /> value representing the format
               to be used to repreesent the <paramref name="number"/>.
               Default: simple decimal number ("0").
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.SetField(System.String,System.String[])">
            <summary>
               Sets the contents of a specified field to the contents of
               a <see cref="T:string[]" />.
            </summary>
            <param name="key">
               A <see cref="T:System.String"/> object containing the field
               identifier.
            </param>
            <param name="values">
               A <see cref="T:string[]"/> containing the values to store
               in the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.RemoveField(System.String)">
            <summary>
               Removes a field and all its values from the current
               instance.
            </summary>
            <param name="key">
               A <see cref="T:System.String"/> object containing the field
               identifier.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="key" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.Render(System.Boolean)">
            <summary>
               Renders the current instance as a raw Xiph comment,
               optionally adding a framing bit.
            </summary>
            <param name="addFramingBit">
               If <see langword="true" />, a framing bit will be added to
               the end of the content.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.FieldCount">
            <summary>
               Gets the number of fields contained in the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               fields in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.VendorId">
            <summary>
               Gets the vendor ID for the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the vendor ID
               for current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Populates and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Ogg.XiphComment" /> by reading the contents of a raw
               Xiph Comment from a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing a raw Xiph
               comment.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.EnsurePictureFieldsClean(System.String)">
            <summary>
               If needed, update the pictures field from the value of the
               pictures array.
            </summary>
            <param name="fieldName">
               Name of the field being queried by the user.
               If the field name is not a picture field name, no update will take place.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.ParsePictures">
            <summary>
               Parses the pictures from the COVERART and METADATA_BLOCK_PICTURE
               fields contained in the <see cref="F:VisioForge.Libs.TagLib.Ogg.XiphComment.field_list" /> variable.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.StorePictures">
            <summary>
               Stores the pictures in the pictures array in the
               METADATA_BLOCK_PICTURE field. Conversion to Flac.Picture is done
               as needed.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.ResetPicturesState(System.String)">
            <summary>
               If the given parameter represents a Xiph field containing
               picture information, clear the currently parsed pictures
               array, so it will be loaded from the field value again
               when the Pictures property is accessed.
            </summary>
            <param name="key">Name of the Xiph field being changed</param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.IsPictureField(System.String)">
            <summary>
               Returns a value indicating if a field name is a picture field.
            </summary>
            <param name="fieldName">Name of the field</param>
            <returns>
               true if the field represents a field that contains picture art data,
               false otherwise.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.GetEnumerator">
            <summary>
               Gets an enumerator for enumerating through the the field
               identifiers.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator`1" /> for
               enumerating through the field identifiers.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Xiph" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TITLE" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.TitleSort">
            <summary>
               Gets and sets the sort names for the Track Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Track Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TITLESORT"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field gives a nice/short precision to 
               the title, which is typically below the title on the
               front cover of a media.
               For example, for "Back to the future", this would be 
               "It's About Time". 
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "SUBTITLE"
               non-standard field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "DESCRIPTION"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the "ARTIST" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               This property is implemented using the "ARTISTSORT" field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               <para> This is typically usefull for movies, although the
               instrument played by each artist in a music may be of
               relevance.
               </para>
               <para>It is highly important to match each role to the 
               performers. This means that a role may be <see 
               langword="null"/> to keep the match between a
               Performers[i] and PerformersRole[i].
               </para>
            </remarks>
            <remarks>
               This property is implemented using the "ARTISTROLE" 
               non-standard field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ALBUMARTIST"
               field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               This property is implemented using the "ALBUMARTISTSORT"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMPOSER" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.ComposersSort">
            <summary>
               Gets and sets the sort names for the composers of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the composer of the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMPOSERSORT"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ALBUM" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.AlbumSort">
            <summary>
               Gets and sets the sort names for the Album Title of
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort name of 
               the Album Title of the media described by the current
               instance or null if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ALBUMSORT"
               field.
               http://musicbrainz.org/doc/PicardTagMapping
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMMENT" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "GENRE" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               This property is implemented using the "DATE" field. If a
               value greater than 9999 is set, this property will be
               cleared.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TRACKNUMER"
               field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TRACKTOTAL" field
               but is capable of reading from "TRACKNUMBER" if the total
               is stored in {track}/{count} format.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               containing the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               This property is implemented using the "DISCNUMBER"
               field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.DiscCount">
            <summary>
               Gets and sets the number of discs in the boxed set
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs in
               the boxed set containing the media represented by the
               current instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "DISCTOTAL" field
               but is capable of reading from "DISCNUMBER" if the total
               is stored in {disc}/{count} format.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "LYRICS" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "GROUPING" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "TEMPO" field.
               Since there is no official definition, this property is
               also implemented using the "BPM" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "CONDUCTOR" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "COPYRIGHT" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "DATETAGGED" 
               non-standard field. It used the the ISO 8601 standard:
               YYYY-MM-DDTHH:MM:SS
               <see url="https://wiki.xiph.org/VorbisComment#Date_and_time"/> 
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ArtistID for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ARTISTID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseGroupID for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_RELEASEGROUPID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseID for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseArtistID for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMARTISTID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               TrackID for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_TRACKID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               DiscID for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_DISCID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicIP PUID
               for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICIP_PUID" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.AmazonId">
            <summary>
               Gets and sets the Amazon ID for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the AmazonID
               for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "ASIN" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseStatus for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMSTATUS" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseType for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "MUSICBRAINZ_ALBUMTYPE" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the MusicBrainz
               ReleaseCountry for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "RELEASECOUNTRY" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               <para>This property is implemented using the COVERART
               field.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.IsCompilation">
            <summary>
               Gets and sets whether or not the album described by the
               current instance is a compilation.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               album described by the current instance is a compilation.
            </value>
            <remarks>
               This property is implemented using the "COMPILATION" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain track gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the track gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_TRACK_GAIN" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain track peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the track peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_TRACK_PEAK" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain album gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the album gain as
               per the ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_ALBUM_GAIN" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain album peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the album peak as per the
               ReplayGain specification.
            </value>
            <remarks>
               This property is implemented using the 
               "REPLAYGAIN_ALBUM_PEAK" field. Set the value to double.NaN
               to clear the field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.InitialKey">
            <summary>
               Gets and sets the initial key of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the initial key of the song.
            </value>
            <remarks>
               This property is implemented using the "INITIALKEY" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.RemixedBy">
            <summary>
               Gets and sets the remixer of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the remixer of the song.
            </value>
            <remarks>
               This property is implemented using the "REMIXEDBY" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.Publisher">
            <summary>
               Gets and sets the publisher of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the publisher of the song.
            </value>
            <remarks>
               This property is implemented using the "ORGANIZATION" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.ISRC">
            <summary>
               Gets and sets the ISRC (International Standard Recording Code) of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the ISRC of the song.
            </value>
            <remarks>
               This property is implemented using the "ISRC" field.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Ogg.XiphComment.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Ogg.XiphComment.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.PictureType">
            <summary>
               Specifies the type of content appearing in the picture.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Other">
            <summary>
               The picture is of a type other than those specified.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.FileIcon">
            <summary>
               The picture is a 32x32 PNG image that should be used when
               displaying the file in a browser.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.OtherFileIcon">
            <summary>
               The picture is of an icon different from <see
               cref="F:VisioForge.Libs.TagLib.PictureType.FileIcon" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.FrontCover">
            <summary>
               The picture is of the front cover of the album.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.BackCover">
            <summary>
               The picture is of the back cover of the album.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.LeafletPage">
            <summary>
               The picture is of a leaflet page including with the
               album.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Media">
            <summary>
               The picture is of the album or disc itself.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.LeadArtist">
            <summary>
               The picture is of the lead artist or soloist.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Artist">
            <summary>
               The picture is of the artist or performer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Conductor">
            <summary>
               The picture is of the conductor.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Band">
            <summary>
               The picture is of the band or orchestra.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Composer">
            <summary>
               The picture is of the composer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Lyricist">
            <summary>
               The picture is of the lyricist or text writer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.RecordingLocation">
            <summary>
               The picture is of the recording location or studio.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.DuringRecording">
            <summary>
               The picture is one taken during the track's recording.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.DuringPerformance">
            <summary>
               The picture is one taken during the track's performance.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.MovieScreenCapture">
            <summary>
               The picture is a capture from a movie screen.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.ColoredFish">
            <summary>
               The picture is of a large, colored fish.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.Illustration">
            <summary>
               The picture is an illustration related to the track.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.BandLogo">
            <summary>
               The picture contains the logo of the band or performer.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.PublisherLogo">
            <summary>
               The picture is the logo of the publisher or record
               company.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureType.NotAPicture">
            <summary>
               In fact, this is not a Picture, but another file-type.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.IPicture">
            <summary>
               This interface provides generic information about a picture,
               including its contents, as used by various formats.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPicture.MimeType">
            <summary>
               Gets and sets the mime-type of the picture data
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the mime-type
               of the picture data stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPicture.Type">
            <summary>
               Gets and sets the type of content visible in the picture
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> containing the type of
               content visible in the picture stored in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPicture.Filename">
            <summary>
               Gets and sets a filename of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the filename,
               with its extension, of the picture stored in the current 
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPicture.Description">
            <summary>
               Gets and sets a description of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.IPicture.Data">
            <summary>
               Gets and sets the picture data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the picture
               data stored in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Picture">
            <summary>
               This class implements <see cref="T:VisioForge.Libs.TagLib.IPicture" /> and provides
               mechanisms for loading pictures from files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Picture.lutExtensionMime">
            <summary>
               Look-Up-Table associating a file-extension to 
               a Mime-Type 
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Picture" /> with no data or values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Picture" /> by reading in the contents of a
               specified file.
            </summary>
            <param name="path">
               A <see cref="T:System.String"/> object containing the path of the
               file to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Picture" /> by reading in the contents of a
               specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> object containing
               abstraction of the file to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Picture" /> by using the contents of a <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing picture data
               to use.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.#ctor(VisioForge.Libs.TagLib.IPicture)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Picture" /> by doing a shallow copy of <see 
               cref="T:VisioForge.Libs.TagLib.IPicture" />.
            </summary>
            <param name="picture">
               A <see cref="T:VisioForge.Libs.TagLib.IPicture"/> object containing picture data
               to convert to an Picture.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.CreateFromPath(System.String)">
            <summary>
               Creates a new <see cref="T:VisioForge.Libs.TagLib.Picture" />, populating it with
               the contents of a file.
            </summary>
            <param name="filename">
               A <see cref="T:System.String" /> object containing the path to a
               file to read the picture from.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Picture" /> object containing the
               contents of the file and with a mime-type guessed from
               the file's contents.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.CreateFromFile(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Creates a new <see cref="T:VisioForge.Libs.TagLib.Picture" />, populating it with
               the contents of a file.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object containing
               the file abstraction to read the picture from.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Picture" /> object containing the
               contents of the file and with a mime-type guessed from
               the file's contents.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Picture.MimeType">
            <summary>
               Gets and sets the mime-type of the picture data
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the mime-type
               of the picture data stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Picture.Type">
            <summary>
               Gets and sets the type of content visible in the picture
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> containing the type of
               content visible in the picture stored in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Picture.Filename">
            <summary>
               Gets and sets a filename of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a fielname, with
               extension, of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Picture.Description">
            <summary>
               Gets and sets a description of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Picture.Data">
            <summary>
               Gets and sets the picture data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the picture
               data stored in the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.GetExtensionFromData(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Retrieve a mime type from raw file data by reading
               the first few bytes of the file. 
               Less accurate than <see cref="M:VisioForge.Libs.TagLib.Picture.GetExtensionFromMime(System.String)"/>.
            </summary>
            <param name="data">
               file name with extension, or just extension of a file
            </param>
            <returns>File-extension as <see cref="T:System.String"/>, or null if 
               not identified</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.GetExtensionFromMime(System.String)">
            <summary>
               Gets the file-extension that fits a mime-type. 
               More accurate than <see cref="M:VisioForge.Libs.TagLib.Picture.GetExtensionFromData(VisioForge.Libs.TagLib.ByteVector)"/>.
            </summary>
            <param name="mime">
               Mime-type as <see cref="T:System.String"/>.
            </param>
            <returns>File-extension as <see cref="T:System.String"/>, or null if 
               not identified</returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Picture.GetMimeFromExtension(System.String)">
            <summary>
               Gets the mime type of from a file-name (it's extensions). 
               If the format cannot be identified, it assumed to be a Binary file.
            </summary>
            <param name="name">
               file name with extension, or just extension of a file
            </param>
            <returns>Mime-type as <see cref="T:System.String"/></returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.PictureLazy">
            <summary>
               This class implements <see cref="T:VisioForge.Libs.TagLib.IPicture" /> and provides
               mechanisms for loading pictures from files.
               Contrary to <see cref="T:VisioForge.Libs.TagLib.Picture" />, a reference to a file
               where the picture is located can be given and the picture 
               is lazily loaded from the file, meaning that it will be 
               read from the file only when needed. This saves time and 
               memory if the picture loading is not required.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.mime_type">
            <summary>
               Contains the mime-type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.type">
            <summary>
               Contains the content type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.filename">
            <summary>
               Contains the filename.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.data">
            <summary>
               Contains the picture data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.file">
            <summary>
            Stream where the picture is located
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.stream_offset">
            <summary>
            Offset from where the picture start in the <see cref="F:VisioForge.Libs.TagLib.PictureLazy.file"/>
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.PictureLazy.stream_size">
            <summary>
            Size of the picture in the <see cref="F:VisioForge.Libs.TagLib.PictureLazy.file"/> (-1 = until end of Stream)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.PictureLazy.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.PictureLazy" /> with no data or values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.PictureLazy.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.PictureLazy" /> from a file.
               The content will be lazily loaded.
            </summary>
            <param name="path">
               A <see cref="T:System.String"/> object containing the path of the
               file to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.PictureLazy.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,System.Int64,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.PictureLazy" /> from a file abstraction.
               The content will be lazily loaded.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> object containing
               abstraction of the file to read.
            </param>
            <param name="offset">
               The position in bytes where the picture is located in the
               <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/>.
            </param>
            <param name="size">
               The size in bytes of the picture in the
               <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction"/> (default: read all).
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.PictureLazy.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.PictureLazy" /> by using the contents of a <see
               cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
               The content will not be lazily loaded.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing picture data
               to use.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.PictureLazy.#ctor(VisioForge.Libs.TagLib.IPicture)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.PictureLazy" /> by doing a shallow copy of <see 
               cref="T:VisioForge.Libs.TagLib.IPicture" />.
               The content will not be lazily loaded.
            </summary>
            <param name="picture">
               A <see cref="T:VisioForge.Libs.TagLib.IPicture"/> object containing picture data
               to convert to an Picture.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.PictureLazy.Load">
            <summary>
            Load the picture data from the file,
            if not done yet.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.PictureLazy.MimeType">
            <summary>
               Gets and sets the mime-type of the picture data
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the mime-type
               of the picture data stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.PictureLazy.Type">
            <summary>
               Gets and sets the type of content visible in the picture
               stored in the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.PictureType" /> containing the type of
               content visible in the picture stored in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.PictureLazy.Filename">
            <summary>
               Gets and sets a filename of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a fielname, with
               extension, of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.PictureLazy.Description">
            <summary>
               Gets and sets a description of the picture stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the picture stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.PictureLazy.Data">
            <summary>
               Gets and sets the picture data stored in the current
               instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the picture
               data stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.PictureLazy.IsLoaded">
            <summary>
               Gets an indication whether the picture is loaded.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Png.Codec">
            <summary>
               A Png photo codec. Contains basic photo details.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.Codec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.Codec.#ctor(System.Int32,System.Int32)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Png.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Png.Codec" /> instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Png.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Image.ImageBlockFile" /> to provide tagging
               for PNG image files.
            </summary>
            <remarks>
               This implementation is based on http://www.w3.org/TR/PNG
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.HEADER">
            <summary>
               The PNG Header every png file starts with.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.IHDR_CHUNK_TYPE">
            <summary>
               byte sequence to indicate a IHDR Chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.IEND_CHUNK_TYPE">
            <summary>
               byte sequence to indicate a IEND Chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.iTXt_CHUNK_TYPE">
            <summary>
               byte sequence to indicate a iTXt Chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.tEXt_CHUNK_TYPE">
            <summary>
               byte sequence to indicate a tEXt Chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.zTXt_CHUNK_TYPE">
            <summary>
               byte sequence to indicate a zTXt Chunk
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.XMP_CHUNK_HEADER">
            <summary>
               header of a iTXt which contains XMP data.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.height">
            <summary>
               The height of the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.width">
            <summary>
               The width of the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.properties">
            <summary>
               The Properties of the image
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Png.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Png.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Png.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Png.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the information from file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ValidateHeader">
            <summary>
               Validates the header of a PNG file. Therfore, the current position to
               read must be the start of the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadChunkLength">
            <summary>
               Reads the length of data of a chunk from the current position
            </summary>
            <returns>
               A <see cref="T:System.Int32"/> with the length of data.
            </returns>
            <remarks>
               The length is stored in a 4-byte unsigned integer in the file,
               but due to the PNG specification this value does not exceed
               2^31-1 and can therfore be safely returned as an signed integer.
               This prevents unsafe casts for using the length as parameter
               for other methods.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadChunkType">
            <summary>
               Reads the type of a chunk from the current position.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with 4 bytes containing the type of
               the Chunk.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadCRC">
            <summary>
               Reads the CRC value for a chunk from the current position.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with 4 bytes with the CRC value.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadChunkData(System.Int32)">
            <summary>
               Reads the whole Chunk data starting from the current position.
            </summary>
            <param name="data_length">
               A <see cref="T:System.Int32"/> with the length of the Chunk Data.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the Chunk Data which is read.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadTerminatedString(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32@)">
            <summary>
               Reads a null terminated string from the given data from given position.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with teh data to read the string from
            </param>
            <param name="start_index">
               A <see cref="T:System.Int32"/> with the index to start reading
            </param>
            <param name="terminator_index">
               A <see cref="T:System.Int32"/> with the index of the null byte
            </param>
            <returns>
               A <see cref="T:System.String"/> with the read string. The null byte
               is not included.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadKeyword(VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32@)">
            <summary>
               Reads a null terminated keyword from he given data from given position.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with teh data to read the string from
            </param>
            <param name="start_index">
               A <see cref="T:System.Int32"/> with the index to start reading
            </param>
            <param name="terminator_index">
               A <see cref="T:System.Int32"/> with the index of the null byte
            </param>
            <returns>
               A <see cref="T:System.String"/> with the read keyword. The null byte
               is not included.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.SkipChunkData(System.Int32)">
            <summary>
               Skips the Chunk Data and CRC Data. The read position must be at the
               beginning of the Chunk data.
            </summary>
            <param name="data_size">
               A <see cref="T:System.Int32"/> with the length of the chunk data read
               before.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadMetadata">
            <summary>
               Reads the whole metadata from file. The current position must be set to
               the first Chunk which is contained in the file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadIHDRChunk(System.Int32)">
            <summary>
               Reads the IHDR Chunk from file and extracts some image information
               like width and height. The current position must be set to the start
               of the Chunk Data.
            </summary>
            <param name="data_length">
                A <see cref="T:System.Int32"/> with the length of the Chunk Data.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadiTXtChunk(System.Int32)">
            <summary>
               Reads an iTXt Chunk from file. The current position must be set
               to the start of the Chunk Data. Such a Chunk may contain XMP data
               or translated keywords.
            </summary>
            <param name="data_length">
               A <see cref="T:System.Int32"/> with the length of the Chunk Data.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadtEXtChunk(System.Int32)">
            <summary>
               Reads an tEXt Chunk from file. The current position must be set
               to the start of the Chunk Data. Such a Chunk contains plain
               keywords.
            </summary>
            <param name="data_length">
               A <see cref="T:System.Int32"/> with the length of the Chunk Data.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ReadzTXtChunk(System.Int32)">
            <summary>
               Reads an zTXt Chunk from file. The current position must be set
               to the start of the Chunk Data. Such a Chunk contains compressed
               keywords.
            </summary>
            <param name="data_length">
               A <see cref="T:System.Int32"/> with the length of the Chunk Data.
            </param>
            <remarks>
               The Chunk may also contain compressed Exif data which is written
               by other tools. But, since the PNG specification does not support
               Exif data, we ignore it here.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.SaveMetadata">
            <summary>
               Save the metadata to file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.RenderXMPChunk">
            <summary>
               Creates a Chunk containing the XMP data.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the XMP data chunk
               or <see langword="null" /> if no XMP data is contained.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.RenderKeywordChunks">
            <summary>
               Creates a list of Chunks containing the PNG keywords
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the list of chunks, or
               or <see langword="null" /> if no PNG Keywords are contained.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Png.File.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.CheckCRC(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Checks the CRC for a Chunk.
            </summary>
            <param name="chunk_type">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> whith the Chunk type
            </param>
            <param name="chunk_data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the Chunk data.
            </param>
            <param name="crc_data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the read CRC data.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.ComputeCRC(VisioForge.Libs.TagLib.ByteVector[])">
            <summary>
               Computes a 32bit CRC for the given data.
            </summary>
            <param name="datas">
               A <see cref="T:ByteVector[]"/> with data to compute
               the CRC for.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with 4 bytes (32bit) containing the CRC.
            </returns>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.File.crc_table">
            <summary>
               Table for faster computation of CRC.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.File.BuildCRCTable">
            <summary>
               Initializes the CRC Table.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Png.PngTag">
            <summary>
               Native Png Keywords
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.TITLE">
            <summary>
               Short (one line) title or caption for image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.AUTHOR">
            <summary>
               Name of image's creator
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.DESCRIPTION">
            <summary>
               Description of image (possibly long)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.COPYRIGHT">
            <summary>
               Copyright notice
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.CREATION_TIME">
            <summary>
               Time of original image creation
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.SOFTWARE">
            <summary>
               Software used to create the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.DISCLAIMER">
            <summary>
               Legal disclaimer
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.WARNING">
            <summary>
               Warning of nature of content
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.SOURCE">
            <summary>
               Device used to create the image
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.COMMENT">
            <summary>
               Miscellaneous comment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Png.PngTag.keyword_store">
            <summary>
               Store the keywords with their values
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.PngTag.#ctor">
            <summary>
               Constructor.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.Comment">
            <summary>
               Gets or sets the comment for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the comment of the
               current instace.
            </value>
            <remarks>
               We use here both keywords Description and Comment of the
               PNG specification to store the comment.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.Creator">
            <summary>
               Gets or sets the creator of the image.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the name of the creator.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.Software">
            <summary>
               Gets or sets the software the image, the current instance
               belongs to, was created with.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the name of the
               software the current instace was created with.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.DateTime">
            <summary>
               Gets or sets the time when the image, the current instance
               belongs to, was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time the image was taken.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.PngTag.SetKeyword(System.String,System.String)">
            <summary>
               Sets a keyword of to the given value.
            </summary>
            <param name="keyword">
               A <see cref="T:System.String"/> with the keyword to set.
            </param>
            <param name="value">
               A <see cref="T:System.String"/> with the value.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.PngTag.GetKeyword(System.String)">
            <summary>
               Gets a value of a keyword.
            </summary>
            <param name="keyword">
               A <see cref="T:System.String"/> with the keyword to get the value for.
            </param>
            <returns>
               A <see cref="T:System.String"/> with the value or  <see langword="null" />
               if the keyword is not contained.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Png.PngTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Png" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.PngTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Png.PngTag.GetEnumerator">
            <summary>
               Returns an enumerator to enumerate all keywords.
            </summary>
            <returns>
               A <see cref="T:System.Collections.IEnumerator"/> to enumerate
               the keywords.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Properties">
            <summary>
               This class implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" />, <see
               cref="T:VisioForge.Libs.TagLib.IVideoCodec" /> and <see cref="T:VisioForge.Libs.TagLib.IPhotoCodec" />
               and combines codecs to create generic media properties
               for a file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Properties.codecs">
            <summary>
               Contains the codecs.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Properties.duration">
            <summary>
               Contains the duration.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Properties.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Properties" /> with no codecs or duration.
            </summary>
            <remarks>
               <para>This constructor is used when media properties are
               not read.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Properties.#ctor(System.TimeSpan,VisioForge.Libs.TagLib.ICodec[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Properties" /> with a specified duration and array
               of codecs.
            </summary>
            <param name="duration">
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media, or <see cref="F:System.TimeSpan.Zero" /> if the duration is
               to be read from the codecs.
            </param>
            <param name="codecs">
               A <see cref="T:T:ICodec[]" /> containing the codecs to be
               used in the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Properties.#ctor(System.TimeSpan,System.Collections.Generic.IEnumerable{VisioForge.Libs.TagLib.ICodec})">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Properties" /> with a specified duration and
               enumaration of codecs.
            </summary>
            <param name="duration">
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media, or <see cref="F:System.TimeSpan.Zero" /> if the duration is
               to be read from the codecs.
            </param>
            <param name="codecs">
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object containing the
               codec to be used in the new instance.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.Codecs">
            <summary>
               Gets the codecs contained in the current instance.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object containing the
               <see cref="T:VisioForge.Libs.TagLib.ICodec" /> objects contained in the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
            <remarks>
               If the duration was set in the constructor, that value is
               returned. Otherwise, the longest codec duration is used.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               A bitwise combined <see cref="P:VisioForge.Libs.TagLib.Properties.MediaTypes" /> containing
               the types of media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.Description">
            <summary>
               Gets a string description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
            <remarks>
               The value contains the descriptions of the codecs joined
               by colons.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> containing the bitrate of the audio
               represented by the current instance.
            </value>
            <remarks>
               This value is equal to the first non-zero audio bitrate.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> containing the sample rate of the
               audio represented by the current instance.
            </value>
            <remarks>
               This value is equal to the first non-zero audio sample
               rate.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
            <remarks>
               This value is equal to the first non-zero quantization.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> object containing the number of
               channels in the audio represented by the current
               instance.
            </value>
            <remarks>
               This value is equal to the first non-zero audio channel
               count.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.VideoWidth">
            <summary>
               Gets the width of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> containing the width of the video
               represented by the current instance.
            </value>
            <remarks>
               This value is equal to the first non-zero video width.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.VideoHeight">
            <summary>
               Gets the height of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> containing the height of the video
               represented by the current instance.
            </value>
            <remarks>
               This value is equal to the first non-zero video height.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.PhotoWidth">
            <summary>
               Gets the width of the photo represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               photo represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.PhotoHeight">
            <summary>
               Gets the height of the photo represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               photo represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Properties.PhotoQuality">
            <summary>
               Gets the (format specific) quality indicator of the photo
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value indicating the quality. A value
               0 means that there was no quality indicator for the format
               or the file.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.ReadOnlyByteVector">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> to provide an
               immutable version.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Int32,System.Byte)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> of a specified length filled
               with bytes of a specified value.
            </summary>
            <param name="size">
               A <see cref="T:System.Int32" /> specifying the number of bytes to
               add to the new instance.
            </param>
            <param name="value">
               A <see cref="T:System.Byte" /> specifying the value to use for the
               bytes added to the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> of a specified length filled
               with bytes with a value of zero.
            </summary>
            <param name="size">
               A <see cref="T:System.Int32" /> specifying the number of bytes to
               add to the new instance.
            </param>
            <remarks>
               <para>To specify the value to fill the new instance with,
               use <see cref="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Int32,System.Byte)" />.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> by copying the contents from
               another instance.
            </summary>
            <param name="vector">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object to copy the values
               from.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Byte[],System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> by copying a specified
               number of bytes from an array.
            </summary>
            <param name="data">
               A <see cref="T:byte[]" /> to copy values from.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> specifying the number of bytes to
               copy.
            </param>
            <remarks>
               <para>If copying the entire contents of an array, use
               <see cref="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Byte[])" />.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Byte[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> by copying the contents of a
               specified array.
            </summary>
            <param name="data">
               A <see cref="T:byte[]" /> to copy values from.
            </param>
            <remarks>
               <para>To copy only part of the array, use <see
               cref="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.#ctor(System.Byte[],System.Int32)" />.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.op_Implicit(System.Byte)~VisioForge.Libs.TagLib.ReadOnlyByteVector">
            <summary>
               Implicitly converts a <see cref="T:System.Byte" /> to a new
               <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" />.
            </summary>
            <param name="value">
               A <see cref="T:System.Byte" /> object to convert.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> equivalent to
               <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.op_Implicit(System.Byte[])~VisioForge.Libs.TagLib.ReadOnlyByteVector">
            <summary>
               Implicitly converts a <see cref="T:byte[]" /> to a new
               <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" />.
            </summary>
            <param name="value">
               A <see cref="T:byte[]" /> object to convert.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> equivalent to
               <paramref name="value" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.ReadOnlyByteVector.op_Implicit(System.String)~VisioForge.Libs.TagLib.ReadOnlyByteVector">
            <summary>
               Implicitly converts a <see cref="T:System.String" /> object to a
               new <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> using the UTF-8
               encoding.
            </summary>
            <param name="value">
               A <see cref="T:System.String" /> object to convert.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ReadOnlyByteVector" /> equivalent to
               <paramref name="value" />.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ReadOnlyByteVector.IsReadOnly">
            <summary>
               Gets whether or not the current instance is read-only.
            </summary>
            <value>
               Always <see langword="true" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.ReadOnlyByteVector.IsFixedSize">
            <summary>
               Gets whether or not the current instance is fixed size.
            </summary>
            <value>
               Always <see langword="true" />.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.AviHeaderList">
            <summary>
               This class provides support for reading an AVI header list to
               extract stream information.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.AviHeaderList.codecs">
            <summary>
               Contains the AVI codec information.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviHeaderList.#ctor(VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviHeaderList" /> by reading the contents of a raw
               RIFF list from a specified position in a <see
               cref="T:VisioForge.Libs.TagLib.File"/>.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the contents of the new instance is to be
               read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the list.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The list does not contain an AVI header or the AVI header
               is the wrong length.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeaderList.Header">
            <summary>
               Gets the header for the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Riff.AviHeader" /> object containing the header
               for the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeaderList.Codecs">
            <summary>
               Gets the codecs contained in the current instance.
            </summary>
            <value>
               A <see cref="T:ICodec[]" /> containing the codecs contained
               in the current instance.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.AviHeader">
            <summary>
               This structure provides a representation of a Microsoft
               AviMainHeader structure, minus the first 8 bytes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviHeader" /> by reading the raw structure from the
               beginning of a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 40 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader" /> by reading the raw structure
               from a specified position in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the index in
               <paramref name="data"/> at which the structure begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 40 bytes at
               <paramref name="offset" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.MicrosecondsPerFrame">
            <summary>
               Gets the number of microseconds per frame.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying number of
               microseconds per frame.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.MaxBytesPerSecond">
            <summary>
               Gets the maximum number of bytes per second.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying maximum number of
               bytes per second.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.Flags">
            <summary>
               Gets the file flags.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying file flags.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.TotalFrames">
            <summary>
               Gets the number of frames in the file.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the number of
               frames in the file.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.InitialFrames">
            <summary>
               Gets how far ahead audio is from video.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying how far ahead
               audio is from video.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.Streams">
            <summary>
               Gets the number of streams in the file.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the number of
               streams in the file.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.SuggestedBufferSize">
            <summary>
               Gets the suggested buffer size for the file.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the buffer size.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.Width">
            <summary>
               Gets the width of the video in the file.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the width of the
               video.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.Height">
            <summary>
               Gets the height of the video in the file.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the height of the
               video.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviHeader.Duration">
            <summary>
               Gets the duration of the media in the file.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> value containing the duration
               of the file.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.AviStream">
            <summary>
               This abstract class provides basic support for parsing a raw AVI
               stream list.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviStream.#ctor(VisioForge.Libs.TagLib.Riff.AviStreamHeader)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviStream" /> with a specified stream header.
            </summary>
            <param name="header">
              A <see cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader"/> object containing the
              stream's header.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviStream.ParseItem(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Parses a stream list item.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item's
               ID.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item's
               data.
            </param>
            <param name="start">
               A <see cref="T:System.UInt32" /> value specifying the index in
               <paramref name="data" /> at which the item data begins.
            </param>
            <param name="length">
               A <see cref="T:System.UInt32" /> value specifying the length of the
               item.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStream.Header">
            <summary>
               Gets the stream header.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader" /> object containing the
               header information for the stream.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStream.Codec">
            <summary>
               Gets the codec information.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.ICodec" /> object containing the codec
               information for the stream.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviStream.ParseStreamList(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Parses a raw AVI stream list and returns the stream
               information.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing raw stream
               list.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Riff.AviStream" /> object containing stream
               information.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.AviAudioStream">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Riff.AviStream" /> to provide support
               for reading audio stream data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviAudioStream.#ctor(VisioForge.Libs.TagLib.Riff.AviStreamHeader)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviAudioStream" /> with a specified stream header.
            </summary>
            <param name="header">
              A <see cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader"/> object containing the
              stream's header.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviAudioStream.ParseItem(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Parses a stream list item.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item's
               ID.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item's
               data.
            </param>
            <param name="start">
               A <see cref="T:System.UInt32" /> value specifying the index in
               <paramref name="data" /> at which the item data begins.
            </param>
            <param name="length">
               A <see cref="T:System.UInt32" /> value specifying the length of the
               item.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.AviVideoStream">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Riff.AviStream" /> to provide support
               for reading video stream data.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviVideoStream.#ctor(VisioForge.Libs.TagLib.Riff.AviStreamHeader)">
            <summary>
               Constructs and intializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviVideoStream" /> with a specified stream header.
            </summary>
            <param name="header">
              A <see cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader"/> object containing the
              stream's header.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviVideoStream.ParseItem(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector,System.Int32,System.Int32)">
            <summary>
               Parses a stream list item.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item's
               ID.
            </param>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the item's
               data.
            </param>
            <param name="start">
               A <see cref="T:System.UInt32" /> value specifying the index in
               <paramref name="data" /> at which the item data begins.
            </param>
            <param name="length">
               A <see cref="T:System.UInt32" /> value specifying the length of the
               item.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader">
            <summary>
               This structure provides a representation of a Microsoft
               AviStreamHeader structure, minus the first 8 bytes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviStreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader" /> by reading the raw structure
               from the beginning of a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 56 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.AviStreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.AviStreamHeader" /> by reading the raw structure
               from a specified position in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the index in
               <paramref name="data"/> at which the structure begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 56 bytes at
               <paramref name="offset" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Type">
            <summary>
               Gets the stream type.
            </summary>
            <value>
               A four-byte <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object specifying
               stream type.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Handler">
            <summary>
               Gets the stream handler (codec) ID.
            </summary>
            <value>
               A four-byte <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object specifying
               stream handler ID.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Flags">
            <summary>
               Gets the stream flags.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying stream flags.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Priority">
            <summary>
               Gets the stream priority.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying stream priority.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.InitialFrames">
            <summary>
               Gets how far ahead audio is from video.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying how far ahead
               audio is from video.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Scale">
            <summary>
               Gets the scale of the stream.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the scale of the
               stream.
            </value>
            <remarks>
               Dividing <see cref="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Rate"/> by <see cref="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Scale" /> gives
               the number of samples per second.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Rate">
            <summary>
               Gets the rate of the stream.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the rate of the
               stream.
            </value>
            <remarks>
               Dividing <see cref="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Rate"/> by <see cref="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Scale" /> gives
               the number of samples per second.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Start">
            <summary>
               Gets the start delay of the stream.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the start delay of
               the stream.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Length">
            <summary>
               Gets the length of the stream.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the length of the
               stream.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.SuggestedBufferSize">
            <summary>
               Gets the suggested buffer size for the stream.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the buffer size.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Quality">
            <summary>
               Gets the quality of the stream data.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the quality of the
               stream data between 0 and 10,000.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.SampleSize">
            <summary>
               Gets the sample size of the stream data.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value specifying the sample size.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Left">
            <summary>
               Gets the position at which the left of the video is to
               be displayed in the rectangle whose width is given in the
               the file's <see cref="T:VisioForge.Libs.TagLib.Riff.AviHeader"/>.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value specifying the left
               position.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Top">
            <summary>
               Gets the position at which the top of the video is to be
               displayed in the rectangle whose height is given in the
               the file's <see cref="T:VisioForge.Libs.TagLib.Riff.AviHeader"/>.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value specifying the top
               position.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Right">
            <summary>
               Gets the position at which the right of the video is to
               be displayed in the rectangle whose width is given in the
               the file's <see cref="T:VisioForge.Libs.TagLib.Riff.AviHeader"/>.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value specifying the right
               position.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.AviStreamHeader.Bottom">
            <summary>
               Gets the position at which the bottom of the video is
               to be displayed in the rectangle whose height is given in
               the file's <see cref="T:VisioForge.Libs.TagLib.Riff.AviHeader"/>.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value specifying the bottom
               position.
            </value>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader">
            <summary>
               This structure provides a representation of a Microsoft
               BitmapInfoHeader structure.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.width">
            <summary>
               Contains the video width.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.height">
            <summary>
               Contains the video height.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> by reading the raw structure
               from the beginning of a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 40 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> by reading the raw structure
               from a specified position in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the index in
               <paramref name="data"/> at which the structure begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 16 bytes at
               <paramref name="offset" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.HeaderSize">
            <summary>
               Gets the size of the structure in bytes.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               bytes in the structure.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.Planes">
            <summary>
               Gets the number of planes in the image.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the number of
               planes.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.BitCount">
            <summary>
               Gets the number of bits per pixel.
            </summary>
            <value>
               A <see cref="T:System.UInt16" /> value containing the number of
               bits per pixel, equivalent to the log base 2 of the
               maximum number of colors.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.CompressionId">
            <summary>
               Gets the compression ID for image.
            </summary>
            <value>
               A four-byte <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing
               the ID of the compression system (codec) used by the
               image.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.ImageSize">
            <summary>
               Gets the size of the image in bytes.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               bytes in the image.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.XPixelsPerMeter">
            <summary>
               Gets the horizontal resolution of the target device.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               pixels-per-meter in the hoizontal direction for the
               target device.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.YPixelsPerMeter">
            <summary>
               Gets the vertical resolution of the target device.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               pixels-per-meter in the vertical direction for the
               target device.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.ColorsUsed">
            <summary>
               Gets the number of colors in the image.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               colors.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.ImportantColors">
            <summary>
               Gets the number of colors important in displaying the
               image.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> value containing the number of
               important colors.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.VideoWidth">
            <summary>
               Gets the width of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the width of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.VideoHeight">
            <summary>
               Gets the height of the video represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the height of the
               video represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Video" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:System.TimeSpan.Zero" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.GetHashCode">
            <summary>
               Generates a hash code for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value containing the hash code for
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.Equals(System.Object)">
            <summary>
               Checks whether or not the current instance is equal to
               another object.
            </summary>
            <param name="other">
               A <see cref="T:System.Object" /> to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.Equals(VisioForge.Libs.TagLib.Riff.BitmapInfoHeader)">
            <summary>
               Checks whether or not the current instance is equal to
               another instance of <see cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" />.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> object to compare to
               the current instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.op_Equality(VisioForge.Libs.TagLib.Riff.BitmapInfoHeader,VisioForge.Libs.TagLib.Riff.BitmapInfoHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> are equal to eachother.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               equal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader.op_Inequality(VisioForge.Libs.TagLib.Riff.BitmapInfoHeader,VisioForge.Libs.TagLib.Riff.BitmapInfoHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> differ.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.BitmapInfoHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               unequal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.DivXTag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> to provide support for
               reading and writing tags stored in the DivX format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.title">
            <summary>
               Contains the title.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.artist">
            <summary>
               Contains the semicolon separated performers.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.year">
            <summary>
               Contains the 4 digit year.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.comment">
            <summary>
               Contains a comment on track.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.genre">
            <summary>
               Contains the genre index.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.extra_data">
            <summary>
               Contains the extra 6 bytes at the end of the tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.Size">
            <summary>
               The size of a DivX tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.DivXTag.FileIdentifier">
            <summary>
               The identifier used to recognize a DivX tags.
            </summary>
            <value>
               "DIVXTAG"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.DivXTag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.DivXTag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.DivXTag.#ctor(VisioForge.Libs.TagLib.Riff.File,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.DivXTag" /> by reading the contents from a
               specified position in a specified file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.File" /> object containing the file from
               which the contents of the new instance is to be read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the tag.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not contain the file identifier at the
               correct offset from the given position.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.DivXTag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.DivXTag" /> by reading the contents raw tag data
               stored in a specified <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing a raw DivX tag to
               read into the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not contain the file identifier at the
               correct offset from the given position.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.DivXTag.Render">
            <summary>
               Renders the current instance as a raw DivX tag.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               rendered tag.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.DivXTag.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Populates the current instance by parsing the contents of
               a raw DivX tag.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the
               starting with an DivX tag.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.DivXTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v1" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.DivXTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               When stored on disk, only the first 32 bytes of the
               Latin-1 encoded value will be stored. This may result in
               lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.DivXTag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               When stored on disk, only the first 28 bytes of the
               Latin-1 encoded value will be stored, minus a byte for
               each additionial performer (i.e. two performers will only
               have 27 bytes and three performers will only have 26
               bytes).This may result in lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.DivXTag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               When stored on disk, only the first 48 bytes of the
               Latin-1 encoded value will be stored. This may result in
               lost data.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.DivXTag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               Only first genre will be stored and only if it is an
               exact match for a value appearing in <see
               cref="P:VisioForge.Libs.TagLib.Genres.Video" />. All other values will
               result in the property being cleared.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.DivXTag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               Only values between 1 and 9999 will be stored, all other
               values will result in the property being zeroed.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.DivXTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.File" /> to provide
               support for reading and writing tags and properties for files
               using the RIFF file format such as AVI and Wave files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.tag">
            <summary>
             Contains all the tags of the file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.info_tag">
            <summary>
             Contains the INFO tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.mid_tag">
            <summary>
             Contains the MovieID tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.divx_tag">
            <summary>
             Contains the DivX tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.id32_tag">
            <summary>
             Contains the Id3v2 tag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.properties">
            <summary>
             Contains the media properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.File.FileIdentifier">
            <summary>
               The identifier used to recognize a RIFF files.
            </summary>
            <value>
               "RIFF"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.File.Tag">
            <summary>
               Gets a abstract representation of all tags stored in the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object representing all tags
               stored in the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.RemoveTags(VisioForge.Libs.TagLib.TagTypes)">
            <summary>
               Removes a set of tag types from the current instance.
            </summary>
            <param name="types">
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value
               containing tag types to be removed from the file.
            </param>
            <remarks>
               In order to remove all tags from a file, pass <see
               cref="F:VisioForge.Libs.TagLib.TagTypes.AllTags" /> as <paramref name="types" />.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Riff.File.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.File.Read(System.Boolean,VisioForge.Libs.TagLib.ReadStyle,System.UInt32@,System.Int64@,System.Int64@)">
            <summary>
               Reads the contents of the current instance determining
               the size of the riff data, the area the tagging is in,
               and optionally reading in the tags and media properties.
            </summary>
            <param name="read_tags">
               If <see langword="true" />, any tags found will be read
               into the current instance.
            </param>
            <param name="style">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle"/> value specifying how the media
               data is to be read into the current instance.
            </param>
            <param name="riff_size">
               A <see cref="T:System.UInt32"/> value reference to be filled with
               the size of the RIFF data as read from the file.
            </param>
            <param name="tag_start">
               A <see cref="T:System.Int64" /> value reference to be filled with
               the absolute seek position at which the tagging data
               starts.
            </param>
            <param name="tag_end">
               A <see cref="T:System.Int64" /> value reference to be filled with
               the absolute seek position at which the tagging data
               ends.
            </param>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               The file does not begin with <see cref="F:VisioForge.Libs.TagLib.Riff.File.FileIdentifier"
               />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.InfoTag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Riff.ListTag" /> to provide support for
               reading and writing standard INFO tags.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.InfoTag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.InfoTag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.InfoTag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.InfoTag" /> by reading the contents of a raw
               RIFF list stored in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing a raw RIFF list to
               read into the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.InfoTag.#ctor(VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.InfoTag" /> by reading the contents of a raw RIFF
               list from a specified position in a <see
               cref="T:VisioForge.Libs.TagLib.File"/>.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the contents of the new instance is to be
               read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the list.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.InfoTag.RenderEnclosed">
            <summary>
               Renders the current instance enclosed in a "INFO" item.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.RiffInfo" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "INAM" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ISBJ" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the "ISTR" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "IART" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "IWRI" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the non-standard
               "DIRC" (Directory) item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "ICNM" 
               (Cinematographer) non-standard item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ICMT" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "IGNR" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               This property is implemented using the "ICRD" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "IPRT" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "IFRM" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.InfoTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               This property is implemented using the "ICOP" item.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.List">
            <summary>
               This class extends <see
               cref="T:System.Collections.Generic.Dictionary`2" /> to provide
               support for reading and writing RIFF lists.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.List.string_type">
            <summary>
               Contains the <see cref="P:VisioForge.Libs.TagLib.Riff.List.StringType"/> value used for parsing
               and rendering the contents of this list.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.List" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.List" /> by reading the contents of a raw RIFF
               list stored in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing a raw RIFF list to
               read into the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.#ctor(VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.List" /> by reading the contents of a raw RIFF list
               from a specified position in a <see cref="T:VisioForge.Libs.TagLib.File"/>.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the contents of the new instance is to be
               read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the list.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.List" /> from a specified serialization info and
               streaming context.
            </summary>
            <param name="info">
               A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the
               serialized data to be used for the new instance.
            </param>
            <param name="context">
               A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the
               streaming context information for the new instance.
            </param>
            <remarks>
               This constructor is implemented because <see
               cref="T:VisioForge.Libs.TagLib.Riff.List" /> implements the <see cref="T:System.Runtime.Serialization.ISerializable"
               /> interface.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.List.StringType">
            <summary>
               Gets or sets the <see cref="P:VisioForge.Libs.TagLib.Riff.List.StringType"/> value used for parsing
               and rendering the contents of this list.
            </summary>
            <remarks>
               The value must be StringType.Latin1 or StringType.UTF8.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.Render">
            <summary>
               Renders the current instance as a raw RIFF list.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.RenderEnclosed(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Renders the current instance enclosed in an item with a
               specified ID.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the ID of
               the item to enclose the current instance in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.GetValues(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the values for a specified item in the current
               instance as a <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the values of the specified item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.GetValuesAsStrings(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the values for a specified item in the current
               instance as a <see cref="T:string[]" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the values of the
               specified item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.GetValuesAsStringCollection(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the values for a specified item in the current
               instance as a <see cref="T:VisioForge.Libs.TagLib.StringCollection" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               values of the specified item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.GetValueAsUInt(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the value for a specified item in the current
               instance as a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the first value
               with the specified ID that could be converted to an
               integer, or zero if none could be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.SetValue(VisioForge.Libs.TagLib.ByteVector,System.Collections.Generic.IEnumerable{VisioForge.Libs.TagLib.ByteVector})">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see
               cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="values">
               A <see cref="T:System.Collections.Generic.IEnumerable`1"
               /> containing the <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> objects to
               store in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.SetValue(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector[])">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see cref="T:ByteVector[]"
               />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="values">
               A <see cref="T:ByteVector[]" /> containing the values to
               store in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.SetValue(VisioForge.Libs.TagLib.ByteVector,System.UInt32)">
            <summary>
               Sets the value for a specified item in the current
               instance to the value of a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="value">
               A <see cref="T:System.UInt32" /> value to store in the specified
               item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.SetValue(VisioForge.Libs.TagLib.ByteVector,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see
               cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="values">
               A <see cref="T:System.Collections.Generic.IEnumerable`1"
               /> containing the <see cref="T:System.String"/> objects to store
               in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.SetValue(VisioForge.Libs.TagLib.ByteVector,System.String[])">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see cref="T:string[]" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="values">
               A <see cref="T:string[]" /> containing the values to store
               in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.RemoveValue(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Removes the item with the specified ID from the current
               instance.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the ID of
               the item to remove from the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.List.Parse(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Populates the current instance by reading in the contents
               of a raw RIFF list stored in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing a raw RIFF list to
               read into the current instance.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.ListTag">
            <summary>
               This abstract class extends <see cref="T:VisioForge.Libs.TagLib.Tag" /> to provide support
               for reading and writing tags stored in the RIFF list format.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.ListTag.fields">
            <summary>
               Contains the <see cref="T:VisioForge.Libs.TagLib.Riff.List" /> object.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.ListTag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.#ctor(VisioForge.Libs.TagLib.Riff.List)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.MovieIdTag" /> using a specified RIFF list.
            </summary>
            <param name="fields">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.List"/> object to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="fields" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.ListTag" /> by reading the contents of a raw
               RIFF list stored in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing a raw RIFF list to
               read into the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.#ctor(VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.ListTag" /> by reading the contents of a raw RIFF
               list from a specified position in a <see
               cref="T:VisioForge.Libs.TagLib.File" />.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the contents of the new instance is to be
               read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the list.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.ListTag.StringType">
            <summary>
               Gets or sets the <see cref="P:VisioForge.Libs.TagLib.Riff.ListTag.StringType"/> value used for parsing
               and rendering the contents of this tag.
            </summary>
            <remarks>
               The value must be StringType.Latin1 or StringType.UTF8.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.RenderEnclosed">
            <summary>
               Renders the current instance enclosed in the appropriate
               item.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.RenderEnclosed(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Renders the current instance enclosed in an item with a
               specified ID.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the ID of
               the item to enclose the current instance in.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.Render">
            <summary>
               Renders the current instance as a raw RIFF list.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.GetValues(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the values for a specified item in the current
               instance as a <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the values of the specified item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.GetValuesAsStrings(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the values for a specified item in the current
               instance as a <see cref="T:string[]" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:string[]" /> containing the values of the
               specified item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.GetValuesAsStringCollection(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the values for a specified item in the current
               instance as a <see cref="T:VisioForge.Libs.TagLib.StringCollection" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               values of the specified item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.GetValueAsUInt(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Gets the value for a specified item in the current
               instance as a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <returns>
               A <see cref="T:System.UInt32" /> value containing the first value
               with the specified ID that could be converted to an
               integer, or zero if none could be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.SetValue(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVector[])">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see cref="T:ByteVector[]"
               />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="value">
               A <see cref="T:ByteVector[]" /> containing the values to
               store in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.SetValue(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.ByteVectorCollection)">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see
               cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               the values to store in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.SetValue(VisioForge.Libs.TagLib.ByteVector,System.UInt32)">
            <summary>
               Sets the value for a specified item in the current
               instance to the value of a <see cref="T:System.UInt32"/>.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="value">
               A <see cref="T:System.UInt32" /> value to store in the specified
               item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.SetValue(VisioForge.Libs.TagLib.ByteVector,VisioForge.Libs.TagLib.StringCollection)">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="value">
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               values to store in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.SetValue(VisioForge.Libs.TagLib.ByteVector,System.String[])">
            <summary>
               Sets the value for a specified item in the current
               instance to the contents of a <see cref="T:string[]" />.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the ID of
               the item to set.
            </param>
            <param name="value">
               A <see cref="T:string[]" /> containing the values to store
               in the specified item.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.RemoveValue(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Removes the item with the specified ID from the current
               instance.
            </summary>
            <param name="id">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the ID of
               the item to remove from the current instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="id" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
               <paramref name="id" /> isn't exactly four bytes long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.ListTag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.ListTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.MovieIdTag">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Riff.ListTag" /> to provide support for
               reading and writing MovieID tags.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.MovieIdTag.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.MovieIdTag" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.MovieIdTag.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.MovieIdTag" /> by reading the contents of a raw
               RIFF list stored in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> containing a raw RIFF list to
               read into the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.MovieIdTag.#ctor(VisioForge.Libs.TagLib.File,System.Int64,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.MovieIdTag" /> by reading the contents of a raw
               RIFF list from a specified position in a <see
               cref="T:VisioForge.Libs.TagLib.File"/>.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.File" /> object containing the file
               from which the contents of the new instance is to be
               read.
            </param>
            <param name="position">
               A <see cref="T:System.Int64" /> value specify at what position to
               read the list.
            </param>
            <param name="length">
               A <see cref="T:System.Int32" /> value specifying the number of bytes
               to read.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="file" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="position" /> is less than zero or greater
               than the size of the file.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.MovieIdTag.RenderEnclosed">
            <summary>
               Renders the current instance enclosed in a "MID " item.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> object containing the rendered
               version of the current instance.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.MovieId" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "TITL" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               This property is implemented using the "IART" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               This property is implemented using the "COMM" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               This property is implemented using the "GENR" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "PRT1" item.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.MovieIdTag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album
               containing the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album containing the media represented by the current
               instance or zero if not specified.
            </value>
            <remarks>
               This property is implemented using the "PRT2" item.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx">
            <summary>
               This structure provides a representation of a Microsoft
               WaveFormatEx structure.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.WaveFormatEx.channels">
            <summary>
               Contains the number of audio channels.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Riff.WaveFormatEx.samples_per_second">
            <summary>
               Contains the number of samples per second.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.#ctor(VisioForge.Libs.TagLib.ByteVector)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> by reading the raw structure from
               the beginning of a <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 16 bytes.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int32)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> by reading the raw structure from
               a specified position in a <see cref="T:VisioForge.Libs.TagLib.ByteVector" />
               object.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the raw
               data structure.
            </param>
            <param name="offset">
               A <see cref="T:System.Int32" /> value specifying the index in
               <paramref name="data"/> at which the structure begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
               <paramref name="offset" /> is less than zero.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> contains less than 16 bytes at
               <paramref name="offset" />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.FormatTag">
            <summary>
               Gets the format tag of the audio described by the
               current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the format tag
               of the audio.
            </returns>
            <remarks>
               Format tags indicate the codec of the audio contained in
               the file and are contained in a Microsoft registry. For
               a description of the format, use <see cref="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.Description"
               />.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.AverageBytesPerSecond">
            <summary>
               Gets the average bytes per second of the audio described
               by the current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the average
               bytes per second of the audio.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.BitsPerSample">
            <summary>
               Gets the bits per sample of the audio described by the
               current instance.
            </summary>
            <returns>
               A <see cref="T:System.UInt16" /> value containing the bits per
               sample of the audio.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:System.TimeSpan.Zero" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Riff.WaveFormatEx.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.GetHashCode">
            <summary>
               Generates a hash code for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value containing the hash code for
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.Equals(System.Object)">
            <summary>
               Checks whether or not the current instance is equal to
               another object.
            </summary>
            <param name="other">
               A <see cref="T:System.Object" /> to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.Equals(VisioForge.Libs.TagLib.Riff.WaveFormatEx)">
            <summary>
               Checks whether or not the current instance is equal to
               another instance of <see cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" />.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> object to compare to the
               current instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.op_Equality(VisioForge.Libs.TagLib.Riff.WaveFormatEx,VisioForge.Libs.TagLib.Riff.WaveFormatEx)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> are equal to eachother.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               equal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Riff.WaveFormatEx.op_Inequality(VisioForge.Libs.TagLib.Riff.WaveFormatEx,VisioForge.Libs.TagLib.Riff.WaveFormatEx)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> differ.
            </summary>
            <param name="first">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> object to compare.
            </param>
            <param name="second">
               A <see cref="T:VisioForge.Libs.TagLib.Riff.WaveFormatEx" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               unequal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.StringCollection">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.ListBase`1" /> for a collection of
               <see cref="T:System.String" /> objects.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.StringCollection.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" /> with no contents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.StringCollection.#ctor(VisioForge.Libs.TagLib.StringCollection)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" /> with the contents of another
               instance.
            </summary>
            <param name="values">
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object whose values are
               to be added to the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.StringCollection.#ctor(System.String[])">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" /> with the contents of a
               specified array.
            </summary>
            <param name="values">
               A <see cref="T:string[]" /> whose values are to be added to
               the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.StringCollection.#ctor(VisioForge.Libs.TagLib.ByteVectorCollection,VisioForge.Libs.TagLib.StringType)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" /> by converting a collection of
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> objects to strings with a
               specified encoding.
            </summary>
            <param name="vectorList">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               values to convert and add to the new instance.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.StringType" /> specifying what encoding to
               use when converting the data to strings.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.StringCollection.#ctor(VisioForge.Libs.TagLib.ByteVectorCollection)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" /> by converting a collection of
               <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> objects to strings using the
               UTF-8 encoding.
            </summary>
            <param name="vectorList">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVectorCollection" /> object containing
               values to convert and add to the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.StringCollection.Split(System.String,System.String)">
            <summary>
               Splits a single <see cref="T:System.String" /> into a <see
               cref="T:VisioForge.Libs.TagLib.StringCollection" /> using a pattern.
            </summary>
            <param name="value">
               A <see cref="T:System.String" /> object to split.
            </param>
            <param name="pattern">
               A <see cref="T:System.String" /> object containing a pattern to
               use to split <paramref name="value" />.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.StringCollection" /> object containing the
               split values.
            </returns>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="value" /> or <paramref name="pattern" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="T:VisioForge.Libs.TagLib.SupportedMimeType">
             <summary>
                This class provides an attribute for listing supported mime-types
                for classes that extend <see cref="T:VisioForge.Libs.TagLib.File" />.
             </summary>
             <remarks>
                When classes that extend <see cref="T:VisioForge.Libs.TagLib.File" /> are registered with
                <see cref="M:VisioForge.Libs.TagLib.FileTypes.Register(System.Type)" />, its <see
                cref="T:VisioForge.Libs.TagLib.SupportedMimeType" /> attributes are read.
             </remarks>
             <example>
                <code lang="C#">using TagLib;
            
            [SupportedMimeType("taglib/wv", "wv")]
            [SupportedMimeType("audio/x-wavpack")]
            public class MyFile : File {
            	...
            }</code>
             </example>
        </member>
        <member name="F:VisioForge.Libs.TagLib.SupportedMimeType.mimetypes">
            <summary>
               Contains the registered <see cref="T:VisioForge.Libs.TagLib.SupportedMimeType" />
               objects.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.SupportedMimeType.#cctor">
            <summary>
               Constructs and initializes the <see
               cref="T:VisioForge.Libs.TagLib.SupportedMimeType" /> class by initializing the
               <see cref="T:VisioForge.Libs.TagLib.FileTypes" /> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.SupportedMimeType.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of the <see
               cref="T:VisioForge.Libs.TagLib.SupportedMimeType" /> attribute for a specified
               mime-type.
            </summary>
            <param name="mimetype">
               A <see cref="T:System.String" /> object containing a standard
               mime-type.
            </param>
            <remarks>
               <para>Standard practice is to use <see
               cref="M:VisioForge.Libs.TagLib.SupportedMimeType.#ctor(System.String)" /> to register standard
               mime-types, like "audio/mp3" and "video/mpeg" and to use
               <see cref="M:VisioForge.Libs.TagLib.SupportedMimeType.#ctor(System.String,System.String)" /> strictly
               to register extensions, using "taglib/ext" for the mime
               type. Eg. <c>SupportedMimeType("taglib/mp3",
               "mp3")</c>.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.SupportedMimeType.#ctor(System.String,System.String)">
            <summary>
               Constructs and initializes a new instance of the <see
               cref="T:VisioForge.Libs.TagLib.SupportedMimeType" /> attribute for a specified
               mime-type and extension.
            </summary>
            <param name="mimetype">
               A <see cref="T:System.String" /> object containing a standard
               mime-type.
            </param>
            <param name="extension">
               A <see cref="T:System.String" /> object containing a file
               extension.
            </param>
            <remarks>
               <para>Standard practice is to use <see
               cref="M:VisioForge.Libs.TagLib.SupportedMimeType.#ctor(System.String)" /> to register standard
               mime-types, like "audio/mp3" and "video/mpeg" and to use
               <see cref="M:VisioForge.Libs.TagLib.SupportedMimeType.#ctor(System.String,System.String)" /> strictly
               to register extensions, using "taglib/ext" for the mime
               type. Eg. <c>SupportedMimeType("taglib/mp3",
               "mp3")</c>.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.SupportedMimeType.MimeType">
            <summary>
               Gets the mime-type registered by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the mime-type
               registered by the current instance.
            </value>
            <remarks>
               <para>The value is in the format "generic/specific". For
               example, "video/mp4".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.SupportedMimeType.Extension">
            <summary>
               Gets the extension registered by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the extension
               registered by the current instance, or <see
               langword="null" /> if not specified.
            </value>
            <remarks>
               <para>The value is the file extension minus the preceding
               ".". For example, "m4v".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.SupportedMimeType.AllMimeTypes">
            <summary>
               Gets all the mime-types that have been registered with
               <see cref="T:VisioForge.Libs.TagLib.SupportedMimeType" />.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object containing all the
               mime-types that have been registered with <see
               cref="T:VisioForge.Libs.TagLib.SupportedMimeType" />.
            </value>
            <remarks>
               <para>These values are used by <see
               cref="M:VisioForge.Libs.TagLib.File.Create(System.String,System.String,VisioForge.Libs.TagLib.ReadStyle)" /> to
               match file types.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.SupportedMimeType.AllExtensions">
            <summary>
               Gets all the extensions that have been registered with
               <see cref="T:VisioForge.Libs.TagLib.SupportedMimeType" />.
            </summary>
            <value>
               A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object containing all the
               extensions that have been registered with <see
               cref="T:VisioForge.Libs.TagLib.SupportedMimeType" />.
            </value>
            <remarks>
               <para>These values are currently not used in file type
               recognition.</para>
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.TagTypes">
            <summary>
               Indicates the tag types used by a file.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.None">
            <summary>
               No tag types.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Xiph">
            <summary>
               Xiph's Vorbis Comment
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Id3v1">
            <summary>
               ID3v1 Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Id3v2">
            <summary>
               ID3v2 Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Ape">
            <summary>
               APE Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Apple">
            <summary>
               Apple's ILST Tag Format
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Asf">
            <summary>
               ASF Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.RiffInfo">
            <summary>
               Standard RIFF INFO List Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.MovieId">
            <summary>
               RIFF Movie ID List Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.DivX">
            <summary>
               DivX Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.FlacMetadata">
            <summary>
               FLAC Metadata Blocks Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.TiffIFD">
            <summary>
               TIFF IFD Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.XMP">
            <summary>
               XMP Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.JpegComment">
            <summary>
               Jpeg Comment Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.GifComment">
            <summary>
               Gif Comment Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Png">
            <summary>
               native PNG keywords
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.IPTCIIM">
            <summary>
            IPTC-IIM tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.AudibleMetadata">
            <summary>
               Audible Metadata Blocks Tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.Matroska">
            <summary>
            Matroska native tag
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.TagTypes.AllTags">
            <summary>
               All tag types.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tag">
            <summary>
               This abstract class provides generic access to standard tag
               features. All tag types will extend this class.
            </summary>
            <remarks>
               Because not every tag type supports the same features, it may be
               useful to check that the value is stored by re-reading the
               property after it is stored.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               A bitwise combined <see cref="T:VisioForge.Libs.TagLib.TagTypes" />
               containing the tag types contained in the current
               instance.
            </value>
            <remarks>
               For a standard tag, the value should be intuitive. For
               example, <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> objects have a
               value of <see cref="F:VisioForge.Libs.TagLib.TagTypes.Id3v2" />. However,
               for tags of type <see cref="T:VisioForge.Libs.TagLib.CombinedTag" /> may
               contain multiple or no types.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               The title is most commonly the name of the song or
               episode or a movie title. For example, "Daydream
               Believer" (a song by the Monkies), "Space Seed" (an
               episode of Star Trek), or "Harold and Kumar Go To White
               Castle" (a movie).
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.TitleSort">
            <summary>
               Gets and sets the sort name for the title of the media 
               described by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the sort name for
               the title of the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               Possibly used to sort compilations, or episodic content.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Subtitle">
            <summary>
               Gets and sets a short description, one-liner. 
               It represents the tagline of the Video/music.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field gives a nice/short precision to 
               the title, which is typically below the title on the
               front cover of a media.
               For example, for "Back to the future", this would be 
               "It's About Time". 
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Description">
            <summary>
               Gets and sets a short description of the media.
               For a music, this could be the comment that the artist
               made of its artwork. For a video, this should be a 
               short summary of the story/plot, but a spoiler. This
               should give the impression of what to expect in the
               media.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the subtitle
               the media represented by the current instance 
               or an empty array if no value is present.
            </value>
            <remarks>
               <para>This is especially relevant for a movie.
               For example, for "Back to the Future 2", this could be
               "After visiting 2015, Marty McFly must repeat his visit 
               to 1955 to prevent disastrous changes to 1985...without
               interfering with his first trip".
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Performers">
            <summary>
               Gets and sets the performers or artists who performed in
               the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the performers or
               artists who performed in the media described by the
               current instance or an empty array if no value is
               present.
            </value>
            <remarks>
               <para>This field is most commonly called "Artists" in
               Audio media, or "Actor" in Video media, and should be 
               used to represent each artist/actor appearing in the 
               media. It can be simple in the form of "The Beatles"
               or more complicated in the form of "John Lennon,
               Paul McCartney, George Harrison, Pete Best", depending
               on the preferences of the listener/spectator
               and the degree to which they organize their media
               collection.</para>
               <para>As the preference of the user may vary,
               applications should not try to limit the user in what
               choice they may make.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.PerformersSort">
            <summary>
               Gets and sets the sort names of the performers or artists
               who performed in the media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names for
               the performers or artists who performed in the media
               described by the current instance, or an empty array if
               no value is present. 
            </value>
            <remarks>
               <para>This is used to provide more control over how tracks
               are sorted. Typical uses are to skip common prefixes or
               sort by last name. For example, "The Beatles" might be
               sorted as "Beatles, The".
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.PerformersRole">
            <summary>
               Gets and sets the Charaters for a video media, or
               instruments played for music media. 
               This should match the <see cref="P:VisioForge.Libs.TagLib.Tag.Performers"/> array (for
               each person correspond one/more role). Several roles for
               the same artist/actor can be made up with semicolons. 
               For example, "Marty McFly; Marty McFly Jr.; Marlene McFly".
            </summary>
            <remarks>
               <para> This is typically usefull for movies, although the
               instrument played by each artist in a music may be of
               relevance.
               </para>
               <para>It is highly important to match each role to the 
               performers. This means that a role may be <see 
               langword="null"/> to keep the match between a
               Performers[i] and PerformersRole[i].
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.AlbumArtists">
            <summary>
               Gets and sets the band or artist who is credited in the
               creation of the entire album or collection containing the
               media described by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the band or artist
               who is credited in the creation of the entire album or
               collection containing the media described by the current
               instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field is typically optional but aids in the
               sorting of compilations or albums with multiple artists.
               For example, if an album has several artists, sorting by
               artist will split up the album and sorting by album will
               split up albums by the same artist. Having a single album
               artist for an entire album will solve this
               problem.</para>
               <para>As this value is to be used as a sorting key, it
               should be used with less variation than <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" />. Where performers can be broken into
               muliple artist it is best to stick with a single band
               name. For example, "The Beatles".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.AlbumArtistsSort">
            <summary>
               Gets and sets the sort names for the band or artist who
               is credited in the creation of the entire album or
               collection containing the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the band or artist who is credited in the creation
               of the entire album or collection containing the media
               described by the current instance or an empty array if
               no value is present.
            </value>
            <remarks>
               <para>This field is typically optional but aids in the
               sorting of compilations or albums with multiple artists.
               For example, if an album has several artists, sorting by
               artist will split up the album and sorting by album will
               split up albums by the same artist. Having a single album
               artist for an entire album will solve this
               problem.</para>
               <para>As this value is to be used as a sorting key, it
               should be used with less variation than <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" />. Where performers can be broken into
               muliple artist it is best to stick with a single band
               name. For example, "Beatles, The".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Composers">
            <summary>
               Gets and sets the composers of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the composers of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the composers, song writers,
               script writers, or persons who claim authorship of the
               media.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.ComposersSort">
            <summary>
               Gets and sets the sort names for the composers of the 
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the sort names
               for the composers of the media represented by the 
               current instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field is typically optional but aids in the
               sorting of compilations or albums with multiple Composers.
               </para>
               <para>As this value is to be used as a sorting key, it
               should be used with less variation than <see
               cref="P:VisioForge.Libs.TagLib.Tag.Composers" />. Where performers can be broken into
               muliple artist it is best to stick with a single composer.
               For example, "McCartney, Paul".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Album">
            <summary>
               Gets and sets the album of the media represented by the
               current instance. For a video media, this represent the
               collection the video belongs to. 
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the album of
               the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>This field represents the name of the album the
               media belongs to. In the case of a boxed set, it should
               be the name of the entire set rather than the individual
               disc. In case of a Serie, this should be name of the serie,
               rather than the season of a serie.</para>
               <para>For example, "Rubber Soul" (an album by the
               Beatles), "The Sopranos: Complete First Season" (a boxed
               set of TV episodes), "Back To The Future" (a 
               serie of movies/sequels), or "Game of Thrones" (a serie
               with several seasons).</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.AlbumSort">
            <summary>
               Gets and sets the sort names for the Album Title of the 
               media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the sort names
               for the Album Title of the media represented by the 
               current instance or an empty array if no value is present.
            </value>
            <remarks>
               <para>This field is typically optional but aids in the
               sorting of compilations or albums with Similar Titles.
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Comment">
            <summary>
               Gets and sets a user comment on the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing user comments
               on the media represented by the current instance or <see
               langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>This field should be used to store user notes and
               comments. There is no constraint on what text can be
               stored here, but it should not contain program
               information.</para>
               <para>Because this field contains notes that the user
               might think of while listening to the media, it may be
               useful for an application to make this field easily
               accessible, perhaps even including it in the main
               interface.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Genres">
            <summary>
               Gets and sets the genres of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the genres of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents genres that apply to the song,
               album or video. This is often used for filtering media.
               </para>
               <para>A list of common audio genres as popularized by
               ID3v1, are stored in <see cref="P:VisioForge.Libs.TagLib.Genres.Audio" />.
               Additionally, <see cref="P:VisioForge.Libs.TagLib.Genres.Video" /> contains video
               genres as used by DivX.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Year">
            <summary>
               Gets and sets the year that the media represented by the
               current instance was recorded.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the year that the media
               represented by the current instance was created or zero
               if no value is present.
            </value>
            <remarks>
               <para>Years greater than 9999 cannot be stored by most
               tagging formats and will be cleared if a higher value is
               set.</para>
               <para>Some tagging formats store higher precision dates
               which will be truncated when this property is set. Format
               specific implementations are necessary access the higher
               precision values.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Track">
            <summary>
               Gets and sets the position of the media represented by
               the current instance in its containing album, or season
               (for series).
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the position of the
               media represented by the current instance in its
               containing album or zero if not specified.
            </value>
            <remarks>
               <para>This value should be the same as is listed on the
               album cover and no more than <see cref="P:VisioForge.Libs.TagLib.Tag.TrackCount"
               /> if <see cref="P:VisioForge.Libs.TagLib.Tag.TrackCount" /> is non-zero.</para>
               <para>Most tagging formats store this as a string. To
               help sorting, a two-digit zero-filled value is used 
               in the resulting tag.</para>
               <para>For a serie, this property represents the episode
               in a season of the serie.
               </para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.TrackCount">
            <summary>
               Gets and sets the number of tracks in the album, or the
               number of episodes in a serie, of the media represented 
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of tracks in
               the album, or the number of episodes in a serie, of the 
               media represented by the current instance or zero if not
               specified.
            </value>
            <remarks>
               <para>If non-zero, this value should be at least equal to
               <see cref="P:VisioForge.Libs.TagLib.Tag.Track" />. If <see cref="P:VisioForge.Libs.TagLib.Tag.Track" /> is zero,
               this value should also be zero.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Disc">
            <summary>
               Gets and sets the number of the disc containing the media
               represented by the current instance in the boxed set. For
               a serie, this represents the season number.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of the disc
               or season of the media represented by the current instance
               in the boxed set.
            </value>
            <remarks>
               <para>This value should be the same as is number that
               appears on the disc. For example, if the disc is the
               first of three, the value should be <c>1</c>. It should
               be no more than <see cref="P:VisioForge.Libs.TagLib.Tag.DiscCount" /> if <see
               cref="P:VisioForge.Libs.TagLib.Tag.DiscCount" /> is non-zero.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.DiscCount">
            <summary>
               Gets and sets the number of discs or seasons in the 
               boxed set containing the media represented by the 
               current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of discs 
               or seasons in the boxed set containing the media 
               represented by the current instance or zero if not 
               specified.
            </value>
            <remarks>
               <para>If non-zero, this value should be at least equal to
               <see cref="P:VisioForge.Libs.TagLib.Tag.Disc" />. If <see cref="P:VisioForge.Libs.TagLib.Tag.Disc" /> is zero,
               this value should also be zero.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Lyrics">
            <summary>
               Gets and sets the lyrics or script of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the lyrics or
               script of the media represented by the current instance
               or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>This field contains a plain text representation of
               the lyrics or scripts with line breaks and whitespace
               being the only formatting marks.</para>
               <para>Some formats support more advances lyrics, like
               synchronized lyrics, but those must be accessed using
               format specific implementations.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Grouping">
            <summary>
               Gets and sets the grouping on the album which the media
               in the current instance belongs to.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the grouping on
               the album which the media in the current instance belongs
               to or <see langword="null" /> if no value is present.
            </value>
            <remarks>
               <para>This field contains a non-physical grouping to
               which the track belongs. In classical music, this could
               be a movement. It could also be parts of a series like
               "Introduction", "Closing Remarks", etc.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.BeatsPerMinute">
            <summary>
               Gets and sets the number of beats per minute in the audio
               of the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.UInt32" /> containing the number of beats per
               minute in the audio of the media represented by the
               current instance, or zero if not specified.
            </value>
            <remarks>
               <para>This field is useful for DJ's who are trying to
               match songs. It should be calculated from the audio or
               pulled from a database.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Conductor">
            <summary>
               Gets and sets the conductor or director of the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the conductor
               or director of the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>This field is most useful for organizing classical
               music and movies.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
            <remarks>
               <para>This field should be used for storing copyright
               information. It may be useful to show this information
               somewhere in the program while the media is
               playing.</para>
               <para>Players should not support editing this field, but
               media creation tools should definitely allow
               modification.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.DateTagged">
            <summary>
               Gets and sets the date at which the tag has been written.
            </summary>
            <value>
               A nullable <see cref="T:System.DateTime" /> object containing the 
               date at which the tag has been written, or <see 
               langword="null" /> if no value present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzArtistId">
            <summary>
               Gets and sets the MusicBrainz Artist ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ArtistID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz ArtistID, and is used
               to uniquely identify a particular Artist of the track.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseGroupId">
            <summary>
               Gets and sets the MusicBrainz Release Group ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ReleaseGroupID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz ReleaseGroupID, and is used
               to uniquely identify a particular Release Group to which this track belongs.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseId">
            <summary>
               Gets and sets the MusicBrainz Release ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ReleaseID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz ReleaseID, and is used
               to uniquely identify a particular Release to which this track belongs.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseArtistId">
            <summary>
               Gets and sets the MusicBrainz Release Artist ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ReleaseArtistID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz Release ArtistID, and is used
               to uniquely identify a particular Album Artist credited with the Album.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzTrackId">
            <summary>
               Gets and sets the MusicBrainz Track ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz TrackID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz TrackID, and is used
               to uniquely identify a particular track.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzDiscId">
            <summary>
               Gets and sets the MusicBrainz Disc ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz DiscID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz DiscID, and is used
               to uniquely identify the particular Released Media associated with
               this track.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicIpId">
            <summary>
               Gets and sets the MusicIP PUID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicIP PUID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicIP PUID, and is an acoustic
               fingerprint identifier.  It Identifies what this track "Sounds Like".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.AmazonId">
            <summary>
               Gets and sets the Amazon ID of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the AmazonID of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the AmazonID, and is used
               to identify the particular track or album in the Amazon Catalog.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseStatus">
            <summary>
               Gets and sets the MusicBrainz Release Status of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ReleaseStatus of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz ReleaseStatus, and is used
               to describes how 'official' a Release is.  Common Status are: Official, Promotion,
               Bootleg, Pseudo-release.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseType">
            <summary>
               Gets and sets the MusicBrainz Release Type of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ReleaseType of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz ReleaseType, that describes
               what kind of release a Release is..  Common Status are: Single, Album,
               EP, Compilation, Soundtrack, SpokenWord, Interview, Audiobook, Live, Remix,
               and Other.  Careful thought must be given when using this field to decide if
               a particular track "Is a Compilation".</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.MusicBrainzReleaseCountry">
            <summary>
               Gets and sets the MusicBrainz Release Country of the media represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the MusicBrainz ReleaseCountry of the
               media represented by the current instance or an empty
               array if no value is present.
            </value>
            <remarks>
               <para>This field represents the MusicBrainz ReleaseCountry, that describes
               the country in which an album was released.  Note that the ReleaseCountry 
               of an album is not necessarily the country in which it was produced. The 
               label itself will typically be more relevant. eg, a release on "Foo Records UK" 
               that has "Made in Austria" printed on it, will likely be a UK release.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.ReplayGainTrackGain">
            <summary>
               Gets and sets the ReplayGain track gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the track gain as
               per the ReplayGain specification.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.ReplayGainTrackPeak">
            <summary>
               Gets and sets the ReplayGain track peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the track peak as per the
               ReplayGain specification.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.ReplayGainAlbumGain">
            <summary>
               Gets and sets the ReplayGain album gain in dB.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value in dB for the album gain as
               per the ReplayGain specification.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.ReplayGainAlbumPeak">
            <summary>
               Gets and sets the ReplayGain album peak sample.
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> value for the album peak as per the
               ReplayGain specification.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.InitialKey">
            <summary>
               Gets and sets the initial key of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> value for the initial key
               of the song.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.RemixedBy">
            <summary>
               Gets and sets the remixer of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> value for the remixer
               of the song.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Publisher">
            <summary>
               Gets and sets the publisher of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> value for the publisher
               of the song.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.ISRC">
            <summary>
               Gets and sets the ISRC (International Standard Recording Code) of the song.
            </summary>
            <value>
               A <see cref="T:System.String" /> value containing the ISRC of the song.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Pictures">
            <summary>
               Gets and sets a collection of pictures associated with
               the media represented by the current instance.
            </summary>
            <value>
               A <see cref="T:IPicture[]" /> containing a collection of
               pictures associated with the media represented by the
               current instance or an empty array if none are present.
            </value>
            <remarks>
               <para>Typically, this value is used to store an album
               cover or icon to use for the file, but it is capable of
               holding any type of image, including pictures of the
               band, the recording studio, the concert, etc.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.Artists">
            <summary>
               Gets and sets the same value as <see cref="P:VisioForge.Libs.TagLib.Tag.Performers"
               />.
            </summary>
            <value>
               The same value as <see cref="P:VisioForge.Libs.TagLib.Tag.Performers" />.
            </value>
            <remarks>
               This property exists to aleviate confusion. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" /> for track artists and <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" /> for album artists.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstArtist">
            <summary>
               Gets the same value as <see cref="P:VisioForge.Libs.TagLib.Tag.FirstPerformer" />.
            </summary>
            <value>
               The same value as <see cref="P:VisioForge.Libs.TagLib.Tag.FirstPerformer" />.
            </value>
            <remarks>
               This property exists to aleviate confusion. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.FirstPerformer" /> for track artists and <see
               cref="P:VisioForge.Libs.TagLib.Tag.FirstAlbumArtist" /> for album artists.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstAlbumArtist">
            <summary>
               Gets the first value contained in <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstAlbumArtistSort">
            <summary>
               Gets the first value contained in <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtistsSort" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtistsSort" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtistsSort" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstPerformer">
            <summary>
               Gets the first value contained in <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstPerformerSort">
            <summary>
               Gets the first value contained in <see
               cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstComposerSort">
            <summary>
               Gets the first value contained in <see
               cref="P:VisioForge.Libs.TagLib.Tag.ComposersSort" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.ComposersSort" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.ComposersSort" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstComposer">
            <summary>
               Gets the first value contained in <see
               cref="P:VisioForge.Libs.TagLib.Tag.Composers" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.Composers" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Composers" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.FirstGenre">
            <summary>
               Gets the first value contained in <see cref="P:VisioForge.Libs.TagLib.Tag.Genres" />.
            </summary>
            <value>
               The first <see cref="T:System.String" /> object in <see
               cref="P:VisioForge.Libs.TagLib.Tag.Genres" />, or <see langword="null" /> is it
               contains no values.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Genres" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.JoinedArtists">
            <summary>
               Gets the same value as <see cref="P:VisioForge.Libs.TagLib.Tag.JoinedPerformers" />.
            </summary>
            <value>
               The same value as <see cref="P:VisioForge.Libs.TagLib.Tag.JoinedPerformers" />.
            </value>
            <remarks>
               This property exists to aleviate confusion. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.JoinedPerformers" /> for track artists and <see
               cref="P:VisioForge.Libs.TagLib.Tag.JoinedAlbumArtists" /> for album artists.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.JoinedAlbumArtists">
            <summary>
               Gets a semicolon separated string containing the values
               in <see cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" />.
            </summary>
            <value>
               A semicolon separated <see cref="T:System.String" /> object
               containing the values in <see cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" />.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.AlbumArtists" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.JoinedPerformers">
            <summary>
               Gets a semicolon separated string containing the values
               in <see cref="P:VisioForge.Libs.TagLib.Tag.Performers" />.
            </summary>
            <value>
               A semicolon separated <see cref="T:System.String" /> object
               containing the values in <see cref="P:VisioForge.Libs.TagLib.Tag.Performers" />.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Performers" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.JoinedPerformersSort">
            <summary>
               Gets a semicolon separated string containing the values
               in <see cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" />.
            </summary>
            <value>
               A semicolon separated <see cref="T:System.String" /> object
               containing the values in <see cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" />.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.PerformersSort" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.JoinedComposers">
            <summary>
               Gets a semicolon separated string containing the values
               in <see cref="P:VisioForge.Libs.TagLib.Tag.Composers" />.
            </summary>
            <value>
               A semicolon separated <see cref="T:System.String" /> object
               containing the values in <see cref="P:VisioForge.Libs.TagLib.Tag.Composers" />.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Composers" /> to set the value.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.JoinedGenres">
            <summary>
               Gets a semicolon separated string containing the values
               in <see cref="P:VisioForge.Libs.TagLib.Tag.Genres" />.
            </summary>
            <value>
               A semicolon separated <see cref="T:System.String" /> object
               containing the values in <see cref="P:VisioForge.Libs.TagLib.Tag.Genres" />.
            </value>
            <remarks>
               This property is provided for convenience. Use <see
               cref="P:VisioForge.Libs.TagLib.Tag.Genres" /> to set the value.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.FirstInGroup(System.String[])">
            <summary>
               Gets the first string in an array.
            </summary>
            <param name="group">
               A <see cref="T:string[]" /> to get the first string from.
            </param>
            <returns>
               The first <see cref="T:System.String" /> object contained in
               <paramref name="group" />, or <see langword="null" /> if
               the array is <see langword="null" /> or empty.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.JoinGroup(System.String[])">
            <summary>
               Joins a array of strings into a single, semicolon
               separated, string.
            </summary>
            <param name="group">
               A <see cref="T:string[]" /> containing values to combine.
            </param>
            <returns>
               A semicolon separated <see cref="T:System.String" /> object
               containing the values from <paramref name="group" />.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tag.IsEmpty">
            <summary>
               Gets whether or not the current instance is empty.
            </summary>
            <value>
               <see langword="true" /> if the current instance does not
               any values. Otherwise <see langword="false" />.
            </value>
            <remarks>
               In the default implementation, this checks the values
               supported by <see cref="T:VisioForge.Libs.TagLib.Tag" />, but it may be extended
               by child classes to support other values.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
            <remarks>
               The clearing procedure is format specific and should
               clear all values.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.SetInfoTag">
            <summary>
               Set the Tags that represent the Tagger software 
               (TagLib#) itself.
            </summary>
            <remarks>
               This is typically a method to call just before 
               saving a tag.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.Duplicate(VisioForge.Libs.TagLib.Tag,VisioForge.Libs.TagLib.Tag,System.Boolean)">
            <summary>
               Copies all standard values from one tag to another,
               optionally overwriting existing values.
            </summary>
            <param name="source">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the source tag to
               copy the values from.
            </param>
            <param name="target">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the target tag to
               copy values to.
            </param>
            <param name="overwrite">
               A <see cref="T:System.Boolean" /> specifying whether or not to copy
               values over existing one.
            </param>
            <remarks>
               <para>This method only copies the most basic values,
               those contained in this class, between tags. To copy
               format specific tags, or additional details, additional
               implementations need to be applied. For example, copying
               from one <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> to another:
               <c>foreach (TagLib.Id3v2.Frame frame in old_tag)
               new_tag.AddFrame (frame);</c></para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="source" /> or <paramref name="target" />
               is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.CopyTo(VisioForge.Libs.TagLib.Tag,System.Boolean)">
            <summary>
               Copies the values from the current instance to another
               <see cref="T:VisioForge.Libs.TagLib.Tag" />, optionally overwriting
               existing values.
            </summary>
            <param name="target">
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the target tag to
               copy values to.
            </param>
            <param name="overwrite">
               A <see cref="T:System.Boolean" /> specifying whether or not to copy
               values over existing one.
            </param>
            <remarks>
               <para>This method only copies the most basic values when
               copying between different tag formats, however, if
               <paramref name="target" /> is of the same type as the
               current instance, more advanced copying may be done.
               For example, <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> will copy
               all of its frames to another tag.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="target" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.IsNullOrLikeEmpty(System.String)">
            <summary>
               Checks if a <see cref="T:System.String" /> is <see langword="null"
               /> or contains only whitespace characters.
            </summary>
            <param name="value">
               A <see cref="T:System.String" /> object to check.
            </param>
            <returns>
               <see langword="true" /> if the string is <see
               langword="null" /> or contains only whitespace
               characters. Otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tag.IsNullOrLikeEmpty(System.String[])">
            <summary>
               Checks if all the strings in the array return <see
               langword="true" /> with <see
               cref="M:VisioForge.Libs.TagLib.Tag.IsNullOrLikeEmpty(System.String)" /> or if the array is
               <see langword="null" /> or is empty.
            </summary>
            <param name="value">
               A <see cref="T:string[]" /> to check the contents of.
            </param>
            <returns>
               <see langword="true" /> if the array is <see
               langword="null" /> or empty, or all elements return <see
               langword="true" /> for <see
               cref="M:VisioForge.Libs.TagLib.Tag.IsNullOrLikeEmpty(System.String)" />. Otherwise <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Arw.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.File" /> to provide tagging
               for ARW image files.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Arw.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Arw.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Arw.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Arw.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Arw.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Arw.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Arw.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Arw.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Arw.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Arw.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Arw.File.CreateCodec(System.Int32,System.Int32)">
            <summary>
               Create a codec that describes the photo properties.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.BaseTiffFile">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Image.File" /> to provide some basic behavior
               for Tiff based file formats.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.IsBigEndian">
            <summary>
               Indicates if the current file is in big endian or little endian format.
            </summary>
            <remarks>
               The method <see cref="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.ReadHeader"/> must be called from a subclass to
               properly initialize this property.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.Magic">
            <summary>
               The identifier used to recognize the file. This is 42 for most TIFF files.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.ReadHeader">
            <summary>
               Reads and validates the TIFF header at the current position.
            </summary>
            <returns>
               A <see cref="T:System.UInt32"/> with the offset value to the first
               IFD contained in the file.
            </returns>
            <remarks>
               This method should only be called, when the current read position is
               the beginning of the file.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.ReadIFD(System.UInt32)">
            <summary>
               Reads IFDs starting from the given offset.
            </summary>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the IFD offset to start
               reading from.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.ReadIFD(System.UInt32,System.Int32)">
            <summary>
               Reads a certain number of IFDs starting from the given offset.
            </summary>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the IFD offset to start
               reading from.
            </param>
            <param name="ifd_count">
               A <see cref="T:System.Int32"/> with the number of IFDs to read.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.CreateIFDReader(VisioForge.Libs.TagLib.Tiff.BaseTiffFile,System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Creates an IFD reader to parse the file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.File"/> to read from.
            </param>
            <param name="is_bigendian">
                A <see cref="T:System.Boolean"/>, it must be true, if the data of the IFD should be
                read as bigendian, otherwise false.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> that will be populated.
            </param>
            <param name="base_offset">
                A <see cref="T:System.Int64"/> value describing the base were the IFD offsets
                refer to. E.g. in Jpegs the IFD are located in an Segment and the offsets
                inside the IFD refer from the beginning of this segment. So <paramref
                name="base_offset"/> must contain the beginning of the segment.
            </param>
            <param name="ifd_offset">
                A <see cref="T:System.UInt32"/> value with the beginning of the IFD relative to
                <paramref name="base_offset"/>.
            </param>
            <param name="max_offset">
            	A <see cref="T:System.UInt32"/> value with maximal possible offset. This is to limit
                the size of the possible data;
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.BaseTiffFile.RenderHeader(System.UInt32)">
            <summary>
               Renders a TIFF header with the given offset to the first IFD.
               The returned data has length 8.
            </summary>
            <param name="first_ifd_offset">
               A <see cref="T:System.UInt32"/> with the offset to the first IFD
               to be included in the header.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector"/> with the rendered header of length 8.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Codec">
            <summary>
               A TIFF photo codec. Contains basic photo details.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Codec.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Codec.#ctor(System.Int32,System.Int32)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Codec.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
               Constructs a new <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> with the given width
               and height.
            </summary>
            <param name="width">
               The width of the photo.
            </param>
            <param name="height">
               The height of the photo.
            </param>
            <param name="description">
               The description of the photo type.
            </param>
            <returns>
               A new <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Cr2.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.BaseTiffFile" /> to provide tagging
               for CR2 image files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Tiff.Cr2.File.properties">
            <summary>
               The Properties of the image
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Cr2.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Cr2.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Cr2.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Cr2.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Cr2.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Cr2.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the information from file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.ReadFile">
            <summary>
               Parses the CR2 file
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.ReadAdditionalCR2Header">
            <summary>
              Reads and validates the CR2 header started at the current position.
            </summary>
            <returns>
               A <see cref="T:System.UInt32"/> with the offset to the IFD with the RAW data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Cr2.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Tiff.Cr2.File.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Dng.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.File" /> to provide tagging
               for DNG image files.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Dng.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Dng.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Dng.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Dng.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Dng.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Dng.File.CreateCodec(System.Int32,System.Int32)">
            <summary>
               Create a codec that describes the photo properties.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.BaseTiffFile" /> to provide tagging
               and properties support for Tiff files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Tiff.File.properties">
            <summary>
               Contains the media properties.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.WriteFile">
            <summary>
               Render the whole file and write it back.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.UpdateTags(VisioForge.Libs.TagLib.IFD.IFDTag)">
            <summary>
               Update the XMP stored in the Tiff IFD
            </summary>
            <param name="exif">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDTag"/> The Tiff IFD to update the entries
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Tiff.File.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.File.CreateCodec(System.Int32,System.Int32)">
            <summary>
               Create a codec that describes the photo properties.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Nef.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.File" /> to provide tagging
               for NEF image files.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Nef.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Nef.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Nef.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Nef.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Nef.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Nef.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Nef.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Nef.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Nef.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Nef.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Nef.File.CreateCodec(System.Int32,System.Int32)">
            <summary>
               Create a codec that describes the photo properties.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Pef.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.BaseTiffFile" /> to provide tagging
               for PEF image files.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Pef.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Pef.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Pef.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Pef.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Pef.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Pef.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Pef.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Pef.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Pef.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Pef.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Pef.File.CreateCodec(System.Int32,System.Int32)">
            <summary>
               Create a codec that describes the photo properties.
            </summary>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Codec" /> object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Rw2.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.Tiff.BaseTiffFile" /> to provide tagging
               for RW2 image files.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Tiff.Rw2.File.properties">
            <summary>
               The Properties of the image
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Rw2.File.Properties">
            <summary>
               Gets the media properties of the file represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object containing the
               media properties of the file represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Rw2.File.Writeable">
            <summary>
               Indicates if tags can be written back to the current file or not
            </summary>
            <value>
               A <see cref="T:System.Boolean" /> which is true if tags can be written to the
               current file, otherwise false.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Rw2.File.JpgFromRaw">
            <summary>
                The JPEG file that's embedded in the RAW file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Rw2.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Rw2.File" /> for a specified path in the local file
               system.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Rw2.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.Tiff.Rw2.File" /> for a specified file abstraction.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.Save">
            <summary>
               Saves the changes made in the current instance to the
               file it represents.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.Read(VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the information from file with a specified read style.
            </summary>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.ReadFile">
            <summary>
               Parses the RW2 file
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.ReadAdditionalRW2Header">
            <summary>
              Reads and validates the RW2 header started at the current position.
            </summary>
            <returns>
               A <see cref="T:System.UInt32"/> with the offset to the IFD with the RAW data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.ExtractProperties">
            <summary>
               Attempts to extract the media properties of the main
               photo.
            </summary>
            <returns>
               A <see cref="P:VisioForge.Libs.TagLib.Tiff.Rw2.File.Properties" /> object with a best effort guess
               at the right values. When no guess at all can be made,
               <see langword="null" /> is returned.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.File.CreateIFDReader(VisioForge.Libs.TagLib.Tiff.BaseTiffFile,System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Creates an IFD reader to parse the file.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Rw2.File"/> to read from.
            </param>
            <param name="is_bigendian">
                A <see cref="T:System.Boolean"/>, it must be true, if the data of the IFD should be
                read as bigendian, otherwise false.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> that will be populated.
            </param>
            <param name="base_offset">
                A <see cref="T:System.Int64"/> value describing the base were the IFD offsets
                refer to. E.g. in Jpegs the IFD are located in an Segment and the offsets
                inside the IFD refer from the beginning of this segment. So <paramref
                name="base_offset"/> must contain the beginning of the segment.
            </param>
            <param name="ifd_offset">
                A <see cref="T:System.UInt32"/> value with the beginning of the IFD relative to
                <paramref name="base_offset"/>.
            </param>
            <param name="max_offset">
            	A <see cref="T:System.UInt32"/> value with maximal possible offset. This is to limit
                the size of the possible data;
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Rw2.IFDReader">
            <summary>
                Panasonic Rw2-specific IFD reader
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.IFDReader.#ctor(VisioForge.Libs.TagLib.Tiff.BaseTiffFile,System.Boolean,VisioForge.Libs.TagLib.IFD.IFDStructure,System.Int64,System.UInt32,System.UInt32)">
            <summary>
               Constructor. Reads an IFD from given file, using the given endianness.
            </summary>
            <param name="file">
               A <see cref="T:VisioForge.Libs.TagLib.Tiff.Rw2.File"/> to read from.
            </param>
            <param name="is_bigendian">
                A <see cref="T:System.Boolean"/>, it must be true, if the data of the IFD should be
                read as bigendian, otherwise false.
            </param>
            <param name="structure">
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDStructure"/> that will be populated.
            </param>
            <param name="base_offset">
                A <see cref="T:System.Int64"/> value describing the base were the IFD offsets
                refer to. E.g. in Jpegs the IFD are located in an Segment and the offsets
                inside the IFD refer from the beginning of this segment. So <paramref
                name="base_offset"/> must contain the beginning of the segment.
            </param>
            <param name="ifd_offset">
                A <see cref="T:System.UInt32"/> value with the beginning of the IFD relative to
                <paramref name="base_offset"/>.
            </param>
            <param name="max_offset">
            	A <see cref="T:System.UInt32"/> value with maximal possible offset. This is to limit
                the size of the possible data;
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Tiff.Rw2.IFDReader.ParseIFDEntry(System.UInt16,System.UInt16,System.UInt32,System.Int64,System.UInt32)">
            <summary>
               Try to parse the given IFD entry, used to discover format-specific entries.
            </summary>
            <param name="tag">
               A <see cref="T:System.UInt16"/> with the tag of the entry.
            </param>
            <param name="type">
               A <see cref="T:System.UInt16"/> with the type of the entry.
            </param>
            <param name="count">
               A <see cref="T:System.UInt32"/> with the data count of the entry.
            </param>
            <param name="base_offset">
               A <see cref="T:System.Int64"/> with the base offset which every offsets in the
               IFD are relative to.
            </param>
            <param name="offset">
               A <see cref="T:System.UInt32"/> with the offset of the entry.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.IFD.IFDEntry"/> with the given parameters, or null if none was parsed, after
               which the normal TIFF parsing is used.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Tiff.Rw2.IFDTag">
            <summary>
               Handles the weird structure of Panasonic metadata.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Rw2.IFDTag.ISOSpeedRatings">
            <summary>
               Gets the ISO speed the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the ISO speed as defined in ISO 12232.
            </value>
            <remarks>
               <para>Panasonic stores these in a somewhat unstandard location.</para>
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Tiff.Rw2.IFDTag.FocalLengthIn35mmFilm">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with, assuming a 35mm film camera.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in 35mm equivalent in millimeters.
            </value>
            <remarks>
               <para>Panasonic stores these in a somewhat unstandard location.</para>
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.UnsupportedFormatException">
             <summary>
                This class extends <see cref="T:System.Exception" /> and is used to
                indicate that a file or tag is stored in an unsupported format
                and cannot be read or written by the current implementation.
             </summary>
             <example>
                <para>Catching an exception when creating a <see
                cref="T:VisioForge.Libs.TagLib.File" />.</para>
                <code lang="C#">
             using System;
             using TagLib;
            
             public class ExceptionTest
             {
             	public static void Main ()
             	{
             		try {
             			File file = File.Create ("myfile.flv"); // Not supported, YET!
             		} catch (UnsupportedFormatException e) {
             			Console.WriteLine ("That file format is not supported: {0}", e.ToString ());
             		}
            	}
             }
                </code>
                <code lang="C++">
             #using &lt;System.dll>
             #using &lt;taglib-sharp.dll>
             
             using System;
             using TagLib;
            
             void main ()
             {
             	try {
             		File file = File::Create ("myfile.flv"); // Not supported, YET!
             	} catch (UnsupportedFormatException^ e) {
             		Console::WriteLine ("That file format is not supported: {0}", e);
             	}
             }
                </code>
                <code lang="VB">
             Imports System
             Imports TagLib
            
             Public Class ExceptionTest
             	Public Shared Sub Main ()
             		Try
             			file As File = File.Create ("myfile.flv") ' Not supported, YET!
             		Catch e As UnsupportedFormatException
             			Console.WriteLine ("That file format is not supported: {0}", e.ToString ());
             		End Try
            	End Sub
             End Class
                </code>
                <code lang="Boo">
             import System
             import TagLib
            
             try:
             	file As File = File.Create ("myfile.flv") # Not supported, YET!
             catch e as UnsupportedFormatException:
             	Console.WriteLine ("That file format is not supported: {0}", e.ToString ());
                </code>
             </example>
        </member>
        <member name="M:VisioForge.Libs.TagLib.UnsupportedFormatException.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException" /> with a specified
               message.
            </summary>
            <param name="message">
               A <see cref="T:System.String" /> containing a message explaining
               the reason for the exception.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.UnsupportedFormatException.#ctor">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException" /> with the default
               values.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.UnsupportedFormatException.#ctor(System.String,System.Exception)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException" /> with a specified
               message containing a specified exception.
            </summary>
            <param name="message">
               A <see cref="T:System.String" /> containing a message explaining
               the reason for the exception.
            </param>
            <param name="innerException">
               A <see cref="T:System.Exception" /> object to be contained in the
               new exception. For example, previously caught exception.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.UnsupportedFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException" /> from a specified
               serialization info and streaming context.
            </summary>
            <param name="info">
               A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the
               serialized data to be used for the new instance.
            </param>
            <param name="context">
               A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the
               streaming context information for the new instance.
            </param>
            <remarks>
               This constructor is implemented because <see
               cref="T:VisioForge.Libs.TagLib.UnsupportedFormatException" /> implements the <see
               cref="T:System.Runtime.Serialization.ISerializable" /> interface.
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.TagLib.WavPack.File">
            <summary>
               This class extends <see cref="T:VisioForge.Libs.TagLib.NonContainer.File" /> to
               provide tagging and properties support for WavPack files.
            </summary>
            <remarks>
               A <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added automatically to
               any file that doesn't contain one. This change does not effect
               the file and can be reversed using the following method:
               <code>file.RemoveTags (file.TagTypes &amp; ~file.TagTypesOnDisk);</code>
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.File.header_block">
            <summary>
               Contains the block with the audio header.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.#ctor(System.String,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.File" /> for a specified path in the local file
               system and specified read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.#ctor(System.String)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.File" /> for a specified path in the local file
               system with an average read style.
            </summary>
            <param name="path">
               A <see cref="T:System.String" /> object containing the path of the
               file to use in the new instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="path" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.File" /> for a specified file abstraction and
               specified read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.#ctor(VisioForge.Libs.TagLib.File.IFileAbstraction)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.File" /> for a specified file abstraction with an
               average read style.
            </summary>
            <param name="abstraction">
               A <see cref="T:VisioForge.Libs.TagLib.File.IFileAbstraction" /> object to use when
               reading from and writing to the file.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="abstraction" /> is <see langword="null"
               />.
            </exception>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.GetTag(VisioForge.Libs.TagLib.TagTypes,System.Boolean)">
            <summary>
               Gets a tag of a specified type from the current instance,
               optionally creating a new tag if possible.
            </summary>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.TagTypes" /> value indicating the
               type of tag to read.
            </param>
            <param name="create">
               A <see cref="T:System.Boolean" /> value specifying whether or not to
               try and create the tag if one is not found.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Tag" /> object containing the tag that was
               found in or added to the current instance. If no
               matching tag was found and none was created, <see
               langword="null" /> is returned.
            </returns>
            <remarks>
               If a <see cref="T:VisioForge.Libs.TagLib.Id3v2.Tag" /> is added to the
               current instance, it will be placed at the start of the
               file. On the other hand, <see cref="T:VisioForge.Libs.TagLib.Id3v1.Tag" />
               <see cref="T:VisioForge.Libs.TagLib.Ape.Tag" /> will be added to the end of
               the file. All other tag types will be ignored.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.ReadStart(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the start of the
               file.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.ReadEnd(System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads format specific information at the end of the
               file.
            </summary>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.File.ReadProperties(System.Int64,System.Int64,VisioForge.Libs.TagLib.ReadStyle)">
            <summary>
               Reads the audio properties from the file represented by
               the current instance.
            </summary>
            <param name="start">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the tags end and the media data begins.
            </param>
            <param name="end">
               A <see cref="T:System.Int64" /> value containing the seek position
               at which the media data ends and the tags begin.
            </param>
            <param name="propertiesStyle">
               A <see cref="T:VisioForge.Libs.TagLib.ReadStyle" /> value specifying at what level
               of accuracy to read the media properties, or <see
               cref="F:VisioForge.Libs.TagLib.ReadStyle.None" /> to ignore the properties.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Properties" /> object describing the
               media properties of the file represented by the current
               instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.WavPack.StreamHeader">
            <summary>
               This struct implements <see cref="T:VisioForge.Libs.TagLib.IAudioCodec" /> to provide
               support for reading WavPack audio properties.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.stream_length">
            <summary>
               Contains the number of bytes in the stream.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.version">
            <summary>
               Contains the WavPack version.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.flags">
            <summary>
               Contains the flags.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.samples">
            <summary>
               Contains the sample count.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.Size">
            <summary>
               The size of a WavPack header.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.FileIdentifier">
            <summary>
               The identifier used to recognize a WavPack file.
            </summary>
            <value>
               "wvpk"
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.StreamHeader.#ctor(VisioForge.Libs.TagLib.ByteVector,System.Int64)">
            <summary>
               Constructs and initializes a new instance of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> for a specified header block and
               stream length.
            </summary>
            <param name="data">
               A <see cref="T:VisioForge.Libs.TagLib.ByteVector" /> object containing the stream
               header data.
            </param>
            <param name="streamLength">
               A <see cref="T:System.Int64" /> value containing the length of the
               WavPack stream in bytes.
            </param>
            <exception cref="T:System.ArgumentNullException">
               <paramref name="data" /> is <see langword="null" />.
            </exception>
            <exception cref="T:VisioForge.Libs.TagLib.CorruptFileException">
               <paramref name="data" /> does not begin with <see
               cref="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.FileIdentifier" /> or is less than <see cref="F:VisioForge.Libs.TagLib.WavPack.StreamHeader.Size"
               /> bytes long.
            </exception>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.Duration">
            <summary>
               Gets the duration of the media represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.TimeSpan" /> containing the duration of the
               media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.MediaTypes">
            <summary>
               Gets the types of media represented by the current
               instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.MediaTypes.Audio" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.Description">
            <summary>
               Gets a text description of the media represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing a description
               of the media represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.AudioBitrate">
            <summary>
               Gets the bitrate of the audio represented by the current
               instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing a bitrate of the
               audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.AudioSampleRate">
            <summary>
               Gets the sample rate of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the sample rate of
               the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.AudioChannels">
            <summary>
               Gets the number of channels in the audio represented by
               the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of
               channels in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.Version">
            <summary>
               Gets the WavPack version of the audio represented by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the WavPack version
               of the audio represented by the current instance.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.WavPack.StreamHeader.BitsPerSample">
            <summary>
               Gets the number of bits per sample in the audio
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Int32" /> value containing the number of bits
               per sample in the audio represented by the current
               instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.StreamHeader.GetHashCode">
            <summary>
               Generates a hash code for the current instance.
            </summary>
            <returns>
               A <see cref="T:System.Int32" /> value containing the hash code for
               the current instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.StreamHeader.Equals(System.Object)">
            <summary>
               Checks whether or not the current instance is equal to
               another object.
            </summary>
            <param name="other">
               A <see cref="T:System.Object" /> to compare to the current
               instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.StreamHeader.Equals(VisioForge.Libs.TagLib.WavPack.StreamHeader)">
            <summary>
               Checks whether or not the current instance is equal to
               another instance of <see cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" />.
            </summary>
            <param name="other">
               A <see cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> object to compare to the
               current instance.
            </param>
            <returns>
               A <see cref="T:System.Boolean" /> value indicating whether or not the
               current instance is equal to <paramref name="other" />.
            </returns>
            <seealso cref="M:System.IEquatable`1.Equals" />
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.StreamHeader.op_Equality(VisioForge.Libs.TagLib.WavPack.StreamHeader,VisioForge.Libs.TagLib.WavPack.StreamHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> are equal to eachother.
            </summary>
            <param name="first">
               The first <see cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> object to compare.
            </param>
            <param name="second">
               The second <see cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               equal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.WavPack.StreamHeader.op_Inequality(VisioForge.Libs.TagLib.WavPack.StreamHeader,VisioForge.Libs.TagLib.WavPack.StreamHeader)">
            <summary>
               Gets whether or not two instances of <see
               cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> are unequal to eachother.
            </summary>
            <param name="first">
               The first <see cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> object to compare.
            </param>
            <param name="second">
               The second <see cref="T:VisioForge.Libs.TagLib.WavPack.StreamHeader" /> object to compare.
            </param>
            <returns>
               <see langword="true" /> if <paramref name="first" /> is
               unequal to <paramref name="second" />. Otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Xmp.XmpNode">
            <summary>
               An <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> represents a node in the XMP document.
               This is any valid XMP element.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNode.children">
            <value>
               The children of the current node
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNode.qualifiers">
            <value>
               The qualifiers of the current node
            </value>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNode.name">
            <value>
               The name of the current node
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.Namespace">
            <value>
               The namespace the current instance belongs to
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.Name">
            <value>
               The name of the current node instance
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.Value">
            <value>
               The text value of the current node
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.Type">
            <value>
               The type of the current node
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.QualifierCount">
            <value>
               The number of qualifiers of the current instance
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.Children">
            <value>
               The children of the current instance.
            </value>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.#ctor(System.String,System.String)">
            <summary>
               Constructor.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.#ctor(System.String,System.String,System.String)">
            <summary>
               Constructor.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the new instance.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the new instance.
            </param>
            <param name="value">
               A <see cref="T:System.String"/> with the txt value of the new instance.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.AddChild(VisioForge.Libs.TagLib.Xmp.XmpNode)">
            <summary>
               Adds a node as child of the current node
            </summary>
            <param name="node">
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> to be add as child
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.RemoveChild(VisioForge.Libs.TagLib.Xmp.XmpNode)">
            <summary>
               Removes the given node as child of the current instance
            </summary>
            <param name="node">
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> to remove as child
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.GetChild(System.String,System.String)">
            <summary>
               Get a named child from the current node
            </summary>
            <param name="ns">
               The namespace of the child node.
            </param>
            <param name="name">
               The name of the child node.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> with the given name and namespace.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.AddQualifier(VisioForge.Libs.TagLib.Xmp.XmpNode)">
            <summary>
               Adds a node as qualifier of the current instance
            </summary>
            <param name="node">
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> to add as qualifier
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.GetQualifier(System.String,System.String)">
            <summary>
               Returns the qualifier associated with the given namespace <paramref name="ns"/>
               and name <paramref name="name"/>
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the qualifier
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the qualifier
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> with the qualifier
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.Dump">
            <summary>
               Print a debug output of the node.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.Accept(VisioForge.Libs.TagLib.Xmp.XmpNodeVisitor)">
            <summary>
               Calls the Visitor for this node and every child node.
            </summary>
            <param name="visitor">
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNodeVisitor"/> to access the node and the children.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNode.RenderInto(System.Xml.XmlNode)">
            <summary>
               Renders the current instance as child of the given node to the
               given <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="parent">
               A <see cref="T:System.Xml.XmlNode"/> to render the current instance as child of.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.IsReallySimpleType">
            <summary>
               Is this a node that we can transform into an attribute of the
               parent node? Yes if it has no qualifiers or children, nor is
               it part of a list.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpNode.IsRootNode">
            <summary>
               Is this the root node of the tree?
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Xmp.XmpNodeType">
            <summary>
               Denotes the type of a node.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNodeType.Simple">
            <summary>
               Unstructured (simple) value node.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNodeType.Struct">
            <summary>
               Structured value node.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNodeType.Seq">
            <summary>
               Ordered array.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNodeType.Alt">
            <summary>
               Language alternative.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpNodeType.Bag">
            <summary>
               Unordered structured value.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Xmp.XmpNodeVisitor">
            <summary>
               A visitor that walks the XMP node tree. This can be used to
               perform cleanups of XMP data. See the Visitor pattern for
               more info if you don't know how to use this.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpNodeVisitor.Visit(VisioForge.Libs.TagLib.Xmp.XmpNode)">
            <summary>
               Visit an <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode" />.
            </summary>
            <param name="node">
               The <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode" /> that is being visited.
            </param>
        </member>
        <member name="T:VisioForge.Libs.TagLib.Xmp.XmpTag">
            <summary>
               Holds XMP (Extensible Metadata Platform) metadata.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.ADOBE_X_NS">
            <summary>
               Adobe namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.CRS_NS">
            <summary>
               Camera Raw Settings namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.DC_NS">
            <summary>
               Dublin Core namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.EXIF_NS">
            <summary>
               Exif namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.EXIF_AUX_NS">
            <summary>
               Exif aux namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.JOB_NS">
            <summary>
               JOB namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.MS_PHOTO_NS">
            <summary>
               Microsoft Photo namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.PHOTOSHOP_NS">
            <summary>
               Photoshop namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.PRISM_NS">
            <summary>
               Prism namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.RDF_NS">
            <summary>
               RDF namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.STDIM_NS">
            <summary>
               STDIM namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.TIFF_NS">
            <summary>
               TIFF namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XAP_NS">
            <summary>
               XAP (XMP's previous name) namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XAP_BJ_NS">
            <summary>
               XAP bj namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XAP_MM_NS">
            <summary>
               XAP mm namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XAP_RIGHTS_NS">
            <summary>
               XAP rights namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XML_NS">
            <summary>
               XML namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XMLNS_NS">
            <summary>
               XMLNS namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.XMPTG_NS">
            <summary>
               XMP TPg (XMP Paged-Text) namespace
            </summary>
        </member>
        <member name="F:VisioForge.Libs.TagLib.Xmp.XmpTag.NamespacePrefixes">
            <summary>
               Mapping between full namespaces and their short prefix. Needs to be public for the unit test generator.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.#ctor">
            <summary>
               Construct a new empty <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpTag"/>.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.#ctor(System.String,VisioForge.Libs.TagLib.File)">
            <summary>
               Construct a new <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpTag"/>, using the data parsed from the given string.
            </summary>
            <param name="data">
               A <see cref="T:System.String"/> containing an XMP packet. This should be a valid
               XMP block.
            </param>
            <param name="file">
               The file that's currently being parsed, used for reporting corruptions.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.AcceptVisitors">
            <summary>
            Accept visitors to touch up the node tree.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.TagTypes">
            <summary>
               Gets the tag types contained in the current instance.
            </summary>
            <value>
               Always <see cref="F:VisioForge.Libs.TagLib.TagTypes.XMP" />.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.NodeTree">
            <summary>
               Get the tree of <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode" /> nodes. These contain the values
               parsed from the XMP file.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.ReplaceFrom(VisioForge.Libs.TagLib.Xmp.XmpTag)">
            <summary>
               Replace the current tag with the given one.
            </summary>
            <param name="tag">
               The tag from which the data should be copied.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.Clear">
            <summary>
               Clears the values stored in the current instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.FindNode(System.String,System.String)">
            <summary>
               Finds the node associated with the namespace <paramref name="ns"/> and the name
               <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <returns>
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNode"/> with the found node, or <see langword="null"/>
               if no node was found.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.GetTextNode(System.String,System.String)">
            <summary>
               Returns the text of the node associated with the namespace
               <paramref name="ns"/> and the name <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <returns>
               A <see cref="T:System.String"/> with the text of the node, or
               <see langword="null"/> if no such node exists, or if it is not
               a text node.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.SetTextNode(System.String,System.String,System.String)">
            <summary>
               Creates a new text node associated with the namespace
               <paramref name="ns"/> and the name <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <param name="value">
               A <see cref="T:System.String"/> with the value for the new node.
               If <see langword="null"/> is given, a possibly existing node will
               be deleted.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.GetLangAltNode(System.String,System.String)">
            <summary>
               Searches for a node holding language alternatives. The return value
               is the value of the default language stored by the node. The node is
               identified by the namespace <paramref name="ns"/> and the name
               <paramref name="name"/>. If the default language is not set, an arbitrary
               one is chosen.
               It is also tried to return the value a simple text node, if no
               associated alt-node exists.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <returns>
               A <see cref="T:System.String"/> with the value stored as default language
               for the referenced node.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.SetLangAltNode(System.String,System.String,System.String)">
            <summary>
               Stores a the given <paramref name="value"/> as the default language
               value for the alt-node associated with the namespace
               <paramref name="ns"/> and the name <paramref name="name"/>.
               All other alternatives set, are deleted by this method.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <param name="value">
               A <see cref="T:System.String"/> with the value for the default language
               to set. If <see langword="null"/> is given, a possibly existing node
               will be deleted.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.GetCollectionNode(System.String,System.String)">
            <summary>
               The method returns an array of <see cref="T:System.String"/> values
               which are the stored text of the child nodes of the node associated
               with the namespace <paramref name="ns"/> and the name <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <returns>
               A <see cref="T:System.String[]"/> with the text stored in the child nodes.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.SetCollectionNode(System.String,System.String,System.String[],VisioForge.Libs.TagLib.Xmp.XmpNodeType)">
            <summary>
               Sets a <see cref="T:System.String[]"/> as texts to the children of the
               node associated with the namespace <paramref name="ns"/> and the name
               <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <param name="values">
               A <see cref="T:System.String[]"/> with the values to set for the children.
            </param>
            <param name="type">
               A <see cref="T:VisioForge.Libs.TagLib.Xmp.XmpNodeType"/> with the type of the parent node.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.GetRationalNode(System.String,System.String)">
            <summary>
               Returns the rational value of the node associated with the namespace
               <paramref name="ns"/> and the name <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <returns>
               A double? with the read value, or
               <see langword="null"/> if no such node exists, or if it is in wrong
               format.
            </returns>
            <remarks>
               Rational nodes only used in EXIF schema.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.SetRationalNode(System.String,System.String,System.Double)">
            <summary>
               Creates a new rational node with the namespace
               <paramref name="ns"/> and the name <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <param name="value">
               A <see cref="T:System.Double"/> with the value of the node.
            </param>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.GetUIntNode(System.String,System.String)">
            <summary>
               Returns the unsigned integer value of the node associated with the
               namespace <paramref name="ns"/> and the name <paramref name="name"/>.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace of the node.
            </param>
            <param name="name">
               A <see cref="T:System.String"/> with the name of the node.
            </param>
            <returns>
               A uint? with the read value, or
               <see langword="null"/> if no such node exists, or if it is in wrong
               format.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.Render">
            <summary>
               Renders the current instance to an XMP <see cref="T:System.String"/>.
            </summary>
            <returns>
               A <see cref="T:System.String"/> with the XMP structure.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.TagLib.Xmp.XmpTag.EnsureNamespacePrefix(System.String)">
            <summary>
               Make sure there's a suitable prefix mapped for the given namespace URI.
            </summary>
            <param name="ns">
               A <see cref="T:System.String"/> with the namespace that will be rendered.
            </param>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Comment">
            <summary>
               Gets or sets the comment for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the comment of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Keywords">
            <summary>
               Gets or sets the keywords for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:string[]" /> containing the keywords of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Rating">
            <summary>
               Gets or sets the rating for the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> containing the rating of the
               current instace.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.DateTime">
            <summary>
               Gets or sets the time when the image, the current instance
               belongs to, was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the time the image was taken.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Orientation">
            <summary>
               Gets or sets the orientation of the image described
               by the current instance.
            </summary>
            <value>
               A <see cref="T:VisioForge.Libs.TagLib.Image.ImageOrientation" /> containing the orientation of the
               image
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Software">
            <summary>
               Gets or sets the software the image, the current instance
               belongs to, was created with.
            </summary>
            <value>
               A <see cref="T:System.String" /> containing the name of the
               software the current instace was created with.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Latitude">
            <summary>
               Gets or sets the latitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the latitude ranging from -90.0
               to +90.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Longitude">
            <summary>
               Gets or sets the longitude of the GPS coordinate the current
               image was taken.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the longitude ranging from -180.0
               to +180.0 degrees.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Altitude">
            <summary>
               Gets or sets the altitude of the GPS coordinate the current
               image was taken. The unit is meter.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the altitude. A positive value
               is above sea level, a negative one below sea level. The unit is meter.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.ExposureTime">
            <summary>
               Gets the exposure time the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the exposure time in seconds.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.FNumber">
            <summary>
               Gets the FNumber the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the FNumber.
            </value>
            <remarks>
               Bibble wrongly tends to put this into tiff:FNumber so we
               use that as a fallback and correct it if needed.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.ISOSpeedRatings">
            <summary>
               Gets the ISO speed the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the ISO speed as defined in ISO 12232.
            </value>
            <remarks>
               Bibble writes ISOSpeedRating instead of ISOSpeedRatings.
            </remarks>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.FocalLength">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.FocalLengthIn35mmFilm">
            <summary>
               Gets the focal length the image, the current instance belongs
               to, was taken with, assuming a 35mm film camera.
            </summary>
            <value>
               A <see cref="T:System.Nullable"/> with the focal length in 35mm equivalent in millimeters.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Make">
            <summary>
               Gets the manufacture of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the manufacture name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Model">
            <summary>
               Gets the model name of the recording equipment the image, the
               current instance belongs to, was taken with.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the model name.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Creator">
            <summary>
               Gets or sets the creator of the image.
            </summary>
            <value>
               A <see cref="T:System.String" /> with the name of the creator.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Title">
            <summary>
               Gets and sets the title for the media described by the
               current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the title for
               the media described by the current instance or <see
               langword="null" /> if no value is present.
            </value>
        </member>
        <member name="P:VisioForge.Libs.TagLib.Xmp.XmpTag.Copyright">
            <summary>
               Gets and sets the copyright information for the media
               represented by the current instance.
            </summary>
            <value>
               A <see cref="T:System.String" /> object containing the copyright
               information for the media represented by the current
               instance or <see langword="null" /> if no value present.
            </value>
        </member>
        <member name="T:VisioForge.Libs.Types.BarcodeResultMetadataType">
            <summary>
            Represents some type of metadata about the result of the decoding that the decoder
            wishes to communicate back to the caller.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.Other">
            <summary>
            Unspecified, application-specific metadata. Maps to an unspecified {@link Object}.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.Orientation">
            <summary>
            Denotes the likely approximate orientation of the barcode in the image. This value
            is given as degrees rotated clockwise from the normal, upright orientation.
            For example a 1D barcode which was found by reading top-to-bottom would be
            said to have orientation "90". This key maps to an {@link Integer} whose
            value is in the range [0,360).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.ByteSegments">
            <summary>
            2D barcode formats typically encode text, but allow for a sort of 'byte mode'
            which is sometimes used to encode binary data. While {@link Result} makes available
            the complete raw bytes in the barcode for these formats, it does not offer the bytes
            from the byte segments alone.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.ErrorCorrectionLevel">
            <summary>
            Error correction level used, if applicable. The value type depends on the
            format, but is typically a String.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.IssueNumber">
            <summary>
            For some periodicals, indicates the issue number as an {@link Integer}.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.SuggestedPrice">
            <summary>
            For some products, indicates the suggested retail price in the barcode as a
            formatted {@link String}.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.PossibleCountry">
            <summary>
            For some products, the possible country of manufacture as a {@link String} denoting the
            ISO country code. Some map to multiple possible countries, like "US/CA".
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Types.BarcodeResultMetadataType.UpcEanExtension">
            <summary>
            For some products, the extension text
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Types.BarcodeResultPoint">
            <summary>
            Encapsulates a point of interest in an image containing a barcode. Typically, this
            would be the location of a finder pattern or the corner of the barcode, for example.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Types.BarcodeResultPoint"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Types.BarcodeResultPoint"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:VisioForge.Libs.Types.BarcodeResultPoint.X">
            <summary>
            Gets the X.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.Types.BarcodeResultPoint.Y">
            <summary>
            Gets the Y.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.OrderBestPatterns(VisioForge.Libs.Types.BarcodeResultPoint[])">
            <summary>
            Orders an array of three ResultPoints in an order [A,B,C] such that AB &lt; AC and
            BC &lt; AC and the angle between BC and BA is less than 180 degrees.
            </summary>
            <param name="patterns">
            Patterns.
            </param> 
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.Distance(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary>
            Gets the distance between two points.
            </summary>
            <param name="pattern1">
            Pattern 1.
            </param>
            <param name="pattern2">
            Pattern 2.
            </param>
            <returns>
            Returns <see cref="T:System.Single"/>.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.Types.BarcodeResultPoint.CrossProductZ(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary>
            Returns the z component of the cross product between vectors BC and BA.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Types.DSPComplex">
            <summary>
            Type to represent complex number for DSP.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.Types.DSPComplex.X">
            <summary>
            Gets or sets the teal part.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.Types.DSPComplex.Y">
            <summary>
            Gets or sets the imaginary part.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Accord.DataSetExtensions">
            <summary>
              Static class for DataSet-related extension methods.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.DataSetExtensions.Add(System.Data.DataColumnCollection,System.String[])">
            <summary>
              Creates and adds multiple <see cref="T:System.Data.DataColumn"/>
              objects with the given names at once.
            </summary>
            
            <param name="collection">The <see cref="T:System.Data.DataColumnCollection"/>
            to add in.</param>
            <param name="columnNames">The names of the <see cref="T:System.Data.DataColumn"/> to
            be created and added.</param>
            
            <example>
              <code>
              DataTable table = new DataTable();
              
              // Add multiple columns at once:
              table.Columns.Add("columnName1", "columnName2");
              </code>
            </example>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.ConvergenceException">
            <summary>
              Algorithm Convergence Exception.
            </summary>
            
            <remarks><para>The algorithm convergence exception is thrown in cases where a iterative
            algorithm could not converge to a finite solution.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ConvergenceException.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.ConvergenceException"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ConvergenceException.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.ConvergenceException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ConvergenceException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.ConvergenceException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ConvergenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.ConvergenceException"/> class.
            </summary>
            
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.DimensionMismatchException">
             <summary>
               Dimension Mismatch Exception.
             </summary>
            
             <remarks><para>The dimension mismatch exception is thrown in cases where a method expects 
             a matrix or array object having specific or compatible dimensions, such as the inner matrix
             dimensions in matrix multiplication.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.DimensionMismatchException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.DimensionMismatchException"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.DimensionMismatchException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.DimensionMismatchException"/> class.
            </summary>
            
            <param name="paramName">The name of the parameter that caused the current exception.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.DimensionMismatchException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.DimensionMismatchException"/> class.
            </summary>
            
            <param name="paramName">The name of the parameter that caused the current exception.</param>
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.DimensionMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.DimensionMismatchException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.DimensionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.DimensionMismatchException"/> class.
            </summary>
            
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException">
            <summary>
              Non-Positive Definite Matrix Exception.
            </summary>
            
            <remarks><para>The non-positive definite matrix exception is thrown in cases where a method 
            expects a matrix to have only positive eigenvalues, such when dealing with covariance matrices.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonPositiveDefiniteMatrixException"/> class.
            </summary>
            
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.NonSymmetricMatrixException">
            <summary>
              Non-Symmetric Matrix Exception.
            </summary>
            
            <remarks><para>The not symmetric matrix exception is thrown in cases where a method 
            expects a matrix to be symmetric but it is not.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.NonSymmetricMatrixException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonSymmetricMatrixException"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.NonSymmetricMatrixException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonSymmetricMatrixException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.NonSymmetricMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonSymmetricMatrixException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.NonSymmetricMatrixException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.NonSymmetricMatrixException"/> class.
            </summary>
            
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.SingularMatrixException">
            <summary>
              Singular Matrix Exception.
            </summary>
            
            <remarks><para>The singular matrix exception is thrown in cases where a method which
            performs matrix inversions has encountered a non-invertible matrix during the process.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.SingularMatrixException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.SingularMatrixException"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.SingularMatrixException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.SingularMatrixException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.SingularMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.SingularMatrixException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.SingularMatrixException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.SingularMatrixException"/> class.
            </summary>
            
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2">
            <summary>
              Read-only dictionary wrapper.
            </summary>
            
            <remarks>
              This collection implements a read-only dictionary. Read-only collections
              can not be changed once they are created and are useful for presenting
              information to the user without allowing alteration.
            </remarks>
            
            <typeparam name="TKey">The types of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
              Constructs a new read-only wrapper around a <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.
            </summary>
            
            <param name="dictionary">The dictionary to wrap.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Add(`0,`1)">
            <summary>
              Does nothing, as this collection is read-only.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
              Determines whether the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>
              contains an element with the specified key.
            </summary>
            
            <param name="key">The key to locate in the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.</param>
            
            <returns>
               <c>true</c> if the <see cref="T:System.Collections.Generic.IDictionary`2"/> contains
                an element with the key; otherwise, false.
            </returns>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Keys">
            <summary>
              Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of
              the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.
            </summary>
            
            <value>The keys.</value>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Remove(`0)">
            <summary>
              Does nothing, as this collection is read-only.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
               Gets the value associated with the specified key.
            </summary>
            
            <param name="key">The key whose value to get.</param>
            
            <param name="value">
               When this method returns, the value associated with the specified key, if
               the key is found; otherwise, the default value for the type of the value
               parameter. This parameter is passed uninitialized.</param>
               
            <returns>
                true if the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>
                contains an element with the specified key; otherwise, false.</returns>
                
        </member>
        <member name="P:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Values">
            <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in
             the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.
            </summary>
            
            <value>
              An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the
              values in the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.
             </value>
             
        </member>
        <member name="P:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Item(`0)">
            <summary>
              Gets the element with the specified key. Set is not supported.
            </summary>
            
            <value>The element with the specified key.</value>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
              Does nothing, as this collection is read-only.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Clear">
            <summary>
              Does nothing, as this collection is read-only.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
              Determines whether the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>
              contains an element with the specified key.
            </summary>
            
            <param name="item">The key to locate in the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.</param>
            
            <returns>
              <c>true</c> if the <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>
              contains an element with the key; otherwise, false.
            </returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
              Copies the entire <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/> to a 
              compatible one-dimensional Array, starting at the specified index of 
              the target array.
            </summary>
            
            <param name="array">
              The one-dimensional Array that is the destination
              of the elements copied from <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>. The 
              Array must have zero-based indexing.</param>
            
            <param name="arrayIndex">
              The zero-based index in array at which copying begins. </param>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Count">
            <summary>
              Gets the number of elements contained in this
              <see cref="T:VisioForge.Libs.Accord.ReadOnlyDictionary`2"/>.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.ReadOnlyDictionary`2.IsReadOnly">
            <summary>
              Always returns true.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
              Does nothing, as this collection is read-only.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker">
            <summary>
              Filter to mark (highlight) rectangles in a image.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.MarkerColor">
            <summary>
              Color used to mark pairs.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.FillColor">
            <summary>
              Gets or sets the color used to fill
              rectangles. Default is Transparent.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.Rectangles">
            <summary>
              The set of rectangles.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.FormatTranslations">
            <summary>
              Format translations dictionary.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.#ctor(System.Drawing.Color)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker"/> class.
            </summary>
            
            <param name="markerColor">The color to use to drawn the rectangles.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.#ctor(System.Drawing.Rectangle[])">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker"/> class.
            </summary>
            
            <param name="rectangles">Set of rectangles to be drawn.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.#ctor(System.Collections.Generic.IEnumerable{System.Drawing.Rectangle})">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker"/> class.
            </summary>
            
            <param name="rectangles">Set of rectangles to be drawn.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.#ctor(System.Collections.Generic.IEnumerable{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker"/> class.
            </summary>
            
            <param name="rectangles">Set of rectangles to be drawn.</param>
            <param name="markerColor">The color to use to drawn the rectangles.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Filters.RectanglesMarker.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Applies the filter to the image.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.IntegralImage2">
            <summary>
              Joint representation of both Integral Image and Squared Integral Image.
            </summary>
            
            <remarks>
              Using this representation, both structures can be created in a single pass
              over the data. This is interesting for real time applications. This class
              also accepts a channel parameter indicating the Integral Image should be
              computed using a specified color channel. This avoids costly conversions.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.IntegralImage2.Width">
            <summary>
              Gets the image's width.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.IntegralImage2.Height">
            <summary>
              Gets the image's height.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.IntegralImage2.Image">
            <summary>
              Gets the Integral Image for values' sum.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.IntegralImage2.Squared">
            <summary>
              Gets the Integral Image for values' squared sum.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.IntegralImage2.Rotated">
            <summary>
              Gets the Integral Image for tilted values' sum.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
              Constructs a new Integral image of the given size.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.FromBitmap(System.Drawing.Bitmap,System.Int32)">
            <summary>
              Constructs a new Integral image from a Bitmap image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.FromBitmap(System.Drawing.Bitmap,System.Int32,System.Boolean)">
            <summary>
              Constructs a new Integral image from a Bitmap image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.FromBitmap(System.Drawing.Imaging.BitmapData,System.Int32)">
            <summary>
              Constructs a new Integral image from a BitmapData image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.FromBitmap(System.Drawing.Imaging.BitmapData,System.Int32,System.Boolean)">
            <summary>
              Constructs a new Integral image from a BitmapData image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.FromBitmap(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Int32)">
            <summary>
              Constructs a new Integral image from an unmanaged image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.FromBitmap(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Int32,System.Boolean)">
            <summary>
              Constructs a new Integral image from an unmanaged image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.GetSum(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              Gets the sum of the pixels in a rectangle of the Integral image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.GetSum2(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              Gets the sum of the squared pixels in a rectangle of the Integral image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.GetSumT(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              Gets the sum of the pixels in a tilted rectangle of the Integral image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.Dispose">
            <summary>
              Performs application-defined tasks associated with freeing,
              releasing, or resetting unmanaged resources.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.Finalize">
            <summary>
              Releases unmanaged resources and performs other cleanup operations 
              before the <see cref="T:VisioForge.Libs.Accord.Imaging.IntegralImage2"/> is reclaimed by garbage collection.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.IntegralImage2.Dispose(System.Boolean)">
            <summary>
              Releases unmanaged and - optionally - managed resources
            </summary>
            
            <param name="disposing"><c>true</c> to release both managed 
            and unmanaged resources; <c>false</c> to release only unmanaged
            resources.</param>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.MatrixH">
            <summary>
              Encapsulates a 3-by-3 general transformation matrix
              that represents a (possibly) non-linear transform. 
            </summary>
            
            <remarks>
            <para>
              Linear transformations are not the only ones that can be represented by
              matrices. Using homogeneous coordinates, both affine transformations and
              perspective projections on R^n can be represented as linear transformations
              on R^n+1 (that is, n+1-dimensional real projective space).</para>
            <para>
              The general transformation matrix has 8 degrees of freedom, as the last
              element is just a scale parameter.</para>  
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.#ctor">
            <summary>
              Creates a new projective matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
              Creates a new projective matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
              Creates a new projective matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.#ctor(System.Single[])">
            <summary>
              Creates a new projective matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.#ctor(System.Double[0:,0:])">
            <summary>
              Creates a new projective matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.#ctor(System.Single[0:,0:])">
            <summary>
              Creates a new projective matrix.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.MatrixH.Elements">
            <summary>
              Gets the elements of this matrix.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.MatrixH.OffsetX">
            <summary>
              Gets the offset x
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.MatrixH.OffsetY">
            <summary>
              Gets the offset y
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.MatrixH.IsInvertible">
            <summary>
              Gets whether this matrix is invertible.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.MatrixH.IsAffine">
            <summary>
              Gets whether this is an Affine transformation matrix.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.MatrixH.IsIdentity">
            <summary>
              Gets whether this is the identity transformation.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.Reset">
            <summary>
              Resets this matrix to be the identity.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.Inverse">
            <summary>
              Returns the inverse matrix, if this matrix is invertible.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.Transpose">
            <summary>
              Gets the transpose of this transformation matrix.
            </summary>
            
            <returns>The transposed version of this matrix, given by <c>H'</c>.</returns>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.TransformPoints(VisioForge.Libs.Accord.Imaging.PointH[])">
            <summary>
              Transforms the given points using this transformation matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.TransformPoints(System.Drawing.PointF[])">
            <summary>
              Transforms the given points using this transformation matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.Multiply(VisioForge.Libs.Accord.Imaging.MatrixH)">
            <summary>
              Multiplies this matrix, returning a new matrix as result.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.Equals(System.Object)">
            <summary>
              Compares two objects for equality.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.GetHashCode">
            <summary>
              Returns the hash code for this instance.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.op_Explicit(VisioForge.Libs.Accord.Imaging.MatrixH)~System.Double[0:,0:]">
            <summary>
              Double[,] conversion.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.op_Explicit(VisioForge.Libs.Accord.Imaging.MatrixH)~System.Single[0:,0:]">
            <summary>
              Single[,] conversion.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.ToDoubleArray">
            <summary>
              Double[,] conversion.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.ToSingleArray">
            <summary>
              Single[,] conversion.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.MatrixH.op_Multiply(VisioForge.Libs.Accord.Imaging.MatrixH,VisioForge.Libs.Accord.Imaging.MatrixH)">
            <summary>
              Matrix multiplication.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments">
             <summary>
               Central image moments.
             </summary>
            
             <remarks>
             <para>
               In image processing, computer vision and related fields, an image moment is
               a certain particular weighted average (moment) of the image pixels' intensities,
               or a function of such moments, usually chosen to have some attractive property 
               or interpretation.</para>
            
             <para>
               Image moments are useful to describe objects after segmentation. Simple properties 
               of the image which are found via image moments include area (or total intensity), 
               its centroid, and information about its orientation.</para>
               
             <para>
               The central moments can be used to find the location, center of mass and the 
               dimensions of a given object within an image.</para>
               
             <para>
               References:
               <list type="bullet">
                 <item><description>
                   Wikipedia contributors. "Image moment." Wikipedia, The Free Encyclopedia. Wikipedia,
                   The Free Encyclopedia. Available at http://en.wikipedia.org/wiki/Image_moment </description></item>
               </list>
             </para>
             </remarks>
             
             <example>
             <code>
             Bitmap image = ...;
            
             // Compute the center moments of up to third order
             CentralMoments cm = new CentralMoments(image, order: 3);
             
             // Get size and orientation of the image
             SizeF size = target.GetSize();
             float angle = target.GetOrientation();
             </code>
             </example>
             
             <seealso cref="T:VisioForge.Libs.Accord.Imaging.Moments.RawMoments"/>
             <seealso cref="!:HuMoments"/>
             
        </member>
        <member name="F:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.DefaultOrder">
            <summary>
              Gets the default maximum moment order.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu00">
            <summary>
              Central moment of order (0,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu10">
            <summary>
              Central moment of order (1,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu01">
            <summary>
              Central moment of order (0,1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu11">
            <summary>
              Central moment of order (1,1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu20">
            <summary>
              Central moment of order (2,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu02">
            <summary>
              Central moment of order (0,2).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu21">
            <summary>
              Central moment of order (2,1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu12">
            <summary>
              Central moment of order (1,2).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu30">
            <summary>
              Central moment of order (3,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Mu03">
            <summary>
              Central moment of order (0,3).
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(VisioForge.Libs.Accord.Imaging.Moments.RawMoments)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
            <param name="moments">The raw moments to construct central moments.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(System.Drawing.Bitmap,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(System.Single[0:,0:],System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.#ctor(System.Single[0:,0:],System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Compute(VisioForge.Libs.Accord.Imaging.Moments.RawMoments)">
            <summary>
              Computes the center moments from the specified raw moments.
            </summary>
            
            <param name="moments">The raw moments to use as base of calculations.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Compute(System.Single[0:,0:],System.Drawing.Rectangle)">
            <summary>
              Computes the center moments for the specified image.
            </summary>
            
            <param name="image">The image.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.Compute(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the center moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.GetSize">
            <summary>
              Gets the size of the ellipse containing the image.
            </summary>
            
            <returns>The size of the ellipse containing the image.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.GetOrientation">
            <summary>
              Gets the orientation of the ellipse containing the image.
            </summary>
            
            <returns>The angle of orientation of the ellipse, in radians.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments.GetSizeAndOrientation(System.Single@)">
            <summary>
              Gets both size and orientation of the ellipse containing the image.
            </summary>
            
            <param name="angle">The angle of orientation of the ellipse, in radians.</param>
            <returns>The size of the ellipse containing the image.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.Moments.IMoments">
            <summary>
              Common interface for image moments.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.IMoments.Compute(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the center moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.IMoments.Compute(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
              Computes the center moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase">
            <summary>
              Base class for image moments.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Order">
            <summary>
              Gets or sets the maximum order of the moments.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(System.Int32)">
             <summary>
               Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
             </summary>
             
             <param name="order">The maximum order for the moments.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Int32)">
             <summary>
               Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
             </summary>
             
             <param name="order">The maximum order for the moments.</param>
             <param name="image">The image whose moments should be computed.</param>
             <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(System.Single[0:,0:],System.Drawing.Rectangle,System.Int32)">
             <summary>
               Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
             </summary>
             
             <param name="order">The maximum order for the moments.</param>
             <param name="image">The image whose moments should be computed.</param>
             <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(System.Drawing.Bitmap,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
            </summary>
            
            <param name="order">The maximum order for the moments.</param>
            <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Int32)">
             <summary>
               Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
             </summary>
             
             <param name="order">The maximum order for the moments.</param>
             <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.#ctor(System.Single[0:,0:],System.Int32)">
             <summary>
               Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase"/> class.
             </summary>
             
             <param name="order">The maximum order for the moments.</param>
             <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(System.Drawing.Bitmap)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(System.Drawing.Imaging.BitmapData)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.MomentsBase.Compute(System.Single[0:,0:],System.Drawing.Rectangle)">
            <summary>
              Computes the moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.Moments.RawMoments">
             <summary>
               Raw image moments.
             </summary>
             
             <remarks>
             <para>
               In image processing, computer vision and related fields, an image moment is
               a certain particular weighted average (moment) of the image pixels' intensities,
               or a function of such moments, usually chosen to have some attractive property 
               or interpretation.</para>
            
             <para>
               Image moments are useful to describe objects after segmentation. Simple properties 
               of the image which are found via image moments include area (or total intensity), 
               its centroid, and information about its orientation.</para>
               
             <para>
               The raw moments are the most basic moments which can be computed from an image,
               and can then be further processed to achieve <see cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/> or even
               <see cref="!:HuMoments"/>.</para>
               
             <para>
               References:
               <list type="bullet">
                 <item><description>
                   Wikipedia contributors. "Image moment." Wikipedia, The Free Encyclopedia. Wikipedia,
                   The Free Encyclopedia. Available at http://en.wikipedia.org/wiki/Image_moment </description></item>
               </list>
             </para>
             </remarks>
             
             <example>
             <code>
             Bitmap image = ...;
            
             // Compute the raw moments of up to third order
             RawMoments m = new RawMoments(image, order: 3);
             </code>
             </example>
             
             <seealso cref="!:HuMoments"/>
             <seealso cref="T:VisioForge.Libs.Accord.Imaging.Moments.CentralMoments"/>
             
        </member>
        <member name="F:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.DefaultOrder">
            <summary>
              Gets the default maximum moment order.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M00">
            <summary>
              Raw moment of order (0,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M10">
            <summary>
              Raw moment of order (1,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M01">
            <summary>
              Raw moment of order (0,1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M11">
            <summary>
              Raw moment of order (1,1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M20">
            <summary>
              Raw moment of order (2,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M02">
            <summary>
              Raw moment of order (0,2).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M21">
            <summary>
              Raw moment of order (2,1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M12">
            <summary>
              Raw moment of order (1,2).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M30">
            <summary>
              Raw moment of order (3,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.M03">
            <summary>
              Raw moment of order (0,3).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.InvM00">
            <summary>
              Inverse raw moment of order (0,0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.CenterX">
            <summary>
              Gets the X centroid of the image.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.CenterY">
            <summary>
              Gets the Y centroid of the image.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.Area">
            <summary>
              Gets the area (for binary images) or sum of
              gray level (for grayscale images).
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(System.Single[0:,0:],System.Drawing.Rectangle,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(System.Drawing.Bitmap,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.#ctor(System.Single[0:,0:],System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="N:VisioForge.Libs.Accord.Imaging.Moments"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.Compute(System.Single[0:,0:],System.Drawing.Rectangle,System.Boolean)">
            <summary>
              Computes the raw moments for the specified image.
            </summary>
            
            <param name="image">The image whose moments should be computed.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            <param name="secondOrder"><c>True</c> to compute second order moments, <c>false</c> otherwise.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.Compute(System.Single[0:,0:],System.Drawing.Rectangle)">
            <summary>
              Computes the raw moments for the specified image.
            </summary>
            
            <param name="image">The image.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.Compute(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the raw moments for the specified image.
            </summary>
            
            <param name="image">The image.</param>
            <param name="area">The region of interest in the image to compute moments for.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Moments.RawMoments.Reset">
            <summary>
              Resets all moments to zero.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.PointH">
            <summary>
              Represents an ordered pair of real x- and y-coordinates and scalar w that defines
              a point in a two-dimensional plane using homogeneous coordinates.
            </summary>
            
            <remarks>
            <para>
              In mathematics, homogeneous coordinates are a system of coordinates used in
              projective geometry much as Cartesian coordinates are used in Euclidean geometry.</para>
            <para>
              They have the advantage that the coordinates of a point, even those at infinity,
              can be represented using finite coordinates. Often formulas involving homogeneous
              coordinates are simpler and more symmetric than their Cartesian counterparts.</para>
            <para>
              Homogeneous coordinates have a range of applications, including computer graphics,
              where they allow affine transformations and, in general, projective transformations
              to be easily represented by a matrix.</para>
              
            <para>
              References: 
              <list type="bullet">
                <item><description>
                  http://alumnus.caltech.edu/~woody/docs/3dmatrix.html</description></item>
                <item><description>
                  http://simply3d.wordpress.com/2009/05/29/homogeneous-coordinates/</description></item>
              </list></para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.PointH.X">
            <summary>
              The first coordinate.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.PointH.Y">
            <summary>
              The second coordinate.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.PointH.W">
            <summary>
              The inverse scaling factor for X and Y.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.#ctor(System.Single,System.Single)">
            <summary>
              Creates a new point.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.#ctor(System.Double,System.Double)">
            <summary>
              Creates a new point.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.#ctor(System.Single,System.Single,System.Single)">
            <summary>
              Creates a new point.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.#ctor(System.Double,System.Double,System.Double)">
            <summary>
              Creates a new point.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Transform(System.Single[0:,0:])">
            <summary>
              Transforms a point using a projection matrix.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Normalize">
            <summary>
              Normalizes the point to have unit scale.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.PointH.IsNormalized">
            <summary>
              Gets whether this point is normalized (w = 1).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.PointH.IsAtInfinity">
            <summary>
              Gets whether this point is at infinity (w = 0).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Imaging.PointH.IsEmpty">
            <summary>
              Gets whether this point is at the origin.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.ToArray">
            <summary>
              Converts the point to a array representation.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Multiply(VisioForge.Libs.Accord.Imaging.PointH,System.Single)">
            <summary>
              Multiplication by scalar.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Multiply(System.Single,VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Multiplication by scalar.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Multiply(System.Single)">
            <summary>
              Multiplies the point by a scalar.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Subtraction(VisioForge.Libs.Accord.Imaging.PointH,VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Subtraction.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Subtract(VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Subtracts the values of two points.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Addition(VisioForge.Libs.Accord.Imaging.PointH,VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Addition.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Add(VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Add the values of two points.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Equality(VisioForge.Libs.Accord.Imaging.PointH,VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Equality.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Inequality(VisioForge.Libs.Accord.Imaging.PointH,VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Inequality
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.op_Implicit(VisioForge.Libs.Accord.Imaging.PointH)~System.Drawing.PointF">
            <summary>
              PointF Conversion.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Ceiling(VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Converts to a Integer point by computing the ceiling of the point coordinates. 
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Round(VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Converts to a Integer point by rounding the point coordinates. 
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Truncate(VisioForge.Libs.Accord.Imaging.PointH)">
            <summary>
              Converts to a Integer point by truncating the point coordinates. 
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.Equals(System.Object)">
            <summary>
              Compares two objects for equality.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.PointH.GetHashCode">
            <summary>
              Returns the hash code for this instance.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Imaging.PointH.Empty">
            <summary>
              Returns the empty point.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.Tools">
            <summary>
              Static tool functions for imaging.
            </summary>
            
            <remarks>
              <para>
                References:
                <list type="bullet">
                  <item><description>
                    P. D. Kovesi. MATLAB and Octave Functions for Computer Vision and Image Processing.
                    School of Computer Science and Software Engineering, The University of Western Australia.
                    Available in: <a href="http://www.csse.uwa.edu.au/~pk/Research/MatlabFns/Match/matchbycorrelation.m">
                    http://www.csse.uwa.edu.au/~pk/Research/MatlabFns/Match/matchbycorrelation.m </a>
                  </description></item>
              </list></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Center(System.Drawing.Rectangle)">
            <summary>
              Computes the center of a given rectangle.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.IsEqual(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
              Compares two rectangles for equality, considering an acceptance threshold.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Normalize(VisioForge.Libs.Accord.Imaging.PointH[],VisioForge.Libs.Accord.Imaging.MatrixH@)">
            <summary>
              Normalizes a set of homogeneous points so that the origin is located
              at the centroid and the mean distance to the origin is sqrt(2).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Normalize(System.Drawing.PointF[],VisioForge.Libs.Accord.Imaging.MatrixH@)">
            <summary>
              Normalizes a set of homogeneous points so that the origin is located
              at the centroid and the mean distance to the origin is sqrt(2).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Normalize(System.Drawing.PointF[],System.Single[0:,0:]@)">
            <summary>
              Normalizes a set of homogeneous points so that the origin is located
              at the centroid and the mean distance to the origin is sqrt(2).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Normalize(VisioForge.Libs.Accord.Imaging.PointH[],System.Single[0:,0:]@)">
            <summary>
              Normalizes a set of homogeneous points so that the origin is located
              at the centroid and the mean distance to the origin is sqrt(2).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Sum(System.Drawing.Bitmap)">
            <summary>
              Computes the sum of the pixels in a given image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Sum(System.Drawing.Imaging.BitmapData)">
            <summary>
              Computes the sum of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Sum(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Computes the sum of the pixels in a given image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Sum(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
              Computes the sum of the pixels in a given image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Sum(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
              Computes the sum of the pixels in a given image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Sum(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the sum of the pixels in a given image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Mean(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
              Computes the arithmetic mean of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Mean(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
              Computes the arithmetic mean of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Mean(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the arithmetic mean of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Mean(System.Drawing.Bitmap)">
            <summary>
              Computes the arithmetic mean of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Mean(System.Drawing.Imaging.BitmapData)">
            <summary>
              Computes the arithmetic mean of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Mean(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Computes the arithmetic mean of the pixels in a given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.StandardDeviation(System.Drawing.Bitmap,System.Double)">
            <summary>
              Computes the standard deviation of image pixels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.StandardDeviation(System.Drawing.Imaging.BitmapData,System.Double)">
            <summary>
              Computes the standard deviation of image pixels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.StandardDeviation(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Double)">
            <summary>
              Computes the standard deviation of image pixels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.StandardDeviation(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Double)">
            <summary>
              Computes the standard deviation of image pixels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.StandardDeviation(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle,System.Double)">
            <summary>
              Computes the standard deviation of image pixels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.StandardDeviation(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,System.Double)">
            <summary>
              Computes the standard deviation of image pixels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Int32)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Int32)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(System.Drawing.Bitmap)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(System.Drawing.Bitmap,System.Int32)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Max(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
              Computes the minimum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Computes the minimum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Computes the minimum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(System.Drawing.Bitmap)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(System.Drawing.Bitmap,System.Int32)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.Min(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
              Computes the maximum pixel value in the given image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.Tools.ToBitmap(System.Byte[0:,0:])">
            <summary>
              Converts an image given as a matrix of pixel values into
              a <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
            
            <param name="pixels">A matrix containing the grayscale pixel
            values as <see cref="T:System.Double">bytes</see>.</param>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> of the same width
            and height as the pixel matrix containing the given pixel values.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Imaging.UnsafeTools">
            <summary>
              Static tool functions for imaging.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.UnsafeTools.Sum(System.Byte*,System.Int32,System.Int32,System.Int32)">
            <summary>
              Computes the sum of all pixels 
              within a given image region.
            </summary>
            
            <param name="src">The image region.</param>
            <param name="width">The region width.</param>
            <param name="height">The region height.</param>
            <param name="stride">The image stride.</param>
            
            <returns>The sum of all pixels within the region.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.UnsafeTools.Mean(System.Byte*,System.Int32,System.Int32,System.Int32)">
            <summary>
              Computes the mean pixel value 
              within a given image region.
            </summary>
            
            <param name="src">The image region.</param>
            <param name="width">The region width.</param>
            <param name="height">The region height.</param>
            <param name="stride">The image stride.</param>
            
            <returns>The mean pixel value within the region.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.UnsafeTools.Scatter(System.Byte*,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
              Computes the pixel scatter 
              within a given image region.
            </summary>
            
            <param name="src">The image region.</param>
            <param name="width">The region width.</param>
            <param name="height">The region height.</param>
            <param name="stride">The image stride.</param>
            <param name="mean">The region pixel mean.</param>
            
            <returns>The scatter value within the region.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Imaging.UnsafeTools.Variance(System.Byte*,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
              Computes the pixel variance 
              within a given image region.
            </summary>
            
            <param name="src">The image region.</param>
            <param name="width">The region width.</param>
            <param name="height">The region height.</param>
            <param name="stride">The image stride.</param>
            <param name="mean">The region pixel mean.</param>
            
            <returns>The variance value within the region.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Statistics.Moving.IMovingStatistics">
            <summary>
              Common interface for moving-window statistics.
            </summary>
            
            <remarks>
              Moving-window statistics such as moving average and moving variance,
              are a type of finite impulse response filters used to analyze a set
              of data points by creating a series of averages of different subsets
              of the full data set.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.IMovingStatistics.Window">
            <summary>
              Gets the size of the window.
            </summary>
            
            <value>The window's size.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.IMovingStatistics.Count">
            <summary>
              Gets the number of samples within the window.
            </summary>
            
            <value>The number of samples within the window.</value>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics">
            <summary>
              Moving-window circular statistics.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.SumOfSines">
            <summary>
              Gets the sum of the sines of the angles within the window.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.SumOfCosines">
            <summary>
              Gets the sum of the cosines of the angles within the window.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.Window">
            <summary>
              Gets the size of the window.
            </summary>
            
            <value>The window's size.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.Count">
            <summary>
              Gets the number of samples within the window.
            </summary>
            
            <value>The number of samples within the window.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.Mean">
            <summary>
              Gets the mean of the angles within the window.
            </summary>
            
            <value>The mean.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.Variance">
            <summary>
              Gets the variance of the angles within the window.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.StandardDeviation">
            <summary>
              Gets the standard deviation of the angles within the window.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.#ctor(System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics"/> class.
            </summary>
            
            <param name="windowSize">The size of the moving window.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.Push(System.Double)">
            <summary>
              Registers the occurance of a value.
            </summary>
            
            <param name="value">The value to be registered.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingCircularStatistics.Clear">
            <summary>
              Clears all measures previously computed.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics">
            <summary>
              Moving-window statistics.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Sum">
            <summary>
              Gets the sum the values within the window.
            </summary>
            
            <value>The sum of values within the window.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.SumOfSquares">
            <summary>
              Gets the sum of squared values within the window.
            </summary>
            
            <value>The sum of squared values.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Window">
            <summary>
              Gets the size of the window.
            </summary>
            
            <value>The window's size.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Count">
            <summary>
              Gets the number of samples within the window.
            </summary>
            
            <value>The number of samples within the window.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Mean">
            <summary>
              Gets the mean of the values within the window.
            </summary>
            
            <value>The mean of the values.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Variance">
            <summary>
              Gets the variance of the values within the window.
            </summary>
            
            <value>The variance of the values.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.StandardDeviation">
            <summary>
              Gets the standard deviation of the values within the window.
            </summary>
            
            <value>The standard deviation of the values.</value>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.#ctor(System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics"/> class.
            </summary>
            
            <param name="windowSize">The size of the moving window.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Push(System.Double)">
            <summary>
              Pushes a value into the window.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Moving.MovingNormalStatistics.Clear">
            <summary>
              Removes all elements from the window and resets statistics.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Statistics.Running.IRunning`1">
            <summary>
              Common interface for running statistics.
            </summary>
            <remarks>
              Running statistics are measures computed as data becomes available.
              When using running statistics, there is no need to know the number of
              samples a priori, such as in the case of the direct <see cref="!:Tools.Mean(double[])"/>.
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Running.IRunning`1.Push(`0)">
            <summary>
              Registers the occurance of a value.
            </summary>
            
            <param name="value">The value to be registered.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Statistics.Running.IRunning`1.Clear">
            <summary>
              Clears all measures previously computed.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Statistics.Running.IRunningStatistics">
            <summary>
              Common interface for running statistics.
            </summary>
            <remarks>
              Running statistics are measures computed as data becomes available.
              When using running statistics, there is no need to know the number of
              samples a priori, such as in the case of the direct <see cref="!:Tools.Mean(double[])"/>.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Running.IRunningStatistics.Mean">
            <summary>
              Gets the current mean of the gathered values.
            </summary>
            
            <value>The mean of the values.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Running.IRunningStatistics.Variance">
            <summary>
              Gets the current variance of the gathered values.
            </summary>
            
            <value>The variance of the values.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Statistics.Running.IRunningStatistics.StandardDeviation">
            <summary>
              Gets the current standard deviation of the gathered values.
            </summary>
            
            <value>The standard deviation of the values.</value>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade">
            <summary>
              Default Face Haar Cascade for using with Haar Classifiers.
            </summary>
            
            <remarks>
              The definition was originally based on a hardcoded partial transcription of
              OpenCV's <i>haarcascade_frontalface_alt.xml</i> by Mario Klingemann. This
              class, however, has been re-created using <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeWriter"/>.
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade.#ctor">
            <summary>
              Hardcoded partial transcription of <i>haarcascade_frontalface_alt.xml</i>
              based on code by Mario Klingemann.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.NoseHaarCascade">
            <summary>
              Automatic transcription of haar cascade definitions 
              for facial features by Modesto Castrillon-Santana.
            </summary>
            
            <remarks>
            <para>
              This code has been automatically generated by the Accord.NET Framework
              based on original research by Modesto Castrillon-Santana. The original
              code has been shared under a BSD license in the OpenCV library and has
              been incorporated in the Accord.NET Framework under permission of the
              original author.</para>
              
            <code>
              // Copyright (c) 2008, Modesto Castrillon-Santana (IUSIANI, University of
              // Las Palmas de Gran Canaria, Spain).
              //  All rights reserved.
              //  
              // Redistribution and use in source and binary forms, with or without
              // modification, are permitted provided that the following conditions are
              // met:
              //       
              //    * Redistributions of source code must retain the above copyright
              //      notice, this list of conditions and the following disclaimer.
              //    * Redistributions in binary form must reproduce the above
              //      copyright notice, this list of conditions and the following
              //      disclaimer in the documentation and/or other materials provided
              //      with the distribution.  
              //    * The name of Contributor may not used to endorse or promote products 
              //      derived from this software without specific prior written permission.
              //
              //  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
              //  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
              //  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
              //  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
              //  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
              //  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
              //  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
              //  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
              //  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
              //  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
              //  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
            </code>
            
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.Cascades.NoseHaarCascade.#ctor">
            <summary>
              Creates a new cascade for nose detection.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade">
            <summary>
              Cascade of Haar-like features' weak classification stages.
            </summary>
            
            <remarks>
            <para>
              The Viola-Jones object detection framework is the first object detection framework
              to provide competitive object detection rates in real-time proposed in 2001 by Paul
              Viola and Michael Jones. Although it can be trained to detect a variety of object
              classes, it was motivated primarily by the problem of face detection.</para>
              
            <para>
              The implementation of this code has used Viola and Jones' original publication, the
              OpenCV Library and the Marilena Project as reference. OpenCV is released under a BSD
              license, it is free for both academic and commercial use. Please be aware that some
              particular versions of the Haar object detection framework are patented by Viola and
              Jones and may be subject to restrictions for use in commercial applications. </para>
              
             <para>
                References:
                <list type="bullet">
                  <item><description>
                    <a href="http://www.cs.utexas.edu/~grauman/courses/spring2007/395T/papers/viola_cvpr2001.pdf">
                    Viola, P. and Jones, M. (2001). Rapid Object Detection using a Boosted Cascade
                    of Simple Features.</a></description></item>
                  <item><description>
                    <a href="http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework">
                    Wikipedia, The Free Encyclopedia. Viola-Jones object detection framework </a>
                  </description></item>
                </list></para>
            </remarks>
            
            <example>
            <para>
              To load an OpenCV-compatible XML definition for a Haar cascade, you can use HaarCascade's
              <see cref="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.FromXml(System.IO.Stream)">FromXml</see> static method. An example would be:</para>
              <code>
              String path = @"C:\Users\haarcascade-frontalface_alt2.xml";
              HaarCascade cascade1 = HaarCascade.FromXml(path);
              </code>
              
            <para>
              After the cascade has been loaded, it is possible to create a new <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector"/>
              using the cascade. Please see <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector"/> for more details. It is also
              possible to generate embeddable C# definitions from a cascade, avoiding the need to load
              XML files on program startup. Please see <see cref="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.ToCode(System.String,System.String)"/> method or 
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeWriter"/> class for details.</para> 
            </example>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.Width">
            <summary>
              Gets the stages' base width.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.Height">
            <summary>
              Gets the stages' base height.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.Stages">
            <summary>
              Gets the classification stages.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.HasTiltedFeatures">
            <summary>
              Gets a value indicating whether this cascade has tilted features.
            </summary>
            
            <value>
            	<c>true</c> if this cascade has tilted features; otherwise, <c>false</c>.
            </value>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.#ctor(System.Int32,System.Int32,VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage[])">
            <summary>
              Constructs a new Haar Cascade.
            </summary>
            
            <param name="baseWidth">Base feature width.</param>
            <param name="baseHeight">Base feature height.</param>
            <param name="stages">Haar-like features classification stages.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.#ctor(System.Int32,System.Int32)">
            <summary>
              Constructs a new Haar Cascade.
            </summary>
            
            <param name="baseWidth">Base feature width.</param>
            <param name="baseHeight">Base feature height.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.checkTiltedFeatures(VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage[])">
            <summary>
              Checks if the classifier contains tilted (rotated) features
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.FromXml(System.IO.Stream)">
            <summary>
              Loads a HaarCascade from a OpenCV-compatible XML file.
            </summary>
            
            <param name="stream">
               A <see cref="T:System.IO.Stream"/> containing the file stream
               for the xml definition of the classifier to be loaded.</param>
               
            <returns>The HaarCascadeClassifier loaded from the file.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.FromXml(System.String)">
            <summary>
              Loads a HaarCascade from a OpenCV-compatible XML file.
            </summary>
            
            <param name="path">
               The file path for the xml definition of the classifier to be loaded.</param>
               
            <returns>The HaarCascadeClassifier loaded from the file.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.FromXml(System.IO.TextReader)">
            <summary>
              Loads a HaarCascade from a OpenCV-compatible XML file.
            </summary>
            
            <param name="stringReader">
               A <see cref="T:System.IO.StringReader"/> containing the file stream
               for the xml definition of the classifier to be loaded.</param>
               
            <returns>The HaarCascadeClassifier loaded from the file.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.ToCode(System.String,System.String)">
            <summary>
              Saves a HaarCascade to C# code.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascade.ToCode(System.IO.TextWriter,System.String)">
            <summary>
              Saves a HaarCascade to C# code.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage">
            <summary>
              Haar Cascade Classifier Stage.
            </summary>
            
            <remarks>
              A Haar Cascade Classifier is composed of several stages. Each stage
              contains a set of classifier trees used in the decisioning process.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.Trees">
            <summary>
              Gets or sets the feature trees and its respective
              feature tree nodes which compose this stage.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.Threshold">
            <summary>
              Gets or sets the threshold associated with this stage,
              i.e. the minimum value the classifiers should output
              to decide if the image contains the object or not.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.ParentIndex">
            <summary>
              Gets the index of the parent stage from this stage.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.NextIndex">
            <summary>
              Gets the index of the next stage from this stage.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.#ctor">
            <summary>
              Constructs a new Haar Cascade Stage.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.#ctor(System.Double)">
            <summary>
              Constructs a new Haar Cascade Stage.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.#ctor(System.Double,System.Int32,System.Int32)">
            <summary>
              Constructs a new Haar Cascade Stage.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.Classify(VisioForge.Libs.Accord.Imaging.IntegralImage2,System.Int32,System.Int32,System.Double)">
            <summary>
              Classifies an image as having the searched object or not.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeSerializationObject">
            <summary>
              Haar Cascade Serialization Root. This class is used
              only for XML serialization/deserialization.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeSerializationObject.Stages">
            <summary>
              The stages retrieved after deserialization.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeWriter">
            <summary>
              Automatic transcriber for Haar cascades.
            </summary>
            
            <remarks>
              This class can be used to generate code-only definitions for Haar cascades,
              avoiding the need for loading and parsing XML files during application startup.
              This class generates C# code for a class inheriting from <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade"/>
              which may be used to create a <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector"/>.
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeWriter.#ctor(System.IO.TextWriter)">
            <summary>
              Constructs a new <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeWriter"/> class.
            </summary>
            <param name="stream">The stream to write to.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarCascadeWriter.Write(VisioForge.Libs.Accord.Vision.Detection.HaarCascade,System.String)">
            <summary>
              Writes the specified cascade.
            </summary>
            <param name="cascade">The cascade to write.</param>
            <param name="className">The name for the generated class.</param>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarClassifier">
             <summary>
               Strong classifier based on a weaker cascade of
               classifiers using Haar-like rectangular features.
             </summary>
            
             <remarks>
             <para>
               The Viola-Jones object detection framework is the first object detection framework
               to provide competitive object detection rates in real-time proposed in 2001 by Paul
               Viola and Michael Jones. Although it can be trained to detect a variety of object
               classes, it was motivated primarily by the problem of face detection.</para>
               
             <para>
               The implementation of this code has used Viola and Jones' original publication, the
               OpenCV Library and the Marilena Project as reference. OpenCV is released under a BSD
               license, it is free for both academic and commercial use. Please be aware that some
               particular versions of the Haar object detection framework are patented by Viola and
               Jones and may be subject to restrictions for use in commercial applications. The code
               has been implemented with full support for tilted Haar features.</para>
               
              <para>
                 References:
                 <list type="bullet">
                   <item><description>
                     <a href="http://www.cs.utexas.edu/~grauman/courses/spring2007/395T/papers/viola_cvpr2001.pdf">
                     Viola, P. and Jones, M. (2001). Rapid Object Detection using a Boosted Cascade
                     of Simple Features.</a></description></item>
                   <item><description>
                     <a href="http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework">
                     http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework</a>
                   </description></item>
                 </list>
               </para>
             </remarks>
             
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarClassifier.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarCascade)">
            <summary>
              Constructs a new classifier.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarClassifier.#ctor(System.Int32,System.Int32,VisioForge.Libs.Accord.Vision.Detection.HaarCascadeStage[])">
            <summary>
              Constructs a new classifier.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarClassifier.Cascade">
            <summary>
              Gets the cascade of weak-classifiers
              used by this strong classifier.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarClassifier.Scale">
            <summary>
              Gets or sets the scale of the search window
              being currently used by the classifier.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarClassifier.Compute(VisioForge.Libs.Accord.Imaging.IntegralImage2,System.Drawing.Rectangle)">
            <summary>
              Detects the presence of an object in a given window.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarFeature">
            <summary>
              Rectangular Haar-like feature container.
            </summary>
            
            <remarks>
              References:
              - http://en.wikipedia.org/wiki/Haar-like_features#Rectangular_Haar-like_features
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.Tilted">
            <summary>
              Gets or sets whether this feature is tilted.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.Rectangles">
            <summary>
              Gets or sets the Haar rectangles for this feature.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.#ctor">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarRectangle[])">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.#ctor(System.Int32[][])">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.#ctor(System.Boolean,System.Int32[][])">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.GetSum(VisioForge.Libs.Accord.Imaging.IntegralImage2,System.Int32,System.Int32)">
            <summary>
              Gets the sum of the areas of the rectangular features in an integral image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.SetScaleAndWeight(System.Single,System.Single)">
            <summary>
              Sets the scale and weight of a Haar-like rectangular feature container.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeature.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode">
            <summary>
              Haar Cascade Feature Tree Node.
            </summary>
            
            <remarks>
              The Feature Node is a node belonging to a feature tree,
              containing information about child nodes and an associated 
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarFeature"/>.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.Threshold">
            <summary>
              Gets the threshold for this feature.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.LeftValue">
            <summary>
              Gets the left value for this feature.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.RightValue">
            <summary>
              Gets the right value for this feature.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.LeftNodeIndex">
            <summary>
              Gets the left node index for this feature.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.RightNodeIndex">
            <summary>
              Gets the right node index for this feature.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.Feature">
            <summary>
              Gets the feature associated with this node.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.#ctor">
            <summary>
              Constructs a new feature tree node.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.#ctor(System.Double,System.Double,System.Double,System.Int32[][])">
            <summary>
              Constructs a new feature tree node.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.#ctor(System.Double,System.Double,System.Double,System.Boolean,System.Int32[][])">
            <summary>
              Constructs a new feature tree node.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarFeatureNode.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle">
            <summary>
              Scalable rectangular area.
            </summary>
            
            <remarks>
              A rectangle which can be at any position and scale within the original image.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.X">
            <summary>
              Gets or sets the x-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Y">
            <summary>
              Gets or sets the y-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Width">
            <summary>
              Gets or sets the width of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Height">
            <summary>
              Gets or sets the height of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Weight">
            <summary>
              Gets or sets the weight of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaledX">
            <summary>
              Gets or sets the scaled x-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaledY">
            <summary>
              Gets or sets the scaled y-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaledWidth">
            <summary>
              Gets or sets the scaled width of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaledHeight">
            <summary>
              Gets or sets the scaled height of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaledWeight">
            <summary>
              Gets or sets the scaled weight of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.#ctor(System.Int32[])">
            <summary>
              Constructs a new Haar-like feature rectangle.
            </summary>
            <param name="values">Values for this rectangle.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
              Constructs a new Haar-like feature rectangle.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Area">
            <summary>
              Gets the area of this rectangle.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaleRectangle(System.Single)">
            <summary>
              Scales the values of this rectangle.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.ScaleWeight(System.Single)">
            <summary>
              Scales the weight of this rectangle.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Parse(System.String)">
            <summary>
              Converts from a string representation.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarRectangle.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode">
            <summary>
              Object detector options for the search procedure.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.Default">
            <summary>
              Entire image will be scanned.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.Single">
            <summary>
              Only a single object will be retrieved.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap">
            <summary>
              If a object has already been detected inside an area,
              it will not be scanned twice for inner or overlapping
              objects, saving computation time.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.Average">
            <summary>
              If several objects are located within one another, 
              they will be averaged. Additionally, objects which
              have not been detected sufficient times may be dropped
              by setting <see cref="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.Suppression"/>.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorScalingMode">
            <summary>
              Object detector options for window scaling.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorScalingMode.GreaterToSmaller">
            <summary>
              Will start with a big search window and
              gradually scale into smaller ones.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorScalingMode.SmallerToGreater">
            <summary>
              Will start with small search windows and
              gradually scale into greater ones.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector">
            <summary>
              Viola-Jones Object Detector based on Haar-like features.
            </summary>
            <remarks>
            
            <para>
              The Viola-Jones object detection framework is the first object detection framework
              to provide competitive object detection rates in real-time proposed in 2001 by Paul
              Viola and Michael Jones. Although it can be trained to detect a variety of object
              classes, it was motivated primarily by the problem of face detection.</para>
              
            <para>
              The implementation of this code has used Viola and Jones' original publication, the
              OpenCV Library and the Marilena Project as reference. OpenCV is released under a BSD
              license, it is free for both academic and commercial use. Please be aware that some
              particular versions of the Haar object detection framework are patented by Viola and
              Jones and may be subject to restrictions for use in commercial applications. The code
              has been implemented with full support for tilted Haar features from the ground up.</para>
              
             <para>
                References:
                <list type="bullet">
                  <item><description>
                    <a href="http://www.cs.utexas.edu/~grauman/courses/spring2007/395T/papers/viola_cvpr2001.pdf">
                    Viola, P. and Jones, M. (2001). Rapid Object Detection using a Boosted Cascade
                    of Simple Features.</a></description></item>
                  <item><description>
                    <a href="http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework">
                    http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework</a>
                  </description></item>
                </list>
              </para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarCascade)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            
            <param name="cascade">
              The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarCascade,System.Int32)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            
            <param name="cascade">
              The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.</param>
            <param name="minSize">
              Minimum window size to consider when searching for 
              objects. Default value is <c>15</c>.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarCascade,System.Int32,VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            
            <param name="cascade">
              The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            <param name="minSize">
              Minimum window size to consider when searching for
              objects. Default value is <c>15</c>.</param>
            <param name="searchMode">The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode"/> to use
              during search. Please see documentation of <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode"/>
              for details. Default value is <see cref="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap"/></param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarCascade,System.Int32,VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode,System.Single)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            
            <param name="cascade">
              The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.</param>
            <param name="minSize">
              Minimum window size to consider when searching for
              objects. Default value is <c>15</c>.</param>
            <param name="searchMode">
              The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode"/> to use
              during search. Please see documentation of <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode"/>
              for details. Default value is <see cref="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap"/></param>
            <param name="scaleFactor">The re-scaling factor to use when re-scaling the window during search.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.#ctor(VisioForge.Libs.Accord.Vision.Detection.HaarCascade,System.Int32,VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode,System.Single,VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorScalingMode)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            
            <param name="cascade">
              The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:VisioForge.Libs.Accord.Vision.Detection.Cascades.FaceHaarCascade"/>. </param>
            <param name="minSize">
              Minimum window size to consider when searching for
              objects. Default value is <c>15</c>.</param>
            <param name="searchMode">The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode"/> to use
              during search. Please see documentation of <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode"/>
              for details. Default is <see cref="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap"/>.</param>
            <param name="scaleFactor">The scaling factor to rescale the window
              during search. Default value is <c>1.2f</c>.</param>
            <param name="scalingMode">The <see cref="T:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorScalingMode"/> to use
              when re-scaling the search window during search. Default is
              <see cref="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorScalingMode.SmallerToGreater"/>.</param>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.UseParallelProcessing">
            <summary>
              Gets or sets a value indicating whether this <see cref="T:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector"/>
              should scan the image using multiple threads. This setting can only be changed
              to true on .NET version which support the Parallel Tasks framework (4.0+).
            </summary>
            
            <value><c>true</c> to use multiple threads; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.MinSize">
            <summary>
              Minimum window size to consider when searching objects.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.MaxSize">
            <summary>
              Maximum window size to consider when searching objects.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.Channel">
            <summary>
              Gets or sets the color channel to use when processing color images. 
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.ScalingFactor">
            <summary>
              Gets or sets the scaling factor to rescale the window during search.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.SearchMode">
            <summary>
              Gets or sets the desired searching method.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.ScalingMode">
            <summary>
              Gets or sets the desired scaling method.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.Suppression">
            <summary>
              Gets or sets the minimum threshold used to supress rectangles which
              have not been detected sufficient number of times. This property only
              has effect when <see cref="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.SearchMode"/> is set to <see cref="F:VisioForge.Libs.Accord.Vision.Detection.ObjectDetectorSearchMode.Average"/>.
            </summary>
            
            <remarks>
            <para>
              The value of this property represets the minimum amount of detections
              made inside a region to report this region as an actual detection. For
              example, setting this property to two will discard all regions which 
              had not achieved at least two detected rectangles within it.</para>
              
            <para>
              Setting this property to a value higher than zero may decrease the
              number of false positives.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.DetectedObjects">
            <summary>
              Gets the detected objects bounding boxes.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.Classifier">
            <summary>
              Gets the internal Cascade Classifier used by this detector.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.Steady">
            <summary>
              Gets how many frames the object has
              been detected in a steady position.
            </summary>
            <value>
              The number of frames the detected object
              has been in a steady position.</value>
              
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.ProcessFrame(System.Drawing.Bitmap)">
            <summary>
              Performs object detection on the given frame.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.HaarObjectDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Performs object detection on the given frame.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.IObjectDetector">
            <summary>
              Object detector interface.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.IObjectDetector.DetectedObjects">
            <summary>
              Gets the location of the detected objects.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.IObjectDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Process a new image scene looking for objects.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Detection.GroupMatching">
            <summary>
              Group matching algorithm for detection region averging.
            </summary>
            
            <remarks>
              This class can be seen as a post-processing filter. Its goal is to
              group near or contained regions together in order to produce more
              robust and smooth estimates of the detected regions.
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.#ctor(System.Int32,System.Double)">
            <summary>
              Creates a new <see cref="T:VisioForge.Libs.Accord.Vision.Detection.GroupMatching"/> object.
            </summary>
            
            <param name="minimumNeighbors">
              The minimum number of neighbors needed to keep a detection. If a rectangle
              has less than this minimum number, it will be discarded as a false positive.</param>
            <param name="threshold">
              The minimum distance threshold to consider two rectangles as neighbors.
              Default is 0.2.</param>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.MinimumNeighbors">
            <summary>
              Gets or sets the minimum number of neighbors necessary to keep a detection.
              If a rectangle has less neighbors than this number, it will be discarded as
              a false positive.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.Group(System.Drawing.Rectangle[])">
            <summary>
              Groups possibly near rectangles into a smaller
              set of distinct and averaged rectangles.
            </summary>
            
            <param name="rectangles">The rectangles to group.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.average(System.Drawing.Rectangle[],System.Int32[]@)">
            <summary>
              Averages rectangles which belongs to the
              same class (have the same class label)
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.classify(System.Drawing.Rectangle[])">
            <summary>
              Detects rectangles which are near and 
              assigns similar class labels accordingly.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.merge(System.Int32,System.Int32)">
            <summary>
              Merges two labels.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Detection.GroupMatching.near(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
              Checks if two rectangles are near.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Tracking.CamshiftMode">
            <summary>
              Modes for the Camshift Tracker.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Tracking.CamshiftMode.RGB">
            <summary>
              By choosing RGB, the tracker will process raw high-intensity RGB values.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Tracking.CamshiftMode.HSL">
            <summary>
              By choosing HSL, the tracker will perform a RGB-to-HSL conversion and use the Hue value instead.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Tracking.CamshiftMode.Mixed">
            <summary>
              By choosing Mixed, the tracker will use HSL with some lightness information.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Tracking.Camshift">
            <summary>
              Continuously Adaptive Mean Shift (Camshift) Object Tracker
            </summary>
            <remarks>
            <para>
              Camshift stands for "Continuously Adaptive Mean Shift". It combines the basic
              Mean Shift algorithm with an adaptive region-sizing step. The kernel is a step
              function applied to a probability map. The probability of each image pixel is
              based on color using a method called histogram backprojection.</para>
            <para>
              The implementation of this code has used Gary Bradski's original publication,
              the OpenCV Library and the FaceIt implementation as references. The OpenCV
              library is distributed under a BSD license. FaceIt is distributed under a MIT
              license. The original licensing terms for FaceIt are described in the source
              code and in the Copyright.txt file accompanying the framework.</para>  
              
            <para>
              References:
              <list type="bullet">
                <item><description>
                  G.R. Bradski, Computer video face tracking for use in a perceptual user interface,
                  Intel Technology Journal, Q2 1998. Available on:
                  <a href="ftp://download.intel.com/technology/itj/q21998/pdf/camshift.pdf">
                  ftp://download.intel.com/technology/itj/q21998/pdf/camshift.pdf </a></description></item>
                <item><description>
                  R. Hewitt, Face tracking project description: Camshift Algorithm. Available on:
                  <a href="http://www.robinhewitt.com/research/track/camshift.html">
                  http://www.robinhewitt.com/research/track/camshift.html </a></description></item>
                <item><description>
                  OpenCV Computer Vision Library. Available on:
                  <a href="http://sourceforge.net/projects/opencvlibrary/">
                  http://sourceforge.net/projects/opencvlibrary/ </a></description></item>
                <item><description>
                  FaceIt object tracking in Flash AS3. Available on:
                  <a href="http://www.libspark.org/browser/as3/FaceIt">
                  http://www.libspark.org/browser/as3/FaceIt </a></description></item>
             </list></para>  
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.#ctor">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.#ctor(System.Drawing.Rectangle)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,VisioForge.Libs.Accord.Vision.Tracking.CamshiftMode)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.#ctor(System.Drawing.Rectangle,VisioForge.Libs.Accord.Vision.Tracking.CamshiftMode)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.SearchWindow">
            <summary>
              Gets or sets the current search window.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.AspectRatio">
            <summary>
              Gets or sets the desired window aspect ratio.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.Mode">
            <summary>
              Gets or sets the mode of operation for this tracker.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.HslSaturationRange">
            <summary>
              If using HSL mode, specifies the operational saturation range for the tracker.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.HslLightnessRange">
            <summary>
              If using HSL mode, specifies the operational lighness range for the tracker.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.TrackingObject">
            <summary>
              Gets the location of the object being tracked.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker
              should extract the object image from the source. The
              extracted image will be available in <see cref="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Image"/>.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.Map">
            <summary>
              Probability map
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.Conservative">
            <summary>
              Gets or sets whether the algorithm should scan only the
              active window or the entire image for histogram ratio.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.Smooth">
            <summary>
              Gets or sets a value indicating whether the angular
              movements should be smoothed using a moving average.
            </summary>
            <value><c>true</c> to smooth angular movements; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.Camshift.IsSteady">
            <summary>
              Gets whether the tracking object is
              showing little variation of fluctuation.
            </summary>
            <value><c>true</c> if the tracking object is steady; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.Reset">
            <summary>
              Resets the object tracking algorithm.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.GetBackprojection">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.GetBackprojection(System.Drawing.Imaging.PixelFormat)">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.GetBackprojection(System.Drawing.Imaging.PixelFormat,System.Drawing.Rectangle)">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.GetBackprojection(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Processes a new video frame.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.camshift(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Camshift algorithm
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.meanShift(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Mean shift algorithm
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.computeHistogramRatio(System.Single[],System.Single[],System.Single[])">
            <summary>
              Computes the ratio histogram between to histograms.
            </summary>
            
            <remarks>
              http://www.robinhewitt.com/research/track/backproject.html
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.generateBackprojectionMap(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Single[])">
            <summary>
              Image histogram back-projection.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.createHistogram(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Creates a color histogram discarding low intensity colors
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.Camshift.checkSteadiness">
            <summary>
              Checks for aberrant fluctuations in the tracking object.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Tracking.IObjectTracker">
            <summary>
              Object tracker interface.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.IObjectTracker.TrackingObject">
            <summary>
              Gets the current location of the object being tracked.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.IObjectTracker.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Process a new video frame.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.IObjectTracker.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker should
              extract the object image from the source. The extracted image
              should be stored in <see cref="P:VisioForge.Libs.Accord.Vision.Tracking.IObjectTracker.TrackingObject"/>.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker">
            <summary>
              Template matching object tracker.
            </summary>
            
            <remarks>
              The matching tracker will track the object presented in the search window
              of the first frame given to the tracker. To reset the tracker and start
              tracking another object, one can call the Reset method, then set the search
              window around a new object of interest present the image containing the new
              object to the tracker.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.SearchWindow">
            <summary>
              Gets or sets the current search window.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.TrackingObject">
            <summary>
              Gets the current location of the object being tracked.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.Threshold">
            <summary>
              Gets or sets the similarty threshold to 
              determine when the object has been lost.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker should
              extract the object image from the source. The extracted image
              should be stored in <see cref="P:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.TrackingObject"/>.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.#ctor">
            <summary>
              Constructs a new <see cref="T:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker"/> object tracker.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
              Process a new video frame.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.MatchingTracker.Reset">
            <summary>
              Resets this instance.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Tracking.AxisOrientation">
            <summary>
              Axis orientation.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Tracking.AxisOrientation.Horizontal">
            <summary>
              Horizontal axis.
            </summary>
            
        </member>
        <member name="F:VisioForge.Libs.Accord.Vision.Tracking.AxisOrientation.Vertical">
            <summary>
              Vertical axis.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject">
            <summary>
              Tracking object to represent an object in a scene.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Tag">
            <summary>
            Gets or sets an user-defined tag associated with this object.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Rectangle">
            <summary>
              Gets or sets the rectangle containing the object.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Center">
            <summary>
              Gets or sets the center of gravity of the object 
              relative to the original image from where it has 
              been extracted.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Image">
            <summary>
              Gets or sets the object's extracted image.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.IsEmpty">
            <summary>
            Gets a value indicating whether the object is empty.
            </summary>
            
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Area">
            <summary>
              Gets the area of the object.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Angle">
            <summary>
              Gets or sets the angle of the object.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.#ctor">
            <summary>
              Constructs a new tracking object.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.#ctor(VisioForge.Libs.AForge.IntPoint)">
            <summary>
              Constructs a new tracking object.
            </summary>
            
            <param name="center">The center of gravity of the object.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.#ctor(System.Drawing.Rectangle,VisioForge.Libs.AForge.IntPoint,System.Single)">
            <summary>
              Constructs a new tracking object.
            </summary>
            
            <param name="angle">The angle of orientation for the object.</param>
            <param name="center">The center of gravity of the object.</param>
            <param name="rectangle">The rectangle containing the object.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.#ctor(System.Drawing.Rectangle,System.Single)">
            <summary>
              Constructs a new tracking object.
            </summary>
            
            <param name="rectangle">The rectangle containing the object.</param>
            <param name="angle">The angle of the object.</param>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.GetAxis">
            <summary>
              Gets two points defining the horizontal axis of the object.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.GetAxis(VisioForge.Libs.Accord.Vision.Tracking.AxisOrientation)">
            <summary>
              Gets two points defining the axis of the object.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Reset">
            <summary>
              Resets this tracking object.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.System#ICloneable#Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="M:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Clone(System.Boolean)">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
            <param name="excludeImage">Pass true to not include
              the <see cref="P:VisioForge.Libs.Accord.Vision.Tracking.TrackingObject.Image"/> in the copy object.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.MessageTransferHandler">
             <summary>
             A delegate which is used by events notifying abount sent/received message.
             </summary>
             
             <param name="sender">Event sender.</param>
             <param name="eventArgs">Event arguments containing details about the transferred message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.DoublePoint">
            <summary>
            Structure for representing a pair of coordinates of double type.
            </summary>
            
            <remarks><para>The structure is used to store a pair of floating point
            coordinates with double precision.</para>
            
            <para>Sample usage:</para>
            <code>
            // assigning coordinates in the constructor
            DoublePoint p1 = new DoublePoint( 10, 20 );
            // creating a point and assigning coordinates later
            DoublePoint p2;
            p2.X = 30;
            p2.Y = 40;
            // calculating distance between two points
            double distance = p1.DistanceTo( p2 );
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.DoublePoint.X">
            <summary> 
            X coordinate.
            </summary> 
            
        </member>
        <member name="F:VisioForge.Libs.AForge.DoublePoint.Y">
            <summary> 
            Y coordinate.
            </summary> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.DoublePoint"/> structure.
            </summary>
            
            <param name="x">X axis coordinate.</param>
            <param name="y">Y axis coordinate.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.DistanceTo(VisioForge.Libs.AForge.DoublePoint)">
            <summary>
            Calculate Euclidean distance between two points.
            </summary>
            
            <param name="anotherPoint">Point to calculate distance to.</param>
            
            <returns>Returns Euclidean distance between this point and
            <paramref name="anotherPoint"/> points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.SquaredDistanceTo(VisioForge.Libs.AForge.DoublePoint)">
            <summary>
            Calculate squared Euclidean distance between two points.
            </summary>
            
            <param name="anotherPoint">Point to calculate distance to.</param>
            
            <returns>Returns squared Euclidean distance between this point and
            <paramref name="anotherPoint"/> points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Addition(VisioForge.Libs.AForge.DoublePoint,VisioForge.Libs.AForge.DoublePoint)">
            <summary>
            Addition operator - adds values of two points.
            </summary>
            
            <param name="point1">First point for addition.</param>
            <param name="point2">Second point for addition.</param>
            
            <returns>Returns new point which coordinates equal to sum of corresponding
            coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Add(VisioForge.Libs.AForge.DoublePoint,VisioForge.Libs.AForge.DoublePoint)">
            <summary>
            Addition operator - adds values of two points.
            </summary>
            
            <param name="point1">First point for addition.</param>
            <param name="point2">Second point for addition.</param>
            
            <returns>Returns new point which coordinates equal to sum of corresponding
            coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Subtraction(VisioForge.Libs.AForge.DoublePoint,VisioForge.Libs.AForge.DoublePoint)">
             <summary>
             Subtraction operator - subtracts values of two points.
             </summary>
             
             <param name="point1">Point to subtract from.</param>
             <param name="point2">Point to subtract.</param>
             
             <returns>Returns new point which coordinates equal to difference of corresponding
             coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Subtract(VisioForge.Libs.AForge.DoublePoint,VisioForge.Libs.AForge.DoublePoint)">
             <summary>
             Subtraction operator - subtracts values of two points.
             </summary>
             
             <param name="point1">Point to subtract from.</param>
             <param name="point2">Point to subtract.</param>
             
             <returns>Returns new point which coordinates equal to difference of corresponding
             coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Addition(VisioForge.Libs.AForge.DoublePoint,System.Double)">
            <summary>
            Addition operator - adds scalar to the specified point.
            </summary>
            
            <param name="point">Point to increase coordinates of.</param>
            <param name="valueToAdd">Value to add to coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point increased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Add(VisioForge.Libs.AForge.DoublePoint,System.Double)">
            <summary>
            Addition operator - adds scalar to the specified point.
            </summary>
            
            <param name="point">Point to increase coordinates of.</param>
            <param name="valueToAdd">Value to add to coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point increased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Subtraction(VisioForge.Libs.AForge.DoublePoint,System.Double)">
            <summary>
            Subtraction operator - subtracts scalar from the specified point.
            </summary>
            
            <param name="point">Point to decrease coordinates of.</param>
            <param name="valueToSubtract">Value to subtract from coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point decreased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Subtract(VisioForge.Libs.AForge.DoublePoint,System.Double)">
            <summary>
            Subtraction operator - subtracts scalar from the specified point.
            </summary>
            
            <param name="point">Point to decrease coordinates of.</param>
            <param name="valueToSubtract">Value to subtract from coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point decreased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Multiply(VisioForge.Libs.AForge.DoublePoint,System.Double)">
             <summary>
             Multiplication operator - multiplies coordinates of the specified point by scalar value.
             </summary>
             
             <param name="point">Point to multiply coordinates of.</param>
             <param name="factor">Multiplication factor.</param>
             
             <returns>Returns new point which coordinates equal to coordinates of
             the specified point multiplied by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Multiply(VisioForge.Libs.AForge.DoublePoint,System.Double)">
             <summary>
             Multiplication operator - multiplies coordinates of the specified point by scalar value.
             </summary>
             
             <param name="point">Point to multiply coordinates of.</param>
             <param name="factor">Multiplication factor.</param>
             
             <returns>Returns new point which coordinates equal to coordinates of
             the specified point multiplied by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Division(VisioForge.Libs.AForge.DoublePoint,System.Double)">
            <summary>
            Division operator - divides coordinates of the specified point by scalar value.
            </summary>
            
            <param name="point">Point to divide coordinates of.</param>
            <param name="factor">Division factor.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point divided by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Divide(VisioForge.Libs.AForge.DoublePoint,System.Double)">
            <summary>
            Division operator - divides coordinates of the specified point by scalar value.
            </summary>
            
            <param name="point">Point to divide coordinates of.</param>
            <param name="factor">Division factor.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point divided by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Equality(VisioForge.Libs.AForge.DoublePoint,VisioForge.Libs.AForge.DoublePoint)">
             <summary>
             Equality operator - checks if two points have equal coordinates.
             </summary>
             
             <param name="point1">First point to check.</param>
             <param name="point2">Second point to check.</param>
             
             <returns>Returns <see langword="true"/> if coordinates of specified
             points are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Inequality(VisioForge.Libs.AForge.DoublePoint,VisioForge.Libs.AForge.DoublePoint)">
             <summary>
             Inequality operator - checks if two points have different coordinates.
             </summary>
             
             <param name="point1">First point to check.</param>
             <param name="point2">Second point to check.</param>
             
             <returns>Returns <see langword="true"/> if coordinates of specified
             points are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.DoublePoint"/> equal to the specified one.
            </summary>
            
            <param name="obj">Another point to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Explicit(VisioForge.Libs.AForge.DoublePoint)~VisioForge.Libs.AForge.IntPoint">
            <summary>
            Explicit conversion to <see cref="T:VisioForge.Libs.AForge.IntPoint"/>.
            </summary>
            
            <param name="point">Double precision point to convert to integer point.</param>
            
            <returns>Returns new integer point which coordinates are explicitly converted
            to integers from coordinates of the specified double precision point by
            casting double values to integers value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.op_Explicit(VisioForge.Libs.AForge.DoublePoint)~VisioForge.Libs.AForge.Point">
            <summary>
            Explicit conversion to <see cref="T:VisioForge.Libs.AForge.Point"/>.
            </summary>
            
            <param name="point">Double precision point to convert to single precision point.</param>
            
            <returns>Returns new single precision point which coordinates are explicitly converted
            to floats from coordinates of the specified double precision point by
            casting double values to float value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.Round">
            <summary>
            Rounds the double precision point.
            </summary>
            
            <returns>Returns new integer point, which coordinates equal to whole numbers
            nearest to the corresponding coordinates of the double precision point.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains values of the point in readable form.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoublePoint.EuclideanNorm">
            <summary>
            Calculate Euclidean norm of the vector comprised of the point's 
            coordinates - distance from (0, 0) in other words.
            </summary>
            
            <returns>Returns point's distance from (0, 0) point.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.DoubleRange">
            <summary>
            Represents a double range with minimum and maximum values.
            </summary>
            
            <remarks>
            <para>The class represents a double range with inclusive limits -
            both minimum and maximum values of the range are included into it.
            Mathematical notation of such range is <b>[min, max]</b>.</para>
            
            <para>Sample usage:</para>
            <code>
            // create [0.25, 1.5] range
            DoubleRange range1 = new DoubleRange( 0.25, 1.5 );
            // create [1.00, 2.25] range
            DoubleRange range2 = new DoubleRange( 1.00, 2.25 );
            // check if values is inside of the first range
            if ( range1.IsInside( 0.75 ) )
            {
                // ...
            }
            // check if the second range is inside of the first range
            if ( range1.IsInside( range2 ) )
            {
                // ...
            }
            // check if two ranges overlap
            if ( range1.IsOverlapping( range2 ) )
            {
                // ...
            }
            </code>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.DoubleRange.Min">
            <summary>
            Minimum value of the range.
            </summary>
            
            <remarks><para>The property represents minimum value (left side limit) or the range -
            [<b>min</b>, max].</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.DoubleRange.Max">
            <summary>
            Maximum value of the range.
            </summary>
            
            <remarks><para>The property represents maximum value (right side limit) or the range -
            [min, <b>max</b>].</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.DoubleRange.Length">
            <summary>
            Length of the range (deffirence between maximum and minimum values).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.DoubleRange"/> class.
            </summary>
            
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.IsInside(System.Double)">
            <summary>
            Check if the specified value is inside of the range.
            </summary>
            
            <param name="x">Value to check.</param>
            
            <returns><b>True</b> if the specified value is inside of the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.IsInside(VisioForge.Libs.AForge.DoubleRange)">
            <summary>
            Check if the specified range is inside of the range.
            </summary>
            
            <param name="range">Range to check.</param>
            
            <returns><b>True</b> if the specified range is inside of the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.IsOverlapping(VisioForge.Libs.AForge.DoubleRange)">
            <summary>
            Check if the specified range overlaps with the range.
            </summary>
            
            <param name="range">Range to check for overlapping.</param>
            
            <returns><b>True</b> if the specified range overlaps with the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.ToIntRange(System.Boolean)">
             <summary>
             Convert the signle precision range to integer range.
             </summary>
             
             <param name="provideInnerRange">Specifies if inner integer range must be returned or outer range.</param>
             
             <returns>Returns integer version of the range.</returns>
             
             <remarks>If <paramref name="provideInnerRange"/> is set to <see langword="true"/>, then the
             returned integer range will always fit inside of the current single precision range.
             If it is set to <see langword="false"/>, then current single precision range will always
             fit into the returned integer range.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.op_Equality(VisioForge.Libs.AForge.DoubleRange,VisioForge.Libs.AForge.DoubleRange)">
             <summary>
             Equality operator - checks if two ranges have equal min/max values.
             </summary>
             
             <param name="range1">First range to check.</param>
             <param name="range2">Second range to check.</param>
             
             <returns>Returns <see langword="true"/> if min/max values of specified
             ranges are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.op_Inequality(VisioForge.Libs.AForge.DoubleRange,VisioForge.Libs.AForge.DoubleRange)">
             <summary>
             Inequality operator - checks if two ranges have different min/max values.
             </summary>
             
             <param name="range1">First range to check.</param>
             <param name="range2">Second range to check.</param>
             
             <returns>Returns <see langword="true"/> if min/max values of specified
             ranges are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.Range"/> equal to the specified one.
            </summary>
            
            <param name="obj">Another range to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DoubleRange.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains min/max values of the range in readable form.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.CommunicationBufferEventArgs">
            <summary>
            Event arguments holding a buffer sent or received during some communication process.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.CommunicationBufferEventArgs.MessageLength">
            <summary>
            Length of the transfered message.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.CommunicationBufferEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.CommunicationBufferEventArgs"/> class.
            </summary>
            
            <param name="message">Message being transfered during communication process.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.CommunicationBufferEventArgs.#ctor(System.Byte[],System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.CommunicationBufferEventArgs"/> class.
             </summary>
            
             <param name="buffer">Buffer containing the message being transferred during communication process.</param>
             <param name="index">Starting index of the message within the buffer.</param>
             <param name="length">Length of the message within the buffer.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.CommunicationBufferEventArgs.GetMessage">
            <summary>
            Get the transfered message.
            </summary>
            
            <returns>Returns copy of the transfered message.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.CommunicationBufferEventArgs.GetMessageString">
             <summary>
             Get the transferred message as string.
             </summary>
             
             <returns>Returns string encoding the transferred message.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.ConnectionFailedException">
            <summary>
            Connection failed exception.
            </summary>
            
            <remarks><para>The exception is thrown in the case if connection to device
            has failed.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ConnectionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.ConnectionFailedException"/> class.
            </summary>
            
            <param name="message">Exception's message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.ConnectionLostException">
            <summary>
            Connection lost exception.
            </summary>
            
            <remarks><para>The exception is thrown in the case if connection to device
            is lost. When the exception is caught, user may need to reconnect to the device.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ConnectionLostException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.ConnectionLostException"/> class.
            </summary>
            
            <param name="message">Exception's message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.NotConnectedException">
            <summary>
            Not connected exception.
            </summary>
            
            <remarks><para>The exception is thrown in the case if connection to device
            is not established, but user requests for its services.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.NotConnectedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.NotConnectedException"/> class.
            </summary>
            
            <param name="message">Exception's message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.DeviceBusyException">
            <summary>
            Device busy exception.
            </summary>
            
            <remarks><para>The exception is thrown in the case if access to certain device
            is not available due to the fact that it is currently busy handling other request/connection.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DeviceBusyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.DeviceBusyException"/> class.
            </summary>
            
            <param name="message">Exception's message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.DeviceErrorException">
             <summary>
             Device error exception.
             </summary>
             
             <remarks><para>The exception is thrown in the case if some error happens with a device, which
             may need to be reported to user.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.DeviceErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.DeviceErrorException"/> class.
            </summary>
            
            <param name="message">Exception's message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.IntPoint">
            <summary>
            Structure for representing a pair of coordinates of integer type.
            </summary>
            
            <remarks><para>The structure is used to store a pair of integer coordinates.</para>
            
            <para>Sample usage:</para>
            <code>
            // assigning coordinates in the constructor
            IntPoint p1 = new IntPoint( 10, 20 );
            // creating a point and assigning coordinates later
            IntPoint p2;
            p2.X = 30;
            p2.Y = 40;
            // calculating distance between two points
            float distance = p1.DistanceTo( p2 );
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.IntPoint.X">
            <summary> 
            X coordinate.
            </summary> 
            
        </member>
        <member name="F:VisioForge.Libs.AForge.IntPoint.Y">
            <summary> 
            Y coordinate.
            </summary> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.IntPoint"/> structure.
            </summary>
            
            <param name="x">X axis coordinate.</param>
            <param name="y">Y axis coordinate.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.DistanceTo(VisioForge.Libs.AForge.IntPoint)">
            <summary>
            Calculate Euclidean distance between two points.
            </summary>
            
            <param name="anotherPoint">Point to calculate distance to.</param>
            
            <returns>Returns Euclidean distance between this point and
            <paramref name="anotherPoint"/> points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.SquaredDistanceTo(VisioForge.Libs.AForge.Point)">
            <summary>
            Calculate squared Euclidean distance between two points.
            </summary>
            
            <param name="anotherPoint">Point to calculate distance to.</param>
            
            <returns>Returns squared Euclidean distance between this point and
            <paramref name="anotherPoint"/> points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Addition(VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint)">
            <summary>
            Addition operator - adds values of two points.
            </summary>
            
            <param name="point1">First point for addition.</param>
            <param name="point2">Second point for addition.</param>
            
            <returns>Returns new point which coordinates equal to sum of corresponding
            coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Add(VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint)">
            <summary>
            Addition operator - adds values of two points.
            </summary>
            
            <param name="point1">First point for addition.</param>
            <param name="point2">Second point for addition.</param>
            
            <returns>Returns new point which coordinates equal to sum of corresponding
            coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Subtraction(VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint)">
             <summary>
             Subtraction operator - subtracts values of two points.
             </summary>
             
             <param name="point1">Point to subtract from.</param>
             <param name="point2">Point to subtract.</param>
             
             <returns>Returns new point which coordinates equal to difference of corresponding
             coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Subtract(VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint)">
             <summary>
             Subtraction operator - subtracts values of two points.
             </summary>
             
             <param name="point1">Point to subtract from.</param>
             <param name="point2">Point to subtract.</param>
             
             <returns>Returns new point which coordinates equal to difference of corresponding
             coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Addition(VisioForge.Libs.AForge.IntPoint,System.Int32)">
            <summary>
            Addition operator - adds scalar to the specified point.
            </summary>
            
            <param name="point">Point to increase coordinates of.</param>
            <param name="valueToAdd">Value to add to coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point increased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Add(VisioForge.Libs.AForge.IntPoint,System.Int32)">
            <summary>
            Addition operator - adds scalar to the specified point.
            </summary>
            
            <param name="point">Point to increase coordinates of.</param>
            <param name="valueToAdd">Value to add to coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point increased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Subtraction(VisioForge.Libs.AForge.IntPoint,System.Int32)">
            <summary>
            Subtraction operator - subtracts scalar from the specified point.
            </summary>
            
            <param name="point">Point to decrease coordinates of.</param>
            <param name="valueToSubtract">Value to subtract from coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point decreased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Subtract(VisioForge.Libs.AForge.IntPoint,System.Int32)">
            <summary>
            Subtraction operator - subtracts scalar from the specified point.
            </summary>
            
            <param name="point">Point to decrease coordinates of.</param>
            <param name="valueToSubtract">Value to subtract from coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point decreased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Multiply(VisioForge.Libs.AForge.IntPoint,System.Int32)">
             <summary>
             Multiplication operator - multiplies coordinates of the specified point by scalar value.
             </summary>
             
             <param name="point">Point to multiply coordinates of.</param>
             <param name="factor">Multiplication factor.</param>
             
             <returns>Returns new point which coordinates equal to coordinates of
             the specified point multiplied by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Multiply(VisioForge.Libs.AForge.IntPoint,System.Int32)">
             <summary>
             Multiplication operator - multiplies coordinates of the specified point by scalar value.
             </summary>
             
             <param name="point">Point to multiply coordinates of.</param>
             <param name="factor">Multiplication factor.</param>
             
             <returns>Returns new point which coordinates equal to coordinates of
             the specified point multiplied by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Division(VisioForge.Libs.AForge.IntPoint,System.Int32)">
            <summary>
            Division operator - divides coordinates of the specified point by scalar value.
            </summary>
            
            <param name="point">Point to divide coordinates of.</param>
            <param name="factor">Division factor.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point divided by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Divide(VisioForge.Libs.AForge.IntPoint,System.Int32)">
            <summary>
            Division operator - divides coordinates of the specified point by scalar value.
            </summary>
            
            <param name="point">Point to divide coordinates of.</param>
            <param name="factor">Division factor.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point divided by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Equality(VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint)">
             <summary>
             Equality operator - checks if two points have equal coordinates.
             </summary>
             
             <param name="point1">First point to check.</param>
             <param name="point2">Second point to check.</param>
             
             <returns>Returns <see langword="true"/> if coordinates of specified
             points are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Inequality(VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint)">
             <summary>
             Inequality operator - checks if two points have different coordinates.
             </summary>
             
             <param name="point1">First point to check.</param>
             <param name="point2">Second point to check.</param>
             
             <returns>Returns <see langword="true"/> if coordinates of specified
             points are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.IntPoint"/> equal to the specified one.
            </summary>
            
            <param name="obj">Another point to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Implicit(VisioForge.Libs.AForge.IntPoint)~VisioForge.Libs.AForge.Point">
            <summary>
            Implicit conversion to <see cref="T:VisioForge.Libs.AForge.Point"/>.
            </summary>
            
            <param name="point">Integer point to convert to single precision point.</param>
            
            <returns>Returns new single precision point which coordinates are implicitly converted
            to floats from coordinates of the specified integer point.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.op_Implicit(VisioForge.Libs.AForge.IntPoint)~VisioForge.Libs.AForge.DoublePoint">
            <summary>
            Implicit conversion to <see cref="T:VisioForge.Libs.AForge.DoublePoint"/>.
            </summary>
            
            <param name="point">Integer point to convert to double precision point.</param>
            
            <returns>Returns new double precision point which coordinates are implicitly converted
            to doubles from coordinates of the specified integer point.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains values of the point in readable form.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntPoint.EuclideanNorm">
            <summary>
            Calculate Euclidean norm of the vector comprised of the point's 
            coordinates - distance from (0, 0) in other words.
            </summary>
            
            <returns>Returns point's distance from (0, 0) point.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.IntRange">
             <summary>
             Represents an integer range with minimum and maximum values.
             </summary>
             
             <remarks>
             <para>The class represents an integer range with inclusive limits -
             both minimum and maximum values of the range are included into it.
             Mathematical notation of such range is <b>[min, max]</b>.</para>
             
             <para>Sample usage:</para>
             <code>
             // create [1, 10] range
             IntRange range1 = new IntRange( 1, 10 );
             // create [5, 15] range
             IntRange range2 = new IntRange( 5, 15 );
             // check if values is inside of the first range
             if ( range1.IsInside( 7 ) )
             {
                 // ...
             }
             // check if the second range is inside of the first range
             if ( range1.IsInside( range2 ) )
             {
                 // ...
             }
             // check if two ranges overlap
             if ( range1.IsOverlapping( range2 ) )
             {
                 // ...
             }
             </code>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.IntRange.Min">
            <summary>
            Minimum value of the range.
            </summary>
            
            <remarks><para>The property represents minimum value (left side limit) or the range -
            [<b>min</b>, max].</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.IntRange.Max">
            <summary>
            Maximum value of the range.
            </summary>
            
            <remarks><para>The property represents maximum value (right side limit) or the range -
            [min, <b>max</b>].</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.IntRange.Length">
            <summary>
            Length of the range (deffirence between maximum and minimum values).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.IntRange"/> structure.
            </summary>
            
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.IsInside(System.Int32)">
            <summary>
            Check if the specified value is inside of the range.
            </summary>
            
            <param name="x">Value to check.</param>
            
            <returns><b>True</b> if the specified value is inside of the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.IsInside(VisioForge.Libs.AForge.IntRange)">
            <summary>
            Check if the specified range is inside of the range.
            </summary>
            
            <param name="range">Range to check.</param>
            
            <returns><b>True</b> if the specified range is inside of the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.IsOverlapping(VisioForge.Libs.AForge.IntRange)">
            <summary>
            Check if the specified range overlaps with the range.
            </summary>
            
            <param name="range">Range to check for overlapping.</param>
            
            <returns><b>True</b> if the specified range overlaps with the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.op_Implicit(VisioForge.Libs.AForge.IntRange)~VisioForge.Libs.AForge.Range">
            <summary>
            Implicit conversion to <see cref="T:VisioForge.Libs.AForge.Range"/>.
            </summary>
            
            <param name="range">Integer range to convert to single precision range.</param>
            
            <returns>Returns new single precision range which min/max values are implicitly converted
            to floats from min/max values of the specified integer range.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.op_Equality(VisioForge.Libs.AForge.IntRange,VisioForge.Libs.AForge.IntRange)">
             <summary>
             Equality operator - checks if two ranges have equal min/max values.
             </summary>
             
             <param name="range1">First range to check.</param>
             <param name="range2">Second range to check.</param>
             
             <returns>Returns <see langword="true"/> if min/max values of specified
             ranges are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.op_Inequality(VisioForge.Libs.AForge.IntRange,VisioForge.Libs.AForge.IntRange)">
             <summary>
             Inequality operator - checks if two ranges have different min/max values.
             </summary>
             
             <param name="range1">First range to check.</param>
             <param name="range2">Second range to check.</param>
             
             <returns>Returns <see langword="true"/> if min/max values of specified
             ranges are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.Range"/> equal to the specified one.
            </summary>
            
            <param name="obj">Another range to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.IntRange.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains min/max values of the range in readable form.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Parallel">
             <summary>
             The class provides support for parallel computations, paralleling loop's iterations.
             </summary>
             
             <remarks><para>The class allows to parallel loop's iteration computing them in separate threads,
             what allows their simultaneous execution on multiple CPUs/cores.
             </para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Parallel.ForLoopBody">
            <summary>
            Delegate defining for-loop's body.
            </summary>
            
            <param name="index">Loop's index.</param>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Parallel.ThreadsCount">
            <summary>
            Number of threads used for parallel computations.
            </summary>
            
            <remarks><para>The property sets how many worker threads are created for paralleling
            loops' computations.</para>
            
            <para>By default the property is set to number of CPU's in the system
            (see <see cref="P:System.Environment.ProcessorCount"/>).</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Parallel.For(System.Int32,System.Int32,VisioForge.Libs.AForge.Parallel.ForLoopBody)">
            <summary>
            Executes a for-loop in which iterations may run in parallel. 
            </summary>
            
            <param name="start">Loop's start index.</param>
            <param name="stop">Loop's stop index.</param>
            <param name="loopBody">Loop's body.</param>
            
            <remarks><para>The method is used to parallel for-loop running its iterations in
            different threads. The <b>start</b> and <b>stop</b> parameters define loop's
            starting and ending loop's indexes. The number of iterations is equal to <b>stop - start</b>.
            </para>
            
            <para>Sample usage:</para>
            <code>
            Parallel.For( 0, 20, delegate( int i )
            // which is equivalent to
            // for ( int i = 0; i &lt; 20; i++ )
            {
                System.Diagnostics.Debug.WriteLine( "Iteration: " + i );
                // ...
            } );
            </code>
            </remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Point">
            <summary>
            Structure for representing a pair of coordinates of float type.
            </summary>
            
            <remarks><para>The structure is used to store a pair of floating point
            coordinates with single precision.</para>
            
            <para>Sample usage:</para>
            <code>
            // assigning coordinates in the constructor
            Point p1 = new Point( 10, 20 );
            // creating a point and assigning coordinates later
            Point p2;
            p2.X = 30;
            p2.Y = 40;
            // calculating distance between two points
            float distance = p1.DistanceTo( p2 );
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Point.X">
            <summary> 
            X coordinate.
            </summary> 
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Point.Y">
            <summary> 
            Y coordinate.
            </summary> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Point"/> structure.
            </summary>
            
            <param name="x">X axis coordinate.</param>
            <param name="y">Y axis coordinate.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.DistanceTo(VisioForge.Libs.AForge.Point)">
            <summary>
            Calculate Euclidean distance between two points.
            </summary>
            
            <param name="anotherPoint">Point to calculate distance to.</param>
            
            <returns>Returns Euclidean distance between this point and
            <paramref name="anotherPoint"/> points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.SquaredDistanceTo(VisioForge.Libs.AForge.Point)">
            <summary>
            Calculate squared Euclidean distance between two points.
            </summary>
            
            <param name="anotherPoint">Point to calculate distance to.</param>
            
            <returns>Returns squared Euclidean distance between this point and
            <paramref name="anotherPoint"/> points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Addition(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
            <summary>
            Addition operator - adds values of two points.
            </summary>
            
            <param name="point1">First point for addition.</param>
            <param name="point2">Second point for addition.</param>
            
            <returns>Returns new point which coordinates equal to sum of corresponding
            coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Add(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
            <summary>
            Addition operator - adds values of two points.
            </summary>
            
            <param name="point1">First point for addition.</param>
            <param name="point2">Second point for addition.</param>
            
            <returns>Returns new point which coordinates equal to sum of corresponding
            coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Subtraction(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
             <summary>
             Subtraction operator - subtracts values of two points.
             </summary>
             
             <param name="point1">Point to subtract from.</param>
             <param name="point2">Point to subtract.</param>
             
             <returns>Returns new point which coordinates equal to difference of corresponding
             coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Subtract(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
             <summary>
             Subtraction operator - subtracts values of two points.
             </summary>
             
             <param name="point1">Point to subtract from.</param>
             <param name="point2">Point to subtract.</param>
             
             <returns>Returns new point which coordinates equal to difference of corresponding
             coordinates of specified points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Addition(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Addition operator - adds scalar to the specified point.
            </summary>
            
            <param name="point">Point to increase coordinates of.</param>
            <param name="valueToAdd">Value to add to coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point increased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Add(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Addition operator - adds scalar to the specified point.
            </summary>
            
            <param name="point">Point to increase coordinates of.</param>
            <param name="valueToAdd">Value to add to coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point increased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Subtraction(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Subtraction operator - subtracts scalar from the specified point.
            </summary>
            
            <param name="point">Point to decrease coordinates of.</param>
            <param name="valueToSubtract">Value to subtract from coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point decreased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Subtract(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Subtraction operator - subtracts scalar from the specified point.
            </summary>
            
            <param name="point">Point to decrease coordinates of.</param>
            <param name="valueToSubtract">Value to subtract from coordinates of the specified point.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point decreased by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Multiply(VisioForge.Libs.AForge.Point,System.Single)">
             <summary>
             Multiplication operator - multiplies coordinates of the specified point by scalar value.
             </summary>
             
             <param name="point">Point to multiply coordinates of.</param>
             <param name="factor">Multiplication factor.</param>
             
             <returns>Returns new point which coordinates equal to coordinates of
             the specified point multiplied by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Multiply(VisioForge.Libs.AForge.Point,System.Single)">
             <summary>
             Multiplication operator - multiplies coordinates of the specified point by scalar value.
             </summary>
             
             <param name="point">Point to multiply coordinates of.</param>
             <param name="factor">Multiplication factor.</param>
             
             <returns>Returns new point which coordinates equal to coordinates of
             the specified point multiplied by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Division(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Division operator - divides coordinates of the specified point by scalar value.
            </summary>
            
            <param name="point">Point to divide coordinates of.</param>
            <param name="factor">Division factor.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point divided by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Divide(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Division operator - divides coordinates of the specified point by scalar value.
            </summary>
            
            <param name="point">Point to divide coordinates of.</param>
            <param name="factor">Division factor.</param>
            
            <returns>Returns new point which coordinates equal to coordinates of
            the specified point divided by specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Equality(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
             <summary>
             Equality operator - checks if two points have equal coordinates.
             </summary>
             
             <param name="point1">First point to check.</param>
             <param name="point2">Second point to check.</param>
             
             <returns>Returns <see langword="true"/> if coordinates of specified
             points are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Inequality(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
             <summary>
             Inequality operator - checks if two points have different coordinates.
             </summary>
             
             <param name="point1">First point to check.</param>
             <param name="point2">Second point to check.</param>
             
             <returns>Returns <see langword="true"/> if coordinates of specified
             points are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.Point"/> equal to the specified one.
            </summary>
            
            <param name="obj">Another point to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Explicit(VisioForge.Libs.AForge.Point)~VisioForge.Libs.AForge.IntPoint">
            <summary>
            Explicit conversion to <see cref="T:VisioForge.Libs.AForge.IntPoint"/>.
            </summary>
            
            <param name="point">Single precision point to convert to integer point.</param>
            
            <returns>Returns new integer point which coordinates are explicitly converted
            to integers from coordinates of the specified single precision point by
            casting float values to integers value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.op_Implicit(VisioForge.Libs.AForge.Point)~VisioForge.Libs.AForge.DoublePoint">
            <summary>
            Implicit conversion to <see cref="T:VisioForge.Libs.AForge.DoublePoint"/>.
            </summary>
            
            <param name="point">Single precision point to convert to double precision point.</param>
            
            <returns>Returns new double precision point which coordinates are implicitly converted
            to doubles from coordinates of the specified single precision point.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.Round">
            <summary>
            Rounds the single precision point.
            </summary>
            
            <returns>Returns new integer point, which coordinates equal to whole numbers
            nearest to the corresponding coordinates of the single precision point.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains values of the point in readable form.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Point.EuclideanNorm">
            <summary>
            Calculate Euclidean norm of the vector comprised of the point's 
            coordinates - distance from (0, 0) in other words.
            </summary>
            
            <returns>Returns point's distance from (0, 0) point.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.PolishExpression">
            <summary>
            Evaluator of expressions written in reverse polish notation.
            </summary>
            
            <remarks><para>The class evaluates expressions writen in reverse postfix polish notation.</para>
            
            <para>The list of supported functuins is:</para>
            <list type="bullet">
            <item><b>Arithmetic functions</b>: +, -, *, /;</item>
            <item><b>sin</b> - sine;</item>
            <item><b>cos</b> - cosine;</item>
            <item><b>ln</b> - natural logarithm;</item>
            <item><b>exp</b> - exponent;</item>
            <item><b>sqrt</b> - square root.</item>
            </list>
            
            <para>Arguments for these functions could be as usual constants, written as numbers, as variables,
            writen as $&lt;var_number&gt; (<b>$2</b>, for example). The variable number is zero based index
            of variables array.</para>
            
            <para>Sample usage:</para>
            <code>
            // expression written in polish notation
            string expression = "2 $0 / 3 $1 * +";
            // variables for the expression
            double[] vars = new double[] { 3, 4 };
            // expression evaluation
            double result = PolishExpression.Evaluate( expression, vars );
            </code>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.PolishExpression.Evaluate(System.String,System.Double[])">
             <summary>
             Evaluates specified expression.
             </summary>
            
             <param name="expression">Expression written in postfix polish notation.</param>
             <param name="variables">Variables for the expression.</param>
             
             <returns>Evaluated value of the expression.</returns>
             
             <exception cref="T:System.ArgumentException">Unsupported function is used in the expression.</exception>
             <exception cref="T:System.ArgumentException">Incorrect postfix polish expression.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Range">
             <summary>
             Represents a range with minimum and maximum values, which are single precision numbers (floats).
             </summary>
             
             <remarks>
             <para>The class represents a single precision range with inclusive limits -
             both minimum and maximum values of the range are included into it.
             Mathematical notation of such range is <b>[min, max]</b>.</para>
             
             <para>Sample usage:</para>
             <code>
             // create [0.25, 1.5] range
             Range range1 = new Range( 0.25f, 1.5f );
             // create [1.00, 2.25] range
             Range range2 = new Range( 1.00f, 2.25f );
             // check if values is inside of the first range
             if ( range1.IsInside( 0.75f ) )
             {
                 // ...
             }
             // check if the second range is inside of the first range
             if ( range1.IsInside( range2 ) )
             {
                 // ...
             }
             // check if two ranges overlap
             if ( range1.IsOverlapping( range2 ) )
             {
                 // ...
             }
             </code>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Range.Min">
            <summary>
            Minimum value of the range.
            </summary>
            
            <remarks><para>The property represents minimum value (left side limit) or the range -
            [<b>min</b>, max].</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Range.Max">
            <summary>
            Maximum value of the range.
            </summary>
            
            <remarks><para>The property represents maximum value (right side limit) or the range -
            [min, <b>max</b>].</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Range.Length">
            <summary>
            Length of the range (deffirence between maximum and minimum values).
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Range"/> structure.
            </summary>
            
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.IsInside(System.Single)">
            <summary>
            Check if the specified value is inside of the range.
            </summary>
            
            <param name="x">Value to check.</param>
            
            <returns><b>True</b> if the specified value is inside of the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.IsInside(VisioForge.Libs.AForge.Range)">
            <summary>
            Check if the specified range is inside of the range.
            </summary>
            
            <param name="range">Range to check.</param>
            
            <returns><b>True</b> if the specified range is inside of the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.IsOverlapping(VisioForge.Libs.AForge.Range)">
            <summary>
            Check if the specified range overlaps with the range.
            </summary>
            
            <param name="range">Range to check for overlapping.</param>
            
            <returns><b>True</b> if the specified range overlaps with the range or
            <b>false</b> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.ToIntRange(System.Boolean)">
             <summary>
             Convert the signle precision range to integer range.
             </summary>
             
             <param name="provideInnerRange">Specifies if inner integer range must be returned or outer range.</param>
             
             <returns>Returns integer version of the range.</returns>
             
             <remarks>If <paramref name="provideInnerRange"/> is set to <see langword="true"/>, then the
             returned integer range will always fit inside of the current single precision range.
             If it is set to <see langword="false"/>, then current single precision range will always
             fit into the returned integer range.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.op_Equality(VisioForge.Libs.AForge.Range,VisioForge.Libs.AForge.Range)">
             <summary>
             Equality operator - checks if two ranges have equal min/max values.
             </summary>
             
             <param name="range1">First range to check.</param>
             <param name="range2">Second range to check.</param>
             
             <returns>Returns <see langword="true"/> if min/max values of specified
             ranges are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.op_Inequality(VisioForge.Libs.AForge.Range,VisioForge.Libs.AForge.Range)">
             <summary>
             Inequality operator - checks if two ranges have different min/max values.
             </summary>
             
             <param name="range1">First range to check.</param>
             <param name="range2">Second range to check.</param>
             
             <returns>Returns <see langword="true"/> if min/max values of specified
             ranges are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.Range"/> equal to the specified one.
            </summary>
            
            <param name="obj">Another range to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Range.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains min/max values of the range in readable form.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.SystemTools">
            <summary>
            Set of systems tools.
            </summary>
            
            <remarks><para>The class is a container of different system tools, which are used
            across the framework. Some of these tools are platform specific, so their
            implementation is different on different platform, like .NET and Mono.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.SystemTools.CopyUnmanagedMemory(System.IntPtr,System.IntPtr,System.Int32)">
             <summary>
             Copy block of unmanaged memory.
             </summary>
             
             <param name="dst">Destination pointer.</param>
             <param name="src">Source pointer.</param>
             <param name="count">Memory block's length to copy.</param>
             
             <returns>Return's value of <paramref name="dst"/> - pointer to destination.</returns>
             
             <remarks><para>This function is required because of the fact that .NET does
             not provide any way to copy unmanaged blocks, but provides only methods to
             copy from unmanaged memory to managed memory and vise versa.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.SystemTools.CopyUnmanagedMemory(System.Byte*,System.Byte*,System.Int32)">
            <summary>
            Copy block of unmanaged memory.
            </summary>
            
            <param name="dst">Destination pointer.</param>
            <param name="src">Source pointer.</param>
            <param name="count">Memory block's length to copy.</param>
            
            <returns>Return's value of <paramref name="dst"/> - pointer to destination.</returns>
            
            <remarks><para>This function is required because of the fact that .NET does
            not provide any way to copy unmanaged blocks, but provides only methods to
            copy from unmanaged memory to managed memory and vise versa.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.SystemTools.SetUnmanagedMemory(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Fill memory region with specified value.
            </summary>
            
            <param name="dst">Destination pointer.</param>
            <param name="filler">Filler byte's value.</param>
            <param name="count">Memory block's length to fill.</param>
            
            <returns>Return's value of <paramref name="dst"/> - pointer to destination.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.SystemTools.SetUnmanagedMemory(System.Byte*,System.Int32,System.Int32)">
            <summary>
            Fill memory region with specified value.
            </summary>
            
            <param name="dst">Destination pointer.</param>
            <param name="filler">Filler byte's value.</param>
            <param name="count">Memory block's length to fill.</param>
            
            <returns>Return's value of <paramref name="dst"/> - pointer to destination.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.ThreadSafeRandom">
            <summary>
            Thread safe version of the <see cref="T:System.Random"/> class.
            </summary>
            
            <remarks><para>The class inherits the <see cref="T:System.Random"/> and overrides
            its random numbers generation methods providing thread safety by guarding call
            to the base class with a lock. See documentation to <see cref="T:System.Random"/> for
            additional information about the base class.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.ThreadSafeRandom"/> class.
            </summary>
            
            <remarks>See <see cref="M:System.Random.Next"/> for more information.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.ThreadSafeRandom"/> class.
            </summary>
            
            <remarks>A number used to calculate a starting value for the pseudo-random number sequence.
            If a negative number is specified, the absolute value of the number is used.</remarks>
            
            
            <remarks>See <see cref="M:System.Random.Next"/> for more information.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.Next">
            <summary>
            Returns a nonnegative random number.
            </summary>
            
            <returns>Returns a 32-bit signed integer greater than or equal to zero and less than
            <see cref="F:System.Int32.MaxValue"/>.</returns>
            
            <remarks>See <see cref="M:System.Random.Next"/> for more information.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.Next(System.Int32)">
            <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
            
            <param name="maxValue">The exclusive upper bound of the random number to be generated.
            <paramref name="maxValue"/> must be greater than or equal to zero.</param>
            
            <returns>Returns a 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue"/>;
            that is, the range of return values ordinarily includes zero but not <paramref name="maxValue"/>.</returns>
            
            <remarks>See <see cref="M:System.Random.Next(System.Int32)"/> for more information.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.Next(System.Int32,System.Int32)">
             <summary>
             Returns a random number within a specified range.
             </summary>
             
             <param name="minValue">The inclusive lower bound of the random number returned.</param>
             <param name="maxValue">The exclusive upper bound of the random number returned.
             <paramref name="maxValue"/> must be greater than or equal to <paramref name="minValue"/>.</param>
             
             <returns>Returns a 32-bit signed integer greater than or equal to <paramref name="minValue"/> and less
             than <paramref name="maxValue"/>; that is, the range of return values includes
             <paramref name="minValue"/> but not <paramref name="maxValue"/>.</returns>
             
             <remarks>See <see cref="M:System.Random.Next(System.Int32,System.Int32)"/> for more information.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.NextBytes(System.Byte[])">
             <summary>
             Fills the elements of a specified array of bytes with random numbers.
             </summary>
             
             <param name="buffer">An array of bytes to contain random numbers.</param>
             
             <remarks>See <see cref="M:System.Random.NextBytes(System.Byte[])"/> for more information.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.ThreadSafeRandom.NextDouble">
             <summary>
             Returns a random number between 0.0 and 1.0.
             </summary>
             
             <returns>Returns a double-precision floating point number greater than or equal to 0.0, and less than 1.0.</returns>
             
             <remarks>See <see cref="M:System.Random.NextDouble"/> for more information.</remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Blob">
            <summary>
            Image's blob.
            </summary>
            
            <remarks><para>The class represents a blob - part of another images. The
            class encapsulates the blob itself and information about its position
            in parent image.</para>
            
            <para><note>The class is not responsible for blob's image disposing, so it should be
            done manually when it is required.</note></para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.Image">
             <summary>
             Blob's image.
             </summary>
            
             <remarks><para>The property keeps blob's image. In the case if it equals to <b>null</b>,
             the image may be extracted using <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(System.Drawing.Bitmap,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/>
             or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/> method.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.OriginalSize">
            <summary>
            Blob's image size.
            </summary>
            
            <remarks><para>The property specifies size of the <see cref="P:VisioForge.Libs.AForge.Imaging.Blob.Image">blob's image</see>.
            If the property is set to <see langword="true"/>, the blob's image size equals to the
            size of original image. If the property is set to <see langword="false"/>, the blob's
            image size equals to size of actual blob.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.Rectangle">
            <summary>
            Blob's rectangle in the original image.
            </summary>
            
            <remarks><para>The property specifies position of the blob in the original image
            and its size.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.ID">
            <summary>
            Blob's ID in the original image.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.Area">
            <summary>
            Blob's area.
            </summary>
            
            <remarks><para>The property equals to blob's area measured in number of pixels
            contained by the blob.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.Fullness">
            <summary>
            Blob's fullness, [0, 1].
            </summary>
            
            <remarks><para>The property equals to blob's fullness, which is calculated
            as <b>Area / ( Width * Height )</b>. If it equals to <b>1</b>, then
            it means that entire blob's rectangle is filled by blob's pixel (no
            blank areas), which is true only for rectangles. If it equals to <b>0.5</b>,
            for example, then it means that only half of the bounding rectangle is filled
            by blob's pixels.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.CenterOfGravity">
            <summary>
            Blob's center of gravity point.
            </summary>
            
            <remarks><para>The property keeps center of gravity point, which is calculated as
            mean value of X and Y coordinates of blob's points.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.ColorMean">
            <summary>
            Blob's mean color.
            </summary>
            
            <remarks><para>The property keeps mean color of pixels comprising the blob.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Blob.ColorStdDev">
            <summary>
            Blob color's standard deviation.
            </summary>
            
            <remarks><para>The property keeps standard deviation of pixels' colors comprising the blob.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Blob.#ctor(System.Int32,System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Blob"/> class.
            </summary>
            
            <param name="id">Blob's ID in the original image.</param>
            <param name="rect">Blob's rectangle in the original image.</param>
            
            <remarks><para>This constructor leaves <see cref="P:VisioForge.Libs.AForge.Imaging.Blob.Image"/> property not initialized. The blob's
            image may be extracted later using <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(System.Drawing.Bitmap,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/>
            or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/> method.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Blob.#ctor(VisioForge.Libs.AForge.Imaging.Blob)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Blob"/> class.
            </summary>
            
            <param name="source">Source blob to copy.</param>
            
            <remarks><para>This copy constructor leaves <see cref="P:VisioForge.Libs.AForge.Imaging.Blob.Image"/> property not initialized. The blob's
            image may be extracted later using <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(System.Drawing.Bitmap,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/>
            or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/> method.</para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.BlobCounter">
            <summary>
            Blob counter - counts objects in image, which are separated by black background.
            </summary>
            
            <remarks><para>The class counts and extracts stand alone objects in
            images using connected components labeling algorithm.</para>
            
            <para><note>The algorithm treats all pixels with values less or equal to <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounter.BackgroundThreshold"/>
            as background, but pixels with higher values are treated as objects' pixels.</note></para>
            
            <para>For blobs' searching the class supports 8 bpp indexed grayscale images and
            24/32 bpp color images that are at least two pixels wide. Images that are one
            pixel wide can be processed if they are rotated first, or they can be processed
            with <see cref="!:RecursiveBlobCounter"/>.
            See documentation about <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> for information about which
            pixel formats are supported for extraction of blobs.</para>
            
            <para>Sample usage:</para>
            <code>
            // create an instance of blob counter algorithm
            BlobCounter bc = new BlobCounter( );
            // process binary image
            bc.ProcessImage( image );
            Rectangle[] rects = bc.GetObjectsRectangles( );
            // process blobs
            foreach ( Rectangle rect in rects )
            {
                // ...
            }
            </code>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounter.BackgroundThreshold">
             <summary>
             Background threshold's value.
             </summary>
             
             <remarks><para>The property sets threshold value for distinguishing between background
             pixel and objects' pixels. All pixel with values less or equal to this property are
             treated as background, but pixels with higher values are treated as objects' pixels.</para>
             
             <para><note>In the case of colour images a pixel is treated as objects' pixel if <b>any</b> of its
             RGB values are higher than corresponding values of this threshold.</note></para>
             
             <para><note>For processing grayscale image, set the property with all RGB components eqaul.</note></para>
            
             <para>Default value is set to <b>(0, 0, 0)</b> - black colour.</para></remarks>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounter"/> class.
            </summary>
            
            <remarks>Creates new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounter"/> class with
            an empty objects map. Before using methods, which provide information about blobs
            or extract them, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>,
            <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/> or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/>
            method should be called to collect objects map.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounter.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounter"/> class.
            </summary>
            
            <param name="image">Image to look for objects in.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounter.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounter"/> class.
            </summary>
            
            <param name="imageData">Image data to look for objects in.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounter.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounter"/> class.
            </summary>
            
            <param name="image">Unmanaged image to look for objects in.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounter.BuildObjectsMap(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Actual objects map building.
            </summary>
            
            <param name="image">Unmanaged image to process.</param>
            
            <remarks>The method supports 8 bpp indexed grayscale images and 24/32 bpp color images.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Cannot process images that are one pixel wide. Rotate the image
            or use <see cref="!:RecursiveBlobCounter"/>.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.ObjectsOrder">
            <summary>
            Possible object orders.
            </summary>
            
            <remarks>The enumeration defines possible sorting orders of objects, found by blob
            counting classes.</remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.ObjectsOrder.None">
            <summary>
            Unsorted order (as it is collected by algorithm).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.ObjectsOrder.Size">
            <summary>
            Objects are sorted by size in descending order (bigger objects go first).
            Size is calculated as <b>Width * Height</b>.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.ObjectsOrder.Area">
            <summary>
            Objects are sorted by area in descending order (bigger objects go first).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.ObjectsOrder.YX">
            <summary>
            Objects are sorted by Y coordinate, then by X coordinate in ascending order
            (smaller coordinates go first).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.ObjectsOrder.XY">
            <summary>
            Objects are sorted by X coordinate, then by Y coordinate in ascending order
            (smaller coordinates go first).
            </summary>
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase">
            <summary>
            Base class for different blob counting algorithms.
            </summary>
            
            <remarks><para>The class is abstract and serves as a base for different blob counting algorithms.
            Classes, which inherit from this base class, require to implement <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BuildObjectsMap(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/>
            method, which does actual building of object's label's map.</para>
            
            <para>For blobs' searcing usually all inherited classes accept binary images, which are actually
            grayscale thresholded images. But the exact supported format should be checked in particular class,
            inheriting from the base class. For blobs' extraction the class supports grayscale (8 bpp indexed)
            and color images (24 and 32 bpp).</para>
            
            <para>Sample usage:</para>
            <code>
            // create an instance of blob counter algorithm
            BlobCounterBase bc = new ...
            // set filtering options
            bc.FilterBlobs = true;
            bc.MinWidth  = 5;
            bc.MinHeight = 5;
            // process binary image
            bc.ProcessImage( image );
            Blob[] blobs = bc.GetObjects( image, false );
            // process blobs
            foreach ( Blob blob in blobs )
            {
                // ...
                // blob.Rectangle - blob's rectangle
                // blob.Image - blob's image
            }
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.BlobCounterBase.objectsCount">
            <summary>
            Objects count.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.BlobCounterBase.objectLabels">
            <summary>
            Objects' labels.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.BlobCounterBase.imageWidth">
            <summary>
            Width of processed image.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.BlobCounterBase.imageHeight">
            <summary>
            Height of processed image.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ObjectsCount">
            <summary>
            Objects count.
            </summary>
            
            <remarks><para>Number of objects (blobs) found by <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/> method.
            </para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ObjectLabels">
            <summary>
            Objects' labels.
            </summary>
            
            <remarks>The array of <b>width</b> * <b>height</b> size, which holds
            labels for all objects. Background is represented with <b>0</b> value,
            but objects are represented with labels starting from <b>1</b>.</remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ObjectsOrder">
            <summary>
            Objects sort order.
            </summary>
            
            <remarks><para>The property specifies objects' sort order, which are provided
            by <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsRectangles"/>, <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsInformation"/>, etc.
            </para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.FilterBlobs">
            <summary>
            Specifies if blobs should be filtered.
            </summary>
            
            <remarks><para>If the property is equal to <b>false</b>, then there is no any additional
            post processing after image was processed. If the property is set to <b>true</b>, then
            blobs filtering is done right after image processing routine. If <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter"/>
            is set, then custom blobs' filtering is done, which is implemented by user. Otherwise
            blobs are filtered according to dimensions specified in <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinWidth"/>,
            <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinHeight"/>, <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MaxWidth"/> and <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MaxHeight"/> properties.</para>
            
            <para>Default value is set to <see langword="false"/>.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.CoupledSizeFiltering">
            <summary>
            Specifies if size filetering should be coupled or not.
            </summary>
            
            <remarks><para>In uncoupled filtering mode, objects are filtered out in the case if
            their width is smaller than <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinWidth"/> <b>or</b> height is smaller than 
            <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinHeight"/>. But in coupled filtering mode, objects are filtered out in
            the case if their width is smaller than <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinWidth"/> <b>and</b> height is
            smaller than <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinHeight"/>. In both modes the idea with filtering by objects'
            maximum size is the same as filtering by objects' minimum size.</para>
            
            <para>Default value is set to <see langword="false"/>, what means uncoupled filtering by size.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinWidth">
            <summary>
            Minimum allowed width of blob.
            </summary>
            
            <remarks><para>The property specifies minimum object's width acceptable by blob counting
            routine and has power only when <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.FilterBlobs"/> property is set to
            <see langword="true"/> and <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter">custom blobs' filter</see> is
            set to <see langword="null"/>.</para>
            
            <para>See documentation to <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.CoupledSizeFiltering"/> for additional information.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinHeight">
            <summary>
            Minimum allowed height of blob.
            </summary>
            
            <remarks><para>The property specifies minimum object's height acceptable by blob counting
            routine and has power only when <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.FilterBlobs"/> property is set to
            <see langword="true"/> and <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter">custom blobs' filter</see> is
            set to <see langword="null"/>.</para>
            
            <para>See documentation to <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.CoupledSizeFiltering"/> for additional information.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MaxWidth">
            <summary>
            Maximum allowed width of blob.
            </summary>
            
            <remarks><para>The property specifies maximum object's width acceptable by blob counting
            routine and has power only when <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.FilterBlobs"/> property is set to
            <see langword="true"/> and <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter">custom blobs' filter</see> is
            set to <see langword="null"/>.</para>
            
            <para>See documentation to <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.CoupledSizeFiltering"/> for additional information.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MaxHeight">
            <summary>
            Maximum allowed height of blob.
            </summary>
            
            <remarks><para>The property specifies maximum object's height acceptable by blob counting
            routine and has power only when <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.FilterBlobs"/> property is set to
            <see langword="true"/> and <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter">custom blobs' filter</see> is
            set to <see langword="null"/>.</para>
            
            <para>See documentation to <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.CoupledSizeFiltering"/> for additional information.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter">
            <summary>
            Custom blobs' filter to use.
            </summary>
            
            <remarks><para>The property specifies custom blobs' filtering routine to use. It has
            effect only in the case if <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.FilterBlobs"/> property is set to <see langword="true"/>.</para>
            
            <para><note>When custom blobs' filtering routine is set, it has priority over default filtering done
            with <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinWidth"/>, <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MinHeight"/>, <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MaxWidth"/> and <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.MaxHeight"/>.</note></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class.
            </summary>
            
            <remarks>Creates new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class with
            an empty objects map. Before using methods, which provide information about blobs
            or extract them, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>,
            <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/> or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/>
            method should be called to collect objects map.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class.
            </summary>
            
            <param name="image">Binary image to look for objects in.</param>
            
            <remarks>Creates new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class with
            initialized objects map built by calling <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/> method.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class.
            </summary>
            
            <param name="imageData">Binary image data to look for objects in.</param>
            
            <remarks>Creates new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class with
            initialized objects map built by calling <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/> method.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.#ctor(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class.
            </summary>
            
            <param name="image">Unmanaged binary image to look for objects in.</param>
            
            <remarks>Creates new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/> class with
            initialized objects map built by calling <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)">
            <summary>
            Build objects map.
            </summary>
            
            <param name="image">Source binary image.</param>
            
            <remarks><para>Processes the image and builds objects map, which is used later to extracts blobs.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)">
            <summary>
            Build objects map.
            </summary>
            
            <param name="imageData">Source binary image data.</param>
            
            <remarks><para>Processes the image and builds objects map, which is used later to extracts blobs.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Build object map from raw image data.
            </summary>
            
            <param name="image">Source unmanaged binary image data.</param>
            
            <remarks><para>Processes the image and builds objects map, which is used later to extracts blobs.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Thrown by some inherited classes if some image property other
            than the pixel format is not supported. See that class's documentation or the exception message for details.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsRectangles">
            <summary>
            Get objects' rectangles.
            </summary>
            
            <returns>Returns array of objects' rectangles.</returns>
            
            <remarks>The method returns array of objects rectangles. Before calling the
            method, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>, <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/>
            or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method should be called, which will
            build objects map.</remarks>
            
            <exception cref="T:System.ApplicationException">No image was processed before, so objects' rectangles
            can not be collected.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsInformation">
            <summary>
            Get objects' information.
            </summary>
            
            <returns>Returns array of partially initialized blobs (without <see cref="P:VisioForge.Libs.AForge.Imaging.Blob.Image"/> property initialized).</returns>
            
            <remarks><para>By the amount of provided information, the method is between <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsRectangles"/> and
            <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjects(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Boolean)"/> methods. The method provides array of blobs without initialized their image.
            Blob's image may be extracted later using <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(System.Drawing.Bitmap,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/>
            or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)"/> method.
            </para></remarks>
            
            <example>
            <code>
            // create blob counter and process image
            BlobCounter bc = new BlobCounter( sourceImage );
            // specify sort order
            bc.ObjectsOrder = ObjectsOrder.Size;
            // get objects' information (blobs without image)
            Blob[] blobs = bc.GetObjectInformation( );
            // process blobs
            foreach ( Blob blob in blobs )
            {
                // check blob's properties
                if ( blob.Rectangle.Width > 50 )
                {
                    // the blob looks interesting, let's extract it
                    bc.ExtractBlobsImage( sourceImage, blob );
                }
            }
            </code>
            </example>
            
            <exception cref="T:System.ApplicationException">No image was processed before, so objects' information
            can not be collected.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjects(System.Drawing.Bitmap,System.Boolean)">
             <summary>
             Get blobs.
             </summary>
             
             <param name="image">Source image to extract objects from.</param>
             
             <returns>Returns array of blobs.</returns>
             <param name="extractInOriginalSize">Specifies size of blobs' image to extract.
             If set to <see langword="true"/> each blobs' image will have the same size as
             the specified image. If set to <see langword="false"/> each blobs' image will
             have the size of its blob.</param>
            
             <remarks><para>The method returns array of blobs. Before calling the
             method, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>, <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/>
             or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method should be called, which will build
             objects map.</para>
             
             <para>The method supports 24/32 bpp color and 8 bpp indexed grayscale images.</para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the provided image.</exception>
             <exception cref="T:System.ApplicationException">No image was processed before, so objects
             can not be collected.</exception>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjects(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Boolean)">
             <summary>
             Get blobs.
             </summary>
             
             <param name="image">Source unmanaged image to extract objects from.</param>
             <param name="extractInOriginalSize">Specifies size of blobs' image to extract.
             If set to <see langword="true"/> each blobs' image will have the same size as
             the specified image. If set to <see langword="false"/> each blobs' image will
             have the size of its blob.</param>
             
             <returns>Returns array of blobs.</returns>
             
             <remarks><para>The method returns array of blobs. Before calling the
             method, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>, <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/>
             or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method should be called, which will build
             objects map.</para>
             
             <para>The method supports 24/32 bpp color and 8 bpp indexed grayscale images.</para>
             </remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the provided image.</exception>
             <exception cref="T:System.ApplicationException">No image was processed before, so objects
             can not be collected.</exception>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(System.Drawing.Bitmap,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)">
             <summary>
             Extract blob's image.
             </summary>
             
             <param name="image">Source image to extract blob's image from.</param>
             <param name="blob">Blob which is required to be extracted.</param>
             <param name="extractInOriginalSize">Specifies size of blobs' image to extract.
             If set to <see langword="true"/> each blobs' image will have the same size as
             the specified image. If set to <see langword="false"/> each blobs' image will
             have the size of its blob.</param>
            
             <remarks><para>The method is used to extract image of partially initialized blob, which
             was provided by <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsInformation"/> method. Before calling the
             method, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>, <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/>
             or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method should be called, which will build
             objects map.</para>
             
             <para>The method supports 24/32 bpp color and 8 bpp indexed grayscale images.</para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the provided image.</exception>
             <exception cref="T:System.ApplicationException">No image was processed before, so blob
             can not be extracted.</exception>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ExtractBlobsImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.Blob,System.Boolean)">
             <summary>
             Extract blob's image.
             </summary>
             
             <param name="image">Source unmanaged image to extract blob's image from.</param>
             <param name="blob">Blob which is required to be extracted.</param>
             <param name="extractInOriginalSize">Specifies size of blobs' image to extract.
             If set to <see langword="true"/> each blobs' image will have the same size as
             the specified image. If set to <see langword="false"/> each blobs' image will
             have the size of its blob.</param>
            
             <remarks><para>The method is used to extract image of partially initialized blob, which
             was provided by <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetObjectsInformation"/> method. Before calling the
             method, the <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Bitmap)"/>, <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(System.Drawing.Imaging.BitmapData)"/>
             or <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method should be called, which will build
             objects map.</para>
             
             <para>The method supports 24/32 bpp color and 8 bpp indexed grayscale images.</para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the provided image.</exception>
             <exception cref="T:System.ApplicationException">No image was processed before, so blob
             can not be extracted.</exception>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetBlobsLeftAndRightEdges(VisioForge.Libs.AForge.Imaging.Blob,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@)">
            <summary>
            Get list of points on the left and right edges of the blob.
            </summary>
            
            <param name="blob">Blob to collect edge points for.</param>
            <param name="leftEdge">List of points on the left edge of the blob.</param>
            <param name="rightEdge">List of points on the right edge of the blob.</param>
            
            <remarks><para>The method scans each line of the blob and finds the most left and the
            most right points for it adding them to appropriate lists. The method may be very
            useful in conjunction with different routines from <see cref="N:VisioForge.Libs.AForge.Math.Geometry"/>,
            which allow finding convex hull or quadrilateral's corners.</para>
            
            <para><note>Both lists of points are sorted by Y coordinate - points with smaller Y
            value go first.</note></para>
            </remarks>
            
            <exception cref="T:System.ApplicationException">No image was processed before, so blob
            can not be extracted.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetBlobsTopAndBottomEdges(VisioForge.Libs.AForge.Imaging.Blob,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@)">
            <summary>
            Get list of points on the top and bottom edges of the blob.
            </summary>
            
            <param name="blob">Blob to collect edge points for.</param>
            <param name="topEdge">List of points on the top edge of the blob.</param>
            <param name="bottomEdge">List of points on the bottom edge of the blob.</param>
            
            <remarks><para>The method scans each column of the blob and finds the most top and the
            most bottom points for it adding them to appropriate lists. The method may be very
            useful in conjunction with different routines from <see cref="N:VisioForge.Libs.AForge.Math.Geometry"/>,
            which allow finding convex hull or quadrilateral's corners.</para>
            
            <para><note>Both lists of points are sorted by X coordinate - points with smaller X
            value go first.</note></para>
            </remarks>
            
            <exception cref="T:System.ApplicationException">No image was processed before, so blob
            can not be extracted.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetBlobsEdgePoints(VisioForge.Libs.AForge.Imaging.Blob)">
            <summary>
            Get list of object's edge points.
            </summary>
            
            <param name="blob">Blob to collect edge points for.</param>
            
            <returns>Returns unsorted list of blob's edge points.</returns>
            
            <remarks><para>The method scans each row and column of the blob and finds the
            most top/bottom/left/right points. The method returns similar result as if results of
            both <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetBlobsLeftAndRightEdges(VisioForge.Libs.AForge.Imaging.Blob,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@)"/> and <see cref="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.GetBlobsTopAndBottomEdges(VisioForge.Libs.AForge.Imaging.Blob,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint}@)"/>
            methods were combined, but each edge point occurs only once in the list.</para>
            
            <para><note>Edge points in the returned list are not ordered. This makes the list unusable
            for visualization with methods, which draw polygon or poly-line. But the returned list
            can be used with such algorithms, like convex hull search, shape analyzer, etc.</note></para>
            </remarks>
            
            <exception cref="T:System.ApplicationException">No image was processed before, so blob
            can not be extracted.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BuildObjectsMap(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Actual objects map building.
            </summary>
            
            <param name="image">Unmanaged image to process.</param>
            
            <remarks><note>By the time this method is called bitmap's pixel format is not
            yet checked, so this should be done by the class inheriting from the base class.
            <see cref="F:VisioForge.Libs.AForge.Imaging.BlobCounterBase.imageWidth"/> and <see cref="F:VisioForge.Libs.AForge.Imaging.BlobCounterBase.imageHeight"/> members are initialized
            before the method is called, so these members may be used safely.</note></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.RGB">
            <summary>
            RGB components.
            </summary>
            
            <remarks><para>The class encapsulates <b>RGB</b> color components.</para>
            <para><note><see cref="T:System.Drawing.Imaging.PixelFormat">PixelFormat.Format24bppRgb</see>
            actually means BGR format.</note></para>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.R">
            <summary>
            Index of red component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.G">
            <summary>
            Index of green component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.B">
            <summary>
            Index of blue component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.A">
            <summary>
            Index of alpha component for ARGB images.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.Red">
            <summary>
            Red component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.Green">
            <summary>
            Green component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.Blue">
            <summary>
            Blue component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.RGB.Alpha">
            <summary>
            Alpha component.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.RGB.Color">
            <summary>
            <see cref="T:System.Drawing.Color">Color</see> value of the class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.RGB.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.RGB"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.RGB.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.RGB"/> class.
            </summary>
            
            <param name="red">Red component.</param>
            <param name="green">Green component.</param>
            <param name="blue">Blue component.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.RGB.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.RGB"/> class.
            </summary>
            
            <param name="red">Red component.</param>
            <param name="green">Green component.</param>
            <param name="blue">Blue component.</param>
            <param name="alpha">Alpha component.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.RGB.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.RGB"/> class.
            </summary>
            
            <param name="color">Initialize from specified <see cref="T:System.Drawing.Color">color.</see></param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.HSL">
            <summary>
            HSL components.
            </summary>
            
            <remarks>The class encapsulates <b>HSL</b> color components.</remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.HSL.Hue">
            <summary>
            Hue component.
            </summary>
            
            <remarks>Hue is measured in the range of [0, 359].</remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.HSL.Saturation">
            <summary>
            Saturation component.
            </summary>
            
            <remarks>Saturation is measured in the range of [0, 1].</remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.HSL.Luminance">
            <summary>
            Luminance value.
            </summary>
            
            <remarks>Luminance is measured in the range of [0, 1].</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.HSL.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.HSL"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.HSL.#ctor(System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.HSL"/> class.
            </summary>
            
            <param name="hue">Hue component.</param>
            <param name="saturation">Saturation component.</param>
            <param name="luminance">Luminance component.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.HSL.FromRGB(VisioForge.Libs.AForge.Imaging.RGB,VisioForge.Libs.AForge.Imaging.HSL)">
            <summary>
            Convert from RGB to HSL color space.
            </summary>
            
            <param name="rgb">Source color in <b>RGB</b> color space.</param>
            <param name="hsl">Destination color in <b>HSL</b> color space.</param>
            
            <remarks><para>See <a href="http://en.wikipedia.org/wiki/HSI_color_space#Conversion_from_RGB_to_HSL_or_HSV">HSL and HSV Wiki</a>
            for information about the algorithm to convert from RGB to HSL.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.HSL.FromRGB(VisioForge.Libs.AForge.Imaging.RGB)">
            <summary>
            Convert from RGB to HSL color space.
            </summary>
            
            <param name="rgb">Source color in <b>RGB</b> color space.</param>
            
            <returns>Returns <see cref="T:VisioForge.Libs.AForge.Imaging.HSL"/> instance, which represents converted color value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.HSL.ToRGB(VisioForge.Libs.AForge.Imaging.HSL,VisioForge.Libs.AForge.Imaging.RGB)">
            <summary>
            Convert from HSL to RGB color space.
            </summary>
            
            <param name="hsl">Source color in <b>HSL</b> color space.</param>
            <param name="rgb">Destination color in <b>RGB</b> color space.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.HSL.ToRGB">
            <summary>
            Convert the color to <b>RGB</b> color space.
            </summary>
            
            <returns>Returns <see cref="T:VisioForge.Libs.AForge.Imaging.RGB"/> instance, which represents converted color value.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.YCbCr">
            <summary>
            YCbCr components.
            </summary>
            
            <remarks>The class encapsulates <b>YCbCr</b> color components.</remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.YCbCr.YIndex">
            <summary>
            Index of <b>Y</b> component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.YCbCr.CbIndex">
            <summary>
            Index of <b>Cb</b> component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.YCbCr.CrIndex">
            <summary>
            Index of <b>Cr</b> component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.YCbCr.Y">
            <summary>
            <b>Y</b> component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.YCbCr.Cb">
            <summary>
            <b>Cb</b> component.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.YCbCr.Cr">
            <summary>
            <b>Cr</b> component.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.YCbCr.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.YCbCr"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.YCbCr.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.YCbCr"/> class.
            </summary>
            
            <param name="y"><b>Y</b> component.</param>
            <param name="cb"><b>Cb</b> component.</param>
            <param name="cr"><b>Cr</b> component.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.YCbCr.FromRGB(VisioForge.Libs.AForge.Imaging.RGB,VisioForge.Libs.AForge.Imaging.YCbCr)">
            <summary>
            Convert from RGB to YCbCr color space (Rec 601-1 specification). 
            </summary>
            
            <param name="rgb">Source color in <b>RGB</b> color space.</param>
            <param name="ycbcr">Destination color in <b>YCbCr</b> color space.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.YCbCr.FromRGB(VisioForge.Libs.AForge.Imaging.RGB)">
            <summary>
            Convert from RGB to YCbCr color space (Rec 601-1 specification).
            </summary>
            
            <param name="rgb">Source color in <b>RGB</b> color space.</param>
            
            <returns>Returns <see cref="T:VisioForge.Libs.AForge.Imaging.YCbCr"/> instance, which represents converted color value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.YCbCr.ToRGB(VisioForge.Libs.AForge.Imaging.YCbCr,VisioForge.Libs.AForge.Imaging.RGB)">
            <summary>
            Convert from YCbCr to RGB color space.
            </summary>
            
            <param name="ycbcr">Source color in <b>YCbCr</b> color space.</param>
            <param name="rgb">Destination color in <b>RGB</b> color spacs.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.YCbCr.ToRGB">
            <summary>
            Convert the color to <b>RGB</b> color space.
            </summary>
            
            <returns>Returns <see cref="T:VisioForge.Libs.AForge.Imaging.RGB"/> instance, which represents converted color value.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter">
            <summary>
            Filtering of frequencies outside of specified range in complex Fourier
            transformed image.
            </summary>
            
            <remarks><para>The filer keeps only specified range of frequencies in complex
            Fourier transformed image. The rest of frequencies are zeroed.</para>
            
            <para>Sample usage:</para>
            <code>
            // create complex image
            ComplexImage complexImage = ComplexImage.FromBitmap( image );
            // do forward Fourier transformation
            complexImage.ForwardFourierTransform( );
            // create filter
            FrequencyFilter filter = new FrequencyFilter( new IntRange( 20, 128 ) );
            // apply filter
            filter.Apply( complexImage );
            // do backward Fourier transformation
            complexImage.BackwardFourierTransform( );
            // get complex image as bitmat
            Bitmap fourierImage = complexImage.ToBitmap( );
            </code>
            
            <para><b>Initial image:</b></para>
            <img src="img/imaging/sample3.jpg" width="256" height="256" />
            <para><b>Fourier image:</b></para>
            <img src="img/imaging/frequency_filter.jpg" width="256" height="256" />
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter.FrequencyRange">
            <summary>
            Range of frequencies to keep.
            </summary>
            
            <remarks><para>The range specifies the range of frequencies to keep. Values is frequencies
            outside of this range are zeroed.</para>
            
            <para>Default value is set to <b>[0, 1024]</b>.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter.#ctor(VisioForge.Libs.AForge.IntRange)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter"/> class.
            </summary>
            
            <param name="frequencyRange">Range of frequencies to keep.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexFilters.FrequencyFilter.Apply(VisioForge.Libs.AForge.Imaging.ComplexImage)">
            <summary>
            Apply filter to complex image.
            </summary>
            
            <param name="complexImage">Complex image to apply filter to.</param>
            
            <exception cref="T:System.ArgumentException">The source complex image should be Fourier transformed.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.ComplexFilters.IComplexFilter">
            <summary>
            Image processing filter, which operates with Fourier transformed
            complex image.
            </summary>
            
            <remarks>The interface defines the set of methods, which should be
            provided by all image processing filter, which operate with Fourier
            transformed complex image.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexFilters.IComplexFilter.Apply(VisioForge.Libs.AForge.Imaging.ComplexImage)">
            <summary>
            Apply filter to complex image.
            </summary>
            
            <param name="complexImage">Complex image to apply filter to.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.ComplexImage">
            <summary>
            Complex image.
            </summary>
            
            <remarks><para>The class is used to keep image represented in complex numbers sutable for Fourier
            transformations.</para>
            
            <para>Sample usage:</para>
            <code>
            // create complex image
            ComplexImage complexImage = ComplexImage.FromBitmap( image );
            // do forward Fourier transformation
            complexImage.ForwardFourierTransform( );
            // get complex image as bitmat
            Bitmap fourierImage = complexImage.ToBitmap( );
            </code>
            
            <para><b>Initial image:</b></para>
            <img src="img/imaging/sample3.jpg" width="256" height="256" />
            <para><b>Fourier image:</b></para>
            <img src="img/imaging/fourier.jpg" width="256" height="256" />
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.ComplexImage.Width">
            <summary>
            Image width.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.ComplexImage.Height">
            <summary>
            Image height.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.ComplexImage.FourierTransformed">
            <summary>
            Status of the image - Fourier transformed or not.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.ComplexImage.Data">
            <summary>
            Complex image's data.
            </summary>
            
            <remarks>Return's 2D array of [<b>height</b>, <b>width</b>] size, which keeps image's
            complex data.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.#ctor(System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.ComplexImage"/> class.
             </summary>
             
             <param name="width">Image width.</param>
             <param name="height">Image height.</param>
             
             <remarks>The constractor is protected, what makes it imposible to instantiate this
             class directly. To create an instance of this class <see cref="M:VisioForge.Libs.AForge.Imaging.ComplexImage.FromBitmap(System.Drawing.Bitmap)"/> or
             <see cref="M:VisioForge.Libs.AForge.Imaging.ComplexImage.FromBitmap(System.Drawing.Imaging.BitmapData)"/> method should be used.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.Clone">
            <summary>
            Clone the complex image.
            </summary>
            
            <returns>Returns copy of the complex image.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.FromBitmap(System.Drawing.Bitmap)">
            <summary>
            Create complex image from grayscale bitmap.
            </summary>
            
            <param name="image">Source grayscale bitmap (8 bpp indexed).</param>
            
            <returns>Returns an instance of complex image.</returns>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Image width and height should be power of 2.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.FromBitmap(System.Drawing.Imaging.BitmapData)">
            <summary>
            Create complex image from grayscale bitmap.
            </summary>
            
            <param name="imageData">Source image data (8 bpp indexed).</param>
            
            <returns>Returns an instance of complex image.</returns>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Image width and height should be power of 2.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.ToBitmap">
            <summary>
            Convert complex image to bitmap.
            </summary>
            
            <returns>Returns grayscale bitmap.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.ForwardFourierTransform">
            <summary>
            Applies forward fast Fourier transformation to the complex image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ComplexImage.BackwardFourierTransform">
            <summary>
            Applies backward fast Fourier transformation to the complex image.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Drawing">
            <summary>
            Drawing primitives.
            </summary>
            
            <remarks><para>The class allows to do drawing of some primitives directly on
            locked image data or unmanaged image.</para>
            
            <para><note>All methods of this class support drawing only on color 24/32 bpp images and
            on grayscale 8 bpp indexed images.</note></para>
            
            <para><note>When it comes to alpha blending for 24/32 bpp images, all calculations are done
            as described on <a href="http://en.wikipedia.org/wiki/Alpha_compositing#Description">Wikipeadia</a>
            (see "over" operator).</note></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.FillRectangle(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fill rectangle on the specified image.
            </summary>
            
            <param name="imageData">Source image data to draw on.</param>
            <param name="rectangle">Rectangle's coordinates to fill.</param>
            <param name="color">Rectangle's color.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.FillRectangle(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fill rectangle on the specified image.
            </summary>
            
            <param name="image">Source image to draw on.</param>
            <param name="rectangle">Rectangle's coordinates to fill.</param>
            <param name="color">Rectangle's color.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Rectangle(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw rectangle on the specified image.
            </summary>
            
            <param name="imageData">Source image data to draw on.</param>
            <param name="rectangle">Rectangle's coordinates to draw.</param>
            <param name="color">Rectangle's color.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Rectangle(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw rectangle on the specified image.
            </summary>
            
            <param name="image">Source image to draw on.</param>
            <param name="rectangle">Rectangle's coordinates to draw.</param>
            <param name="color">Rectangle's color.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Line(System.Drawing.Imaging.BitmapData,VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint,System.Drawing.Color)">
            <summary>
            Draw a line on the specified image.
            </summary>
            
            <param name="imageData">Source image data to draw on.</param>
            <param name="point1">The first point to connect.</param>
            <param name="point2">The second point to connect.</param>
            <param name="color">Line's color.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Line(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.IntPoint,VisioForge.Libs.AForge.IntPoint,System.Drawing.Color)">
            <summary>
            Draw a line on the specified image.
            </summary>
            
            <param name="image">Source image to draw on.</param>
            <param name="point1">The first point to connect.</param>
            <param name="point2">The second point to connect.</param>
            <param name="color">Line's color.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Polygon(System.Drawing.Imaging.BitmapData,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)">
            <summary>
            Draw a polygon on the specified image.
            </summary>
            
            <param name="imageData">Source image data to draw on.</param>
            <param name="points">Points of the polygon to draw.</param>
            <param name="color">Polygon's color.</param>
            
            <remarks><para>The method draws a polygon by connecting all points from the
            first one to the last one and then connecting the last point with the first one.
            </para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Polygon(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)">
            <summary>
            Draw a polygon on the specified image.
            </summary>
            
            <param name="image">Source image to draw on.</param>
            <param name="points">Points of the polygon to draw.</param>
            <param name="color">Polygon's color.</param>
            
            <remarks><para>The method draws a polygon by connecting all points from the
            first one to the last one and then connecting the last point with the first one.
            </para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Polyline(System.Drawing.Imaging.BitmapData,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)">
            <summary>
            Draw a polyline on the specified image.
            </summary>
            
            <param name="imageData">Source image data to draw on.</param>
            <param name="points">Points of the polyline to draw.</param>
            <param name="color">polyline's color.</param>
            
            <remarks><para>The method draws a polyline by connecting all points from the
            first one to the last one. Unlike <see cref="M:VisioForge.Libs.AForge.Imaging.Drawing.Polygon(System.Drawing.Imaging.BitmapData,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)"/>
            method, this method does not connect the last point with the first one.
            </para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Drawing.Polyline(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)">
            <summary>
            Draw a polyline on the specified image.
            </summary>
            
            <param name="image">Source image to draw on.</param>
            <param name="points">Points of the polyline to draw.</param>
            <param name="color">polyline's color.</param>
            
            <remarks><para>The method draws a polyline by connecting all points from the
            first one to the last one. Unlike <see cref="M:VisioForge.Libs.AForge.Imaging.Drawing.Polygon(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)"/>
            method, this method does not connect the last point with the first one.
            </para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">
            <summary>
            Unsupported image format exception.
            </summary>
            
            <remarks><para>The unsupported image format exception is thrown in the case when
            user passes an image of certain format to an image processing routine, which does
            not support the format. Check documentation of the image processing routine
            to discover which formats are supported by the routine.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="paramName">Name of the invalid parameter.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">
            <summary>
            Invalid image properties exception.
            </summary>
            
            <remarks><para>The invalid image properties exception is thrown in the case when
            user provides an image with certain properties, which are treated as invalid by
            particular image processing routine. Another case when this exception is
            thrown is the case when user tries to access some properties of an image (or
            of a recently processed image by some routine), which are not valid for that image.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException"/> class.
            </summary>
            
            <param name="message">Message providing some additional information.</param>
            <param name="paramName">Name of the invalid parameter.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching">
            <summary>
            Exhaustive template matching.
            </summary>
            
            <remarks><para>The class implements exhaustive template matching algorithm,
            which performs complete scan of source image, comparing each pixel with corresponding
            pixel of template.</para>
            
            <para>The class processes only grayscale 8 bpp and color 24 bpp images.</para>
            
            <para>Sample usage:</para>
            <code>
            // create template matching algorithm's instance
            ExhaustiveTemplateMatching tm = new ExhaustiveTemplateMatching( 0.9f );
            // find all matchings with specified above similarity
            TemplateMatch[] matchings = tm.ProcessImage( sourceImage, templateImage );
            // highlight found matchings
            BitmapData data = sourceImage.LockBits(
                new Rectangle( 0, 0, sourceImage.Width, sourceImage.Height ),
                ImageLockMode.ReadWrite, sourceImage.PixelFormat );
            foreach ( TemplateMatch m in matchings )
            {
                Drawing.Rectangle( data, m.Rectangle, Color.White );
                // do something else with matching
            }
            sourceImage.UnlockBits( data );
            </code>
            
            <para>The class also can be used to get similarity level between two image of the same
            size, which can be useful to get information about how different/similar are images:</para>
            <code>
            // create template matching algorithm's instance
            // use zero similarity to make sure algorithm will provide anything
            ExhaustiveTemplateMatching tm = new ExhaustiveTemplateMatching( 0 );
            // compare two images
            TemplateMatch[] matchings = tm.ProcessImage( image1, image2 );
            // check similarity level
            if ( matchings[0].Similarity > 0.95f )
            {
                // do something with quite similar images
            }
            </code>
            
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.SimilarityThreshold">
            <summary>
            Similarity threshold, [0..1].
            </summary>
            
            <remarks><para>The property sets the minimal acceptable similarity between template
            and potential found candidate. If similarity is lower than this value,
            then object is not treated as matching with template.
            </para>
            
            <para>Default value is set to <b>0.9</b>.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching"/> class.
            </summary>
            
            <param name="similarityThreshold">Similarity threshold.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.ProcessImage(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="image">Source image to process.</param>
            <param name="template">Template image to search for.</param>
            
            <returns>Returns array of found template matches. The array is sorted by similarity
            of found matches in descending order.</returns>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Template image is bigger than source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.ProcessImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="image">Source image to process.</param>
            <param name="template">Template image to search for.</param>
            <param name="searchZone">Rectangle in source image to search template for.</param>
            
            <returns>Returns array of found template matches. The array is sorted by similarity
            of found matches in descending order.</returns>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Template image is bigger than source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.ProcessImage(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="imageData">Source image data to process.</param>
            <param name="templateData">Template image to search for.</param>
            
            <returns>Returns array of found template matches. The array is sorted by similarity
            of found matches in descending order.</returns>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Template image is bigger than source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.ProcessImage(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="imageData">Source image data to process.</param>
            <param name="templateData">Template image to search for.</param>
            <param name="searchZone">Rectangle in source image to search template for.</param>
            
            <returns>Returns array of found template matches. The array is sorted by similarity
            of found matches in descending order.</returns>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Template image is bigger than source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Process image looking for matchings with specified template.
             </summary>
             
             <param name="image">Unmanaged source image to process.</param>
             <param name="template">Unmanaged template image to search for.</param>
             
             <returns>Returns array of found template matches. The array is sorted by similarity
             of found matches in descending order.</returns>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Template image is bigger than source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ExhaustiveTemplateMatching.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
             <summary>
             Process image looking for matchings with specified template.
             </summary>
             
             <param name="image">Unmanaged source image to process.</param>
             <param name="template">Unmanaged template image to search for.</param>
             <param name="searchZone">Rectangle in source image to search template for.</param>
             
             <returns>Returns array of found template matches. The array is sorted by similarity
             of found matches in descending order.</returns>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">The source image has incorrect pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Template image is bigger than search zone.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter">
            <summary>
            Base class for filters, which produce new image of the same size as a
            result of image processing.
            </summary>
            
            <remarks><para>The abstract class is the base class for all filters, which
            do image processing creating new image with the same size as source.
            Filters based on this class cannot be applied directly to the source
            image, which is kept unchanged.</para>
            
            <para>The base class itself does not define supported pixel formats of source
            image and resulting pixel formats of destination image. Filters inheriting from
            this base class, should specify supported pixel formats and their transformations
            overriding abstract <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.FormatTranslations"/> property.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.FormatTranslations">
             <summary>
             Format translations dictionary.
             </summary>
             
             <remarks><para>The dictionary defines, which pixel formats are supported for
             source images and which pixel format will be used for resulting image.
             </para>
             
             <para>See <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation.FormatTranslations"/> for more information.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.Apply(System.Drawing.Bitmap)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="image">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.Apply(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The filter accepts bitmap data as input and returns the result
             of image processing filter as new image. The source image data are kept
             unchanged.</remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="image">Source image in unmanaged memory to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="sourceImage">Source image in unmanaged memory to apply filter to.</param>
             <param name="destinationImage">Destination image in unmanaged memory to put result into.</param>
             
             <remarks><para>The method keeps the source image unchanged and puts result of image processing
             into destination image.</para>
             
             <para><note>The destination image must have the same width and height as source image. Also
             destination image must have pixel format, which is expected by particular filter (see
             <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.FormatTranslations"/> property for information about pixel format conversions).</note></para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Incorrect destination pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Destination image has wrong width and/or height.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseFilter.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter">
            <summary>
            Base class for filters, which may be applied directly to the source image.
            </summary>
            
            <remarks><para>The abstract class is the base class for all filters, which can
            be applied to an image producing new image as a result of image processing or
            applied directly to the source image without changing its size and pixel format.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.FormatTranslations">
             <summary>
             Format translations dictionary.
             </summary>
             
             <remarks><para>The dictionary defines, which pixel formats are supported for
             source images and which pixel format will be used for resulting image.
             </para>
             
             <para>See <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation.FormatTranslations"/> for more information.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.Apply(System.Drawing.Bitmap)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="image">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.Apply(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The filter accepts bitmap data as input and returns the result
             of image processing filter as new image. The source image data are kept
             unchanged.</remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="image">Source image in unmanaged memory to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="sourceImage">Source image in unmanaged memory to apply filter to.</param>
             <param name="destinationImage">Destination image in unmanaged memory to put result into.</param>
             
             <remarks><para>The method keeps the source image unchanged and puts result of image processing
             into destination image.</para>
             
             <para><note>The destination image must have the same width and height as source image. Also
             destination image must have pixel format, which is expected by particular filter (see
             <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.FormatTranslations"/> property for information about pixel format conversions).</note></para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Incorrect destination pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Destination image has wrong width and/or height.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.ApplyInPlace(System.Drawing.Bitmap)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Image data to apply filter to.</param>
             
             <remarks>The method applies the filter directly to the provided source image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an unmanaged image.
             </summary>
             
             <param name="image">Unmanaged image to apply filter to.</param>
             
             <remarks>The method applies the filter directly to the provided source unmanaged image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlaceFilter.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Process the filter on the specified image.
             </summary>
             
             <param name="image">Source image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter">
            <summary>
            Base class for filters, which may be applied directly to the source image or its part.
            </summary>
            
            <remarks><para>The abstract class is the base class for all filters, which can
            be applied to an image producing new image as a result of image processing or
            applied directly to the source image (or its part) without changing its size and
            pixel format.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.FormatTranslations">
             <summary>
             Format translations dictionary.
             </summary>
             
             <remarks><para>The dictionary defines, which pixel formats are supported for
             source images and which pixel format will be used for resulting image.
             </para>
             
             <para>See <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation.FormatTranslations"/> for more information.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.Apply(System.Drawing.Bitmap)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="image">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.Apply(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The filter accepts bitmap data as input and returns the result
             of image processing filter as new image. The source image data are kept
             unchanged.</remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="image">Source image in unmanaged memory to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="sourceImage">Source image in unmanaged memory to apply filter to.</param>
             <param name="destinationImage">Destination image in unmanaged memory to put result into.</param>
             
             <remarks><para>The method keeps the source image unchanged and puts result of image processing
             into destination image.</para>
             
             <para><note>The destination image must have the same width and height as source image. Also
             destination image must have pixel format, which is expected by particular filter (see
             <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.FormatTranslations"/> property for information about pixel format conversions).</note></para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Incorrect destination pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Destination image has wrong width and/or height.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ApplyInPlace(System.Drawing.Bitmap)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Image data to apply filter to.</param>
             
             <remarks>The method applies the filter directly to the provided source image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an unmanaged image.
             </summary>
             
             <param name="image">Unmanaged image to apply filter to.</param>
             
             <remarks>The method applies the filter directly to the provided source unmanaged image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ApplyInPlace(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an image or its part.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
             <summary>
             Apply filter to an image or its part.
             </summary>
             
             <param name="imageData">Image data to apply filter to.</param>
             <param name="rect">Image rectangle for processing by the filter.</param>
             
             <remarks>The method applies the filter directly to the provided source image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an unmanaged image or its part.
            </summary>
            
            <param name="image">Unmanaged image to apply filter to.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseInPlacePartialFilter.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
             <summary>
             Process the filter on the specified image.
             </summary>
             
             <param name="image">Source image data.</param>
             <param name="rect">Image rectangle for processing by the filter.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter">
            <summary>
            Base class for image resizing filters.
            </summary>
            
            <remarks><para>The abstract class is the base class for all filters,
            which implement image rotation algorithms.</para>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter.newWidth">
            <summary>
            New image width.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter.newHeight">
            <summary>
            New image height.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter.NewWidth">
            <summary>
            Width of the new resized image.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter.NewHeight">
            <summary>
            Height of the new resized image.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter"/> class.
            </summary>
            
            <param name="newWidth">Width of the new resized image.</param>
            <param name="newHeight">Height of the new resize image.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseResizeFilter.CalculateNewImageSize(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Calculates new image size.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            
            <returns>New image size - size of the destination image.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter">
            <summary>
            Base class for filters, which may produce new image of different size as a
            result of image processing.
            </summary>
            
            <remarks><para>The abstract class is the base class for all filters, which
            do image processing creating new image of the size, which may differ from the
            size of source image. Filters based on this class cannot be applied directly
            to the source image, which is kept unchanged.</para>
            
            <para>The base class itself does not define supported pixel formats of source
            image and resulting pixel formats of destination image. Filters inheriting from
            this base class, should specify supported pixel formats and their transformations
            overriding abstract <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.FormatTranslations"/> property.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.FormatTranslations">
             <summary>
             Format translations dictionary.
             </summary>
             
             <remarks><para>The dictionary defines, which pixel formats are supported for
             source images and which pixel format will be used for resulting image.
             </para>
             
             <para>See <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation.FormatTranslations"/> for more information.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.Apply(System.Drawing.Bitmap)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="image">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.Apply(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The filter accepts bitmap data as input and returns the result
             of image processing filter as new image. The source image data are kept
             unchanged.</remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="image">Source image in unmanaged memory to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="sourceImage">Source image in unmanaged memory to apply filter to.</param>
             <param name="destinationImage">Destination image in unmanaged memory to put result into.</param>
             
             <remarks><para>The method keeps the source image unchanged and puts result of image processing
             into destination image.</para>
             
             <para><note>The destination image must have the same width and height as source image. Also
             destination image must have pixel format, which is expected by particular filter (see
             <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.FormatTranslations"/> property for information about pixel format conversions).</note></para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Incorrect destination pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Destination image has wrong width and/or height.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.CalculateNewImageSize(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Calculates new image size.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            
            <returns>New image size - size of the destination image.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseTransformationFilter.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter">
             <summary>
             Base class for filters, which require source image backup to make them applicable to
             source image (or its part) directly.
             </summary>
             
             <remarks><para>The base class is used for filters, which can not do
             direct manipulations with source image. To make effect of in-place filtering,
             these filters create a background copy of the original image (done by this
             base class) and then do manipulations with it putting result back to the original
             source image.</para>
             
             <para><note>The background copy of the source image is created only in the case of in-place
             filtering. Otherwise background copy is not created - source image is processed and result is
             put to destination image.</note></para>
             
             <para>The base class is for those filters, which support as filtering entire image, as
             partial filtering of specified rectangle only.</para>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.FormatTranslations">
             <summary>
             Format translations dictionary.
             </summary>
             
             <remarks><para>The dictionary defines, which pixel formats are supported for
             source images and which pixel format will be used for resulting image.
             </para>
             
             <para>See <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation.FormatTranslations"/> for more information.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.Apply(System.Drawing.Bitmap)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="image">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.Apply(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The filter accepts bitmap data as input and returns the result
             of image processing filter as new image. The source image data are kept
             unchanged.</remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="image">Source image in unmanaged memory to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an image in unmanaged memory.
             </summary>
             
             <param name="sourceImage">Source image in unmanaged memory to apply filter to.</param>
             <param name="destinationImage">Destination image in unmanaged memory to put result into.</param>
             
             <remarks><para>The method keeps the source image unchanged and puts result of image processing
             into destination image.</para>
             
             <para><note>The destination image must have the same width and height as source image. Also
             destination image must have pixel format, which is expected by particular filter (see
             <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.FormatTranslations"/> property for information about pixel format conversions).</note></para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Incorrect destination pixel format.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Destination image has wrong width and/or height.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ApplyInPlace(System.Drawing.Bitmap)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="imageData">Image data to apply filter to.</param>
             
             <remarks>The method applies the filter directly to the provided source image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Apply filter to an unmanaged image.
             </summary>
             
             <param name="image">Unmanaged image to apply filter to.</param>
             
             <remarks>The method applies the filter directly to the provided source unmanaged image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ApplyInPlace(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an image or its part.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
             <summary>
             Apply filter to an image or its part.
             </summary>
             
             <param name="imageData">Image data to apply filter to.</param>
             <param name="rect">Image rectangle for processing by the filter.</param>
             
             <remarks>The method applies the filter directly to the provided source image.</remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an unmanaged image or its part.
            </summary>
            
            <param name="image">Unmanaged image to apply filter to.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
            <remarks>The method applies the filter directly to the provided source image.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BaseUsingCopyPartialFilter.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.Grayscale">
             <summary>
             Base class for image grayscaling.
             </summary>
             
             <remarks><para>This class is the base class for image grayscaling. Other
             classes should inherit from this class and specify <b>RGB</b>
             coefficients used for color image conversion to grayscale.</para>
             
             <para>The filter accepts 24, 32, 48 and 64 bpp color images and produces
             8 (if source is 24 or 32 bpp image) or 16 (if source is 48 or 64 bpp image)
             bpp grayscale image.</para>
             
             <para>Sample usage:</para>
             <code>
             // create grayscale filter (BT709)
             Grayscale filter = new Grayscale( 0.2125, 0.7154, 0.0721 );
             // apply the filter
             Bitmap grayImage = filter.Apply( image );
             </code>
             
             <para><b>Initial image:</b></para>
             <img src="img/imaging/sample1.jpg" width="480" height="361" />
             <para><b>Result image:</b></para>
             <img src="img/imaging/grayscale.jpg" width="480" height="361" />
             </remarks>
            
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleBT709"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleRMY"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleY"/>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.CommonAlgorithms">
            <summary>
            Set of predefined common grayscaling algorithms, which have aldready initialized
            grayscaling coefficients.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.CommonAlgorithms.BT709">
            <summary>
            Grayscale image using BT709 algorithm.
            </summary>
            
            <remarks><para>The instance uses <b>BT709</b> algorithm to convert color image
            to grayscale. The conversion coefficients are:
            <list type="bullet">
            <item>Red: 0.2125;</item>
            <item>Green: 0.7154;</item>
            <item>Blue: 0.0721.</item>
            </list></para>
            
            <para>Sample usage:</para>
            <code>
            // apply the filter
            Bitmap grayImage = Grayscale.CommonAlgorithms.BT709.Apply( image );
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.CommonAlgorithms.RMY">
            <summary>
            Grayscale image using R-Y algorithm.
            </summary>
            
            <remarks><para>The instance uses <b>R-Y</b> algorithm to convert color image
            to grayscale. The conversion coefficients are:
            <list type="bullet">
            <item>Red: 0.5;</item>
            <item>Green: 0.419;</item>
            <item>Blue: 0.081.</item>
            </list></para>
            
            <para>Sample usage:</para>
            <code>
            // apply the filter
            Bitmap grayImage = Grayscale.CommonAlgorithms.RMY.Apply( image );
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.CommonAlgorithms.Y">
            <summary>
            Grayscale image using Y algorithm.
            </summary>
            
            <remarks><para>The instance uses <b>Y</b> algorithm to convert color image
            to grayscale. The conversion coefficients are:
            <list type="bullet">
            <item>Red: 0.299;</item>
            <item>Green: 0.587;</item>
            <item>Blue: 0.114.</item>
            </list></para>
            
            <para>Sample usage:</para>
            <code>
            // apply the filter
            Bitmap grayImage = Grayscale.CommonAlgorithms.Y.Apply( image );
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.RedCoefficient">
            <summary>
            Portion of red channel's value to use during conversion from RGB to grayscale.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.GreenCoefficient">
            <summary>
            Portion of green channel's value to use during conversion from RGB to grayscale.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.BlueCoefficient">
            <summary>
            Portion of blue channel's value to use during conversion from RGB to grayscale.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.Grayscale"/> class.
            </summary>
            
            <param name="cr">Red coefficient.</param>
            <param name="cg">Green coefficient.</param>
            <param name="cb">Blue coefficient.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.Grayscale.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleBT709">
             <summary>
             Grayscale image using BT709 algorithm.
             </summary>
             
             <remarks>The class uses <b>BT709</b> algorithm to convert color image
             to grayscale. The conversion coefficients are:
             <list type="bullet">
             <item>Red: 0.2125;</item>
             <item>Green: 0.7154;</item>
             <item>Blue: 0.0721.</item>
             </list>
             </remarks>
             
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.Grayscale"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleRMY"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleY"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleBT709.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleBT709"/> class.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleRMY">
             <summary>
             Grayscale image using R-Y algorithm.
             </summary>
             
             <remarks>The class uses <b>R-Y</b> algorithm to convert color image
             to grayscale. The conversion coefficients are:
             <list type="bullet">
             <item>Red: 0.5;</item>
             <item>Green: 0.419;</item>
             <item>Blue: 0.081.</item>
             </list>
             </remarks>
             
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.Grayscale"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleBT709"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleY"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleRMY.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleRMY"/> class.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleToRGB">
            <summary>
            Convert grayscale image to RGB.
            </summary>
            
            <remarks><para>The filter creates color image from specified grayscale image
            initializing all RGB channels to the same value - pixel's intensity of grayscale image.</para>
            
            <para>The filter accepts 8 bpp grayscale images and produces
            24 bpp RGB image.</para>
            
            <para>Sample usage:</para>
            <code>
            // create filter
            GrayscaleToRGB filter = new GrayscaleToRGB( );
            // apply the filter
            Bitmap rgbImage = filter.Apply( image );
            </code>
            
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleToRGB.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleToRGB.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleToRGB"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleToRGB.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleY">
             <summary>
             Grayscale image using Y algorithm.
             </summary>
             
             <remarks>The class uses <b>Y</b> algorithm to convert color image
             to grayscale. The conversion coefficients are:
             <list type="bullet">
             <item>Red: 0.299;</item>
             <item>Green: 0.587;</item>
             <item>Blue: 0.114.</item>
             </list>
             </remarks>
             
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.Grayscale"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleBT709"/>
             <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleRMY"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleY.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.GrayscaleY"/> class.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering">
            <summary>
            Color filtering in HSL color space.
            </summary>
            
            <remarks><para>The filter operates in <b>HSL</b> color space and filters
            pixels, which color is inside/outside of the specified HSL range -
            it keeps pixels with colors inside/outside of the specified range and fills the
            rest with <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FillColor">specified color</see>.</para>
            
            <para>The filter accepts 24 and 32 bpp color images for processing.</para>
            
            <para>Sample usage:</para>
            <code>
            // create filter
            HSLFiltering filter = new HSLFiltering( );
            // set color ranges to keep
            filter.Hue = new IntRange( 335, 0 );
            filter.Saturation = new Range( 0.6f, 1 );
            filter.Luminance = new Range( 0.1f, 1 );
            // apply the filter
            filter.ApplyInPlace( image );
            </code>
            
            <para><b>Initial image:</b></para>
            <img src="img/imaging/sample1.jpg" width="480" height="361" />
            <para><b>Result image:</b></para>
            <img src="img/imaging/hsl_filtering.jpg" width="480" height="361" />
            
            <para>Sample usage with saturation update only:</para>
            <code>
            // create filter
            HSLFiltering filter = new HSLFiltering( );
            // configure the filter
            filter.Hue = new IntRange( 340, 20 );
            filter.UpdateLuminance = false;
            filter.UpdateHue = false;
            // apply the filter
            filter.ApplyInPlace( image );
            </code>
            
            <para><b>Result image:</b></para>
            <img src="img/imaging/hsl_filtering2.jpg" width="480" height="361" />
            </remarks>
            
            <seealso cref="!:ColorFiltering"/>
            <seealso cref="!:YCbCrFiltering"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.Hue">
            <summary>
            Range of hue component, [0, 359].
            </summary>
            
            <remarks><note>Because of hue values are cycled, the minimum value of the hue
            range may have bigger integer value than the maximum value, for example [330, 30].</note></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.Saturation">
            <summary>
            Range of saturation component, [0, 1].
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.Luminance">
            <summary>
            Range of luminance component, [0, 1].
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FillColor">
            <summary>
            Fill color used to fill filtered pixels.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FillOutsideRange">
            <summary>
            Determines, if pixels should be filled inside or outside specified
            color range.
            </summary>
            
            <remarks><para>Default value is set to <see langword="true"/>, which means
            the filter removes colors outside of the specified range.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.UpdateHue">
            <summary>
            Determines, if hue value of filtered pixels should be updated.
            </summary>
            
            <remarks><para>The property specifies if hue of filtered pixels should be
            updated with value from <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FillColor">fill color</see> or not.</para>
            
            <para>Default value is set to <see langword="true"/>.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.UpdateSaturation">
            <summary>
            Determines, if saturation value of filtered pixels should be updated.
            </summary>
            
            <remarks><para>The property specifies if saturation of filtered pixels should be
            updated with value from <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FillColor">fill color</see> or not.</para>
            
            <para>Default value is set to <see langword="true"/>.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.UpdateLuminance">
            <summary>
            Determines, if luminance value of filtered pixels should be updated.
            </summary>
            
            <remarks><para>The property specifies if luminance of filtered pixels should be
            updated with value from <see cref="P:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.FillColor">fill color</see> or not.</para>
            
            <para>Default value is set to <see langword="true"/>.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.#ctor(VisioForge.Libs.AForge.IntRange,VisioForge.Libs.AForge.Range,VisioForge.Libs.AForge.Range)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering"/> class.
            </summary>
            
            <param name="hue">Range of hue component.</param>
            <param name="saturation">Range of saturation component.</param>
            <param name="luminance">Range of luminance component.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.HSLFiltering.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
             <summary>
             Process the filter on the specified image.
             </summary>
             
             <param name="image">Source image data.</param>
             <param name="rect">Image rectangle for processing by the filter.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.IFilter">
            <summary>
            Image processing filter interface.
            </summary>
            
            <remarks>The interface defines the set of methods, which should be
            provided by all image processing filters. Methods of this interface
            keep the source image unchanged and returt the result of image processing
            filter as new image.</remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.IInPlaceFilter"/>
            <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.IInPlacePartialFilter"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IFilter.Apply(System.Drawing.Bitmap)">
             <summary>
             Apply filter to an image.
             </summary>
             
             <param name="image">Source image to apply filter to.</param>
             
             <returns>Returns filter's result obtained by applying the filter to
             the source image.</returns>
             
             <remarks>The method keeps the source image unchanged and returns
             the result of image processing filter as new image.</remarks> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="imageData">Source image to apply filter to.</param>
            
            <returns>Returns filter's result obtained by applying the filter to
            the source image.</returns>
            
            <remarks>The filter accepts bitmap data as input and returns the result
            of image processing filter as new image. The source image data are kept
            unchanged.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="image">Image in unmanaged memory.</param>
            
            <returns>Returns filter's result obtained by applying the filter to
            the source image.</returns>
            
            <remarks>The method keeps the source image unchanged and returns
            the result of image processing filter as new image.</remarks> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IFilter.Apply(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="sourceImage">Source image to be processed.</param>
            <param name="destinationImage">Destination image to store filter's result.</param>
            
            <remarks><para>The method keeps the source image unchanged and puts the
            the result of image processing filter into destination image.</para>
            
            <para><note>The destination image must have the size, which is expected by
            the filter.</note></para>
            </remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">In the case if destination image has incorrect
            size.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation">
            <summary>
            Interface which provides information about image processing filter.
            </summary>
            
            <remarks><para>The interface defines set of properties, which provide different type
            of information about image processing filters implementing <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.IFilter"/> interface
            or another filter's interface.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
            
            <remarks><para>The dictionary defines, which pixel formats are supported for
            source images and which pixel format will be used for resulting image.
            </para>
            
            <para>Keys of this dictionary defines all pixel formats which are supported for source
            images, but corresponding values define what will be resulting pixel format. For
            example, if value <see cref="T:System.Drawing.Imaging.PixelFormat">Format16bppGrayScale</see>
            is put into the dictionary with the
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format48bppRgb</see> key, then it means
            that the filter accepts color 48 bpp image and produces 16 bpp grayscale image as a result
            of image processing.</para>
            
            <para>The information provided by this property is mostly actual for filters, which can not
            be applied directly to the source image, but provide new image a result. Since usually all
            filters implement <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.IFilter"/> interface, the information provided by this property
            (if filter also implements <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.IFilterInformation"/> interface) may be useful to
            user to resolve filter's capabilities.</para>
            
            <para>Sample usage:</para>
            <code>
            // get filter's IFilterInformation interface
            IFilterInformation info = (IFilterInformation) filter;
            // check if the filter supports our image's format
            if ( info.FormatTranslations.ContainsKey( image.PixelFormat )
            {
                // format is supported, check what will be result of image processing
                PixelFormat resultingFormat = info.FormatTranslations[image.PixelFormat];
            }
            /// </code>
            </remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.IInPlaceFilter">
            <summary>
            In-place filter interface.
            </summary>
            
            <remarks>The interface defines the set of methods, which should be
            implemented by filters, which are capable to do image processing
            directly on the source image. Not all image processing filters
            can be applied directly to the source image - only filters, which do not
            change image's dimension and pixel format, can be applied directly to the
            source image.</remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.IFilter"/>
            <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.IInPlacePartialFilter"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IInPlaceFilter.ApplyInPlace(System.Drawing.Bitmap)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            
            <remarks>The method applies filter directly to the provided image data.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IInPlaceFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData)">
            <summary>
            Apply filter to an image.
            </summary>
            
            <param name="imageData">Image to apply filter to.</param>
            
            <remarks>The method applies filter directly to the provided image data.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IInPlaceFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Apply filter to an image in unmanaged memory.
            </summary>
            
            <param name="image">Image in unmanaged memory.</param>
            
            <remarks>The method applies filter directly to the provided image data.</remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.IInPlacePartialFilter">
            <summary>
            In-place partial filter interface.
            </summary>
            
            <remarks><para>The interface defines the set of methods, which should be
            implemented by filters, which are capable to do image processing
            directly on the source image. Not all image processing filters
            can be applied directly to the source image - only filters, which do not
            change image dimension and pixel format, can be applied directly to the
            source image.</para>
            
            <para>The interface also supports partial image filtering, allowing to specify
            image rectangle, which should be filtered.</para>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.IFilter"/>
            <seealso cref="T:VisioForge.Libs.AForge.Imaging.Filters.IInPlaceFilter"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IInPlacePartialFilter.ApplyInPlace(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an image or its part.
            </summary>
            
            <param name="image">Image to apply filter to.</param>
            <param name="rect">Image rectangle for processing by filter.</param>
            
            <remarks>The method applies filter directly to the provided image data.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IInPlacePartialFilter.ApplyInPlace(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an image or its part.
            </summary>
            
            <param name="imageData">Image to apply filter to.</param>
            <param name="rect">Image rectangle for processing by filter.</param>
            
            <remarks>The method applies filter directly to the provided image data.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.IInPlacePartialFilter.ApplyInPlace(VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Apply filter to an image in unmanaged memory.
            </summary>
            
            <param name="image">Image in unmanaged memory.</param>
            <param name="rect">Image rectangle for processing by filter.</param>
            
            <remarks>The method applies filter directly to the provided image.</remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BinaryDilatation3x3">
            <summary>
            Binary dilatation operator from Mathematical Morphology with 3x3 structuring element.
            </summary>
            
            <remarks><para>The filter represents an optimized version of <see cref="!:Dilatation"/>
            filter, which is aimed for binary images (containing black and white pixels) processed
            with 3x3 structuring element. This makes this filter ideal for growing objects in binary
            images – it puts white pixel to the destination image in the case if there is at least
            one white neighbouring pixel in the source image.</para>
            
            <para>See <see cref="!:Dilatation"/> filter, which represents generic version of
            dilatation filter supporting custom structuring elements and wider range of image formats.</para>
            
            <para>The filter accepts 8 bpp grayscale (binary) images for processing.</para>
            </remarks>
            
            <seealso cref="!:Dilatation"/>
            <seealso cref="!:Dilatation3x3"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BinaryDilatation3x3.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BinaryDilatation3x3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.BinaryDilatation3x3"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BinaryDilatation3x3.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Processing rectangle mast be at least 3x3 in size.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.BinaryErosion3x3">
            <summary>
            Binary erosion operator from Mathematical Morphology with 3x3 structuring element.
            </summary>
            
            <remarks><para>The filter represents an optimized version of <see cref="!:Erosion"/>
            filter, which is aimed for binary images (containing black and white pixels) processed
            with 3x3 structuring element. This makes this filter ideal for removing noise in binary
            images – it removes all white pixels, which are neighbouring with at least one blank pixel.
            </para>
            
            <para>See <see cref="!:Erosion"/> filter, which represents generic version of
            erosion filter supporting custom structuring elements and wider range of image formats.</para>
            
            <para>The filter accepts 8 bpp grayscale (binary) images for processing.</para>
            </remarks>
            
            <seealso cref="!:Erosion"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.BinaryErosion3x3.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BinaryErosion3x3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.BinaryErosion3x3"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.BinaryErosion3x3.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            <param name="rect">Image rectangle for processing by the filter.</param>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Processing rectangle mast be at least 3x3 in size.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.Crop">
            <summary>
            Crop an image.
            </summary>
            
            <remarks>
            <para>The filter crops an image providing a new image, which contains only the specified
            rectangle of the original image.</para>
            
            <para>The filter accepts 8 and 16 bpp grayscale images and 24, 32, 48 and 64 bpp
            color images for processing.</para>
            
            <para>Sample usage:</para>
            <code>
            // create filter
            Crop filter = new Crop( new Rectangle( 75, 75, 320, 240 ) );
            // apply the filter
            Bitmap newImage = filter.Apply( image );
            </code>
            
            <para><b>Initial image:</b></para>
            <img src="img/imaging/sample1.jpg" width="480" height="361" />
            <para><b>Result image:</b></para>
            <img src="img/imaging/crop.jpg" width="320" height="240" />
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.Crop.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.Crop.Rectangle">
            <summary>
            Rectangle to crop.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.Crop.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.Crop"/> class.
            </summary>
            
            <param name="rect">Rectangle to crop.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.Crop.CalculateNewImageSize(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Calculates new image size.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            
            <returns>New image size - size of the destination image.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.Crop.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Filters.ResizeNearestNeighbor">
            <summary>
            Resize image using nearest neighbor algorithm.
            </summary>
            
            <remarks><para>The class implements image resizing filter using nearest
            neighbor algorithm, which does not assume any interpolation.</para>
            
            <para>The filter accepts 8 and 16 bpp grayscale images and 24, 32, 48 and 64 bpp
            color images for processing.</para>
            
            <para>Sample usage:</para>
            <code>
            // create filter
            ResizeNearestNeighbor filter = new ResizeNearestNeighbor( 400, 300 );
            // apply the filter
            Bitmap newImage = filter.Apply( image );
            </code>
            
            <para><b>Initial image:</b></para>
            <img src="img/imaging/sample9.png" width="320" height="240" />
            <para><b>Result image:</b></para>
            <img src="img/imaging/resize_nearest.png" width="400" height="300" />
            </remarks>
            
            <seealso cref="!:ResizeBilinear"/>
            <seealso cref="!:ResizeBicubic"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.Filters.ResizeNearestNeighbor.FormatTranslations">
            <summary>
            Format translations dictionary.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.ResizeNearestNeighbor.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.Filters.ResizeNearestNeighbor"/> class.
            </summary>
            
            <param name="newWidth">Width of the new image.</param>
            <param name="newHeight">Height of the new image.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Filters.ResizeNearestNeighbor.ProcessFilter(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process the filter on the specified image.
            </summary>
            
            <param name="sourceData">Source image data.</param>
            <param name="destinationData">Destination image data.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.IBlobsFilter">
             <summary>
             Interface for custom blobs' filters used for filtering blobs after
             blob counting.
             </summary>
             
             <remarks><para>The interface should be implemented by classes, which perform
             custom blobs' filtering different from default filtering implemented in
             <see cref="T:VisioForge.Libs.AForge.Imaging.BlobCounterBase"/>. See <see cref="P:VisioForge.Libs.AForge.Imaging.BlobCounterBase.BlobsFilter"/>
             for additional information.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.IBlobsFilter.Check(VisioForge.Libs.AForge.Imaging.Blob)">
             <summary>
             Check specified blob and decide if should be kept or not.
             </summary>
             
             <param name="blob">Blob to check.</param>
             
             <returns>Return <see langword="true"/> if the blob should be kept or
             <see langword="false"/> if it should be removed.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.Image">
            <summary>
            Core image relatad methods.
            </summary>
            
            <remarks>All methods of this class are static and represent general routines
            used by different image processing classes.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.IsGrayscale(System.Drawing.Bitmap)">
            <summary>
            Check if specified 8 bpp image is grayscale.
            </summary>
            
            <param name="image">Image to check.</param>
            
            <returns>Returns <b>true</b> if the image is grayscale or <b>false</b> otherwise.</returns>
            
            <remarks>The methods checks if the image is a grayscale image of 256 gradients.
            The method first examines if the image's pixel format is
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format8bppIndexed</see>
            and then it examines its palette to check if the image is grayscale or not.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.CreateGrayscaleImage(System.Int32,System.Int32)">
            <summary>
            Create and initialize new 8 bpp grayscale image.
            </summary>
            
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            
            <returns>Returns the created grayscale image.</returns>
            
            <remarks>The method creates new 8 bpp grayscale image and initializes its palette.
            Grayscale image is represented as
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format8bppIndexed</see>
            image with palette initialized to 256 gradients of gray color.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.SetGrayscalePalette(System.Drawing.Bitmap)">
            <summary>
            Set pallete of the 8 bpp indexed image to grayscale.
            </summary>
            
            <param name="image">Image to initialize.</param>
            
            <remarks>The method initializes palette of
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format8bppIndexed</see>
            image with 256 gradients of gray color.</remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Provided image is not 8 bpp indexed image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.Clone(System.Drawing.Bitmap,System.Drawing.Imaging.PixelFormat)">
             <summary>
             Clone image.
             </summary>
             
             <param name="source">Source image.</param>
             <param name="format">Pixel format of result image.</param>
             
             <returns>Returns clone of the source image with specified pixel format.</returns>
            
             <remarks>The original <see cref="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">Bitmap.Clone()</see>
             does not produce the desired result - it does not create a clone with specified pixel format.
             More of it, the original method does not create an actual clone - it does not create a copy
             of the image. That is why this method was implemented to provide the functionality.</remarks> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.Clone(System.Drawing.Bitmap)">
            <summary>
            Clone image.
            </summary>
            
            <param name="source">Source image.</param>
            
            <returns>Return clone of the source image.</returns>
            
            <remarks>The original <see cref="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">Bitmap.Clone()</see>
            does not produce the desired result - it does not create an actual clone (it does not create a copy
            of the image). That is why this method was implemented to provide the functionality.</remarks> 
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.Clone(System.Drawing.Imaging.BitmapData)">
             <summary>
             Clone image.
             </summary>
             
             <param name="sourceData">Source image data.</param>
            
             <returns>Clones image from source image data. The message does not clone pallete in the
             case if the source image has indexed pixel format.</returns>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.FormatImage(System.Drawing.Bitmap@)">
             <summary>
             Format an image.
             </summary>
             
             <param name="image">Source image to format.</param>
             
             <remarks><para>Formats the image to one of the formats, which are supported
             by the <b>AForge.Imaging</b> library. The image is left untouched in the
             case if it is already of
             <see cref="T:System.Drawing.Imaging.PixelFormat">Format24bppRgb</see> or
             <see cref="T:System.Drawing.Imaging.PixelFormat">Format32bppRgb</see> or
             <see cref="T:System.Drawing.Imaging.PixelFormat">Format32bppArgb</see> or
             <see cref="T:System.Drawing.Imaging.PixelFormat">Format48bppRgb</see> or
             <see cref="T:System.Drawing.Imaging.PixelFormat">Format64bppArgb</see>
             format or it is <see cref="M:VisioForge.Libs.AForge.Imaging.Image.IsGrayscale(System.Drawing.Bitmap)">grayscale</see>, otherwise the image
             is converted to <see cref="T:System.Drawing.Imaging.PixelFormat">Format24bppRgb</see>
             format.</para>
             
             <para><note>The method is deprecated and <see cref="M:VisioForge.Libs.AForge.Imaging.Image.Clone(System.Drawing.Bitmap,System.Drawing.Imaging.PixelFormat)"/> method should
             be used instead with specifying desired pixel format.</note></para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.FromFile(System.String)">
            <summary>
            Load bitmap from file.
            </summary>
            
            <param name="fileName">File name to load bitmap from.</param>
            
            <returns>Returns loaded bitmap.</returns>
            
            <remarks><para>The method is provided as an alternative of <see cref="M:System.Drawing.Image.FromFile(System.String)"/>
            method to solve the issues of locked file. The standard .NET's method locks the source file until
            image's object is disposed, so the file can not be deleted or overwritten. This method workarounds the issue and
            does not lock the source file.</para>
            
            <para>Sample usage:</para>
            <code>
            Bitmap image = AForge.Imaging.Image.FromFile( "test.jpg" );
            </code>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.Convert16bppTo8bpp(System.Drawing.Bitmap)">
            <summary>
            Convert bitmap with 16 bits per plane to a bitmap with 8 bits per plane.
            </summary>
            
            <param name="bimap">Source image to convert.</param>
            
            <returns>Returns new image which is a copy of the source image but with 8 bits per plane.</returns>
            
            <remarks><para>The routine does the next pixel format conversions:
            <list type="bullet">
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">Format16bppGrayScale</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">Format8bppIndexed</see> with grayscale palette;</item>
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">Format48bppRgb</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">Format24bppRgb</see>;</item>
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">Format64bppArgb</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">Format32bppArgb</see>;</item>
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">Format64bppPArgb</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">Format32bppPArgb</see>.</item>
            </list>
            </para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Invalid pixel format of the source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.Image.Convert8bppTo16bpp(System.Drawing.Bitmap)">
            <summary>
            Convert bitmap with 8 bits per plane to a bitmap with 16 bits per plane.
            </summary>
            
            <param name="bimap">Source image to convert.</param>
            
            <returns>Returns new image which is a copy of the source image but with 16 bits per plane.</returns>
            
            <remarks><para>The routine does the next pixel format conversions:
            <list type="bullet">
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">Format8bppIndexed</see> (grayscale palette assumed) to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">Format16bppGrayScale</see>;</item>
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">Format24bppRgb</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">Format48bppRgb</see>;</item>
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">Format32bppArgb</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">Format64bppArgb</see>;</item>
            <item><see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">Format32bppPArgb</see> to
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">Format64bppPArgb</see>.</item>
            </list>
            </para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Invalid pixel format of the source image.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.ITemplateMatching">
            <summary>
            Template matching algorithm's interface.
            </summary>
            
            <remarks><para>The interface specifies set of methods, which should be implemented by different
            template matching algorithms - algorithms, which search for the given template in specified
            image.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ITemplateMatching.ProcessImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="image">Source image to process.</param>
            <param name="template">Template image to search for.</param>
            <param name="searchZone">Rectangle in source image to search template for.</param>
            
            <returns>Returns array of found matchings.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ITemplateMatching.ProcessImage(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="imageData">Source image data to process.</param>
            <param name="templateData">Template image to search for.</param>
            <param name="searchZone">Rectangle in source image to search template for.</param>
            
            <returns>Returns array of found matchings.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.ITemplateMatching.ProcessImage(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
            Process image looking for matchings with specified template.
            </summary>
            
            <param name="image">Unmanaged source image to process.</param>
            <param name="template">Unmanaged template image to search for.</param>
            <param name="searchZone">Rectangle in source image to search template for.</param>
            
            <returns>Returns array of found matchings.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.MemoryManager">
            <summary>
            Internal memory manager used by image processing routines.
            </summary>
            
            <remarks><para>The memory manager supports memory allocation/deallocation
            caching. Caching means that memory blocks may be not freed on request, but
            kept for later reuse.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.MaximumCacheSize">
            <summary>
            Maximum amount of memory blocks to keep in cache.
            </summary>
            
            <remarks><para>The value specifies the amount of memory blocks, which could be
            cached by the memory manager.</para>
            
            <para>Default value is set to 3. Maximum value is 10.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.CurrentCacheSize">
            <summary>
            Current amount of memory blocks in cache.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.BusyMemoryBlocks">
            <summary>
            Amount of busy memory blocks in cache (which were not freed yet by user).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.FreeMemoryBlocks">
            <summary>
            Amount of free memory blocks in cache (which are not busy by users).
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.CachedMemory">
            <summary>
            Amount of cached memory in bytes.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.MaxSizeToCache">
            <summary>
            Maximum memory block's size in bytes, which could be cached.
            </summary>
            
            <remarks>Memory blocks, which size is greater than this value, are not cached.</remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.MemoryManager.MinSizeToCache">
            <summary>
            Minimum memory block's size in bytes, which could be cached.
            </summary>
            
            <remarks>Memory blocks, which size is less than this value, are not cached.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.MemoryManager.Alloc(System.Int32)">
            <summary>
            Allocate unmanaged memory.
            </summary>
            
            <param name="size">Memory size to allocate.</param>
            
            <returns>Return's pointer to the allocated memory buffer.</returns>
            
            <remarks>The method allocates requested amount of memory and returns pointer to it. It may avoid allocation
            in the case some caching scheme is uses and there is already enough allocated memory available.</remarks>
            
            <exception cref="T:System.OutOfMemoryException">There is insufficient memory to satisfy the request.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.MemoryManager.Free(System.IntPtr)">
            <summary>
            Free unmanaged memory.
            </summary>
            
            <param name="pointer">Pointer to memory buffer to free.</param>
            
            <remarks>This method may skip actual deallocation of memory and keep it for future <see cref="M:VisioForge.Libs.AForge.Imaging.MemoryManager.Alloc(System.Int32)"/> requests,
            if some caching scheme is used.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.MemoryManager.FreeUnusedMemory">
            <summary>
            Force freeing unused memory.
            </summary>
            
            <remarks>Frees and removes from cache memory blocks, which are not used by users.</remarks>
            
            <returns>Returns number of freed memory blocks.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.TemplateMatch">
            <summary>
            Template match class keeps information about found template match. The class is
            used with template matching algorithms implementing <see cref="T:VisioForge.Libs.AForge.Imaging.ITemplateMatching"/>
            interface.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.TemplateMatch.Rectangle">
            <summary>
            Rectangle of the matching area.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.TemplateMatch.Similarity">
            <summary>
            Similarity between template and found matching, [0..1].
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.TemplateMatch.#ctor(System.Drawing.Rectangle,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.TemplateMatch"/> class.
            </summary>
            
            <param name="rect">Rectangle of the matching area.</param>
            <param name="similarity">Similarity between template and found matching, [0..1].</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Imaging.UnmanagedImage">
            <summary>
            Image in unmanaged memory.
            </summary>
            
            <remarks>
            <para>The class represents wrapper of an image in unmanaged memory. Using this class
            it is possible as to allocate new image in unmanaged memory, as to just wrap provided
            pointer to unmanaged memory, where an image is stored.</para>
            
            <para>Usage of unmanaged images is mostly beneficial when it is required to apply <b>multiple</b>
            image processing routines to a single image. In such scenario usage of .NET managed images 
            usually leads to worse performance, because each routine needs to lock managed image
            before image processing is done and then unlock it after image processing is done. Without
            these lock/unlock there is no way to get direct access to managed image's data, which means
            there is no way to do fast image processing. So, usage of managed images lead to overhead, which
            is caused by locks/unlock. Unmanaged images are represented internally using unmanaged memory
            buffer. This means that it is not required to do any locks/unlocks in order to get access to image
            data (no overhead).</para>
            
            <para>Sample usage:</para>
            <code>
            // sample 1 - wrapping .NET image into unmanaged without
            // making extra copy of image in memory
            BitmapData imageData = image.LockBits(
                new Rectangle( 0, 0, image.Width, image.Height ),
                ImageLockMode.ReadWrite, image.PixelFormat );
            
            try
            {
                UnmanagedImage unmanagedImage = new UnmanagedImage( imageData ) );
                // apply several routines to the unmanaged image
            }
            finally
            {
                image.UnlockBits( imageData );
            }
            
            
            // sample 2 - converting .NET image into unmanaged
            UnmanagedImage unmanagedImage = UnmanagedImage.FromManagedImage( image );
            // apply several routines to the unmanaged image
            ...
            // conver to managed image if it is required to display it at some point of time
            Bitmap managedImage = unmanagedImage.ToManagedImage( );
            </code>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.UnmanagedImage.ImageData">
            <summary>
            Pointer to image data in unmanaged memory.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Width">
            <summary>
            Image width in pixels.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Height">
            <summary>
            Image height in pixels.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Stride">
            <summary>
            Image stride (line size in bytes).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Imaging.UnmanagedImage.PixelFormat">
            <summary>
            Image pixel format.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.UnmanagedImage"/> class.
            </summary>
            
            <param name="imageData">Pointer to image data in unmanaged memory.</param>
            <param name="width">Image width in pixels.</param>
            <param name="height">Image height in pixels.</param>
            <param name="stride">Image stride (line size in bytes).</param>
            <param name="pixelFormat">Image pixel format.</param>
            
            <remarks><para><note>Using this constructor, make sure all specified image attributes are correct
            and correspond to unmanaged memory buffer. If some attributes are specified incorrectly,
            this may lead to exceptions working with the unmanaged memory.</note></para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.UnmanagedImage"/> class.
            </summary>
            
            <param name="bitmapData">Locked bitmap data.</param>
            
            <remarks><note>Unlike <see cref="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.FromManagedImage(System.Drawing.Imaging.BitmapData)"/> method, this constructor does not make
            copy of managed image. This means that managed image must stay locked for the time of using the instance
            of unamanged image.</note></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Finalize">
            <summary>
            Destroys the instance of the <see cref="T:VisioForge.Libs.AForge.Imaging.UnmanagedImage"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Dispose">
            <summary>
            Dispose the object.
            </summary>
            
            <remarks><para>Frees unmanaged resources used by the object. The object becomes unusable
            after that.</para>
            
            <par><note>The method needs to be called only in the case if unmanaged image was allocated
            using <see cref="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Create(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)"/> method. In the case if the class instance was created using constructor,
            this method does not free unmanaged memory.</note></par>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Dispose(System.Boolean)">
            <summary>
            Dispose the object.
            </summary>
            
            <param name="disposing">Indicates if disposing was initiated manually.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Clone">
            <summary>
            Clone the unmanaged images.
            </summary>
            
            <returns>Returns clone of the unmanaged image.</returns>
            
            <remarks><para>The method does complete cloning of the object.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Copy(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Copy unmanaged image.
            </summary>
            
            <param name="destImage">Destination image to copy this image to.</param>
            
            <remarks><para>The method copies current unmanaged image to the specified image.
            Size and pixel format of the destination image must be exactly the same.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Destination image has different size or pixel format.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Create(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Allocate new image in unmanaged memory.
            </summary>
            
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="pixelFormat">Image pixel format.</param>
            
            <returns>Return image allocated in unmanaged memory.</returns>
            
            <remarks><para>Allocate new image with specified attributes in unmanaged memory.</para>
            
            <para><note>The method supports only
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format8bppIndexed</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format16bppGrayScale</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format24bppRgb</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format32bppRgb</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format32bppArgb</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format32bppPArgb</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format48bppRgb</see>,
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format64bppArgb</see> and
            <see cref="T:System.Drawing.Imaging.PixelFormat">Format64bppPArgb</see> pixel formats.
            In the case if <see cref="T:System.Drawing.Imaging.PixelFormat">Format8bppIndexed</see>
            format is specified, pallete is not not created for the image (supposed that it is
            8 bpp grayscale image).
            </note></para>
            </remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format was specified.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Invalid image size was specified.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.ToManagedImage">
            <summary>
            Create managed image from the unmanaged.
            </summary>
            
            <returns>Returns managed copy of the unmanaged image.</returns>
            
            <remarks><para>The method creates a managed copy of the unmanaged image with the
            same size and pixel format (it calls <see cref="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.ToManagedImage(System.Boolean)"/> specifying
            <see langword="true"/> for the <b>makeCopy</b> parameter).</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.ToManagedImage(System.Boolean)">
            <summary>
            Create managed image from the unmanaged.
            </summary>
            
            <param name="makeCopy">Make a copy of the unmanaged image or not.</param>
            
            <returns>Returns managed copy of the unmanaged image.</returns>
            
            <remarks><para>If the <paramref name="makeCopy"/> is set to <see langword="true"/>, then the method
            creates a managed copy of the unmanaged image, so the managed image stays valid even when the unmanaged
            image gets disposed. However, setting this parameter to <see langword="false"/> creates a managed image which is
            just a wrapper around the unmanaged image. So if unmanaged image is disposed, the
            managed image becomes no longer valid and accessing it will generate an exception.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">The unmanaged image has some invalid properties, which results
            in failure of converting it to managed image. This may happen if user used the
            <see cref="T:VisioForge.Libs.AForge.Imaging.UnmanagedImage"/> constructor specifying some
            invalid parameters.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.FromManagedImage(System.Drawing.Bitmap)">
            <summary>
            Create unmanaged image from the specified managed image.
            </summary>
            
            <param name="image">Source managed image.</param>
            
            <returns>Returns new unmanaged image, which is a copy of source managed image.</returns>
            
            <remarks><para>The method creates an exact copy of specified managed image, but allocated
            in unmanaged memory.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.FromManagedImage(System.Drawing.Imaging.BitmapData)">
            <summary>
            Create unmanaged image from the specified managed image.
            </summary>
            
            <param name="imageData">Source locked image data.</param>
            
            <returns>Returns new unmanaged image, which is a copy of source managed image.</returns>
            
            <remarks><para>The method creates an exact copy of specified managed image, but allocated
            in unmanaged memory. This means that managed image may be unlocked right after call to this
            method.</para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of source image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Collect8bppPixelValues(System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint})">
            <summary>
            Collect pixel values from the specified list of coordinates.
            </summary>
            
            <param name="points">List of coordinates to collect pixels' value from.</param>
            
            <returns>Returns array of pixels' values from the specified coordinates.</returns>
            
            <remarks><para>The method goes through the specified list of points and for each point retrievs
            corresponding pixel's value from the unmanaged image.</para>
            
            <para><note>For grayscale image the output array has the same length as number of points in the
            specified list of points. For color image the output array has triple length, containing pixels'
            values in RGB order.</note></para>
            
            <para><note>The method does not make any checks for valid coordinates and leaves this up to user.
            If specified coordinates are out of image's bounds, the result is not predictable (crash in most cases).
            </note></para>
            
            <para><note>This method is supposed for images with 8 bpp channels only (8 bpp grayscale image and
            24/32 bpp color images).</note></para>
            </remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image. Use Collect16bppPixelValues() method for
            images with 16 bpp channels.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.CollectActivePixels">
            <summary>
            Collect coordinates of none black pixels in the image.
            </summary>
            
            <returns>Returns list of points, which have other than black color.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.CollectActivePixels(System.Drawing.Rectangle)">
             <summary>
             Collect coordinates of none black pixels within specified rectangle of the image.
             </summary>
             
             <param name="rect">Image's rectangle to process.</param>
             
             <returns>Returns list of points, which have other than black color.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.SetPixels(System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint},System.Drawing.Color)">
             <summary>
             Set pixels with the specified coordinates to the specified color.
             </summary>
             
             <param name="coordinates">List of points to set color for.</param>
             <param name="color">Color to set for the specified points.</param>
             
             <remarks><para><note>For images having 16 bpp per color plane, the method extends the specified color
             value to 16 bit by multiplying it by 256.</note></para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.SetPixel(VisioForge.Libs.AForge.IntPoint,System.Drawing.Color)">
             <summary>
             Set pixel with the specified coordinates to the specified color.
             </summary>
             
             <param name="point">Point's coordiates to set color for.</param>
             <param name="color">Color to set for the pixel.</param>
             
             <remarks><para>See <see cref="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.SetPixel(System.Int32,System.Int32,System.Drawing.Color)"/> for more information.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Set pixel with the specified coordinates to the specified color.
            </summary>
            
            <param name="x">X coordinate of the pixel to set.</param>
            <param name="y">Y coordinate of the pixel to set.</param>
            <param name="color">Color to set for the pixel.</param>
            
            <remarks><para><note>For images having 16 bpp per color plane, the method extends the specified color
            value to 16 bit by multiplying it by 256.</note></para>
            
            <para>For grayscale images this method will calculate intensity value based on the below formula:
            <code lang="none">
            0.2125 * Red + 0.7154 * Green + 0.0721 * Blue
            </code>
            </para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.SetPixel(System.Int32,System.Int32,System.Byte)">
             <summary>
             Set pixel with the specified coordinates to the specified value.
             </summary>
            
             <param name="x">X coordinate of the pixel to set.</param>
             <param name="y">Y coordinate of the pixel to set.</param>
             <param name="value">Pixel value to set.</param>
             
             <remarks><para>The method sets all color components of the pixel to the specified value.
             If it is a grayscale image, then pixel's intensity is set to the specified value.
             If it is a color image, then pixel's R/G/B components are set to the same specified value
             (if an image has alpha channel, then it is set to maximum value - 255 or 65535).</para>
             
             <para><note>For images having 16 bpp per color plane, the method extends the specified color
             value to 16 bit by multiplying it by 256.</note></para>
             </remarks>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.GetPixel(VisioForge.Libs.AForge.IntPoint)">
             <summary>
             Get color of the pixel with the specified coordinates.
             </summary>
             
             <param name="point">Point's coordiates to get color of.</param>
             
             <returns>Return pixel's color at the specified coordinates.</returns>
             
             <remarks><para>See <see cref="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.GetPixel(System.Int32,System.Int32)"/> for more information.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.GetPixel(System.Int32,System.Int32)">
            <summary>
            Get color of the pixel with the specified coordinates.
            </summary>
            
            <param name="x">X coordinate of the pixel to get.</param>
            <param name="y">Y coordinate of the pixel to get.</param>
            
            <returns>Return pixel's color at the specified coordinates.</returns>
            
            <remarks>
            <para><note>In the case if the image has 8 bpp grayscale format, the method will return a color with
            all R/G/B components set to same value, which is grayscale intensity.</note></para>
            
            <para><note>The method supports only 8 bpp grayscale images and 24/32 bpp color images so far.</note></para>
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">The specified pixel coordinate is out of image's bounds.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Pixel format of this image is not supported by the method.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Imaging.UnmanagedImage.Collect16bppPixelValues(System.Collections.Generic.List{VisioForge.Libs.AForge.IntPoint})">
             <summary>
             Collect pixel values from the specified list of coordinates.
             </summary>
             
             <param name="points">List of coordinates to collect pixels' value from.</param>
             
             <returns>Returns array of pixels' values from the specified coordinates.</returns>
             
             <remarks><para>The method goes through the specified list of points and for each point retrievs
             corresponding pixel's value from the unmanaged image.</para>
             
             <para><note>For grayscale image the output array has the same length as number of points in the
             specified list of points. For color image the output array has triple length, containing pixels'
             values in RGB order.</note></para>
             
             <para><note>The method does not make any checks for valid coordinates and leaves this up to user.
             If specified coordinates are out of image's bounds, the result is not predictable (crash in most cases).
             </note></para>
             
             <para><note>This method is supposed for images with 16 bpp channels only (16 bpp grayscale image and
             48/64 bpp color images).</note></para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Unsupported pixel format of the source image. Use Collect8bppPixelValues() method for
             images with 8 bpp channels.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.Complex">
            <summary>
            Complex number wrapper class.
            </summary>
            
            <remarks><para>The class encapsulates complex number and provides
            set of different operators to manipulate it, lake adding, subtractio,
            multiplication, etc.</para>
            
            <para>Sample usage:</para>
            <code>
            // define two complex numbers
            Complex c1 = new Complex( 3, 9 );
            Complex c2 = new Complex( 8, 3 );
            // sum
            Complex s1 = Complex.Add( c1, c2 );
            Complex s2 = c1 + c2;
            Complex s3 = c1 + 5;
            // difference
            Complex d1 = Complex.Subtract( c1, c2 );
            Complex d2 = c1 - c2;
            Complex d3 = c1 - 2;
            </code>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.Complex.Re">
            <summary>
            Real part of the complex number.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.Complex.Im">
            <summary>
            Imaginary part of the complex number.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.Complex.Zero">
            <summary>
             A double-precision complex number that represents zero.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.Complex.One">
            <summary>
             A double-precision complex number that represents one.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.Complex.I">
            <summary>
             A double-precision complex number that represents the squere root of (-1).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Complex.Magnitude">
            <summary>
            Magnitude value of the complex number.
            </summary>
            
            <remarks><para>Magnitude of the complex number, which equals to <b>Sqrt( Re * Re + Im * Im )</b>.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Complex.Phase">
            <summary>
            Phase value of the complex number.
            </summary>
            
            <remarks><para>Phase of the complex number, which equals to <b>Atan( Im / Re )</b>.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Complex.SquaredMagnitude">
            <summary>
            Squared magnitude value of the complex number.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> class.
            </summary>
            
            <param name="re">Real part.</param>
            <param name="im">Imaginary part.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.#ctor(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> class.
            </summary>
            
            <param name="c">Source complex number.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Add(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Adds two complex numbers.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the sum of specified
            complex numbers.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Add(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Adds scalar value to a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the sum of specified
            complex number and scalar value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Add(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Adds two complex numbers and puts the result into the third complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Add(VisioForge.Libs.AForge.Math.Complex,System.Double,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Adds scalar value to a complex number and puts the result into another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Subtract(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Subtracts one complex number from another.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to be subtracted.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the subtraction result (<b>a - b</b>).</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Subtract(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Subtracts a scalar from a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to subtract from.</param>
            <param name="s">A scalar value to be subtracted.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the subtraction result (<b>a - s</b>).</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Subtract(System.Double,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Subtracts a complex number from a scalar value.
            </summary>
            
            <param name="s">A scalar value to subtract from.</param>
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to be subtracted.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the subtraction result (<b>s - a</b>).</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Subtract(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Subtracts one complex number from another and puts the result in the third complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to be subtracted.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Subtract(VisioForge.Libs.AForge.Math.Complex,System.Double,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Subtracts a scalar value from a complex number and puts the result into another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to subtract from.</param>
            <param name="s">A scalar value to be subtracted.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Subtract(System.Double,VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Subtracts a complex number from a scalar value and puts the result into another complex number.
            </summary>
            
            <param name="s">A scalar value to subtract from.</param>
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to be subtracted.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Multiply(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Multiplies two complex numbers.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of multiplication.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Multiply(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Multiplies a complex number by a scalar value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of multiplication.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Multiply(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Multiplies two complex numbers and puts the result in a third complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Multiply(VisioForge.Libs.AForge.Math.Complex,System.Double,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Multiplies a complex number by a scalar value and puts the result into another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Divide(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Divides one complex number by another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result.</returns>
            
            <exception cref="T:System.DivideByZeroException">Can not divide by zero.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Divide(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Divides a complex number by a scalar value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result.</returns>
            
            <exception cref="T:System.DivideByZeroException">Can not divide by zero.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Divide(System.Double,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Divides a scalar value by a complex number.
            </summary>
            
            <param name="s">A scalar value.</param>
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result.</returns>
            
            <exception cref="T:System.DivideByZeroException">Can not divide by zero.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Divide(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Divides one complex number by another complex number and puts the result in a third complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
            <exception cref="T:System.DivideByZeroException">Can not divide by zero.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Divide(VisioForge.Libs.AForge.Math.Complex,System.Double,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Divides a complex number by a scalar value and puts the result into another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
            <exception cref="T:System.DivideByZeroException">Can not divide by zero.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Divide(System.Double,VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Divides a scalar value by a complex number and puts the result into another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            <param name="result">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to hold the result.</param>
            
            <exception cref="T:System.DivideByZeroException">Can not divide by zero.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Negate(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Negates a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the negated values.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.ApproxEqual(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Tests whether two complex numbers are approximately equal using default tolerance value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Return <see langword="true"/> if the two vectors are approximately equal or <see langword="false"/> otherwise.</returns>
            
            <remarks><para>The default tolerance value, which is used for the test, equals to 8.8817841970012523233891E-16.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.ApproxEqual(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Tests whether two complex numbers are approximately equal given a tolerance value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            
            <remarks><para>The default tolerance value, which is used for the test, equals to 8.8817841970012523233891E-16.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> equivalent.
            </summary>
            
            <param name="s">A string representation of a complex number.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance that represents the complex number
            specified by the <paramref name="s"/> parameter.</returns>
            
            <exception cref="T:System.FormatException">String representation of the complex number is not correctly formatted.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.TryParse(System.String,VisioForge.Libs.AForge.Math.Complex@)">
            <summary>
            Try to convert the specified string to its <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> equivalent.
            </summary>
            
            <param name="s">A string representation of a complex number.</param>
            
            <param name="result"><see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance to output the result to.</param>
            
            <returns>Returns boolean value that indicates if the parse was successful or not.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Sqrt(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Calculates square root of a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the square root of the specified
            complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Log(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Calculates natural (base <b>e</b>) logarithm of a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the natural logarithm of the specified
            complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Exp(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Calculates exponent (<b>e</b> raised to the specified power) of a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the exponent of the specified
            complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Sin(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Calculates Sine value of the complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the Sine value of the specified
            complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Cos(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Calculates Cosine value of the complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the Cosine value of the specified
            complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Tan(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Calculates Tangent value of the complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the Tangent value of the specified
            complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified object.
            </summary>
            
            <param name="obj">An object to compare to this instance.</param>
            
            <returns>Returns <see langword="true"/> if <paramref name="obj"/> is a <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> and has the same values as this instance or <see langword="false"/> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            
            <returns>A string representation of this object.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Equality(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Tests whether two specified complex numbers are equal.
            </summary>
            
            <param name="u">The left-hand complex number.</param>
            <param name="v">The right-hand complex number.</param>
            
            <returns>Returns <see langword="true"/> if the two complex numbers are equal or <see langword="false"/> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Inequality(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Tests whether two specified complex numbers are not equal.
            </summary>
            
            <param name="u">The left-hand complex number.</param>
            <param name="v">The right-hand complex number.</param>
            
            <returns>Returns <see langword="true"/> if the two complex numbers are not equal or <see langword="false"/> otherwise.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_UnaryNegation(VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Negates the complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/>  instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the negated values.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Addition(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Adds two complex numbers.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the sum.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Addition(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Adds a complex number and a scalar value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the sum.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Addition(System.Double,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Adds a complex number and a scalar value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the sum.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Subtraction(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Subtracts one complex number from another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the difference.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Subtraction(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Subtracts a scalar value from a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the difference.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Subtraction(System.Double,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Subtracts a complex number from a scalar value.
            </summary>
            
            <param name="s">A scalar value.</param>
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the difference.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Multiply(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Multiplies two complex numbers.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of multiplication.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Multiply(System.Double,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Multiplies a complex number by a scalar value.
            </summary>
            
            <param name="s">A scalar value.</param>
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of multiplication.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Multiply(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Multiplies a complex number by a scalar value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of multiplication.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Division(VisioForge.Libs.AForge.Math.Complex,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Divides one complex number by another complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="b">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            
            <returns>A new Complex instance containing the result.</returns>
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of division.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Division(VisioForge.Libs.AForge.Math.Complex,System.Double)">
            <summary>
            Divides a complex number by a scalar value.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of division.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Division(System.Double,VisioForge.Libs.AForge.Math.Complex)">
            <summary>
            Divides a scalar value by a complex number.
            </summary>
            
            <param name="a">A <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance.</param>
            <param name="s">A scalar value.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing the result of division.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Explicit(System.Single)~VisioForge.Libs.AForge.Math.Complex">
            <summary>
            Converts from a single-precision real number to a complex number. 
            </summary>
            
            <param name="value">Single-precision real number to convert to complex number.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing complex number with
            real part initialized to the specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.op_Explicit(System.Double)~VisioForge.Libs.AForge.Math.Complex">
            <summary>
            Converts from a double-precision real number to a complex number. 
            </summary>
            
            <param name="value">Double-precision real number to convert to complex number.</param>
            
            <returns>Returns new <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> instance containing complex number with
            real part initialized to the specified value.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> object.
            </summary>
            
            <returns>Returns clone of the complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:VisioForge.Libs.AForge.Math.Complex"/> object.
            </summary>
            
            <returns>Returns clone of the complex number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Complex.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.FourierTransform">
            <summary>
            Fourier transformation.
            </summary>
            
            <remarks>The class implements one dimensional and two dimensional
            Discrete and Fast Fourier Transformation.</remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.FourierTransform.Direction">
            <summary>
            Fourier transformation direction.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.FourierTransform.Direction.Forward">
            <summary>
            Forward direction of Fourier transformation.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Math.FourierTransform.Direction.Backward">
            <summary>
            Backward direction of Fourier transformation.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.FourierTransform.DFT(VisioForge.Libs.AForge.Math.Complex[],VisioForge.Libs.AForge.Math.FourierTransform.Direction)">
            <summary>
            One dimensional Discrete Fourier Transform.
            </summary>
            
            <param name="data">Data to transform.</param>
            <param name="direction">Transformation direction.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.FourierTransform.DFT2(VisioForge.Libs.AForge.Math.Complex[0:,0:],VisioForge.Libs.AForge.Math.FourierTransform.Direction)">
            <summary>
            Two dimensional Discrete Fourier Transform.
            </summary>
            
            <param name="data">Data to transform.</param>
            <param name="direction">Transformation direction.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.FourierTransform.FFT(VisioForge.Libs.AForge.Math.Complex[],VisioForge.Libs.AForge.Math.FourierTransform.Direction)">
            <summary>
            One dimensional Fast Fourier Transform.
            </summary>
            
            <param name="data">Data to transform.</param>
            <param name="direction">Transformation direction.</param>
            
            <remarks><para><note>The method accepts <paramref name="data"/> array of 2<sup>n</sup> size
            only, where <b>n</b> may vary in the [1, 14] range.</note></para></remarks>
            
            <exception cref="T:System.ArgumentException">Incorrect data length.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.FourierTransform.FFT2(VisioForge.Libs.AForge.Math.Complex[0:,0:],VisioForge.Libs.AForge.Math.FourierTransform.Direction)">
            <summary>
            Two dimensional Fast Fourier Transform.
            </summary>
            
            <param name="data">Data to transform.</param>
            <param name="direction">Transformation direction.</param>
            
            <remarks><para><note>The method accepts <paramref name="data"/> array of 2<sup>n</sup> size
            only in each dimension, where <b>n</b> may vary in the [1, 14] range. For example, 16x16 array
            is valid, but 15x15 is not.</note></para></remarks>
            
            <exception cref="T:System.ArgumentException">Incorrect data length.</exception>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.Geometry.Line">
            <summary>
            The class encapsulates 2D line and provides some tool methods related to lines.
            </summary>
            
            <remarks><para>The class provides some methods which are related to lines:
            angle between lines, distance to point, finding intersection point, etc.
            </para>
            
            <para>Generally, the equation of the line is y = <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.Slope"/> * x + 
            <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.Intercept"/>. However, when <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.Slope"/> is an Infinity,
            <see name="Intercept"/> would normally be meaningless, and it would be
            impossible to distinguish the line x = 5 from the line x = -5. Therefore,
            if <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.Slope"/> is <see cref="F:System.Single.PositiveInfinity"/> or
            <see cref="F:System.Single.NegativeInfinity"/>, the line's equation is instead 
            x = <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.Intercept"/>.</para>
            
            <para>Sample usage:</para>
            <code>
            // create a line
            Line line = Line.FromPoints( new Point( 0, 0 ), new Point( 3, 4 ) );
            // check if it is vertical or horizontal
            if ( line.IsVertical || line.IsHorizontal )
            {
                // ...
            }
            
            // get intersection point with another line
            Point intersection = line.GetIntersectionWith(
                Line.FromPoints( new Point( 3, 0 ), new Point( 0, 4 ) ) );
            </code>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.Line.IsVertical">
             <summary>
             Checks if the line vertical or not.
             </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.Line.IsHorizontal">
            <summary>
            Checks if the line horizontal or not.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.Line.Slope">
            <summary>
            Gets the slope of the line.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.Line.Intercept">
            <summary>
            If not <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.IsVertical"/>, gets the Line's Y-intercept.
            If <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.IsVertical"/> gets the line's X-intercept.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.FromPoints(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
            <summary>
            Creates a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/>  that goes through the two specified points.
            </summary>
            
            <param name="point1">One point on the line.</param>
            <param name="point2">Another point on the line.</param>
            
            <returns>Returns a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> representing the line between <paramref name="point1"/>
            and <paramref name="point2"/>.</returns>
            
            <exception cref="T:System.ArgumentException">Thrown if the two points are the same.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.FromSlopeIntercept(System.Single,System.Single)">
            <summary>
            Creates a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> with the specified slope and intercept.
            </summary>
            
            <param name="slope">The slope of the line</param>
            <param name="intercept">The Y-intercept of the line, unless the slope is an
            infinity, in which case the line's equation is "x = intercept" instead.</param>
            
            <returns>Returns a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> representing the specified line.</returns>
            
            <remarks><para>The construction here follows the same rules as for the rest of this class.
            Most lines are expressed as y = slope * x + intercept. Vertical lines, however, are 
            x = intercept. This is indicated by <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.IsVertical"/> being true or by 
            <see cref="P:VisioForge.Libs.AForge.Math.Geometry.Line.Slope"/> returning <see cref="F:System.Single.PositiveInfinity"/> or 
            <see cref="F:System.Single.NegativeInfinity"/>.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.FromRTheta(System.Single,System.Single)">
            <summary>
            Constructs a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> from a radius and an angle (in degrees).
            </summary>
            
            <param name="radius">The minimum distance from the line to the origin.</param>
            <param name="theta">The angle of the vector from the origin to the line.</param>
            
            <returns>Returns a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> representing the specified line.</returns>
            
            <remarks><para><paramref name="radius"/> is the minimum distance from the origin
            to the line, and <paramref name="theta"/> is the counterclockwise rotation from
            the positive X axis to the vector through the origin and normal to the line.</para>
            <para>This means that if <paramref name="theta"/> is in [0,180), the point on the line
            closest to the origin is on the positive X or Y axes, or in quadrants I or II. Likewise,
            if <paramref name="theta"/> is in [180,360), the point on the line closest to the
            origin is on the negative X or Y axes, or in quadrants III or IV.</para></remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if radius is negative.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.FromPointTheta(VisioForge.Libs.AForge.Point,System.Single)">
            <summary>
            Constructs a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> from a point and an angle (in degrees).
            </summary>
            
            <param name="point">The minimum distance from the line to the origin.</param>
            <param name="theta">The angle of the normal vector from the origin to the line.</param>
            
            <remarks><para><paramref name="theta"/> is the counterclockwise rotation from
            the positive X axis to the vector through the origin and normal to the line.</para>
            <para>This means that if <paramref name="theta"/> is in [0,180), the point on the line
            closest to the origin is on the positive X or Y axes, or in quadrants I or II. Likewise,
            if <paramref name="theta"/> is in [180,360), the point on the line closest to the
            origin is on the negative X or Y axes, or in quadrants III or IV.</para></remarks>
            
            <returns>Returns a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> representing the specified line.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.GetAngleBetweenLines(VisioForge.Libs.AForge.Math.Geometry.Line)">
            <summary>
            Calculate minimum angle between this line and the specified line measured in [0, 90] degrees range.
            </summary>
            
            <param name="secondLine">The line to find angle between.</param>
            
            <returns>Returns minimum angle between lines.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.GetIntersectionWith(VisioForge.Libs.AForge.Math.Geometry.Line)">
            <summary>
            Finds intersection point with the specified line.
            </summary>
            
            <param name="secondLine">Line to find intersection with.</param>
            
            <returns>Returns intersection point with the specified line, or 
            <see langword="null"/> if the lines are parallel and distinct.</returns>
            
            <exception cref="T:System.InvalidOperationException">Thrown if the specified line is the same line as this line.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.GetIntersectionWith(VisioForge.Libs.AForge.Math.Geometry.LineSegment)">
            <summary>
            Finds, provided it exists, the intersection point with the specified <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/>.
            </summary>
            
            <param name="other"><see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/> to find intersection with.</param>
            
            <returns>Returns intersection point with the specified <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/>, or <see langword="null"/>,
            if this line does not intersect with the segment.</returns>
            
            <remarks><para>If the line and segment do not intersect, the method returns <see langword="null"/>.
            If the line and segment share multiple points, the method throws an <see cref="T:System.InvalidOperationException"/>.
            </para></remarks>
            
            <exception cref="T:System.InvalidOperationException">Thrown if <paramref name="other"/> is a portion
            of this line.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.DistanceToPoint(VisioForge.Libs.AForge.Point)">
            <summary>
            Calculate Euclidean distance between a point and a line.
            </summary>
            
            <param name="point">The point to calculate distance to.</param>
            
            <returns>Returns the Euclidean distance between this line and the specified point. Unlike
            <see cref="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.DistanceToPoint(VisioForge.Libs.AForge.Point)"/>, this returns the distance from the infinite line. (0,0) is 0 units
            from the line defined by (0,5) and (0,8), but is 5 units from the segment with those endpoints.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.op_Equality(VisioForge.Libs.AForge.Math.Geometry.Line,VisioForge.Libs.AForge.Math.Geometry.Line)">
             <summary>
             Equality operator - checks if two lines have equal parameters.
             </summary>
             
             <param name="line1">First line to check.</param>
             <param name="line2">Second line to check.</param>
             
             <returns>Returns <see langword="true"/> if parameters of specified
             lines are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.op_Inequality(VisioForge.Libs.AForge.Math.Geometry.Line,VisioForge.Libs.AForge.Math.Geometry.Line)">
             <summary>
             Inequality operator - checks if two lines have different parameters.
             </summary>
             
             <param name="line1">First line to check.</param>
             <param name="line2">Second line to check.</param>
             
             <returns>Returns <see langword="true"/> if parameters of specified
             lines are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> equals to the specified one.
            </summary>
            
            <param name="obj">Another line to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.Line.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains values of the like in readable form.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment">
            <summary>
            The class encapsulates 2D line segment and provides some tool methods related to lines.
            </summary>
            
            <remarks><para>The class provides some methods which are related to line segments:
            distance to point, finding intersection point, etc.
            </para>
            
            <para>A line segment may be converted to a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/>.</para>
            
            <para>Sample usage:</para>
            <code>
            // create a segment
            LineSegment segment = new LineSegment( new Point( 0, 0 ), new Point( 3, 4 ) );
            // get segment's length
            float length = segment.Length;
            
            // get intersection point with a line
            Point? intersection = segment.GetIntersectionWith(
                new Line( new Point( -3, 8 ), new Point( 0, 4 ) ) );
            </code>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.LineSegment.Start">
            <summary>
            Start point of the line segment.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.LineSegment.End">
            <summary>
            End point of the line segment.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Geometry.LineSegment.Length">
            <summary>
            Get segment's length - Euclidean distance between its <see cref="P:VisioForge.Libs.AForge.Math.Geometry.LineSegment.Start"/> and <see cref="P:VisioForge.Libs.AForge.Math.Geometry.LineSegment.End"/> points.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.#ctor(VisioForge.Libs.AForge.Point,VisioForge.Libs.AForge.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/> class.
            </summary>
            
            <param name="start">Segment's start point.</param>
            <param name="end">Segment's end point.</param>
            
            <exception cref="T:System.ArgumentException">Thrown if the two points are the same.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.op_Explicit(VisioForge.Libs.AForge.Math.Geometry.LineSegment)~VisioForge.Libs.AForge.Math.Geometry.Line">
            <summary>
            Converts this <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/> to a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> by discarding
            its endpoints and extending it infinitely in both directions.
            </summary>
            
            <param name="segment">The segment to convert to a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/>.</param>
            
            <returns>Returns a <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> that contains this <paramref name="segment"/>.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.DistanceToPoint(VisioForge.Libs.AForge.Point)">
            <summary>
            Calculate Euclidean distance between a point and a finite line segment.
            </summary>
            
            <param name="point">The point to calculate the distance to.</param>
            
            <returns>Returns the Euclidean distance between this line segment and the specified point. Unlike
            <see cref="M:VisioForge.Libs.AForge.Math.Geometry.Line.DistanceToPoint(VisioForge.Libs.AForge.Point)"/>, this returns the distance from the finite segment. (0,0) is 5 units
            from the segment (0,5)-(0,8), but is 0 units from the line through those points.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.GetIntersectionWith(VisioForge.Libs.AForge.Math.Geometry.LineSegment)">
            <summary>
            Finds, provided it exists, the intersection point with the specified <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/>.
            </summary>
            
            <param name="other"><see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/> to find intersection with.</param>
            
            <returns>Returns intersection point with the specified <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/>, or <see langword="null"/>, if
            the two segments do not intersect.</returns>
            
            <remarks><para>If the two segments do not intersect, the method returns <see langword="null"/>. If the two
            segments share multiple points, this throws an <see cref="T:System.InvalidOperationException"/>.
            </para></remarks>
            
            <exception cref="T:System.InvalidOperationException">Thrown if the segments overlap - if they have
            multiple points in common.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.GetIntersectionWith(VisioForge.Libs.AForge.Math.Geometry.Line)">
            <summary>
            Finds, provided it exists, the intersection point with the specified <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/>.
            </summary>
            
            <param name="other"><see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/> to find intersection with.</param>
            
            <returns>Returns intersection point with the specified <see cref="T:VisioForge.Libs.AForge.Math.Geometry.Line"/>, or <see langword="null"/>, if
            the line does not intersect with this segment.</returns>
            
            <remarks><para>If the line and the segment do not intersect, the method returns <see langword="null"/>. If the line
            and the segment share multiple points, the method throws an <see cref="T:System.InvalidOperationException"/>.
            </para></remarks>
            
            <exception cref="T:System.InvalidOperationException">Thrown if this segment is a portion of
            <paramref name="other"/> line.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.op_Equality(VisioForge.Libs.AForge.Math.Geometry.LineSegment,VisioForge.Libs.AForge.Math.Geometry.LineSegment)">
             <summary>
             Equality operator - checks if two line segments have equal parameters.
             </summary>
             
             <param name="line1">First line segment to check.</param>
             <param name="line2">Second line segment to check.</param>
             
             <returns>Returns <see langword="true"/> if parameters of specified
             line segments are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.op_Inequality(VisioForge.Libs.AForge.Math.Geometry.LineSegment,VisioForge.Libs.AForge.Math.Geometry.LineSegment)">
             <summary>
             Inequality operator - checks if two lines have different parameters.
             </summary>
             
             <param name="line1">First line segment to check.</param>
             <param name="line2">Second line segment to check.</param>
             
             <returns>Returns <see langword="true"/> if parameters of specified
             line segments are not equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.Equals(System.Object)">
            <summary>
            Check if this instance of <see cref="T:VisioForge.Libs.AForge.Math.Geometry.LineSegment"/> equals to the specified one.
            </summary>
            
            <param name="obj">Another line segment to check equalty to.</param>
            
            <returns>Return <see langword="true"/> if objects are equal.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.GetHashCode">
            <summary>
            Get hash code for this instance.
            </summary>
            
            <returns>Returns the hash code for this instance.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Geometry.LineSegment.ToString">
             <summary>
             Get string representation of the class.
             </summary>
             
             <returns>Returns string, which contains values of the like in readable form.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.Random.IRandomNumberGenerator">
            <summary>
            Interface for random numbers generators.
            </summary>
            
            <remarks><para>The interface defines set of methods and properties, which should
            be implemented by different algorithms for random numbers generatation.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Random.IRandomNumberGenerator.Mean">
            <summary>
            Mean value of generator.
            </summary>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Math.Random.IRandomNumberGenerator.Variance">
            <summary>
            Variance value of generator.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Random.IRandomNumberGenerator.Next">
            <summary>
            Generate next random number.
            </summary>
            
            <returns>Returns next random number.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Random.IRandomNumberGenerator.SetSeed(System.Int32)">
            <summary>
            Set seed of the random numbers generator.
            </summary>
            
            <param name="seed">Seed value.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Math.Tools">
            <summary>
            Set of tool functions.
            </summary>
            
            <remarks>The class contains different utility functions.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Tools.Pow2(System.Int32)">
            <summary>
            Calculates power of 2.
            </summary>
            
            <param name="power">Power to raise in.</param>
            
            <returns>Returns specified power of 2 in the case if power is in the range of
            [0, 30]. Otherwise returns 0.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Tools.IsPowerOf2(System.Int32)">
            <summary>
            Checks if the specified integer is power of 2.
            </summary>
            
            <param name="x">Integer number to check.</param>
            
            <returns>Returns <b>true</b> if the specified number is power of 2.
            Otherwise returns <b>false</b>.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Math.Tools.Log2(System.Int32)">
            <summary>
            Get base of binary logarithm.
            </summary>
            
            <param name="x">Source integer number.</param>
            
            <returns>Power of the number (base of binary logarithm).</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.ByteArrayUtils">
            <summary>
            Some internal utilities for handling arrays.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.ByteArrayUtils.Compare(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Check if the array contains needle at specified position.
            </summary>
            
            <param name="array">Source array to check for needle.</param>
            <param name="needle">Needle we are searching for.</param>
            <param name="startIndex">Start index in source array.</param>
            
            <returns>Returns <b>true</b> if the source array contains the needle at
            the specified index. Otherwise it returns <b>false</b>.</returns>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.ByteArrayUtils.Find(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Find subarray in the source array.
            </summary>
            
            <param name="array">Source array to search for needle.</param>
            <param name="needle">Needle we are searching for.</param>
            <param name="startIndex">Start index in source array.</param>
            <param name="sourceLength">Number of bytes in source array, where the needle is searched for.</param>
            
            <returns>Returns starting position of the needle if it was found or <b>-1</b> otherwise.</returns>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.VideoException">
            <summary>
            Video related exception.
            </summary>
            
            <remarks><para>The exception is thrown in the case of some video related issues, like
            failure of initializing codec, compression, etc.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.VideoException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Video.VideoException"/> class.
            </summary>
            
            <param name="message">Exception's message.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.IVideoSource">
            <summary>
            Video source interface.
            </summary>
            
            <remarks>The interface describes common methods for different type of video sources.</remarks>
            
        </member>
        <member name="E:VisioForge.Libs.AForge.Video.IVideoSource.NewFrame">
            <summary>
            New frame event.
            </summary>
            
            <remarks><para>This event is used to notify clients about new available video frame.</para>
            
            <para><note>Since video source may have multiple clients, each client is responsible for
            making a copy (cloning) of the passed video frame, but video source is responsible for
            disposing its own original copy after notifying of clients.</note></para>
            </remarks>
            
        </member>
        <member name="E:VisioForge.Libs.AForge.Video.IVideoSource.VideoSourceError">
            <summary>
            Video source error event.
            </summary>
            
            <remarks>This event is used to notify clients about any type of errors occurred in
            video source object, for example internal exceptions.</remarks>
            
        </member>
        <member name="E:VisioForge.Libs.AForge.Video.IVideoSource.PlayingFinished">
            <summary>
            Video playing finished event.
            </summary>
            
            <remarks><para>This event is used to notify clients that the video playing has finished.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Video.IVideoSource.Source">
            <summary>
            Video source.
            </summary>
            
            <remarks>The meaning of the property depends on particular video source.
            Depending on video source it may be a file name, URL or any other string
            describing the video source.</remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Video.IVideoSource.FramesReceived">
            <summary>
            Received frames count.
            </summary>
            
            <remarks>Number of frames the video source provided from the moment of the last
            access to the property.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Video.IVideoSource.BytesReceived">
            <summary>
            Received bytes count.
            </summary>
            
            <remarks>Number of bytes the video source provided from the moment of the last
            access to the property.
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Video.IVideoSource.IsRunning">
            <summary>
            State of the video source.
            </summary>
            
            <remarks>Current state of video source object - running or not.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.IVideoSource.Start">
            <summary>
            Start video source.
            </summary>
            
            <remarks>Starts video source and return execution to caller. Video source
            object creates background thread and notifies about new frames with the
            help of <see cref="E:VisioForge.Libs.AForge.Video.IVideoSource.NewFrame"/> event.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.IVideoSource.SignalToStop">
            <summary>
            Signal video source to stop its work.
            </summary>
            
            <remarks>Signals video source to stop its background thread, stop to
            provide new frames and free resources.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.IVideoSource.WaitForStop">
            <summary>
            Wait for video source has stopped.
            </summary>
            
            <remarks>Waits for video source stopping after it was signalled to stop using
            <see cref="M:VisioForge.Libs.AForge.Video.IVideoSource.SignalToStop"/> method.</remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.IVideoSource.Stop">
            <summary>
            Stop video source.
            </summary>
            
            <remarks>Stops video source aborting its thread.</remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.NewFrameEventHandler">
            <summary>
            Delegate for new frame event handler.
            </summary>
            
            <param name="sender">Sender object.</param>
            <param name="eventArgs">Event arguments.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.VideoSourceErrorEventHandler">
            <summary>
            Delegate for video source error event handler.
            </summary>
            
            <param name="sender">Sender object.</param>
            <param name="eventArgs">Event arguments.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.PlayingFinishedEventHandler">
            <summary>
            Delegate for playing finished event handler.
            </summary>
            
            <param name="sender">Sender object.</param>
            <param name="reason">Reason of finishing video playing.</param>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.ReasonToFinishPlaying">
            <summary>
            Reason of finishing video playing.
            </summary>
            
            <remarks><para>When video source class fire the <see cref="E:VisioForge.Libs.AForge.Video.IVideoSource.PlayingFinished"/> event, they
            need to specify reason of finishing video playing. For example, it may be end of stream reached.</para></remarks>
            
        </member>
        <member name="F:VisioForge.Libs.AForge.Video.ReasonToFinishPlaying.EndOfStreamReached">
            <summary>
            Video playing has finished because it end was reached.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Video.ReasonToFinishPlaying.StoppedByUser">
            <summary>
            Video playing has finished because it was stopped by user.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Video.ReasonToFinishPlaying.DeviceLost">
            <summary>
            Video playing has finished because the device was lost (unplugged).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.AForge.Video.ReasonToFinishPlaying.VideoSourceError">
            <summary>
            Video playing has finished because of some error happened the video source (camera, stream, file, etc.).
            A error reporting event usually is fired to provide error information.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.NewFrameEventArgs">
            <summary>
            Arguments for new frame event from video source.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.NewFrameEventArgs.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Video.NewFrameEventArgs"/> class.
            </summary>
            
            <param name="frame">New frame.</param>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Video.NewFrameEventArgs.Frame">
            <summary>
            New frame from video source.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Video.VideoSourceErrorEventArgs">
            <summary>
            Arguments for video source error event from video source.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Video.VideoSourceErrorEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Video.VideoSourceErrorEventArgs"/> class.
            </summary>
            
            <param name="description">Error description.</param>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Video.VideoSourceErrorEventArgs.Description">
            <summary>
            Video source error description.
            </summary>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing">
            <summary>
            Motion processing algorithm, which counts separate moving objects and highlights them.
            </summary>
            
            <remarks><para>The aim of this motion processing algorithm is to count separate objects
            in the motion frame, which is provided by <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector">motion detection algorithm</see>.
            In the case if <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.HighlightMotionRegions"/> property is set to <see langword="true"/>,
            found objects are also highlighted on the original video frame. The algorithm
            counts and highlights only those objects, which size satisfies <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsWidth"/>
            and <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsHeight"/> properties.</para>
            
            <para><note>The motion processing algorithm is supposed to be used only with motion detection
            algorithms, which are based on finding difference with background frame
            (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector"/> and <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/>
            as simple implementations) and allow extract moving objects clearly.</note></para>
            
            <para>Sample usage:</para>
            <code>
            // create instance of motion detection algorithm
            IMotionDetector motionDetector = new ... ;
            // create instance of motion processing algorithm
            BlobCountingObjectsProcessing motionProcessing = new BlobCountingObjectsProcessing( );
            // create motion detector
            MotionDetector detector = new MotionDetector( motionDetector, motionProcessing );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame and check motion level
                if ( detector.ProcessFrame( videoFrame ) > 0.02 )
                {
                    // check number of detected objects
                    if ( motionProcessing.ObjectsCount > 1 )
                    {
                        // ...
                    }
                }
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.HighlightMotionRegions">
             <summary>
             Highlight motion regions or not.
             </summary>
             
             <remarks><para>The property specifies if detected moving objects should be highlighted
             with rectangle or not.</para>
             
             <para>Default value is set to <see langword="true"/>.</para>
            
             <para><note>Turning the value on leads to additional processing time of video frame.</note></para>
             </remarks>
             
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.HighlightColor">
            <summary>
            Color used to highlight motion regions.
            </summary>
            
            <remarks>
            <para>Default value is set to <b>red</b> color.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsWidth">
            <summary>
            Minimum width of acceptable object.
            </summary>
            
            <remarks><para>The property sets minimum width of an object to count and highlight. If
            objects have smaller width, they are not counted and are not highlighted.</para>
            
            <para>Default value is set to <b>10</b>.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsHeight">
            <summary>
            Minimum height of acceptable object.
            </summary>
            
            <remarks><para>The property sets minimum height of an object to count and highlight. If
            objects have smaller height, they are not counted and are not highlighted.</para>
            
            <para>Default value is set to <b>10</b>.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.ObjectsCount">
            <summary>
            Number of detected objects.
            </summary>
            
            <remarks><para>The property provides number of moving objects detected by
            the last call of <see cref="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method.</para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.ObjectRectangles">
            <summary>
            Rectangles of moving objects.
            </summary>
            
            <remarks><para>The property provides array of moving objects' rectangles
            detected by the last call of <see cref="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing"/> class.
            </summary>
            
            <param name="highlightMotionRegions">Highlight motion regions or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.HighlightMotionRegions"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing"/> class.
            </summary>
            
            <param name="minWidth">Minimum width of acceptable object (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsWidth"/> property).</param>
            <param name="minHeight">Minimum height of acceptable object (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsHeight"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.#ctor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing"/> class.
            </summary>
            
            <param name="minWidth">Minimum width of acceptable object (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsWidth"/> property).</param>
            <param name="minHeight">Minimum height of acceptable object (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsHeight"/> property).</param>
            <param name="highlightColor">Color used to highlight motion regions.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing"/> class.
            </summary>
            
            <param name="minWidth">Minimum width of acceptable object (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsWidth"/> property).</param>
            <param name="minHeight">Minimum height of acceptable object (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsHeight"/> property).</param>
            <param name="highlightMotionRegions">Highlight motion regions or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.HighlightMotionRegions"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process video and motion frames doing further post processing after
            performed motion detection.
            </summary>
            
            <param name="videoFrame">Original video frame.</param>
            <param name="motionFrame">Motion frame provided by motion detection
            algorithm (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>).</param>
            
            <remarks><para>Processes provided motion frame and counts number of separate
            objects, which size satisfies <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsWidth"/> and <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.MinObjectsHeight"/>
            properties. In the case if <see cref="P:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.HighlightMotionRegions"/> property is
            set to <see langword="true"/>, the found object are also highlighted on the
            original video frame.
            </para></remarks>
            
            <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Motion frame is not 8 bpp image, but it must be so.</exception>
            <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Video frame must be 8 bpp grayscale image or 24/32 bpp color image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.BlobCountingObjectsProcessing.Reset">
             <summary>
             Reset internal state of motion processing algorithm.
             </summary>
             
             <remarks><para>The method allows to reset internal state of motion processing
             algorithm and prepare it for processing of next video stream or to restart
             the algorithm.</para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector">
            <summary>
            Motion detector based on difference with predefined background frame.
            </summary>
            
            <remarks><para>The class implements motion detection algorithm, which is based on
            difference of current video frame with predefined background frame. The <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.MotionFrame">difference frame</see>
            is thresholded and the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.MotionLevel">amount of difference pixels</see> is calculated.
            To suppress stand-alone noisy pixels erosion morphological operator may be applied, which
            is controlled by <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SuppressNoise"/> property.</para>
            
            <para><note>In the case if precise motion area's borders are required (for example,
            for further motion post processing), then <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.KeepObjectsEdges"/> property
            may be used to restore borders after noise suppression.</note></para>
            
            <para><note>In the case if custom background frame is not specified by using
            <see cref="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SetBackgroundFrame(System.Drawing.Bitmap)"/> method, the algorithm takes first video frame
            as a background frame and calculates difference of further video frames with it.</note></para>
            
            <para>Unlike <see cref="T:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector"/> motion detection algorithm, this algorithm
            allows to identify quite clearly all objects, which are not part of the background (scene) -
            most likely moving objects.</para>
            
            <para>Sample usage:</para>
            <code>
            // create motion detector
            MotionDetector detector = new MotionDetector(
                new CustomFrameDifferenceDetector( ),
                new MotionAreaHighlighting( ) );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame and check motion level
                if ( detector.ProcessFrame( videoFrame ) > 0.02 )
                {
                    // ring alarm or do somethng else
                }
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.DifferenceThreshold">
            <summary>
            Difference threshold value, [1, 255].
            </summary>
            
            <remarks><para>The value specifies the amount off difference between pixels, which is treated
            as motion pixel.</para>
            
            <para>Default value is set to <b>15</b>.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.MotionLevel">
            <summary>
            Motion level value, [0, 1].
            </summary>
            
            <remarks><para>Amount of changes in the last processed frame. For example, if value of
            this property equals to 0.1, then it means that last processed frame has 10% difference
            with defined background frame.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.MotionFrame">
             <summary>
             Motion frame containing detected areas of motion.
             </summary>
             
             <remarks><para>Motion frame is a grayscale image, which shows areas of detected motion.
             All black pixels in the motion frame correspond to areas, where no motion is
             detected. But white pixels correspond to areas, where motion is detected.</para>
             
             <para><note>The property is set to <see langword="null"/> after processing of the first
             video frame by the algorithm in the case if custom background frame was not set manually
             by using <see cref="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SetBackgroundFrame(System.Drawing.Bitmap)"/> method (it will be not <see langword="null"/>
             after second call in this case). If correct custom background
             was set then the property should bet set to estimated motion frame after
             <see cref="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method call.</note></para>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SuppressNoise">
            <summary>
            Suppress noise in video frames or not.
            </summary>
            
            <remarks><para>The value specifies if additional filtering should be
            done to suppress standalone noisy pixels by applying 3x3 erosion image processing
            filter. See <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.KeepObjectsEdges"/> property, if it is required to restore
            edges of objects, which are not noise.</para>
            
            <para>Default value is set to <see langword="true"/>.</para>
            
            <para><note>Turning the value on leads to more processing time of video frame.</note></para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.KeepObjectsEdges">
            <summary>
            Restore objects edges after noise suppression or not.
            </summary>
            
            <remarks><para>The value specifies if additional filtering should be done
            to restore objects' edges after noise suppression by applying 3x3 dilatation
            image processing filter.</para>
            
            <para>Default value is set to <see langword="false"/>.</para>
            
            <para><note>Turning the value on leads to more processing time of video frame.</note></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/> class.
            </summary>
            
            <param name="suppressNoise">Suppress noise in video frames or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SuppressNoise"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/> class.
            </summary>
            
            <param name="suppressNoise">Suppress noise in video frames or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SuppressNoise"/> property).</param>
            <param name="keepObjectEdges">Restore objects edges after noise suppression or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.KeepObjectsEdges"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process new video frame.
            </summary>
            
            <param name="videoFrame">Video frame to process (detect motion in).</param>
            
            <remarks><para>Processes new frame from video source and detects motion in it.</para>
            
            <para>Check <see cref="P:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.MotionLevel"/> property to get information about amount of motion
            (changes) in the processed frame.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.Reset">
            <summary>
            Reset motion detector to initial state.
            </summary>
            
            <remarks><para>Resets internal state and variables of motion detection algorithm.
            Usually this is required to be done before processing new video source, but
            may be also done at any time to restart motion detection algorithm.</para>
            
            <para><note>In the case if custom background frame was set using
            <see cref="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SetBackgroundFrame(System.Drawing.Bitmap)"/> method, this method does not reset it.
            The method resets only automatically generated background frame.
            </note></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SetBackgroundFrame(System.Drawing.Bitmap)">
            <summary>
            Set background frame.
            </summary>
            
            <param name="backgroundFrame">Background frame to set.</param>
            
            <remarks><para>The method sets background frame, which will be used to calculate
            difference with.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SetBackgroundFrame(System.Drawing.Imaging.BitmapData)">
            <summary>
            Set background frame.
            </summary>
            
            <param name="backgroundFrame">Background frame to set.</param>
            
            <remarks><para>The method sets background frame, which will be used to calculate
            difference with.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector.SetBackgroundFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Set background frame.
            </summary>
            
            <param name="backgroundFrame">Background frame to set.</param>
            
            <remarks><para>The method sets background frame, which will be used to calculate
            difference with.</para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing">
            <summary>
            Motion processing algorithm, which performs grid processing of motion frame.
            </summary>
            
            <remarks><para>The aim of this motion processing algorithm is to do grid processing
            of motion frame. This means that entire motion frame is divided by a grid into
            certain amount of cells and the motion level is calculated for each cell. The
            information about each cell's motion level may be retrieved using <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.MotionGrid"/>
            property.</para>
            
            <para><para>In addition the algorithm can highlight those cells, which have motion
            level above the specified threshold (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.MotionAmountToHighlight"/>
            property). To enable this it is required to set <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.HighlightMotionGrid"/>
            property to <see langword="true"/>.</para></para>
            
            <para>Sample usage:</para>
            <code>
            // create instance of motion detection algorithm
            IMotionDetector motionDetector = new ... ;
            // create instance of motion processing algorithm
            GridMotionAreaProcessing motionProcessing = new GridMotionAreaProcessing( 16, 16 );
            // create motion detector
            MotionDetector detector = new MotionDetector( motionDetector, motionProcessing );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame
                detector.ProcessFrame( videoFrame );
                
                // check motion level in 5th row 8th column
                if ( motionProcessing.MotionGrid[5, 8] > 0.15 )
                {
                    // ...
                }
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.HighlightColor">
            <summary>
            Color used to highlight motion regions.
            </summary>
            
            <remarks>
            <para>Default value is set to <b>red</b> color.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.HighlightMotionGrid">
             <summary>
             Highlight motion regions or not.
             </summary>
             
             <remarks><para>The property specifies if motion grid should be highlighted -
             if cell, which have motion level above the
             <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.MotionAmountToHighlight">specified value</see>, should be highlighted.</para>
             
             <para>Default value is set to <see langword="true"/>.</para>
            
             <para><note>Turning the value on leads to additional processing time of video frame.</note></para>
             </remarks>
             
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.MotionAmountToHighlight">
            <summary>
            Motion amount to highlight cell.
            </summary>
            
            <remarks><para>The property specifies motion level threshold for highlighting grid's
            cells. If motion level of a certain cell is higher than this value, then the cell
            is highlighted.</para>
            
            <para>Default value is set to <b>0.15</b>.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.MotionGrid">
            <summary>
            Motion levels of each grid's cell.
            </summary>
            
            <remarks><para>The property represents an array of size
            <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridHeight"/>x<see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridWidth"/>, which keeps motion level
            of each grid's cell. If certain cell has motion level equal to 0.2, then it
            means that this cell has 20% of changes.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridWidth">
             <summary>
             Width of motion grid, [2, 64].
             </summary>
             
             <remarks><para>The property specifies motion grid's width - number of grid' columns.</para>
            
             <para>Default value is set to <b>16</b>.</para>
             </remarks>
             
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridHeight">
             <summary>
             Height of motion grid, [2, 64].
             </summary>
             
             <remarks><para>The property specifies motion grid's height - number of grid' rows.</para>
            
             <para>Default value is set to <b>16</b>.</para>
             </remarks>
             
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing"/> class.
            </summary>
            
            <param name="gridWidth">Width of motion grid (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridWidth"/> property).</param>
            <param name="gridHeight">Height of motion grid (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridHeight"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.#ctor(System.Int32,System.Int32,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing"/> class.
             </summary>
             
             <param name="gridWidth">Width of motion grid (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridWidth"/> property).</param>
             <param name="gridHeight">Height of motion grid (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridHeight"/> property).</param>
             <param name="highlightMotionGrid">Highlight motion regions or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.HighlightMotionGrid"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.#ctor(System.Int32,System.Int32,System.Boolean,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing"/> class.
             </summary>
             
             <param name="gridWidth">Width of motion grid (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridWidth"/> property).</param>
             <param name="gridHeight">Height of motion grid (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.GridHeight"/> property).</param>
             <param name="highlightMotionGrid">Highlight motion regions or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.HighlightMotionGrid"/> property).</param>
             <param name="motionAmountToHighlight">Motion amount to highlight cell (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.MotionAmountToHighlight"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Process video and motion frames doing further post processing after
             performed motion detection.
             </summary>
             
             <param name="videoFrame">Original video frame.</param>
             <param name="motionFrame">Motion frame provided by motion detection
             algorithm (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>).</param>
             
             <remarks><para>Processes provided motion frame and calculates motion level
             for each grid's cell. In the case if <see cref="P:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.HighlightMotionGrid"/> property is
             set to <see langword="true"/>, the cell with motion level above threshold are
             highlighted.</para></remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Motion frame is not 8 bpp image, but it must be so.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Video frame must be 8 bpp grayscale image or 24/32 bpp color image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.GridMotionAreaProcessing.Reset">
             <summary>
             Reset internal state of motion processing algorithm.
             </summary>
             
             <remarks><para>The method allows to reset internal state of motion processing
             algorithm and prepare it for processing of next video stream or to restart
             the algorithm.</para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector">
             <summary>
             Interface of motion detector algorithm.
             </summary>
             
             <remarks><para>The interface specifies methods, which should be implemented
             by all motion detection algorithms - algorithms which perform processing of video
             frames in order to detect motion. Amount of detected motion may be checked using
             <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel"/> property. Also <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionFrame"/> property may
             be used in order to see all the detected motion areas. For example, the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionFrame"/> property
             is used by motion processing algorithms for further motion post processing, like
             highlighting motion areas, counting number of detected moving object, etc.
             </para></remarks>
             
             <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
             <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing"/>
            
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel">
            <summary>
            Motion level value, [0, 1].
            </summary>
            
            <remarks><para>Amount of changes in the last processed frame. For example, if value of
            this property equals to 0.1, then it means that last processed frame has 10% of changes
            (however it is up to specific implementation to decide how to compare specified frame).</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionFrame">
            <summary>
            Motion frame containing detected areas of motion.
            </summary>
            
            <remarks><para>Motion frame is a grayscale image, which shows areas of detected motion.
            All black pixels in the motion frame correspond to areas, where no motion is
            detected. But white pixels correspond to areas, where motion is detected.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process new video frame.
            </summary>
            
            <param name="videoFrame">Video frame to process (detect motion in).</param>
            
            <remarks><para>Processes new frame from video source and detects motion in it.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.Reset">
            <summary>
            Reset motion detector to initial state.
            </summary>
            
            <remarks><para>Resets internal state and variables of motion detection algorithm.
            Usually this is required to be done before processing new video source, but
            may be also done at any time to restart motion detection algorithm.</para>
            </remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing">
             <summary>
             Interface of motion processing algorithm.
             </summary>
            
             <remarks><para>The interface specifies methods, which should be implemented
             by all motion processng algorithms - algorithm which perform further post processing
             of detected motion, which is done by motion detection algorithms (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>).
             </para></remarks>
             
             <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
             <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process video and motion frames doing further post processing after
            performed motion detection.
            </summary>
            
            <param name="videoFrame">Original video frame.</param>
            <param name="motionFrame">Motion frame provided by motion detection
            algorithm (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>).</param>
            
            <remarks><para>The method does father post processing of detected motion.
            Type of motion post processing is specified by specific implementation
            of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing"/> interface - it may motion
            area highlighting, motion objects counting, etc.</para></remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing.Reset">
             <summary>
             Reset internal state of motion processing algorithm.
             </summary>
             
             <remarks><para>The method allows to reset internal state of motion processing
             algorithm and prepare it for processing of next video stream or to restart
             the algorithm.</para>
             
             <para><note>Some motion processing algorithms may not have any stored internal
             states and may just process provided video frames without relying on any motion
             history etc. In this case such algorithms provide empty implementation of this method.</note></para>
             </remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting">
            <summary>
            Motion processing algorithm, which highlights motion areas.
            </summary>
            
            <remarks><para>The aim of this motion processing algorithm is to highlight
            motion areas with grid pattern of the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.HighlightColor">specified color</see>.
            </para>
            
            <para>Sample usage:</para>
            <code>
            // create motion detector
            MotionDetector detector = new MotionDetector(
                /* motion detection algorithm */,
                new MotionAreaHighlighting( ) );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame
                detector.ProcessFrame( videoFrame );
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.HighlightColor">
            <summary>
            Color used to highlight motion regions.
            </summary>
            
            <remarks>
            <para>Default value is set to <b>red</b> color.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting"/> class.
            </summary>
            
            <param name="highlightColor">Color used to highlight motion regions.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Process video and motion frames doing further post processing after
             performed motion detection.
             </summary>
             
             <param name="videoFrame">Original video frame.</param>
             <param name="motionFrame">Motion frame provided by motion detection
             algorithm (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>).</param>
             
             <remarks><para>Processes provided motion frame and highlights motion areas
             on the original video frame with <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.HighlightColor">specified color</see>.</para>
             </remarks>
             
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Motion frame is not 8 bpp image, but it must be so.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Video frame must be 8 bpp grayscale image or 24/32 bpp color image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionAreaHighlighting.Reset">
             <summary>
             Reset internal state of motion processing algorithm.
             </summary>
             
             <remarks><para>The method allows to reset internal state of motion processing
             algorithm and prepare it for processing of next video stream or to restart
             the algorithm.</para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting">
            <summary>
            Motion processing algorithm, which highlights border of motion areas.
            </summary>
            
            <remarks><para>The aim of this motion processing algorithm is to highlight
            borders of motion areas with the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.HighlightColor">specified color</see>.
            </para>
            
            <para><note>The motion processing algorithm is supposed to be used only with motion detection
            algorithms, which are based on finding difference with background frame
            (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector"/> and <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/>
            as simple implementations) and allow extract moving objects clearly.</note></para>
            
            <para>Sample usage:</para>
            <code>
            // create motion detector
            MotionDetector detector = new MotionDetector(
                /* motion detection algorithm */,
                new MotionBorderHighlighting( ) );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame
                detector.ProcessFrame( videoFrame );
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.HighlightColor">
            <summary>
            Color used to highlight motion regions.
            </summary>
            
            <remarks>
            <para>Default value is set to <b>red</b> color.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting"/> class.
            </summary>
            
            <param name="highlightColor">Color used to highlight motion regions.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage,VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Process video and motion frames doing further post processing after
             performed motion detection.
             </summary>
             
             <param name="videoFrame">Original video frame.</param>
             <param name="motionFrame">Motion frame provided by motion detection
             algorithm (see <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector"/>).</param>
             
             <remarks><para>Processes provided motion frame and highlights borders of motion areas
             on the original video frame with <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.HighlightColor">specified color</see>.</para>
             </remarks>
            
             <exception cref="T:VisioForge.Libs.AForge.Imaging.InvalidImagePropertiesException">Motion frame is not 8 bpp image, but it must be so.</exception>
             <exception cref="T:VisioForge.Libs.AForge.Imaging.UnsupportedImageFormatException">Video frame must be 8 bpp grayscale image or 24/32 bpp color image.</exception>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionBorderHighlighting.Reset">
             <summary>
             Reset internal state of motion processing algorithm.
             </summary>
             
             <remarks><para>The method allows to reset internal state of motion processing
             algorithm and prepare it for processing of next video stream or to restart
             the algorithm.</para></remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector">
             <summary>
             Motion detection wrapper class, which performs motion detection and processing.
             </summary>
            
             <remarks><para>The class serves as a wrapper class for
             <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector">motion detection</see> and
             <see cref="T:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing">motion processing</see> algorithms, allowing to call them with
             single call. Unlike motion detection and motion processing interfaces, the class also
             provides additional methods for convenience, so the algorithms could be applied not
             only to <see cref="T:VisioForge.Libs.AForge.Imaging.UnmanagedImage"/>, but to .NET's <see cref="T:System.Drawing.Bitmap"/> class
             as well.</para>
             
             <para>In addition to wrapping of motion detection and processing algorthms, the class provides
             some additional functionality. Using <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionZones"/> property it is possible to specify
             set of rectangular zones to observe - only motion in these zones is counted and post procesed.</para>
             
             <para>Sample usage:</para>
             <code>
             // create motion detector
             MotionDetector detector = new MotionDetector(
                 new SimpleBackgroundModelingDetector( ),
                 new MotionAreaHighlighting( ) );
             
             // continuously feed video frames to motion detector
             while ( ... )
             {
                 // process new video frame and check motion level
                 if ( detector.ProcessFrame( videoFrame ) > 0.02 )
                 {
                     // ring alarm or do somethng else
                 }
             }
             </code>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionDetectionAlgorithm">
             <summary>
             Motion detection algorithm to apply to each video frame.
             </summary>
            
             <remarks><para>The property sets motion detection algorithm, which is used by
             <see cref="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method in order to calculate
             <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel">motion level</see> and
             <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionFrame">motion frame</see>.
             </para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionProcessingAlgorithm">
            <summary>
            Motion processing algorithm to apply to each video frame after
            motion detection is done.
            </summary>
            
            <remarks><para>The property sets motion processing algorithm, which is used by
            <see cref="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method after motion detection in order to do further
            post processing of motion frames. The aim of further post processing depends on
            actual implementation of the specified motion processing algorithm - it can be
            highlighting of motion area, objects counting, etc.
            </para></remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionZones">
            <summary>
            Set of zones to detect motion in.
            </summary>
            
            <remarks><para>The property keeps array of rectangular zones, which are observed for motion detection.
            Motion outside of these zones is ignored.</para>
            
            <para>In the case if this property is set, the <see cref="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> method
            will filter out all motion witch was detected by motion detection algorithm, but is not
            located in the specified zones.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.#ctor(VisioForge.Libs.AForge.Vision.Motion.IMotionDetector)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/> class.
            </summary>
            
            <param name="detector">Motion detection algorithm to apply to each video frame.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.#ctor(VisioForge.Libs.AForge.Vision.Motion.IMotionDetector,VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/> class.
            </summary>
            
            <param name="detector">Motion detection algorithm to apply to each video frame.</param>
            <param name="processor">Motion processing algorithm to apply to each video frame after
            motion detection is done.</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(System.Drawing.Bitmap)">
            <summary>
            Process new video frame.
            </summary>
            
            <param name="videoFrame">Video frame to process (detect motion in).</param>
            
            <returns>Returns amount of motion, which is provided <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel"/>
            property of the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionDetectionAlgorithm">motion detection algorithm in use</see>.</returns>
            
            <remarks><para>See <see cref="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> for additional details.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(System.Drawing.Imaging.BitmapData)">
             <summary>
             Process new video frame.
             </summary>
             
             <param name="videoFrame">Video frame to process (detect motion in).</param>
             
             <returns>Returns amount of motion, which is provided <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel"/>
             property of the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionDetectionAlgorithm">motion detection algorithm in use</see>.</returns>
             
             <remarks><para>See <see cref="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)"/> for additional details.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process new video frame.
            </summary>
            
            <param name="videoFrame">Video frame to process (detect motion in).</param>
            
            <returns>Returns amount of motion, which is provided <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel"/>
            property of the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionDetectionAlgorithm">motion detection algorithm in use</see>.</returns>
            
            <remarks><para>The method first of all applies motion detection algorithm to the specified video
            frame to calculate <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel">motion level</see> and
            <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionFrame">motion frame</see>. After this it applies motion processing algorithm
            (if it was set) to do further post processing, like highlighting motion areas, counting moving
            objects, etc.</para>
            
            <para><note>In the case if <see cref="P:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.MotionZones"/> property is set, this method will perform
            motion filtering right after motion algorithm is done and before passing motion frame to motion
            processing algorithm. The method does filtering right on the motion frame, which is produced
            by motion detection algorithm. At the same time the method recalculates motion level and returns
            new value, which takes motion zones into account (but the new value is not set back to motion detection
            algorithm' <see cref="P:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.MotionLevel"/> property).
            </note></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.MotionDetector.Reset">
            <summary>
            Reset motion detector to initial state.
            </summary>
            
            <remarks><para>The method resets motion detection and motion processing algotithms by calling
            their <see cref="M:VisioForge.Libs.AForge.Vision.Motion.IMotionDetector.Reset"/> and <see cref="M:VisioForge.Libs.AForge.Vision.Motion.IMotionProcessing.Reset"/> methods.</para>
            </remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector">
            <summary>
            Motion detector based on simple background modeling.
            </summary>
            
            <remarks><para>The class implements motion detection algorithm, which is based on
            difference of current video frame with modeled background frame.
            The <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MotionFrame">difference frame</see> is thresholded and the
            <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MotionLevel">amount of difference pixels</see> is calculated.
            To suppress stand-alone noisy pixels erosion morphological operator may be applied, which
            is controlled by <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.SuppressNoise"/> property.</para>
            
            <para><note>In the case if precise motion area's borders are required (for example,
            for further motion post processing), then <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.KeepObjectsEdges"/> property
            may be used to restore borders after noise suppression.</note></para>
            
            <para>As the first approximation of background frame, the first frame of video stream is taken.
            During further video processing the background frame is constantly updated, so it
            changes in the direction to decrease difference with current video frame (the background
            frame is moved towards current frame). See <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.FramesPerBackgroundUpdate"/>
            <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MillisecondsPerBackgroundUpdate"/> properties, which control the rate of
            background frame update.</para>
            
            <para>Unlike <see cref="T:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector"/> motion detection algorithm, this algorithm
            allows to identify quite clearly all objects, which are not part of the background (scene) -
            most likely moving objects. And unlike <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/> motion
            detection algorithm, this algorithm includes background adaptation feature, which allows it
            to update its modeled background frame in order to take scene changes into account.</para>
            
            <para><note>Because of the adaptation feature of the algorithm, it may adopt
            to background changes, what <see cref="T:VisioForge.Libs.AForge.Vision.Motion.CustomFrameDifferenceDetector"/> algorithm can not do.
            However, if moving object stays on the scene for a while (so algorithm adopts to it and does
            not treat it as a new moving object any more) and then starts to move again, the algorithm may
            find two moving objects - the true one, which is really moving, and the false one, which does not (the
            place, where the object stayed for a while).</note></para>
            
            <para><note>The algorithm is not applicable to such cases, when moving object resides
            in camera's view most of the time (laptops camera monitoring a person sitting in front of it,
            for example). The algorithm is mostly supposed for cases, when camera monitors some sort
            of static scene, where moving objects appear from time to time - street, road, corridor, etc.
            </note></para>
            
            <para>Sample usage:</para>
            <code>
            // create motion detector
            MotionDetector detector = new MotionDetector(
                new SimpleBackgroundModelingDetector( ),
                new MotionAreaHighlighting( ) );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame and check motion level
                if ( detector.ProcessFrame( videoFrame ) > 0.02 )
                {
                    // ring alarm or do somethng else
                }
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.DifferenceThreshold">
            <summary>
            Difference threshold value, [1, 255].
            </summary>
            
            <remarks><para>The value specifies the amount off difference between pixels, which is treated
            as motion pixel.</para>
            
            <para>Default value is set to <b>15</b>.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MotionLevel">
            <summary>
            Motion level value, [0, 1].
            </summary>
            
            <remarks><para>Amount of changes in the last processed frame. For example, if value of
            this property equals to 0.1, then it means that last processed frame has 10% difference
            with modeled background frame.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MotionFrame">
             <summary>
             Motion frame containing detected areas of motion.
             </summary>
             
             <remarks><para>Motion frame is a grayscale image, which shows areas of detected motion.
             All black pixels in the motion frame correspond to areas, where no motion is
             detected. But white pixels correspond to areas, where motion is detected.</para>
             
             <para><note>The property is set to <see langword="null"/> after processing of the first
             video frame by the algorithm.</note></para>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.SuppressNoise">
            <summary>
            Suppress noise in video frames or not.
            </summary>
            
            <remarks><para>The value specifies if additional filtering should be
            done to suppress standalone noisy pixels by applying 3x3 erosion image processing
            filter. See <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.KeepObjectsEdges"/> property, if it is required to restore
            edges of objects, which are not noise.</para>
            
            <para>Default value is set to <see langword="true"/>.</para>
            
            <para><note>Turning the value on leads to more processing time of video frame.</note></para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.KeepObjectsEdges">
            <summary>
            Restore objects edges after noise suppression or not.
            </summary>
            
            <remarks><para>The value specifies if additional filtering should be done
            to restore objects' edges after noise suppression by applying 3x3 dilatation
            image processing filter.</para>
            
            <para>Default value is set to <see langword="false"/>.</para>
            
            <para><note>Turning the value on leads to more processing time of video frame.</note></para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.FramesPerBackgroundUpdate">
            <summary>
            Frames per background update, [1, 50].
            </summary>
            
            <remarks><para>The value controls the speed of modeled background adaptation to
            scene changes. After each specified amount of frames the background frame is updated
            in the direction to decrease difference with current processing frame.</para>
            
            <para>Default value is set to <b>2</b>.</para>
            
            <para><note>The property has effect only in the case if <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MillisecondsPerBackgroundUpdate"/>
            property is set to <b>0</b>. Otherwise it does not have effect and background
            update is managed according to the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MillisecondsPerBackgroundUpdate"/>
            property settings.</note></para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MillisecondsPerBackgroundUpdate">
            <summary>
            Milliseconds per background update, [0, 5000].
            </summary>
            
            <remarks><para>The value represents alternate way of controlling the speed of modeled
            background adaptation to scene changes. The value sets number of milliseconds, which
            should elapse between two consequent video frames to result in background update
            for one intensity level. For example, if this value is set to 100 milliseconds and
            the amount of time elapsed between two last video frames equals to 350, then background
            frame will be update for 3 intensity levels in the direction to decrease difference
            with current video frame (the remained 50 milliseconds will be added to time difference
            between two next consequent frames, so the accuracy is preserved).</para>
            
            <para>Unlike background update method controlled using <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.FramesPerBackgroundUpdate"/>
            method, the method guided by this property is not affected by changes
            in frame rates. If, for some reasons, a video source starts to provide delays between
            frames (frame rate drops down), the amount of background update still stays consistent.
            When background update is controlled by this property, it is always possible to estimate
            amount of time required to change, for example, absolutely black background (0 intensity
            values) into absolutely white background (255 intensity values). If value of this
            property is set to 100, then it will take approximately 25.5 seconds for such update
            regardless of frame rate.</para>
            
            <para><note>Background update controlled by this property is slightly slower then
            background update controlled by <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.FramesPerBackgroundUpdate"/> property,
            so it has a bit greater impact on performance.</note></para>
            
            <para><note>If this property is set to 0, then corresponding background updating
            method is not used (turned off), but background update guided by
            <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.FramesPerBackgroundUpdate"/> property is used.</note></para>
            
            <para>Default value is set to <b>0</b>.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector"/> class.
            </summary>
            
            <param name="suppressNoise">Suppress noise in video frames or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.SuppressNoise"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector"/> class.
            </summary>
            
            <param name="suppressNoise">Suppress noise in video frames or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.SuppressNoise"/> property).</param>
            <param name="keepObjectEdges">Restore objects edges after noise suppression or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.KeepObjectsEdges"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
             <summary>
             Process new video frame.
             </summary>
             
             <param name="videoFrame">Video frame to process (detect motion in).</param>
             
             <remarks><para>Processes new frame from video source and detects motion in it.</para>
             
             <para>Check <see cref="P:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.MotionLevel"/> property to get information about amount of motion
             (changes) in the processed frame.</para>
             </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.SimpleBackgroundModelingDetector.Reset">
            <summary>
            Reset motion detector to initial state.
            </summary>
            
            <remarks><para>Resets internal state and variables of motion detection algorithm.
            Usually this is required to be done before processing new video source, but
            may be also done at any time to restart motion detection algorithm.</para>
            </remarks>
            
        </member>
        <member name="T:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector">
            <summary>
            Motion detector based on two continues frames difference.
            </summary>
            
            <remarks><para>The class implements the simplest motion detection algorithm, which is
            based on difference of two continues frames. The <see cref="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.MotionFrame">difference frame</see>
            is thresholded and the <see cref="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.MotionLevel">amount of difference pixels</see> is calculated.
            To suppress stand-alone noisy pixels erosion morphological operator may be applied, which
            is controlled by <see cref="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.SuppressNoise"/> property.</para>
            
            <para>Although the class may be used on its own to perform motion detection, it is preferred
            to use it in conjunction with <see cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/> class, which provides additional
            features and allows to use moton post processing algorithms.</para>
            
            <para>Sample usage:</para>
            <code>
            // create motion detector
            MotionDetector detector = new MotionDetector(
                new TwoFramesDifferenceDetector( ),
                new MotionAreaHighlighting( ) );
            
            // continuously feed video frames to motion detector
            while ( ... )
            {
                // process new video frame and check motion level
                if ( detector.ProcessFrame( videoFrame ) > 0.02 )
                {
                    // ring alarm or do somethng else
                }
            }
            </code>
            </remarks>
            
            <seealso cref="T:VisioForge.Libs.AForge.Vision.Motion.MotionDetector"/>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.DifferenceThreshold">
            <summary>
            Difference threshold value, [1, 255].
            </summary>
            
            <remarks><para>The value specifies the amount off difference between pixels, which is treated
            as motion pixel.</para>
            
            <para>Default value is set to <b>15</b>.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.MotionLevel">
            <summary>
            Motion level value, [0, 1].
            </summary>
            
            <remarks><para>Amount of changes in the last processed frame. For example, if value of
            this property equals to 0.1, then it means that last processed frame has 10% difference
            with previous frame.</para>
            </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.MotionFrame">
             <summary>
             Motion frame containing detected areas of motion.
             </summary>
             
             <remarks><para>Motion frame is a grayscale image, which shows areas of detected motion.
             All black pixels in the motion frame correspond to areas, where no motion is
             detected. But white pixels correspond to areas, where motion is detected.</para>
             
             <para><note>The property is set to <see langword="null"/> after processing of the first
             video frame by the algorithm.</note></para>
             </remarks>
            
        </member>
        <member name="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.SuppressNoise">
            <summary>
            Suppress noise in video frames or not.
            </summary>
            
            <remarks><para>The value specifies if additional filtering should be
            done to suppress standalone noisy pixels by applying 3x3 erosion image processing
            filter.</para>
            
            <para>Default value is set to <see langword="true"/>.</para>
            
            <para><note>Turning the value on leads to more processing time of video frame.</note></para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector"/> class.
            </summary>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector"/> class.
            </summary>
            
            <param name="suppressNoise">Suppress noise in video frames or not (see <see cref="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.SuppressNoise"/> property).</param>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.ProcessFrame(VisioForge.Libs.AForge.Imaging.UnmanagedImage)">
            <summary>
            Process new video frame.
            </summary>
            
            <param name="videoFrame">Video frame to process (detect motion in).</param>
            
            <remarks><para>Processes new frame from video source and detects motion in it.</para>
            
            <para>Check <see cref="P:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.MotionLevel"/> property to get information about amount of motion
            (changes) in the processed frame.</para>
            </remarks>
            
        </member>
        <member name="M:VisioForge.Libs.AForge.Vision.Motion.TwoFramesDifferenceDetector.Reset">
            <summary>
            Reset motion detector to initial state.
            </summary>
            
            <remarks><para>Resets internal state and variables of motion detection algorithm.
            Usually this is required to be done before processing new video source, but
            may be also done at any time to restart motion detection algorithm.</para>
            </remarks>
            
        </member>
        <member name="F:VisioForge.Libs.Decklink.VFDeckLinkVideoMode.Name">
            <summary>
            Gets or sets name. (BSTR)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Decklink.VFDeckLinkVideoMode.Width">
            <summary>
            Gets or sets width.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Decklink.VFDeckLinkVideoMode.Height">
            <summary>
            Gets or sets height.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Decklink.VFDeckLinkVideoMode.FrameRate">
            <summary>
            Gets or sets frame rate.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Decklink.VFDeckLinkVideoMode.Mode">
            <summary>
            Gets or sets mode.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.Decklink.VFDeckLinkVideoMode.PixelFormat">
            <summary>
            gets or sets pixel format.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.Decklink.DecklinkVideoFormatsLibrary">
            <summary>
            Decklink video formats library.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMMStream">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMMMultiStream">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMOpenModes">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.MultimediaStreaming.MsError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DES or DShow error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMMultiMediaStream">
            <summary>
            From CLSID_AMMultiMediaStream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMMediaTypeStream">
            <summary>
            From CLSID_AMMediaTypeStream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMDirectDrawStream">
            <summary>
            From CLSID_AMDirectDrawStream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMAudioStream">
            <summary>
            From CLSID_AMAudioStream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.AMAudioData">
            <summary>
            From CLSID_AMAudioData
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.CompletionStatusFlags">
            <summary>
            From COMPLETION_STATUS_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.SSUpdate">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.StreamState">
            <summary>
            From STREAM_STATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.StreamType">
            <summary>
            From STREAM_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MultimediaStreaming.MMSSF">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MultimediaStreaming.MSPID.PrimaryVideo">
            <summary> MSPID_PrimaryVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MultimediaStreaming.MSPID.PrimaryAudio">
            <summary> MSPID_PrimaryAudio </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DirectDrawSwitches">
            <summary>
            From AMDDS_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.PropertyFrameStep">
            <summary>
            From AM_PROPERTY_FRAMESTEP
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FrameStepStep">
            <summary>
            From AM_FRAMESTEP_STEP
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG1VideoInfo">
            <summary>
            From MPEG1VIDEOINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AnalogVideoInfo">
            <summary>
            From ANALOGVIDEOINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.AtscEtmLocation">
            <summary>
            From ATSC_ETM_LOCATION_*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.KSPropertyIPSink">
            <summary>
            From KSPROPERTY_IPSINK
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.PIDMap">
            <summary>
            From PID_MAP
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SmartCardStatusType">
            <summary>
            From SmartCardStatusType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SmartCardAssociationType">
            <summary>
            From SmartCardAssociationType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.LocationCodeSchemeType">
            <summary>
            From LocationCodeSchemeType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EALocationCodeType">
            <summary>
            From EALocationCodeType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EntitlementType">
            <summary>
            From EntitlementType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.UICloseReasonType">
            <summary>
            From UICloseReasonType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SmartCardApplication">
            <summary>
            From SmartCardApplication
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDA_DrmPairingError">
            <summary>
            From BDA_DrmPairingError
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDA_CONDITIONALACCESS_REQUESTTYPE">
            <summary>
            BDA_CONDITIONALACCESS_REQUESTTYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDA_CONDITIONALACCESS_MMICLOSEREASON">
            <summary>
            From BDA_CONDITIONALACCESS_MMICLOSEREASON
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MUX_PID_TYPE">
            <summary>
            From MUX_PID_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDA_MUX_PIDLISTITEM">
            <summary>
            From BDA_MUX_PIDLISTITEM
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDA_SIGNAL_TIMEOUTS">
            <summary>
            From BDA_SIGNAL_TIMEOUTS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDAChangeState">
            <summary>
            From BDA_CHANGE_STATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MulticastMode">
            <summary>
            From BDA_MULTICAST_MODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MediaSampleContent">
            <summary>
            From MEDIA_SAMPLE_CONTENT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDANodeDescriptor">
            <summary>
            From BDANODE_DESCRIPTOR
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.CCSubstreamService">
            <summary>
            From KS_CC_SUBSTREAM_SERVICE_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.TIFLoad">
            <summary>
            From CLSID_TIFLoad
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDAEventID">
            <summary>
            From BDA_EVENT_ID
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDATemplatePinJoint">
            <summary>
            From BDA_TEMPLATE_PIN_JOINT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.KSBDAFrameInfo">
            <summary>
            From KS_BDA_FRAME_INFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MPEG2TransportStride">
            <summary>
            From MPEG2_TRANSPORT_STRIDE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ScanModulationTypes">
            <summary>
            From ScanModulationTypes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.RollOff">
            <summary>
            From RollOff
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.Pilot">
            <summary>
            From Pilot
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ApplicationTypeType">
            <summary>
            From ApplicationTypeType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.FECMethod">
            <summary>
            From FECMethod
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BinaryConvolutionCodeRate">
            <summary>
            From BinaryConvolutionCodeRate
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.Polarisation">
            <summary>
            From Polarisation
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SpectralInversion">
            <summary>
            From SpectralInversion
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ModulationType">
            <summary>
            From ModulationType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DVBSystemType">
            <summary>
            From DVBSystemType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.HierarchyAlpha">
            <summary>
            From HierarchyAlpha
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.GuardInterval">
            <summary>
            From GuardInterval
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.TransmissionMode">
            <summary>
            From TransmissionMode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ComponentStatus">
            <summary>
            From ComponentStatus
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ComponentCategory">
            <summary>
            From ComponentCategory
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MPEG2StreamType">
            <summary>
            From MPEG2StreamType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ATSCComponentTypeFlags">
            <summary>
            From ATSCComponentTypeFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDATemplateConnection">
            <summary>
            From BDA_TEMPLATE_CONNECTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BDACompFlags">
            <summary>
            From BDA_Comp_Flags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SAMPLE_SEQ">
            <summary>
            Defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SAMPLE_SEQ_CONTENT">
            <summary>
            Defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.VA_VIDEO_FORMAT">
            <summary>
            From VA_VIDEO_FORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.VA_COLOR_PRIMARIES">
            <summary>
            VA_COLOR_PRIMARIES
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.VA_TRANSFER_CHARACTERISTICS">
            <summary>
            From VA_TRANSFER_CHARACTERISTICS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.VA_MATRIX_COEFFICIENTS">
            <summary>
            VA_MATRIX_COEFFICIENTS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.UDCR_TAG">
            <summary> 
            UDCR_TAG 
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.VA_OPTIONAL_VIDEO_PROPERTIES">
            <summary>
            From VA_OPTIONAL_VIDEO_PROPERTIES
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.TRANSPORT_PROPERTIES">
            <summary>
            From TRANSPORT_PROPERTIES
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.PBDA_TAG_ATTRIBUTE">
            <summary>
            From PBDA_TAG_ATTRIBUTE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.CAPTURE_STREAMTIME">
            <summary>
            From CAPTURE_STREAMTIME
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DSHOW_STREAM_DESC">
            <summary>
            From DSHOW_STREAM_DESC
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.SAMPLE_LIVE_STREAM_TIME">
            <summary>
            From SAMPLE_LIVE_STREAM_TIME
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DVB_STRCONV_MODE">
            <summary>
            From DVB_STRCONV_MODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.RunningStatus">
            <summary>
            Define possible values for a running_status field according to ETSI EN 300 468
            This enum doesn't exist in the c++ headers
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ETFilterEncProperties">
            <summary>
            CLSID_ETFilterEncProperties
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ETFilterTagProperties">
            <summary>
            CLSID_ETFilterTagProperties
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DTFilterEncProperties">
            <summary>
            CLSID_DTFilterEncProperties
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DTFilterTagProperties">
            <summary>
            CLSID_DTFilterTagProperties
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.XDSCodecProperties">
            <summary>
            CLSID_XDSCodecProperties
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.XDSCodecTagProperties">
            <summary>
            CLSID_XDSCodecTagProperties
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.CXDSData">
            <summary>
            CLSID_CXDSData
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.XDSCodec">
            <summary>
            CLSID_XDSCodec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.FormatNotSupportedEvents">
            <summary>
            From FormatNotSupportedEvents
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.WMDRMProtectionInfo">
            <summary>
            From WMDRMProtectionInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BadSampleInfo">
            <summary>
            From BadSampleInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.COPPEventBlockReason">
            <summary>
            From COPPEventBlockReason
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.LicenseEventBlockReason">
            <summary>
            From LicenseEventBlockReason
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.CPEventBitShift">
            <summary>
            From CPEventBitShift
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.CPEvents">
            <summary>
            From CPEvents
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EncDecEvents">
            <summary>
            From EncDecEvents
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.CPRecordingStatus">
            <summary>
            From CPRecordingStatus
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.RevokedComponent">
            <summary>
            From RevokedComponent
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTag_Mode">
            <summary>
            From EnTag_Mode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DownResEventParam">
            <summary>
            From DownResEventParam
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ProtType">
            <summary>
            From ProtType
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.XDSCodecNewXDSRating">
            <summary> EVENTID_XDSCodecNewXDSRating </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.XDSCodecDuplicateXDSRating">
            <summary> EVENTID_XDSCodecDuplicateXDSRating </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.XDSCodecNewXDSPacket">
            <summary> EVENTID_XDSCodecNewXDSPacket </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterRatingChange">
            <summary> EVENTID_DTFilterRatingChange </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterRatingsBlock">
            <summary> EVENTID_DTFilterRatingsBlock </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterRatingsUnblock">
            <summary> EVENTID_DTFilterRatingsUnblock </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterXDSPacket">
            <summary> EVENTID_DTFilterXDSPacket </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.ETFilterEncryptionOn">
            <summary> EVENTID_ETFilterEncryptionOn </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.ETFilterEncryptionOff">
            <summary> EVENTID_ETFilterEncryptionOff </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterCOPPUnblock">
            <summary> EVENTID_DTFilterCOPPUnblock </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.EncDecFilterError">
            <summary> EVENTID_EncDecFilterError </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterCOPPBlock">
            <summary> EVENTID_DTFilterCOPPBlock </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.ETFilterCopyOnce">
            <summary> EVENTID_ETFilterCopyOnce </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.ETFilterCopyNever">
            <summary> EVENTID_ETFilterCopyNever </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterDataFormatOK">
            <summary> EVENTID_DTFilterDataFormatOK </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DTFilterDataFormatFailure">
            <summary> EVENTID_DTFilterDataFormatFailure </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.ETDTFilterLicenseOK">
            <summary> EVENTID_ETDTFilterLicenseOK </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.ETDTFilterLicenseFailure">
            <summary> EVENTID_ETDTFilterLicenseFailure </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.EncDecFilterEvent">
            <summary> EVENTID_EncDecFilterEvent </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.FormatNotSupportedEvent">
            <summary> EVENTID_FormatNotSupportedEvent </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDA.EventID.DemultiplexerFilterDiscontinuity">
            <summary> EVENTID_DemultiplexerFilterDiscontinuity </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.ProgramElement">
            <summary>
            From ProgramElement
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:VisioForge.Libs.DirectShowLib.BDA.PidBits" -->
        <!-- Badly formed XML comment ignored for member "T:VisioForge.Libs.DirectShowLib.BDA.MpegHeaderBits" -->
        <!-- Badly formed XML comment ignored for member "T:VisioForge.Libs.DirectShowLib.BDA.MpegHeaderVersionBits" -->
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegSectionIs">
            <summary>
            From MPEG_CURRENT_NEXT_BIT, MPEG_SECTION_IS_*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.TidExtension">
            <summary>
            From TID_EXTENSION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.Section">
            <summary>
            From SECTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.LongSection">
            <summary>
            From LONG_SECTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DsmccSection">
            <summary>
            From DSMCC_SECTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegRqstPacket">
            <summary>
            From MPEG_RQST_PACKET
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegDate">
            <summary>
            From MPEG_DATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegServiceRequest">
            <summary>
            From MPEG_SERVICE_REQUEST
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegServiceResponse">
            <summary>
            From MPEG_SERVICE_RESPONSE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegStreamFilter">
            <summary>
            From MPEG_STREAM_FILTER
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:VisioForge.Libs.DirectShowLib.BDA.MpegDuration" -->
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpegDateAndTime">
            <summary>
            From MPEG_DATE_AND_TIME
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.DsmccElement">
            <summary>
            From DSMCC_ELEMENT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.MpeElement">
            <summary>
            From MPE_ELEMENT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.TunerLockType">
            <summary>
            From TunerLockType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.LNB_Source">
            <summary>
            From LNB_Source
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTvRat_MPAA">
            <summary>
            From EnTvRat_MPAA
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTvRat_US_TV">
            <summary>
            From EnTvRat_US_TV
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTvRat_CAE_TV">
            <summary>
            From EnTvRat_CAE_TV
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTvRat_CAF_TV">
            <summary>
            From EnTvRat_CAF_TV
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BfEnTvRat_Attributes_US_TV">
            <summary>
            From BfEnTvRat_Attributes_US_TV
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BfEnTvRat_Attributes_MPAA">
            <summary>
            From BfEnTvRat_Attributes_MPAA
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BfEnTvRat_Attributes_CAE_TV">
            <summary>
            From BfEnTvRat_Attributes_CAE_TV
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BfEnTvRat_Attributes_CAF_TV">
            <summary>
            From BfEnTvRat_Attributes_CAF_TV
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTvRat_System">
            <summary>
            From EnTvRat_System
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.EnTvRat_GenericLevel">
            <summary>
            From EnTvRat_GenericLevel
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BDA.BfEnTvRat_GenericAttributes">
            <summary>
            From BfEnTvRat_GenericAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMGBF">
            <summary>
            From AM_GBF_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVideoFlag">
            <summary>
            From AM_VIDEO_FLAG_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMSamplePropertyFlags">
            <summary>
            From AM_SAMPLE_PROPERTY_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.PinInfo">
            <summary>
            From PIN_INFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMMediaType">
            <summary>
            From AM_MEDIA_TYPE - When you are done with an instance of this class,
            it should be released with FreeAMMediaType() to avoid leaking
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.PinDirection">
            <summary>
            From PIN_DIRECTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMSeekingSeekingCapabilities">
            <summary>
            From AM_SEEKING_SeekingCapabilities
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterState">
            <summary>
            From FILTER_STATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterInfo">
            <summary>
            From FILTER_INFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMSeekingSeekingFlags">
            <summary>
            From AM_SEEKING_SeekingFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AllocatorProperties">
            <summary>
            From ALLOCATOR_PROPERTIES
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMSample2Properties">
            <summary>
            From AM_SAMPLE2_PROPERTIES
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.IPin.ConnectionMediaType(VisioForge.Libs.DirectShowLib.AMMediaType)">
            <summary>
            Release returned parameter with DsUtils.FreeAMMediaType
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.IPin.QueryPinInfo(VisioForge.Libs.DirectShowLib.PinInfo@)">
            <summary>
            Release returned parameter with DsUtils.FreePinInfo
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.IMediaSample.GetMediaType(VisioForge.Libs.DirectShowLib.AMMediaType@)">
            <summary>
            Returned object must be released with DsUtils.FreeAMMediaType()
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoCopyProtectionType">
            <summary>
            From VideoCopyProtectionType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMPushSourceFlags">
            <summary>
            From _AM_PUSHSOURCE_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVResolution">
            <summary>
            From _DVResolution
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoEncoderBitrateMode">
            <summary>
            From VIDEOENCODER_BITRATE_MODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegPinFlag">
            <summary>
            From unnamed enum (REG_PINFLAG_B_*)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Advise">
            <summary>
            From unnamed enum (ADVISE_*)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegFilter">
            <summary>
            From REGFILTER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegPinTypes">
            <summary>
            From REGPINTYPES
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegFilterPins">
            <summary>
            From REGFILTERPINS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegFilterPins2">
            <summary>
            From REGFILTERPINS2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegFilter2Union">
            <summary>
            From REGFILTER2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RgnDataHeader">
            <summary>
            From RGNDATAHEADER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RgnData">
            <summary>
            From RGNDATA
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.TimeCode">
            <summary>
            From TIMECODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.TimeCodeSample">
            <summary>
            From TIMECODE_SAMPLE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamIdMap">
            <summary>
            From STREAM_ID_MAP
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CodecAPIEventData">
            <summary>
            From CodecAPIEventData
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMCOPPSignature">
            <summary>
            From AMCOPPSignature
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMCOPPCommand">
            <summary>
            From AMCOPPCommand
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMCOPPStatusInput">
            <summary>
            From AMCOPPStatusInput
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMCOPPStatusOutput">
            <summary>
            From AMCOPPStatusOutput
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMFilterMiscFlags">
            <summary>
            From _AM_FILTER_MISC_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMStreamInfoFlags">
            <summary>
            From AM_STREAM_INFO_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG2Program">
            <summary>
            From MPEG2_PROGRAM_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMAudioRendererStatParam">
            <summary>
            From _AM_AUDIO_RENDERER_STAT_PARAM
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMStreamInfo">
            <summary>
            From AM_STREAM_INFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVDecoderResolution">
            <summary>
            From _DVDECODERRESOLUTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMIntfSearchFlags">
            <summary>
            From _AM_INTF_SEARCH_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMQueryDecoder">
            <summary>
            From AM_QUERY_DECODER_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DecoderCap">
            <summary>
            From DECODER_CAP_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DecimationUsage">
            <summary>
            From DECIMATION_USAGE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMOverlayFX">
            <summary>
            From AMOVERLAYFX
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMResCtlReserveFlags">
            <summary>
            From _AMRESCTL_RESERVEFLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMStreamSelectInfoFlags">
            <summary>
            From _AMSTREAMSELECTINFOFLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMStreamSelectEnableFlags">
            <summary>
            From _AMSTREAMSELECTENABLEFLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Merit">
            <summary>
            unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ColorKey">
            <summary>
            From COLORKEY
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RegPinMedium">
            <summary>
            From REGPINMEDIUM
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVInfo">
            <summary>
            From DVINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVEncoderResolution">
            <summary>
            From _DVENCODERRESOLUTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVEncoderFormat">
            <summary>
            From _DVENCODERFORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVEncoderVideoFormat">
            <summary>
            From _DVENCODERVIDEOFORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMRenderExFlags">
            <summary>
            From _AM_RENSDEREXFLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.InterleavingMode">
            <summary>
            From InterleavingMode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMFileSinkFlags">
            <summary>
            From AM_FILESINK_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.KSPropertySupport">
            <summary>
            From KSPROPERTY_SUPPORT_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMPropertyPin">
            <summary>
            From AMPROPERTY_PIN
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMTunerSubChannel">
            <summary>
            From AMTunerSubChannel
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMTunerSignalStrength">
            <summary>
            From AMTunerSignalStrength
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMTunerModeType">
            <summary>
            From AMTunerModeType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMTunerEventType">
            <summary>
            From AMTunerEventType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AnalogVideoStandard">
            <summary>
            From AnalogVideoStandard
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.TunerInputType">
            <summary>
            From TunerInputType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoControlFlags">
            <summary>
            From VideoControlFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.TVAudioMode">
            <summary>
            From TVAudioMode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoProcAmpProperty">
            <summary>
            From VideoProcAmpProperty
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoProcAmpFlags">
            <summary>
            From VideoProcAmpFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.PhysicalConnectorType">
            <summary>
            From PhysicalConnectorType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMTVAudioEventType">
            <summary>
            From AMTVAudioEventType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CompressionCaps">
            <summary>
            From CompressionCaps
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VfwCompressDialogs">
            <summary>
            From VfwCompressDialogs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VfwCaptureDialogs">
            <summary>
            From VfwCaptureDialogs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtDevicePort">
            <summary>
            From DEV_PORT_*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtDeviceCaps">
            <summary>
            From ED_DEVCAP*, ED_DEVTYPE* etc.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportCaps">
            <summary>
            From ED_TRANSCAP*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportMediaStates">
            <summary>
            From ED_MEDIA*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportModes">
            <summary>
            From ED_MODE*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportStatus">
            <summary>
            From ED_MEDIA* etc.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportParameters">
            <summary>
            From ED_TRANSBASIC* etc.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportAudio">
            <summary>
            From ED_AUDIO*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ExtTransportEdit">
            <summary>
            From ED_EDIT*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoStreamConfigCaps">
            <summary>
            From VIDEO_STREAM_CONFIG_CAPS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AudioStreamConfigCaps">
            <summary>
            From AUDIO_STREAM_CONFIG_CAPS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Quality">
            <summary>
            From Quality
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.QualityMessageType">
            <summary>
            From QualityMessageType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CameraControlProperty">
            <summary>
            From CameraControlProperty
            </summary>
            <remarks>
            For a given property, a particular device might implement only a subset of the listed range.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Pan">
            <summary>
            Specifies the camera's pan setting, in degrees. Values range from –180 to +180, with the default set to zero.
            Positive values are clockwise from the origin (the camera rotates clockwise when viewed from above), 
            and negative values are counterclockwise from the origin. 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Tilt">
            <summary>
            Specifies the camera's tilt setting, in degrees. Values range from –180 to +180, with the default set to zero.
            Positive values point the imaging plane up, and negative values point the imaging plane down.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Roll">
            <summary>
            Specifies the camera's roll setting, in degrees. Values range from –180 to +180, with the default set to zero.
            Positive values cause a clockwise rotation of the camera along the image-viewing axis, and negative values 
            cause a counterclockwise rotation of the camera.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Zoom">
            <summary>
            Specifies the camera's zoom setting, in millimeters. Values range from 10 to 600, and the default is specific
            to the device.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Exposure">
            <summary>
            Specifies the exposure setting, in log base 2 seconds. In other words, for values less than zero, 
            the exposure time is 1/2n seconds, and for values zero or above, the exposure time is 2n seconds.
            For example:
            Value:              Seconds:
            -3                  1/8
            -2                  1/4
            -1                  1/2
            0                   1
            1                   2
            2                   4
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Iris">
            <summary>
            Specifies the camera's iris setting, in units of f(stop) * 10.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Focus">
            <summary>
            Specifies the camera's focus setting, as the distance to the optimally focused target, in millimeters.
            The range and default value are specific to the device.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.ScanMode">
            <summary>
            The ScanMode property specifies the scanning mode of the camera sensor.
            The property value specifies whether interlace mode should be enabled. A value of 0 indicates that the 
            interlace mode is enabled, and a value of 1 indicates that the progressive (or non-interlace) mode is enabled.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.Privacy">
            <summary>
            The Privacy property specifies whether to prevent video from being acquired by the camera sensor.
            The property value specifies whether privacy mode is enable or disabled. A value of 0 indicates that the 
            camera sensor can capture video images, and a value of 1 indicates that the camera sensor is prevented 
            from capturing video images.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.PanTilt">
            <summary>
            The PanTilt property specifies absolute pan and tilt settings.
            The property value is a pair of integers that specify a camera's absolute pan and tilt settings. 
            These values are expressed in arc-second units. One arc second is 1/3600 of a degree. Acceptable values range
            from −180*3600 to +180*3600 arc seconds. If a pan or tilt value is not provided, the default is 0.
            When making a pan request, specify a positive value to rotate the camera to the right and specify a 
            negative value to rotate the camera to the left. When making a tilt request, a positive value tilts the
            camera up and a negative value tilts the camera down.
            </summary>
            <remarks>
            NOT IMPLEMENTED.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.PanRelative">
            <summary>
            The PanRelative property specifies a camera's rotation around the vertical axis.
            The property value specifies a camera's relative pan setting. The size of the value represents the 
            desired pan speed; a higher value represents a higher speed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.TiltRelative">
            <summary>
            The TileRelative property specifies a camera's vertical tilting status.
            The property value specifies a camera's relative tilt setting. The size of the value represents the desired 
            tilt speed; a higher value represents a higher speed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.RollRelative">
            <summary>
            The RollRelative property specifies camera rotation around the image viewing axis.
            The property value specifies a camera's relative roll setting. The size of the value represents the desired
            rotation speed; a higher value represents a higher speed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.ZoomRelative">
            <summary>
            The ZoomRelative property specifies the zoom status of the camera.
            The property value specifies a camera's relative zoom setting. The size of the value represents the desired 
            zoom speed; a higher value represents a higher speed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.ExposureRelative">
            <summary>
            The ExposureRelative property specifies the electronic shutter speed.
            The property value specifies a camera's relative exposure setting. Step size is hardware-dependent. 
            To determine the step size, you can make a get request on the Exposure property.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.IrisRelative">
            <summary>
            The IrisRelative property specifies a camera's aperture setting.
            The property value specifies a camera's relative iris setting. Both the iris step size and the iris step 
            default value are implementation-specific.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.FocusRelative">
            <summary>
            The FocusRelative property specifies the focus setting of the camera.
            The property value specifies a camera's relative focus setting. The size of the value represents the speed 
            at which the focal point changes; a higher value represents a higher speed.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.PanTiltRelative">
            <summary>
            The PanTiltRelative property specifies horizontal or vertical rotation of the camera and can specify 
            both simultaneously.
            </summary>
            <remarks>
            NOT IMPLEMENTED.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.FocalLength">
            <summary>
            The FocalLength property retrieves focal length information for a camera.]
            The property value specifies a camera's focal length.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlProperty.AutoExposurePriority">
            <summary>
            The AutoExposurePriority property specifies whether the device can dynamically vary the frame rate.
            The property value specifies whether frame rate can be dynamically varied by the device.
            0 - frame rate must remain constant.
            1 - frame rate can be dynamically varied by the device.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CameraControlFlags">
            <summary>
            From CameraControlFlags
            </summary>
            <remarks>
            Updated by VisioForge.
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlFlags.None">
            <summary>
            None or absolute.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlFlags.Auto">
            <summary>
            The setting is controlled automatically.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlFlags.Manual">
            <summary>
            The setting is controlled manually.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlFlags.Absolute">
            <summary>
            The camera supports absolute units for this setting.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.CameraControlFlags.Relative">
            <summary>
            The camera supports relative controls for this setting. 
            A relative control is divided into a number of steps with no defined units.
            The absolute size of each step depends on the camera model.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.NotifyFlags">
            <summary>
            From define AM_MEDIAEVENT_NONOTIFY
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.OABool">
            <summary>
            From #define OATRUE/OAFALSE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WindowStyle">
            <summary>
            From WS_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WindowStyleEx">
            <summary>
            From WS_EX_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WindowState">
            <summary>
            From SW_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DispatchFlags">
            <summary>
            From DISPATCH_* defines
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DES.DESError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DES or DShow error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimeline">
            <summary>
            From CLSID_AMTimeline
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.PropertySetter">
            <summary>
            From CLSID_PropertySetter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineObj">
            <summary>
            From CLSID_AMTimelineObj
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineSrc">
            <summary>
            From CLSID_AMTimelineSrc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineTrack">
            <summary>
            From CLSID_AMTimelineTrack
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineComp">
            <summary>
            From CLSID_AMTimelineComp
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineGroup">
            <summary>
            From CLSID_AMTimelineGroup
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineTrans">
            <summary>
            From CLSID_AMTimelineTrans
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AMTimelineEffect">
            <summary>
            From CLSID_AMTimelineEffect
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.RenderEngine">
            <summary>
            From CLSID_RenderEngine
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.SmartRenderEngine">
            <summary>
            From CLSID_SmartRenderEngine
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.AudMixer">
            <summary>
            From CLSID_AudMixer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.Xml2Dex">
            <summary>
            From CLSID_Xml2Dex
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.MediaLocator">
            <summary>
            From CLSID_MediaLocator
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.MediaDet">
            <summary>
            From CLSID_MediaDet
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DxtCompositor">
            <summary>
            From CLSID_DxtCompositor
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DxtAlphaSetter">
            <summary>
            From CLSID_DxtAlphaSetter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DxtJpeg">
            <summary>
            From CLSID_DxtJpeg
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.ColorSource">
            <summary>
            From CLSID_ColorSource
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DxtKey">
            <summary>
            From CLSID_DxtKey
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DXTKeys">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.TimelineMajorType">
            <summary>
            From TIMELINE_MAJOR_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.TimelineInsertMode">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.SFNValidateFlags">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.SCompFmt0">
            <summary>
            From SCompFmt0
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.ResizeFlags">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DexterFTrackSearchFlags">
            <summary>
            From DEXTERF_TRACK_SEARCH_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DexterParam">
            <summary>
            From DEXTER_PARAM
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.ConnectFDynamic">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DexterValue">
            <summary>
            From DEXTER_VALUE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.Dexterf">
            <summary>
            From DEXTERF
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DES.DESErrorCode">
            <summary>
            From DEX_IDS_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CDef">
            <summary>
            From CDEF_CLASS_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DirectX.IDirect3DDevice9">
            <summary>
            CLSID_IDirect3DDevice9
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.PinConnectedStatus">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BitmapInfo">
            <summary>
            From BITMAPINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BitmapInfoHeader">
            <summary>
            From BITMAPINFOHEADER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DDPixelFormat">
            <summary>
            From DDPIXELFORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DsCAUUID">
            <summary>
            From CAUUID
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsCAUUID.ToGuidArray">
            <summary>
            Perform a manual marshaling of pElems to retrieve an array of System.Guid.
            Assume this structure has been already filled by the ISpecifyPropertyPages.GetPages() method.
            </summary>
            <returns>A managed representation of pElems (cElems items)</returns>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DsLong">
            <summary>
            DirectShowLib.DsLong is a wrapper class around a <see cref="T:System.Int64"/> value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsLong.#ctor(System.Int64)">
            <summary>
            Constructor
            Initialize a new instance of DirectShowLib.DsLong with the Value parameter
            </summary>
            <param name="Value">Value to assign to this new instance</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsLong.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsLong Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsLong.op_Implicit(VisioForge.Libs.DirectShowLib.DsLong)~System.Int64">
             <summary>
             Define implicit cast between DirectShowLib.DsLong and System.Int64 for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.DirectShowLib.DsLong.ToInt64"/> for similar functionality.
             <code>
               // Define a new DsLong instance
               DsLong dsL = new DsLong(9876543210);
               // Do implicit cast between DsLong and Int64
               long l = dsL;
            
               Console.WriteLine(l.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsLong to be cast</param>
             <returns>A casted System.Int64</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsLong.op_Implicit(System.Int64)~VisioForge.Libs.DirectShowLib.DsLong">
             <summary>
             Define implicit cast between System.Int64 and DirectShowLib.DsLong for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsGuid.FromInt64"/> for similar functionality.
             <code>
               // Define a new Int64 instance
               long l = 9876543210;
               // Do implicit cast between Int64 and DsLong
               DsLong dsl = l;
            
               Console.WriteLine(dsl.ToString());
             </code>
             </summary>
             <param name="g">System.Int64 to be cast</param>
             <returns>A casted DirectShowLib.DsLong</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsLong.ToInt64">
            <summary>
            Get the System.Int64 equivalent to this DirectShowLib.DsLong instance.
            </summary>
            <returns>A System.Int64</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsLong.FromInt64(System.Int64)">
            <summary>
            Get a new DirectShowLib.DsLong instance for a given System.Int64
            </summary>
            <param name="g">The System.Int64 to wrap into a DirectShowLib.DsLong</param>
            <returns>A new instance of DirectShowLib.DsLong</returns>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DsGuid">
            <summary>
            DirectShowLib.DsGuid is a wrapper class around a System.Guid value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.#ctor">
            <summary>
            Empty constructor. 
            Initialize it with System.Guid.Empty
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.#ctor(System.String)">
            <summary>
            Constructor.
            Initialize this instance with a given System.Guid string representation.
            </summary>
            <param name="g">A valid System.Guid as string</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.#ctor(System.Guid)">
            <summary>
            Constructor.
            Initialize this instance with a given System.Guid.
            </summary>
            <param name="g">A System.Guid value type</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsGuid Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.ToString(System.String)">
            <summary>
            Get a string representation of this DirectShowLib.DsGuid Instance with a specific format.
            </summary>
            <param name="format"><see cref="M:System.Guid.ToString"/> for a description of the format parameter.</param>
            <returns>A string representing this instance according to the format parameter</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.op_Implicit(VisioForge.Libs.DirectShowLib.DsGuid)~System.Guid">
             <summary>
             Define implicit cast between DirectShowLib.DsGuid and System.Guid for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.DirectShowLib.DsGuid.ToGuid"/> for similar functionality.
             <code>
               // Define a new DsGuid instance
               DsGuid dsG = new DsGuid("{33D57EBF-7C9D-435e-A15E-D300B52FBD91}");
               // Do implicit cast between DsGuid and Guid
               Guid g = dsG;
            
               Console.WriteLine(g.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsGuid to be cast</param>
             <returns>A casted System.Guid</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.op_Implicit(System.Guid)~VisioForge.Libs.DirectShowLib.DsGuid">
             <summary>
             Define implicit cast between System.Guid and DirectShowLib.DsGuid for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.DirectShowLib.DsGuid.FromGuid(System.Guid)"/> for similar functionality.
             <code>
               // Define a new Guid instance
               Guid g = new Guid("{B9364217-366E-45f8-AA2D-B0ED9E7D932D}");
               // Do implicit cast between Guid and DsGuid
               DsGuid dsG = g;
            
               Console.WriteLine(dsG.ToString());
             </code>
             </summary>
             <param name="g">System.Guid to be cast</param>
             <returns>A casted DirectShowLib.DsGuid</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.ToGuid">
            <summary>
            Get the System.Guid equivalent to this DirectShowLib.DsGuid instance.
            </summary>
            <returns>A System.Guid</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsGuid.FromGuid(System.Guid)">
            <summary>
            Get a new DirectShowLib.DsGuid instance for a given System.Guid
            </summary>
            <param name="g">The System.Guid to wrap into a DirectShowLib.DsGuid</param>
            <returns>A new instance of DirectShowLib.DsGuid</returns>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DsInt">
            <summary>
            DirectShowLib.DsInt is a wrapper class around a <see cref="T:System.Int32"/> value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsInt.#ctor(System.Int32)">
            <summary>
            Constructor
            Initialize a new instance of DirectShowLib.DsInt with the Value parameter
            </summary>
            <param name="Value">Value to assign to this new instance</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsInt.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsInt Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsInt.op_Implicit(VisioForge.Libs.DirectShowLib.DsInt)~System.Int32">
             <summary>
             Define implicit cast between DirectShowLib.DsInt and System.Int64 for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsInt.ToInt64"/> for similar functionality.
             <code>
               // Define a new DsInt instance
               DsInt dsI = new DsInt(0x12345678);
               // Do implicit cast between DsInt and Int32
               int i = dsI;
            
               Console.WriteLine(i.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsInt to be cast</param>
             <returns>A casted System.Int32</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsInt.op_Implicit(System.Int32)~VisioForge.Libs.DirectShowLib.DsInt">
             <summary>
             Define implicit cast between System.Int32 and DirectShowLib.DsInt for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsGuid.FromInt32"/> for similar functionality.
             <code>
               // Define a new Int32 instance
               int i = 0x12345678;
               // Do implicit cast between Int64 and DsInt
               DsInt dsI = i;
            
               Console.WriteLine(dsI.ToString());
             </code>
             </summary>
             <param name="g">System.Int32 to be cast</param>
             <returns>A casted DirectShowLib.DsInt</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsInt.ToInt32">
            <summary>
            Get the System.Int32 equivalent to this DirectShowLib.DsInt instance.
            </summary>
            <returns>A System.Int32</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsInt.FromInt32(System.Int32)">
            <summary>
            Get a new DirectShowLib.DsInt instance for a given System.Int32
            </summary>
            <param name="g">The System.Int32 to wrap into a DirectShowLib.DsInt</param>
            <returns>A new instance of DirectShowLib.DsInt</returns>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DsShort">
            <summary>
            DirectShowLib.DsShort is a wrapper class around a <see cref="T:System.Int16"/> value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsShort.#ctor(System.Int16)">
            <summary>
            Constructor
            Initialize a new instance of DirectShowLib.DsShort with the Value parameter
            </summary>
            <param name="Value">Value to assign to this new instance</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsShort.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsShort Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsShort.op_Implicit(VisioForge.Libs.DirectShowLib.DsShort)~System.Int16">
             <summary>
             Define implicit cast between DirectShowLib.DsShort and System.Int16 for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsShort.ToInt64"/> for similar functionality.
             <code>
               // Define a new DsShort instance
               DsShort dsS = new DsShort(0x1234);
               // Do implicit cast between DsShort and Int16
               short s = dsS;
            
               Console.WriteLine(s.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsShort to be cast</param>
             <returns>A casted System.Int16</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsShort.op_Implicit(System.Int16)~VisioForge.Libs.DirectShowLib.DsShort">
             <summary>
             Define implicit cast between System.Int16 and DirectShowLib.DsShort for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsGuid.FromInt16"/> for similar functionality.
             <code>
               // Define a new Int16 instance
               short s = 0x1234;
               // Do implicit cast between Int64 and DsShort
               DsShort dsS = s;
            
               Console.WriteLine(dsS.ToString());
             </code>
             </summary>
             <param name="g">System.Int16 to be cast</param>
             <returns>A casted DirectShowLib.DsShort</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsShort.ToInt16">
            <summary>
            Get the System.Int16 equivalent to this DirectShowLib.DsShort instance.
            </summary>
            <returns>A System.Int16</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsShort.FromInt16(System.Int16)">
            <summary>
            Get a new DirectShowLib.DsShort instance for a given System.Int64
            </summary>
            <param name="g">The System.Int16 to wrap into a DirectShowLib.DsShort</param>
            <returns>A new instance of DirectShowLib.DsShort</returns>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DsRect">
            <summary>
            DirectShowLib.DsRect is a managed representation of the Win32 RECT structure.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.#ctor">
            <summary>
            Empty contructor. Initialize all fields to 0
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A parametred constructor. Initialize fields with given values.
            </summary>
            <param name="left">the Left value</param>
            <param name="top">the Top value</param>
            <param name="right">the Right value</param>
            <param name="bottom">the Bottom value</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.#ctor(System.Drawing.Rectangle)">
            <summary>
            A parametred constructor. Initialize fields with a given <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="rectangle">A <see cref="T:System.Drawing.Rectangle"/></param>
            <remarks>
            Warning, DsRect define a rectangle by defining two of his corners and <see cref="T:System.Drawing.Rectangle"/> define a rectangle with his upper/Left corner, his width and his height.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.ToString">
            <summary>
            Provide de string representation of this DsRect instance
            </summary>
            <returns>A string formated like this : [Left, Top - Right, Bottom]</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.op_Implicit(VisioForge.Libs.DirectShowLib.DsRect)~System.Drawing.Rectangle">
             <summary>
             Define implicit cast between DirectShowLib.DsRect and System.Drawing.Rectangle for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.DirectShowLib.DsRect.ToRectangle"/> for similar functionality.
             <code>
               // Define a new Rectangle instance
               Rectangle r = new Rectangle(0, 0, 100, 100);
               // Do implicit cast between Rectangle and DsRect
               DsRect dsR = r;
            
               Console.WriteLine(dsR.ToString());
             </code>
             </summary>
             <param name="r">a DsRect to be cast</param>
             <returns>A casted System.Drawing.Rectangle</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.op_Implicit(System.Drawing.Rectangle)~VisioForge.Libs.DirectShowLib.DsRect">
             <summary>
             Define implicit cast between System.Drawing.Rectangle and DirectShowLib.DsRect for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.DirectShowLib.DsRect.FromRectangle(System.Drawing.Rectangle)"/> for similar functionality.
             <code>
               // Define a new DsRect instance
               DsRect dsR = new DsRect(0, 0, 100, 100);
               // Do implicit cast between DsRect and Rectangle
               Rectangle r = dsR;
            
               Console.WriteLine(r.ToString());
             </code>
             </summary>
             <param name="r">A System.Drawing.Rectangle to be cast</param>
             <returns>A casted DsRect</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.ToRectangle">
            <summary>
            Get the System.Drawing.Rectangle equivalent to this DirectShowLib.DsRect instance.
            </summary>
            <returns>A System.Drawing.Rectangle</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsRect.FromRectangle(System.Drawing.Rectangle)">
            <summary>
            Get a new DirectShowLib.DsRect instance for a given <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="r">The <see cref="T:System.Drawing.Rectangle"/> used to initialize this new DirectShowLib.DsGuid</param>
            <returns>A new instance of DirectShowLib.DsGuid</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DirectShow error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.DirectShowLib.DsError.GetErrorText(System.Int32)" -->
        <member name="M:VisioForge.Libs.DirectShowLib.DsUtils.GetPinCategory(VisioForge.Libs.DirectShowLib.IPin)">
            <summary>
            Returns the PinCategory of the specified pin.  Usually a member of PinCategory.  Not all pins have a category.
            </summary>
            <param name="pPin"></param>
            <returns>Guid indicating pin category or Guid.Empty on no category.  Usually a member of PinCategory</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsUtils.FreeAMMediaType(VisioForge.Libs.DirectShowLib.AMMediaType)">
            <summary>
             Free the nested structures and release any
             COM objects within an AMMediaType struct.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsUtils.FreePinInfo(VisioForge.Libs.DirectShowLib.PinInfo@)">
            <summary>
             Free the nested interfaces within a PinInfo struct.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.DirectShowLib.DsDevice.DevicePath">
            <summary>
            Returns a unique identifier for a device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsDevice.GetDevicesOfCat(System.Guid,Serilog.ILogger,System.Boolean,System.Boolean)">
            <summary>
            Returns an array of DsDevices of type devcat.
            </summary>
            <param name="filterCategory">Any one of FilterCategory</param>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsDevice.FillProperties(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Fill properties.
            </summary>
            <returns>String or null on error</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsDevice.GetCLSID(System.Guid)">
            <summary>
            Get CLSID.
            </summary>
            <returns>String or null on error</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsFindPin.ByDirection(VisioForge.Libs.DirectShowLib.IBaseFilter,VisioForge.Libs.DirectShowLib.PinDirection,System.Int32)">
            <summary>
            Scans a filter's pins looking for a pin in the specified direction
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vDir">The direction to find</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin in the specified direction)</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsFindPin.ByName(VisioForge.Libs.DirectShowLib.IBaseFilter,System.String)">
            <summary>
            Scans a filter's pins looking for a pin with the specified name
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vPinName">The pin name to find</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsFindPin.ByCategory(VisioForge.Libs.DirectShowLib.IBaseFilter,System.Guid,System.Int32)">
            <summary>
            Scan's a filter's pins looking for a pin with the specified category
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="guidPinCat">The guid from PinCategory to scan for</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin of the specified category)</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsFindPin.ByConnectionStatus(VisioForge.Libs.DirectShowLib.IBaseFilter,VisioForge.Libs.DirectShowLib.PinConnectedStatus,System.Int32)">
            <summary>
            Scans a filter's pins looking for a pin with the specified connection status
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vStat">The status to find (connected/unconnected)</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin with the specified status)</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsToString.AMMediaTypeToString(VisioForge.Libs.DirectShowLib.AMMediaType)">
            <summary>
            Produces a usable string that describes the MediaType object
            </summary>
            <returns>Concatenation of MajorType + SubType + FormatType + Fixed + Temporal + SampleSize.ToString</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsToString.MediaTypeToString(System.Guid)">
            <summary>
            Converts AMMediaType.MajorType Guid to a readable string
            </summary>
            <returns>MajorType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsToString.MediaSubTypeToString(System.Guid)">
            <summary>
            Converts the AMMediaType.SubType Guid to a readable string
            </summary>
            <returns>SubType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsToString.MediaFormatTypeToString(System.Guid)">
            <summary>
            Converts the AMMediaType.FormatType Guid to a readable string
            </summary>
            <returns>FormatType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DsToString.WalkClass(System.Type,System.Guid)">
            <summary>
            Use reflection to walk a class looking for a property containing a specified guid
            </summary>
            <param name="MyType">Class to scan</param>
            <param name="guid">Guid to scan for</param>
            <returns>String representing property name that matches, or Guid.ToString() for no match</returns>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DVD_NavCmdType">
            <summary>
            From DVD_NavCmdType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAtr">
            <summary>
            From DVD_ATR
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdVideoATR">
            <summary>
            From typedef BYTE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAudioATR">
            <summary>
            From typedef BYTE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdSubpictureATR">
            <summary>
            From typedef BYTE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdPlaybackLocation">
            <summary>
            From DVD_PLAYBACK_LOCATION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdDomain">
            <summary>
            From DVD_DOMAIN
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdMenuId">
            <summary>
            From DVD_MENU_ID
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdDiscSide">
            <summary>
            From DVD_DISC_SIDE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdPreferredDisplayMode">
            <summary>
            From DVD_PREFERRED_DISPLAY_MODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdFrameRate">
            <summary>
            From DVD_FRAMERATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdTimeCodeFlags">
            <summary>
            From DVD_TIMECODE_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.ValidUOPFlag">
            <summary>
            From VALID_UOP_FLAG
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdCmdFlags">
            <summary>
            From DVD_CMD_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdOptionFlag">
            <summary>
            From DVD_OPTION_FLAG
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdRelativeButton">
            <summary>
            From DVD_RELATIVE_BUTTON
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdParentalLevel">
            <summary>
            From DVD_PARENTAL_LEVEL
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAudioLangExt">
            <summary>
            From DVD_AUDIO_LANG_EXT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdSubPictureLangExt">
            <summary>
            From DVD_SUBPICTURE_LANG_EXT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAudioAppMode">
            <summary>
            From DVD_AUDIO_APPMODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAudioFormat">
            <summary>
            From DVD_AUDIO_FORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdKaraokeDownMix">
            <summary>
            From DVD_KARAOKE_DOWNMIX
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdKaraokeContents">
            <summary>
            From DVD_KARAOKE_CONTENTS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdKaraokeAssignment">
            <summary>
            From DVD_KARAOKE_ASSIGNMENT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdVideoCompression">
            <summary>
            From DVD_VIDEO_COMPRESSION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdSubPictureType">
            <summary>
            From DVD_SUBPICTURE_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdSubPictureCoding">
            <summary>
            From DVD_SUBPICTURE_CODING
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdTitleAppMode">
            <summary>
            From DVD_TITLE_APPMODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdTextStringType">
            <summary>
            From DVD_TextStringType
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdTextCharSet">
            <summary>
            From DVD_TextCharSet
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAudioCaps">
            <summary>
            From DVD_AUDIO_CAPS_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.AMDvdGraphFlags">
            <summary>
            From AM_DVD_GRAPH_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.AMDvdStreamFlags">
            <summary>
            From AM_DVD_STREAM_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.GPRMArray">
            <summary>
            From GPRMARRAY
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.SPRMArray">
            <summary>
            From SPRMARRAY
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdHMSFTimeCode">
            <summary>
            From DVD_HMSF_TIMECODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdPlaybackLocation2">
            <summary>
            From DVD_PLAYBACK_LOCATION2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdAudioAttributes">
            <summary>
            From DVD_AudioAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdMUAMixingInfo">
            <summary>
            From DVD_MUA_MixingInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdMUACoeff">
            <summary>
            From DVD_MUA_Coeff
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdMultichannelAudioAttributes">
            <summary>
            From DVD_MultichannelAudioAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdKaraokeAttributes">
            <summary>
            From DVD_KaraokeAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdVideoAttributes">
            <summary>
            From DVD_VideoAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdSubpictureAttributes">
            <summary>
            From DVD_SubpictureAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdTitleAttributes">
            <summary>
            From DVD_TitleAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdMenuAttributes">
            <summary>
            From DVD_MenuAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.DvdDecoderCaps">
            <summary>
            From DVD_DECODER_CAPS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dvd.AMDvdRenderStatus">
            <summary>
            From AM_DVD_RENDERSTATUS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMPinFlowControl">
            <summary>
            From _AM_PIN_FLOW_CONTROL_BLOCK_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMGraphConfigReconnect">
            <summary>
            From AM_GRAPH_CONFIG_RECONNECT_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMFilterFlags">
            <summary>
            From _AM_FILTER_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.RemFilterFlags">
            <summary>
            From _REM_FILTER_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMLine21CCLevel">
            <summary>
            From AM_LINE21_CCLEVEL
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMLine21CCService">
            <summary>
            From AM_LINE21_CCSERVICE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMLine21CCState">
            <summary>
            From AM_LINE21_CCSTATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMLine21DrawBGMode">
            <summary>
            From AM_LINE21_DRAWBGMODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOQualityStatus">
            <summary>
            From DMO_QUALITY_STATUS_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOOutputDataBufferFlags">
            <summary>
            From _DMO_OUTPUT_DATA_BUFFER_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOEnumerator">
            <summary>
            From DMO_ENUM_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMORegisterFlags">
            <summary>
            From DMO_REGISTER_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOProcessOutput">
            <summary>
            From DMO_PROCESS_OUTPUT_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOInputDataBuffer">
            <summary>
            From DMO_INPUT_DATA_BUFFER_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOInplaceProcess">
            <summary>
            From DMO_INPLACE_PROCESS_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOInputStreamInfo">
            <summary>
            From DMO_INPUT_STREAM_INFO_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOOutputStreamInfo">
            <summary>
            From DMO_OUTPUT_STREAM_INFO_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOSetType">
            <summary>
            From _DMO_SET_TYPE_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOInputStatusFlags">
            <summary>
            From DMO_INPUT_STATUS_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOVideoOutputStream">
            <summary>
            From DMO_VIDEO_OUTPUT_STREAM_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOPartialMediatype">
            <summary>
            From DMO_PARTIAL_MEDIATYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.DMOOutputDataBuffer">
            <summary>
            From DMO_OUTPUT_DATA_BUFFER
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.AudioDecoder">
            <summary> DMOCATEGORY_AUDIO_DECODER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.AudioEncoder">
            <summary> DMOCATEGORY_AUDIO_ENCODER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.VideoDecoder">
            <summary> DMOCATEGORY_VIDEO_DECODER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.VideoEncoder">
            <summary> DMOCATEGORY_VIDEO_ENCODER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.AudioEffect">
            <summary> DMOCATEGORY_AUDIO_EFFECT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.VideoEffect">
            <summary> DMOCATEGORY_VIDEO_EFFECT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.DMOCategory.AudioCaptureEffect">
            <summary> DMOCATEGORY_AUDIO_CAPTURE_EFFECT </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.DMO.DMOError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DMO or DShow error text
            is available, it is used to build the exception, otherwise a generic COM error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.MediaParamTimeFormat.Reference">
            <summary> GUID_TIME_REFERENCE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.MediaParamTimeFormat.Music">
            <summary> GUID_TIME_MUSIC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DMO.MediaParamTimeFormat.Samples">
            <summary> GUID_TIME_SAMPLES, audio capture category </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.MPData">
            <summary>
            From MP_DATA
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.MPEnvelopeSegment">
            <summary>
            From MP_ENVELOPE_SEGMENT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.MPFlags">
            <summary>
            From MPF_ENVLP_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.MPType">
            <summary>
            From MP_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.MPCaps">
            <summary>
            From MP_CAPS_CURVE* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMO.ParamInfo">
            <summary>
            From MP_PARAMINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.KSMultipleItem">
            <summary>
            From KSMULTIPLE_ITEM - Note that data is returned in the memory IMMEDIATELY following this struct.
            The Size parm indicates ths size of the KSMultipleItem plus the extra bytes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.IKsPin.KsQueryMediums(System.IntPtr@)">
            <summary>
            The caller must free the returned structures, using the CoTaskMemFree function
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MixerData">
            <summary>
            From MIXER_DATA_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MixerState">
            <summary>
            From MIXER_STATE_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DDColor">
            <summary>
            From DDCOLOR_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DDColorControl">
            <summary>
            From DDCOLORCONTROL
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGRequestType">
            <summary>
            From MPEG_REQUEST_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGContextType">
            <summary>
            From MPEG_CONTEXT_TYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGPacketList">
            <summary>
            From MPEG_PACKET_LIST
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DSMCCFilterOptions">
            <summary>
            From DSMCC_FILTER_OPTIONS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ATSCFilterOptions">
            <summary>
            From ATSC_FILTER_OPTIONS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG2Filter">
            <summary>
            From MPEG2_FILTER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVB_EIT_FILTER_OPTIONS">
            <summary>
            From DVB_EIT_FILTER_OPTIONS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG2Filter2">
            <summary>
            From MPEG2_FILTER2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGContextUnion">
            <summary>
            From unnamed union
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BCSDeMux">
            <summary>
            From MPEG_BCS_DEMUX
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGWinSock">
            <summary>
            From MPEG_WINSOCK
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGContext">
            <summary>
            From MPEG_CONTEXT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGStreamBuffer">
            <summary>
            From MPEG_STREAM_BUFFER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTStyle">
            <summary>
            From AM_WST_STYLE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVABufferInfo">
            <summary>
            From AMVABUFFERINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVAUncompDataInfo">
            <summary>
            From AMVAUncompDataInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVAUncompBufferInfo">
            <summary>
            From AMVAUncompBufferInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVAInternalMemInfo">
            <summary>
            From AMVAInternalMemInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DDSCaps2">
            <summary>
            From DDSCAPS2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVACompBufferInfo">
            <summary>
            From AMVACompBufferInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVABeginFrameInfo">
            <summary>
            From AMVABeginFrameInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVAEndFrameInfo">
            <summary>
            From AMVAEndFrameInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTLevel">
            <summary>
            From AM_WST_LEVEL
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTService">
            <summary>
            From AM_WST_SERVICE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTState">
            <summary>
            From AM_WST_STATE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTDrawBGMode">
            <summary>
            From AM_WST_DRAWBGMODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGAudioDivider">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGAudioDual">
            <summary>
            From AM_MPEG_AUDIO_DUAL_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGAudioAccuracy">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEGAudioChannels">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTPage">
            <summary>
            From AM_WST_PAGE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AcmMpegHeadLayer">
            <summary>
            From ACM_MPEG_LAYER* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AcmMpegHeadMode">
            <summary>
            From ACM_MPEG_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AcmMpegHeadFlags">
            <summary>
            From ACM_MPEG_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WaveMask">
            <summary>
            From SPEAKER_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG1WaveFormat">
            <summary>
            From MPEG1WAVEFORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WaveFormatExtensible">
            <summary>
            From WAVEFORMATEXTENSIBLE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ASFWriterConfig">
            <summary>
            From _AM_ASFWRITERCONFIG_PARAM
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMPlayListItemFlags">
            <summary>
            From AMPlayListItemFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMPlayListFlags">
            <summary>
            From AMPlayListFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMInterlace">
            <summary>
            From AMINTERLACE_*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMCopyProtect">
            <summary>
            From AMCOPYPROTECT_*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMControl">
            <summary>
            From AMCONTROL_*
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoInfoHeader">
            <summary>
            From VIDEOINFOHEADER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoInfoHeader2">
            <summary>
            From VIDEOINFOHEADER2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WaveFormatEx">
            <summary>
            From WAVEFORMATEX
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.ISampleGrabberCB.SampleCB(System.Double,VisioForge.Libs.DirectShowLib.IMediaSample)">
            <summary>
            When called, callee must release sample
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMExtendedSeekingCapabilities">
            <summary>
            From AMExtendedSeekingCapabilities
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.RecordingType">
            <summary>
            From unnamed structure
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.StreamBufferAttrDataType">
            <summary>
            From STREAMBUFFER_ATTR_DATATYPE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.StreamBufferEventCode">
            <summary>
            From unnamed structure
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.StreamBufferRecording">
            <summary>
            From g_wszStreamBufferRecording* static const WCHAR
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.StreamBufferAttribute">
            <summary>
            From STREAMBUFFER_ATTRIBUTE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.SBEPinData">
            <summary>
            From SBE_PIN_DATA
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.SBE.SBEEvent.RecControlStarted">
            <summary> EVENTID_SBE2RecControlStarted </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.SBE.SBEEvent.RecControlStopped">
            <summary> EVENTID_SBE2RecControlStopped </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.SBE.SBEEvent.StreamDescEvent">
            <summary> SBE2_STREAM_DESC_EVENT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.SBE.SBEEvent.V1StreamsCreationEvent">
            <summary> SBE2_V1_STREAMS_CREATION_EVENT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.SBE.SBEEvent.V2StreamsCreationEvent">
            <summary> SBE2_V2_STREAMS_CREATION_EVENT </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.CrossbarDefaultFlags">
            <summary>
            From CROSSBAR_DEFAULT_FLAGS
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.SBE2_StreamDesc">
            <summary>
            From SBE2_STREAM_DESC
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE.DVRStreamDesc">
            <summary>
            From DVR_STREAM_DESC
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferRecordingAttributes">
            <summary>
            CLSID_StreamBufferRecordingAttributes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AudioRecord">
            <summary>
            CLSID_AudioRecord
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AVICo">
            <summary>
            CLSID_AVICo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AVIDoc">
            <summary>
            CLSID_AVIDoc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AviReader">
            <summary>
            CLSID_AviReader
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FGControl">
            <summary>
            CLSID_FGControl 
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FileSource">
            <summary>
            CLSID_FileSource
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterMapper">
            <summary>
            CLSID_FilterMapper
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ProtoFilterGraph">
            <summary>
            CLSID_ProtoFilterGraph
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MOVReader">
            <summary>
            CLSID_MOVReader
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VPObject">
            <summary>
            CLSID_VPObject
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VPVBIObject">
            <summary>
            CLSID_VPVBIObject
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG1Doc">
            <summary>
            CLSID_MPEG1Doc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.TextRender">
            <summary>
            CLSID_TextRender
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CDeviceMoniker">
            <summary>
            CLSID_CDeviceMoniker
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DTFilter">
            <summary>
            CLSID_DTFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ETFilter">
            <summary>
            CLSID_ETFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterGraphPrivateThread">
            <summary>
            CLSID_FilterGraphPrivateThread
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DtvCcFilter">
            <summary>
            CLSID_DtvCcFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MSTVCaptionFilter">
            <summary>
            CLSID_MSTVCaptionFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CreateDevEnum">
            <summary>
            CLSID_SystemDeviceEnum
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterGraph">
            <summary>
            CLSID_FilterGraph
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterGraphNoThread">
            <summary>
            CLSID_FilterGraphNoThread
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CaptureGraphBuilder2">
            <summary>
            CLSID_CaptureGraphBuilder2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DvdGraphBuilder">
            <summary>
            CLSID_DvdGraphBuilder
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CaptureGraphBuilder">
            <summary>
            CLSID_CaptureGraphBuilder
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferConfig">
            <summary>
            CLSID_StreamBufferConfig
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferComposeRecording">
            <summary>
            CLSID_StreamBufferComposeRecording
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SeekingPassThru">
            <summary>
            CLSID_SeekingPassThru
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FilterMapper2">
            <summary>
            CLSID_FilterMapper2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MemoryAllocator">
            <summary>
            CLSID_MemoryAllocator
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MediaPropertyBag">
            <summary>
            CLSID_MediaPropertyBag
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVDState">
            <summary>
            CLSID_DVDState
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SectionList">
            <summary>
            CLSID_SectionList
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Mpeg2Stream">
            <summary>
            CLSID_Mpeg2Stream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Mpeg2Data">
            <summary>
            CLSID_Mpeg2Data
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SAMIParser">
            <summary>
            Unnamed clsid
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.InternalScriptCommandRenderer">
            <summary>
            Unnamed clsid
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.BroadcastEventService">
            <summary>
            CLSID_BroadcastEventService
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AtscPsipParser">
            <summary>
            CLSID_AtscPsipParser
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DvbSiParser">
            <summary>
            CLSID_DvbSiParser
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DMOWrapperFilter">
            <summary>
            CLSID_DMOWrapperFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferSink">
            <summary>
            CLSID_StreamBufferSink
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferSink2">
            <summary>
            CLSID_StreamBufferSink2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SampleGrabber">
            <summary>
            CLSID_SampleGrabber
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferSource">
            <summary>
            CLSID_StreamBufferSource
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoMixingRenderer">
            <summary>
            CLSID_VideoMixingRenderer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoMixingRenderer9">
            <summary>
            CLSID_VideoMixingRenderer9
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoRendererDefault">
            <summary>
            CLSID_VideoRendererDefault
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AviSplitter">
            <summary>
            CLSID_AviSplitter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SmartTee">
            <summary>
            CLSID_SmartTee
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.NullRenderer">
            <summary>
            CLSID_NullRenderer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ACMWrapper">
            <summary>
            CLSID_ACMWrapper
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AudioRender">
            <summary>
            CLSID_AudioRender
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AVIDec">
            <summary>
            CLSID_AVIDec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AVIDraw">
            <summary>
            CLSID_AVIDraw
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AviDest">
            <summary>
            CLSID_AviDest
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ATSCNetworkProvider">
            <summary>
            CLSID_ATSCNetworkProvider
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVBCNetworkProvider">
            <summary>
            CLSID_DVBCNetworkProvider
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVBSNetworkProvider">
            <summary>
            CLSID_DVBSNetworkProvider
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVBTNetworkProvider">
            <summary>
            CLSID_DVBTNetworkProvider
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.NetworkProvider">
            <summary>
            CLSID_NetworkProvider
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Colour">
            <summary>
            CLSID_Colour
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DSoundRender">
            <summary>
            CLSID_DSoundRender
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVMux">
            <summary>
            CLSID_DVMux
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVSplitter">
            <summary>
            CLSID_DVSplitter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVVideoCodec">
            <summary>
            CLSID_DVVideoCodec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVVideoEnc">
            <summary>
            CLSID_DVVideoEnc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DVDNavigator">
            <summary>
            CLSID_DVDNavigator
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AsyncReader">
            <summary>
            CLSID_AsyncReader
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.URLReader">
            <summary>
            CLSID_URLReader
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.FileWriter">
            <summary>
            CLSID_FileWriter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.ModexRenderer">
            <summary>
            CLSID_ModexRenderer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.InfTee">
            <summary>
            CLSID_InfTee
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Line21Decoder">
            <summary>
            CLSID_Line21Decoder
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Line21Decoder2">
            <summary>
            CLSID_Line21Decoder2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AVIMIDIRender">
            <summary>
            CLSID_AVIMIDIRender
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MJPGEnc">
            <summary>
            CLSID_MJPGEnc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MjpegDec">
            <summary>
            CLSID_MjpegDec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CMpegAudioCodec">
            <summary>
            CLSID_CMpegAudioCodec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG1Splitter">
            <summary>
            CLSID_MPEG1Splitter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CMpegVideoCodec">
            <summary>
            CLSID_CMpegVideoCodec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG2Demultiplexer">
            <summary>
            CLSID_MPEG2Demultiplexer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MMSPLITTER">
            <summary>
            CLSID_MMSPLITTER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.OverlayMixer">
            <summary>
            CLSID_OverlayMixer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.OverlayMixer2">
            <summary>
            CLSID_OverlayMixer2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.QTDec">
            <summary>
            CLSID_QTDec
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.QuickTimeParser">
            <summary>
            CLSID_QuickTimeParser
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VBISurfaces">
            <summary>
            CLSID_VBISurfaces
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VfwCapture">
            <summary>
            CLSID_VfwCapture
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Dither">
            <summary>
            CLSID_Dither
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoPortManager">
            <summary>
            CLSID_VideoPortManager
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VideoRenderer">
            <summary>
            CLSID_VideoRenderer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WMAsfReader">
            <summary>
            CLSID_WMAsfReader
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SystemClock">
            <summary>
            CLSID_SystemClock
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WMAsfWriter">
            <summary>
            CLSID_WMAsfWriter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.WSTDecoder">
            <summary>
            CLSID_WSTDecoder
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.Mpeg2VideoStreamAnalyzer">
            <summary>
            CLSID_Mpeg2VideoStreamAnalyzer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.PTFilter">
            <summary>
            CLSID_PTFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.MPEG2Demultiplexer_NoClock">
            <summary>
            CLSID_MPEG2Demultiplexer_NoClock
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE2Sink">
            <summary>
            CLSID_SBE2Sink
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferPropertyHandler">
            <summary>
            CLSID_StreamBufferPropertyHandler
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.StreamBufferThumbnailHandler">
            <summary>
            CLSID_StreamBufferThumbnailHandler
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE2File">
            <summary>
            CLSID_SBE2File
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CCAFilter">
            <summary>
            CLSID_CCAFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.CaptionsFilter">
            <summary>
            CLSID_CaptionsFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SubtitlesFilter">
            <summary>
            CLSID_SubtitlesFilter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DirectShowPluginControl">
            <summary>
            CLSID_DirectShowPluginControl
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE2MediaTypeProfile">
            <summary>
            CLSID_SBE2MediaTypeProfile
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.SBE2FileScan">
            <summary>
            CLSID_SBE2FileScan
            </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.CPCAFiltersCategory">
            <summary> CLSID_CPCAFiltersCategory </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.MediaEncoderCategory">
            <summary> CLSID_MediaEncoderCategory </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.MediaMultiplexerCategory">
            <summary> CLSID_MediaMultiplexerCategory </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.DMOFilterCategory">
            <summary> CLSID_DMOFilterCategory </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AudioInputDevice">
            <summary> CLSID_AudioInputDeviceCategory, audio capture category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.VideoInputDevice">
            <summary> CLSID_VideoInputDeviceCategory, video capture category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.VideoCompressorCategory">
            <summary> CLSID_VideoCompressorCategory, video compressor category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AudioCompressorCategory">
            <summary> CLSID_AudioCompressorCategory, audio compressor category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.LegacyAmFilterCategory">
            <summary> CLSID_LegacyAmFilterCategory, legacy filters </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AudioRendererCategory">
            <summary> CLSID_AudioRendererCategory, Audio renderer category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.BDAReceiverComponentsCategory">
            <summary> KSCATEGORY_BDA_RECEIVER_COMPONENT, BDA Receiver Components category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.BDASourceFiltersCategory">
            <summary> KSCATEGORY_BDA_NETWORK_TUNER, BDA Source Filters category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.BDARenderingFiltersCategory">
            <summary> KSCATEGORY_BDA_IP_SINK, BDA Rendering Filters category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.BDANetworkProvidersCategory">
            <summary> KSCATEGORY_BDA_NETWORK_PROVIDER, BDA Network Providers category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.BDATransportInformationRenderersCategory">
            <summary> KSCATEGORY_BDA_TRANSPORT_INFORMATION, BDA Transport Information Renderers category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.MidiRendererCategory">
            <summary> CLSID_MidiRendererCategory </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.TransmitCategory">
            <summary> CLSID_TransmitCategory  External Renderers Category</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.DeviceControlCategory">
            <summary> CLSID_DeviceControlCategory  Device Control Filters</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.VideoEffects1Category">
            <summary> CLSID_VideoEffects1Category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.VideoEffects2Category">
            <summary> CLSID_VideoEffects2Category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AudioEffects1Category">
            <summary> CLSID_AudioEffects1Category </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AudioEffects2Category">
            <summary> CLSID_AudioEffects2Category </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:VisioForge.Libs.DirectShowLib.FilterCategory.KSDataDecompressor" -->
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.KSCommunicationsTransform">
            <summary> KSCATEGORY_COMMUNICATIONSTRANSFORM </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.KSDataTransform">
            <summary> KSCATEGORY_DATATRANSFORM </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.KSInterfaceTransform">
            <summary> KSCATEGORY_INTERFACETRANSFORM </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.KSMixer">
            <summary> KSCATEGORY_MIXER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.KSAudioDevice">
            <summary> KSCATEGORY_AUDIO_DEVICE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.ActiveMovieCategories">
            <summary> CLSID_ActiveMovieCategories </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSCapture">
            <summary> AM_KSCATEGORY_CAPTURE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSRender">
            <summary> AM_KSCATEGORY_RENDER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSDataCompressor">
            <summary> AM_KSCATEGORY_DATACOMPRESSOR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSAudio">
            <summary> AM_KSCATEGORY_AUDIO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSVideo">
            <summary> AM_KSCATEGORY_VIDEO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSTVTuner">
            <summary> AM_KSCATEGORY_TVTUNER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSCrossbar">
            <summary> AM_KSCATEGORY_CROSSBAR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSTVAudio">
            <summary> AM_KSCATEGORY_TVAUDIO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSVBICodec">
            <summary> AM_KSCATEGORY_VBICODEC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.AMKSSplitter">
            <summary> AM_KSCATEGORY_SPLITTER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.WDMStreamingEncoderDevices">
            <summary> Not defined </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.WDMStreamingMultiplexerDevices">
            <summary> Not defined </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FilterCategory.LTMMVideoProcessors">
            <summary> Not defined </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.VMRClsId.AllocPresenter">
            <summary>CLSID_AllocPresenter</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.VMRClsId.AllocPresenterDDXclMode">
            <summary>CLSID_AllocPresenterDDXclMode</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.TVEClsId.DShowTVEFilter">
            <summary>CLSID_DShowTVEFilter</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.TVEClsId.TVEFilterTuneProperties">
            <summary>CLSID_TVEFilterTuneProperties</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.TVEClsId.TVEFilterCCProperties">
            <summary>CLSID_TVEFilterCCProperties</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.TVEClsId.TVEFilterStatsProperties">
            <summary>CLSID_TVEFilterStatsProperties</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.ENCAPIClsId.IVideoEncoderProxy">
            <summary>CLSID_IVideoEncoderProxy</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.ENCAPIClsId.ICodecAPIProxy">
            <summary>CLSID_ICodecAPIProxy</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.ENCAPIClsId.IVideoEncoderCodecAPIProxy">
            <summary>CLSID_IVideoEncoderCodecAPIProxy</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Video">
            <summary> MEDIATYPE_Video 'vids' </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Interleaved">
            <summary> MEDIATYPE_Interleaved 'iavs' </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Audio">
            <summary> MEDIATYPE_Audio 'auds' </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Texts">
            <summary> MEDIATYPE_Text 'txts' </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Stream">
            <summary> MEDIATYPE_Stream </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.VBI">
            <summary> MEDIATYPE_VBI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Midi">
            <summary> MEDIATYPE_Midi </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.File">
            <summary> MEDIATYPE_File </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.ScriptCommand">
            <summary> MEDIATYPE_ScriptCommand </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.AuxLine21Data">
            <summary> MEDIATYPE_AUXLine21Data </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Timecode">
            <summary> MEDIATYPE_Timecode </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.LMRT">
            <summary> MEDIATYPE_LMRT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.URLStream">
            <summary> MEDIATYPE_URL_STREAM </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.AnalogVideo">
            <summary> MEDIATYPE_AnalogVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.AnalogAudio">
            <summary> MEDIATYPE_AnalogAudio </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.Mpeg2Sections">
            <summary> MEDIATYPE_MPEG2_SECTIONS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.DTVCCData">
            <summary> MEDIATYPE_DTVCCData </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.MSTVCaption">
            <summary> MEDIATYPE_MSTVCaption </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.AUXTeletextPage">
            <summary> MEDIATYPE_AUXTeletextPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.CC_Container">
            <summary> MEDIATYPE_CC_CONTAINER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaType.DVD_ENCRYPTED_PACK">
            <summary> MEDIATYPE_DVD_ENCRYPTED_PACK </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.HDYC">
            <summary> MEDIASUBTYPE_HDYC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.V210">
            <summary> MEDIASUBTYPE_v210 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.R210">
            <summary> MEDIASUBTYPE_r210 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.CLPL">
            <summary> MEDIASUBTYPE_CLPL </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.YUYV">
            <summary> MEDIASUBTYPE_YUYV </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IYUV">
            <summary> MEDIASUBTYPE_IYUV </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.YVU9">
            <summary> MEDIASUBTYPE_YVU9 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Y411">
            <summary> MEDIASUBTYPE_Y411 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Y41P">
            <summary> MEDIASUBTYPE_Y41P </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.YUY2">
            <summary> MEDIASUBTYPE_YUY2 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.YVYU">
            <summary> MEDIASUBTYPE_YVYU </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.UYVY">
            <summary> MEDIASUBTYPE_UYVY </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Y211">
            <summary> MEDIASUBTYPE_Y211 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.CLJR">
            <summary> MEDIASUBTYPE_CLJR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IF09">
            <summary> MEDIASUBTYPE_IF09 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.CPLA">
            <summary> MEDIASUBTYPE_CPLA </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MJPG">
            <summary> MEDIASUBTYPE_MJPG </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.TVMJ">
            <summary> MEDIASUBTYPE_TVMJ </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.WAKE">
            <summary> MEDIASUBTYPE_WAKE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.CFCC">
            <summary> MEDIASUBTYPE_CFCC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IJPG">
            <summary> MEDIASUBTYPE_IJPG </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.PLUM">
            <summary> MEDIASUBTYPE_Plum </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DVCS">
            <summary> MEDIASUBTYPE_DVCS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DVSD">
            <summary> MEDIASUBTYPE_DVSD </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MDVF">
            <summary> MEDIASUBTYPE_MDVF </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB1">
            <summary> MEDIASUBTYPE_RGB1 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB4">
            <summary> MEDIASUBTYPE_RGB4 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB8">
            <summary> MEDIASUBTYPE_RGB8 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB565">
            <summary> MEDIASUBTYPE_RGB565 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB555">
            <summary> MEDIASUBTYPE_RGB555 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB24">
            <summary> MEDIASUBTYPE_RGB24 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB32">
            <summary> MEDIASUBTYPE_RGB32 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB1555">
            <summary> MEDIASUBTYPE_ARGB1555 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB4444">
            <summary> MEDIASUBTYPE_ARGB4444 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB32">
            <summary> MEDIASUBTYPE_ARGB32 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.A2R10G10B10">
            <summary> MEDIASUBTYPE_A2R10G10B10 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.A2B10G10R10">
            <summary> MEDIASUBTYPE_A2B10G10R10 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AYUV">
            <summary> MEDIASUBTYPE_AYUV </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AI44">
            <summary> MEDIASUBTYPE_AI44 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IA44">
            <summary> MEDIASUBTYPE_IA44 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB32_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_RGB32_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB16_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_RGB16_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB32_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB32_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB4444_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB4444_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB1555_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB1555_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB32_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_RGB32_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RGB16_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_RGB16_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB32_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB32_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB4444_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB4444_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ARGB1555_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB1555_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.YV12">
            <summary> MEDIASUBTYPE_YV12 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.NV12">
            <summary> MEDIASUBTYPE_NV12 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IMC1">
            <summary> MEDIASUBTYPE_IMC1 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IMC2">
            <summary> MEDIASUBTYPE_IMC2 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IMC3">
            <summary> MEDIASUBTYPE_IMC3 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IMC4">
            <summary> MEDIASUBTYPE_IMC4 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.S340">
            <summary> MEDIASUBTYPE_S340 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.S342">
            <summary> MEDIASUBTYPE_S342 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Overlay">
            <summary> MEDIASUBTYPE_Overlay </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1Packet">
            <summary> MEDIASUBTYPE_MPEG1Packet </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1Payload">
            <summary> MEDIASUBTYPE_MPEG1Payload </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1AudioPayload">
            <summary> MEDIASUBTYPE_MPEG1AudioPayload </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1SystemStream">
            <summary> MEDIATYPE_MPEG1SystemStream </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1System">
            <summary> MEDIASUBTYPE_MPEG1System </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1VideoCD">
            <summary> MEDIASUBTYPE_MPEG1VideoCD </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1Video">
            <summary> MEDIASUBTYPE_MPEG1Video </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.MPEG1Audio">
            <summary> MEDIASUBTYPE_MPEG1Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Avi">
            <summary> MEDIASUBTYPE_Avi </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Asf">
            <summary> MEDIASUBTYPE_Asf </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.QTMovie">
            <summary> MEDIASUBTYPE_QTMovie </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.QTRpza">
            <summary> MEDIASUBTYPE_QTRpza </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.QTSmc">
            <summary> MEDIASUBTYPE_QTSmc </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.QTRle">
            <summary> MEDIASUBTYPE_QTRle </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.QTJpeg">
            <summary> MEDIASUBTYPE_QTJpeg </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.PCMAudio_Obsolete">
            <summary> MEDIASUBTYPE_PCMAudio_Obsolete </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.PCM">
            <summary> MEDIASUBTYPE_PCM </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.WAVE">
            <summary> MEDIASUBTYPE_WAVE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AU">
            <summary> MEDIASUBTYPE_AU </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AIFF">
            <summary> MEDIASUBTYPE_AIFF </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.dvhd">
            <summary> MEDIASUBTYPE_dvhd </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.dvsl">
            <summary> MEDIASUBTYPE_dvsl </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.dv25">
            <summary> MEDIASUBTYPE_dv25 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.dv50">
            <summary> MEDIASUBTYPE_dv50 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.dvh1">
            <summary> MEDIASUBTYPE_dvh1 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Line21_BytePair">
            <summary> MEDIASUBTYPE_Line21_BytePair </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Line21_GOPPacket">
            <summary> MEDIASUBTYPE_Line21_GOPPacket </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Line21_VBIRawData">
            <summary> MEDIASUBTYPE_Line21_VBIRawData </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.TELETEXT">
            <summary> MEDIASUBTYPE_TELETEXT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.WSS">
            <summary> MEDIASUBTYPE_WSS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.VPS">
            <summary> MEDIASUBTYPE_VPS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DRM_Audio">
            <summary> MEDIASUBTYPE_DRM_Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.IEEE_FLOAT">
            <summary> MEDIASUBTYPE_IEEE_FLOAT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DOLBY_AC3_SPDIF">
            <summary> MEDIASUBTYPE_DOLBY_AC3_SPDIF </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.RAW_SPORT">
            <summary> MEDIASUBTYPE_RAW_SPORT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.SPDIF_TAG_241h">
            <summary> MEDIASUBTYPE_SPDIF_TAG_241h </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DssVideo">
            <summary> MEDIASUBTYPE_DssVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DssAudio">
            <summary> MEDIASUBTYPE_DssAudio </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.VPVideo">
            <summary> MEDIASUBTYPE_VPVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.VPVBI">
            <summary> MEDIASUBTYPE_VPVBI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_NTSC_M">
            <summary> MEDIASUBTYPE_AnalogVideo_NTSC_M </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_B">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_B </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_D">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_D </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_G">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_G </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_H">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_H </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_I">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_I </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_M">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_M </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_N">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_N </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_PAL_N_COMBO">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_N_COMBO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_B">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_B </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_D">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_D </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_G">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_G </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_H">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_H </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_K">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_K </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_K1">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_K1 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AnalogVideo_SECAM_L">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_L </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.I420">
            <summary> not in uuids.h </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.VideoImage">
            <summary> WMMEDIASUBTYPE_VIDEOIMAGE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Mpeg2Video">
            <summary> WMMEDIASUBTYPE_MPEG2_VIDEO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.WebStream">
            <summary> WMMEDIASUBTYPE_WebStream </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Mpeg2Audio">
            <summary> MEDIASUBTYPE_MPEG2_AUDIO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DolbyAC3">
            <summary> MEDIASUBTYPE_DOLBY_AC3 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DvbSI">
            <summary> MEDIASUBTYPE_DVB_SI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AtscSI">
            <summary> MEDIASUBTYPE_ATSC_SI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Mpeg2Data">
            <summary> MEDIASUBTYPE_MPEG2DATA </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Mpeg2Program">
            <summary> MEDIASUBTYPE_MPEG2_PROGRAM </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Mpeg2Transport">
            <summary> MEDIASUBTYPE_MPEG2_TRANSPORT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Mpeg2TransportStride">
            <summary> MEDIASUBTYPE_MPEG2_TRANSPORT_STRIDE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.None">
            <summary> MEDIASUBTYPE_None </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.H264">
            <summary> MEDIASUBTYPE_H264 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.AAC">
            <summary> MEDIASUBTYPE_AAC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.NV24">
            <summary> MEDIASUBTYPE_NV24 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Data708_608">
            <summary> MEDIASUBTYPE_708_608Data </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DtvCcData">
            <summary> MEDIASUBTYPE_DtvCcData </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.DVB_Subtitles">
            <summary> MEDIASUBTYPE_DVB_SUBTITLES </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ISDB_Captions">
            <summary> MEDIASUBTYPE_ISDB_CAPTIONS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ISDB_Superimpose">
            <summary> MEDIASUBTYPE_ISDB_SUPERIMPOSE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.NV11">
            <summary> MEDIASUBTYPE_NV11 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.P208">
            <summary> MEDIASUBTYPE_P208 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.P210">
            <summary> MEDIASUBTYPE_P210 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.P216">
            <summary> MEDIASUBTYPE_P216 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.P010">
            <summary> MEDIASUBTYPE_P010 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.P016">
            <summary> MEDIASUBTYPE_P016 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Y210">
            <summary> MEDIASUBTYPE_Y210 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.Y216">
            <summary> MEDIASUBTYPE_Y216 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.P408">
            <summary> MEDIASUBTYPE_P408 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.CC_Container">
            <summary> MEDIASUBTYPE_CC_CONTAINER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.VBI">
            <summary> MEDIASUBTYPE_VBI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.XDS">
            <summary> MEDIASUBTYPE_XDS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.ETDTFilter_Tagged">
            <summary> MEDIASUBTYPE_ETDTFilter_Tagged </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.MediaSubType.CPFilters_Processed">
            <summary> MEDIASUBTYPE_CPFilters_Processed </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.None">
            <summary> FORMAT_None </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.VideoInfo">
            <summary> FORMAT_VideoInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.VideoInfo2">
            <summary> FORMAT_VideoInfo2 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.WaveEx">
            <summary> FORMAT_WaveFormatEx </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.MpegVideo">
            <summary> FORMAT_MPEGVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.MpegStreams">
            <summary> FORMAT_MPEGStreams </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.DvInfo">
            <summary> FORMAT_DvInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.AnalogVideo">
            <summary> FORMAT_AnalogVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.Mpeg2Video">
            <summary> FORMAT_MPEG2Video </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.DolbyAC3">
            <summary> FORMAT_DolbyAC3 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.Mpeg2Audio">
            <summary> FORMAT_MPEG2Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.WSS525">
            <summary> FORMAT_525WSS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.ETDTFilter_Tagged">
            <summary> FORMATTYPE_ETDTFilter_Tagged </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FormatType.CPFilters_Processed">
            <summary> FORMATTYPE_CPFilters_Processed </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.UDCRTag">
            <summary> DSATTRIB_UDCRTag </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.PicSampleSeq">
            <summary> DSATTRIB_PicSampleSeq </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.OptionalVideoAttributes">
            <summary> DSATTRIB_OptionalVideoAttributes </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.CC_ContainerInfo">
            <summary> DSATTRIB_CC_CONTAINER_INFO </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.TransportProperties">
            <summary> DSATTRIB_TRANSPORT_PROPERTIES </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.PBDATagAttribute">
            <summary> DSATTRIB_PBDATAG_ATTRIBUTE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.CaptureStreamtime">
            <summary> DSATTRIB_CAPTURE_STREAMTIME </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.DShowStreamDesc">
            <summary> DSATTRIB_DSHOW_STREAM_DESC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.SampleLiveStreamtime">
            <summary> DSATTRIB_SAMPLE_LIVE_STREAM_TIME </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.WMDRMProtectionInfo">
            <summary> DSATTRIB_WMDRMProtectionInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.DSAttrib.BadSampleInfo">
            <summary> DSATTRIB_BadSampleInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.Pin">
            <summary> AMPROPSETID_Pin</summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.DroppedFrames">
            <summary> PROPSETID_VIDCAP_DROPPEDFRAMES </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.ENCAPIPARAM_BitRate">
            <summary> STATIC_ENCAPIPARAM_BITRATE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.ENCAPIPARAM_PeakBitRate">
            <summary> STATIC_ENCAPIPARAM_PEAK_BITRATE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.ENCAPIPARAM_BitRateMode">
            <summary> STATIC_ENCAPIPARAM_BITRATE_MODE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.ENCAPIPARAM_SAP_MODE">
            <summary> ENCAPIPARAM_SAP_MODE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_AVDecMmcssClass">
            <summary> CODECAPI_AVDecMmcssClass </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_ChangeLists">
            <summary> STATIC_CODECAPI_CHANGELISTS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_VideoEncoder">
            <summary> STATIC_CODECAPI_VIDEO_ENCODER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_AudioEncoder">
            <summary> STATIC_CODECAPI_AUDIO_ENCODER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_SetAllDefaults">
            <summary> STATIC_CODECAPI_SETALLDEFAULTS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_AllSettings">
            <summary> STATIC_CODECAPI_ALLSETTINGS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_SupportsEvents">
            <summary> STATIC_CODECAPI_SUPPORTSEVENTS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropSetID.CODECAPI_CurrentChangeList">
            <summary> STATIC_CODECAPI_CURRENTCHANGELIST </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.Capture">
            <summary> PIN_CATEGORY_CAPTURE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.Preview">
            <summary> PIN_CATEGORY_PREVIEW </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.AnalogVideoIn">
            <summary> PIN_CATEGORY_ANALOGVIDEOIN </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.VBI">
            <summary> PIN_CATEGORY_VBI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.VideoPort">
            <summary> PIN_CATEGORY_VIDEOPORT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.NABTS">
            <summary> PIN_CATEGORY_NABTS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.EDS">
            <summary> PIN_CATEGORY_EDS </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.TeleText">
            <summary> PIN_CATEGORY_TELETEXT </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.CC">
            <summary> PIN_CATEGORY_CC </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.Still">
            <summary> PIN_CATEGORY_STILL </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.TimeCode">
            <summary> PIN_CATEGORY_TIMECODE </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PinCategory.VideoPortVBI">
            <summary> PIN_CATEGORY_VIDEOPORT_VBI </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FindDirection.UpstreamOnly">
            <summary> LOOK_UPSTREAM_ONLY </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.FindDirection.DownstreamOnly">
            <summary> LOOK_DOWNSTREAM_ONLY </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.CrossbarFilterPropertyPage">
            <summary> CLSID_CrossbarFilterPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.AudioInputMixer">
            <summary> CLSID_AudioInputMixerProperties </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.AudioProperties">
            <summary> CLSID_AudioProperties </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.AudioRendererAdvancedProperties">
            <summary> CLSID_AudioRendererAdvancedProperties </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.AviMux">
            <summary> CLSID_AviMuxProptyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.AviMux1">
            <summary> CLSID_AviMuxProptyPage1 </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.DVDec">
            <summary> CLSID_DVDecPropertiesPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.DVEnc">
            <summary> CLSID_DVEncPropertiesPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.Modex">
            <summary> CLSID_ModexProperties </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.Capture">
            <summary> CLSID_CaptureProperties </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.WstDecoder">
            <summary> CLSID_WstDecoderPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.DVMux">
            <summary> CLSID_DVMuxPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.VideoProcAmpPropertyPage">
            <summary> CLSID_VideoProcAmpPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.CameraControlPropertyPage">
            <summary> CLSID_CameraControlPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.AnalogVideoDecoderPropertyPage">
            <summary> CLSID_AnalogVideoDecoderPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.VideoStreamConfigPropertyPage">
            <summary> CLSID_VideoStreamConfigPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.ATSCNetworkPropertyPage">
            <summary> CLSID_ATSCNetworkPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.TVTunerFilterPropertyPage">
            <summary> CLSID_TVTunerFilterPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.PropertyPages.TVAudioFilterPropertyPage">
            <summary> CLSID_TVAudioFilterPropertyPage </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.RFTuner">
            <summary> KSNODE_BDA_RF_TUNER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.QAMDemodulator">
            <summary> KSNODE_BDA_QAM_DEMODULATOR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.QPSKDemodulator">
            <summary> KSNODE_BDA_QPSK_DEMODULATOR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.EightVSBDemodulator">
            <summary> KSNODE_BDA_8VSB_DEMODULATOR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.COFDMDemodulator">
            <summary> KSNODE_BDA_COFDM_DEMODULATOR </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.OpenCablePod">
            <summary> KSNODE_BDA_OPENCABLE_POD </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.CommonCAPod">
            <summary> KSNODE_BDA_COMMON_CA_POD </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.PidFilter">
            <summary> KSNODE_BDA_PID_FILTER </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.BDANodeCategory.IPSink">
            <summary> KSNODE_BDA_IP_SINK </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.TAGTables.UdriTagTables">
            <summary> UUID_UdriTagTables </summary>
        </member>
        <member name="F:VisioForge.Libs.DirectShowLib.TAGTables.WMDRMTagTables">
            <summary> UUID_WMDRMTagTables </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.KSTopologyConnection">
            <summary>
            From KSTOPOLOGY_CONNECTION
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVPSize">
            <summary>
            From AMVPSIZE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DDVideoPortConnect">
            <summary>
            From DDVIDEOPORTCONNECT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VPDataInfo">
            <summary>
            From AMVPDATAINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVPDimInfo">
            <summary>
            From AMVPDIMINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.AMVP_Mode">
            <summary>
            From AMVP_MODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9PresentationFlags">
            <summary>
            From VMR9PresentationFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9SurfaceAllocationFlags">
            <summary>
            From VMR9SurfaceAllocationFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9ProcAmpControlFlags">
            <summary>
            From VMR9ProcAmpControlFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9MixerPrefs">
            <summary>
            From VMR9MixerPrefs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9DeinterlaceTech">
            <summary>
            From VMR9DeinterlaceTech
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9AlphaBitmapFlags">
            <summary>
            From VMR9AlphaBitmapFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9DeinterlacePrefs">
            <summary>
            From VMR9DeinterlacePrefs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9RenderPrefs">
            <summary>
            From VMR9RenderPrefs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9Mode">
            <summary>
            From VMR9Mode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9AspectRatioMode">
            <summary>
            From VMR9AspectRatioMode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9SampleFormat">
            <summary>
            From VMR9_SampleFormat
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9PresentationInfo">
            <summary>
            From VMR9PresentationInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9AllocationInfo">
            <summary>
            From VMR9AllocationInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9ProcAmpControl">
            <summary>
            From VMR9ProcAmpControl
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9MonitorInfo">
            <summary>
            From VMR9MonitorInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9DeinterlaceCaps">
            <summary>
            From VMR9DeinterlaceCaps
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9VideoStreamInfo">
            <summary>
            From VMR9VideoStreamInfo
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9VideoDesc">
            <summary>
            From VMR9VideoDesc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9Frequency">
            <summary>
            From VMR9Frequency
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9AlphaBitmap">
            <summary>
            From VMR9AlphaBitmap
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMR9ProcAmpControlRange">
            <summary>
            From VMR9ProcAmpControlRange
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRPresentationFlags">
            <summary>
            From VMRPresentationFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRSurfaceAllocationFlags">
            <summary>
            From VMRSurfaceAllocationFlags
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRPresentationInfo">
            <summary>
            From VMRPRESENTATIONINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRAllocationInfo">
            <summary>
            From VMRALLOCATIONINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRDeinterlaceTech">
            <summary>
            From VMRDeinterlaceTech
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRBitmap">
            <summary>
            From VMRBITMAP_* defines
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRDeinterlacePrefs">
            <summary>
            From VMRDeinterlacePrefs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRMixerPrefs">
            <summary>
            From VMRMixerPrefs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRRenderPrefs">
            <summary>
            From VMRRenderPrefs
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRMode">
            <summary>
            From VMRMode
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRAspectRatioMode">
            <summary>
            From VMR_ASPECT_RATIO_MODE
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRAlphaBitmap">
            <summary>
            From VMRALPHABITMAP
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRDeinterlaceCaps">
            <summary>
            From VMRDeinterlaceCaps
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRFrequency">
            <summary>
            From VMRFrequency
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRVideoDesc">
            <summary>
            From VMRVideoDesc
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRVideoStreamInfo">
            <summary>
            From VMRVIDEOSTREAMINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.DDColorKey">
            <summary>
            From DDCOLORKEY
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRMonitorInfo">
            <summary>
            From VMRMONITORINFO
            </summary>
        </member>
        <member name="T:VisioForge.Libs.DirectShowLib.VMRGuid">
            <summary>
            From VMRGUID
            </summary>
        </member>
        <member name="M:VisioForge.Libs.DirectShowLib.IVMRWindowlessControl.GetCurrentImage(System.IntPtr@)">
            <summary>
            the caller is responsible for free the returned memory by calling CoTaskMemFree.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.CaptureEngineStreams.FirstSourcePhotoStream">
            <summary>The first image streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.CaptureEngineStreams.FirstSourceVideoStream">
            <summary>The first video streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.CaptureEngineStreams.FirstSourceAudioStream">
            <summary>The first audio streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.CaptureEngineFriendlyName.FirstSourcePhotoStream">
            <summary>The first image streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.CaptureEngineFriendlyName.FirstSourceVideoStream">
            <summary>The first video streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.CaptureEngineFriendlyName.FirstSourceAudioStream">
            <summary>The first audio streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderStreams.FirstVideoStream">
            <summary>The first video streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderStreams.FirstAudioStream">
            <summary>The first audio streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderStreams.AllStreams">
            <summary>The first image streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderFirstStream.FirstVideoStream">
            <summary>The first video streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderFirstStream.FirstAudioStream">
            <summary>The first audio streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderFirstStreamOrMediaSource.FirstVideoStream">
            <summary>The first video streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderFirstStreamOrMediaSource.FirstAudioStream">
            <summary>The first audio streamIndex.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.SourceReaderFirstStreamOrMediaSource.MediaSource">
            <summary>The media source.</summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMF2DBufferExtensions.ContiguousCopyFrom(VisioForge.Libs.MediaFoundation.IMF2DBuffer,System.Byte[])">
            <summary>
            Copies data to this buffer from a byte array that has a contiguous format.
            </summary>
            <param name="value">A valid IMF2DBuffer instance.</param>
            <param name="sourceBuffer">The source byte array.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMF2DBufferExtensions.ContiguousCopyFrom(VisioForge.Libs.MediaFoundation.IMF2DBuffer,System.ArraySegment{System.Byte})">
            <summary>
            Copies data to this buffer from a byte array segment that has a contiguous format.
            </summary>
            <param name="value">A valid IMF2DBuffer instance.</param>
            <param name="sourceBuffer">A byte array segment.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMF2DBufferExtensions.ContiguousCopyFrom(VisioForge.Libs.MediaFoundation.IMF2DBuffer,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer)">
            <summary>
            Copies data to this buffer from a MemoryBuffer that has a contiguous format.
            </summary>
            <param name="value">A valid IMF2DBuffer instance.</param>
            <param name="sourceBuffer">A MemoryBuffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMF2DBufferExtensions.ContiguousCopyTo(VisioForge.Libs.MediaFoundation.IMF2DBuffer,System.Byte[])">
            <summary>
            Copies this buffer into a byte array, converting the data to contiguous format.
            </summary>
            <param name="value">A valid IMF2DBuffer instance.</param>
            <param name="destinationBuffer">The destination byte array.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMF2DBufferExtensions.ContiguousCopyTo(VisioForge.Libs.MediaFoundation.IMF2DBuffer,System.ArraySegment{System.Byte})">
            <summary>
            Copies this buffer into a byte array segment, converting the data to contiguous format.
            </summary>
            <param name="value">A valid IMF2DBuffer instance.</param>
            <param name="destinationBuffer">The destination byte array segment.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMF2DBufferExtensions.ContiguousCopyTo(VisioForge.Libs.MediaFoundation.IMF2DBuffer,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer)">
            <summary>
            Copies this buffer into a MemoryBuffer, converting the data to contiguous format.
            </summary>
            <param name="value">A valid IMF2DBuffer instance.</param>
            <param name="destinationBuffer">The destination MemoryBuffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFActivateExtensions.ActivateObject``1(VisioForge.Libs.MediaFoundation.IMFActivate,``0@)">
            <summary>
            Creates the object associated with this activation object. 
            </summary>
            <typeparam name="T">The requested COM interface.</typeparam>
            <param name="activate">A valid IMFActivate instance.</param>
            <param name="activatedObject">The requested interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.IsKeyExists(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid)">
            <summary>
            Determines if a key exists in an IMFAttributes instance.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">The key to test.</param>
            <returns>True if the instance have a value for the given key ; False otherwise.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetItem(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.Object@)">
            <summary>
            Retrieves the value associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">The key that identifies the value to retrieve.</param>
            <param name="value">The value.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetItemByIndex(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Int32,System.Guid@,System.Object@)">
            <summary>
            Retrieves an attribute at the specified index.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="index">The index to retrieve.</param>
            <param name="guidKey">The key of this attribute.</param>
            <param name="value">The value of this attribute.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetBoolean(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.Boolean@)">
            <summary>
            Retrieves a Boolean value associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the requested value.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Media Foundation attributes don't support boolean values. This method get them as a 32-bits unsigned integer and return true for any non-zero value and false otherwise.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SetBoolean(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.Boolean)">
            <summary>
            Associates a Boolean value with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies the value to set.</param>
            <param name="value">New value for this key.</param>
            <remarks>Media Foundation attributes don't support boolean values. This method set them as a 32-bits unsigned integer and store 1 for true and 0 for false.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetUINT32(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt32@)">
            <summary>
            Retrieves a UInt32 value associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the requested value.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SetUINT32(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt32)">
            <summary>
            Associates a UInt32 value with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies the value to set.</param>
            <param name="value">New value for this key.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetUINT64(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt64@)">
            <summary>
            Retrieves a UInt64 value associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the requested value.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SetUINT64(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt64)">
            <summary>
            Associates a UInt64 value with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies the value to set.</param>
            <param name="value">New value for this key.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetPointer(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.IntPtr@)">
            <summary>
            Retrieves an address location value associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the requested value as an IntPtr.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Media Foundation attributes don't natively support pointer values. This method get them as a 64-bits unsigned integer and convert that value as a IntPtr.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SetPointer(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.IntPtr)">
            <summary>
            Associates an address location value with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies the value to set.</param>
            <param name="value">New value for this key as a IntPtr.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Media Foundation attributes don't natively support pointer values. This method store them as a 64-bits unsigned integer.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetRatio(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves a ratio value (numerator and denominator) associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="numerator">The numerator part of the ratio.</param>
            <param name="denominator">The denominator part of the ratio.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Numerator and denominator values are stored packed as 64-bits value.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SetRatio(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt32,System.UInt32)">
            <summary>
            Associates a ratio value (numerator and denominator) with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies the value to set.</param>
            <param name="numerator">The numerator part of the ratio.</param>
            <param name="denominator">The denominator part of the ratio.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Numerator and denominator values are stored packed as 64-bits value.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetSize(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves a size value (width and height) associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="width">The width part of the size.</param>
            <param name="height">The height part of the size.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Width and height values are stored packed as 64-bits value.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SetSize(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.UInt32,System.UInt32)">
            <summary>
            Associates a Ratio value with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies the value to set.</param>
            <param name="width">The width part of the size.</param>
            <param name="height">The height part of the size.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Width and height values are stored packed as 64-bits value.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetString(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.String@)">
            <summary>
            Retrieves a string associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the string.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAllocatedString(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.String@)">
            <summary>
            Retrieves a string associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the string.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAllocatedBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,System.Byte[]@)">
            <summary>
            Retrieves a byte array associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives the byte array.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAllocatedBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer@)">
            <summary>
            Retrieves a <see cref="T:VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer"/>  associated with a key.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="value">Receives a MemoryBuffer wrapping the attribute content.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetUnknown``1(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid,``0@)">
            <summary>
            Retrieves a COM instance associated with a key.
            </summary>
            <typeparam name="T">The requested COM interface.</typeparam>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="guidKey">Guid that identifies which value to retrieve.</param>
            <param name="obj">Receives the requested COM instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SerializeAttributesToStream(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.Misc.IStream,VisioForge.Libs.MediaFoundation.MFAttributeSerializeOptions)">
            <summary>
            Writes the contents of an attribute store to a COM stream.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="stream">A COM stream where the attributes are write on.</param>
            <param name="options">On or more values of the MFAttributeSerializeOptions enumaration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.SerializeAttributesToStream(VisioForge.Libs.MediaFoundation.IMFAttributes,System.IO.Stream,VisioForge.Libs.MediaFoundation.MFAttributeSerializeOptions)">
            <summary>
            Writes the contents of an attribute store to a managed stream.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="stream">A managed stream where the attributes are write on.</param>
            <param name="options">On or more values of the MFAttributeSerializeOptions enumaration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.DeserializeAttributesFromStream(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.Misc.IStream,VisioForge.Libs.MediaFoundation.MFAttributeSerializeOptions)">
            <summary>
            Load an attribute store from a COM stream.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="stream">A COM stream where the attributes are read from.</param>
            <param name="options">On or more values of the MFAttributeSerializeOptions enumaration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.DeserializeAttributesFromStream(VisioForge.Libs.MediaFoundation.IMFAttributes,System.IO.Stream,VisioForge.Libs.MediaFoundation.MFAttributeSerializeOptions)">
            <summary>
            Load an attribute store from a managed stream.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="stream">A managed stream where the attributes are read from.</param>
            <param name="options">On or more values of the MFAttributeSerializeOptions enumaration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAttributesAsBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer@)">
            <summary>
            Converts the attribute store's contents to a memory buffer.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="buffer">Receives a memory buffer filled with attribute data.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAttributesAsBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Byte[]@)">
            <summary>
            Converts the attribute store's contents to a byte array.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="buffer">Receives a byte array filled with attribute data.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.InitializeAttributesFromBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer)">
            <summary>
            Initializes the attribute store's contents from a memory buffer.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="buffer">A memory buffer previously filled with <see cref="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAttributesAsBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer@)"/>.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.InitializeAttributesFromBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,System.Byte[])">
            <summary>
            Initializes the contents of an attribute store from a byte array.
            </summary>
            <param name="attributes">A valid IMFAttributes instance.</param>
            <param name="buffer">A byte array previously filled with <see cref="M:VisioForge.Libs.MediaFoundation.IMFAttributesExtensions.GetAttributesAsBlob(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer@)"/>.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Read(VisioForge.Libs.MediaFoundation.IMFByteStream,System.Byte[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            Reads data from a byte stream
            </summary>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">A byte array that receives the data.</param>
            <param name="offset">An offset from the start of the buffer at which to begin storing the data read from the byte stream.</param>
            <param name="count">The maximum number of bytes to be read from the byte stream.</param>
            <param name="bytesRead">The total number of bytes read into the buffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Read``1(VisioForge.Libs.MediaFoundation.IMFByteStream,``0[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            Reads data from a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array of T that receives the data.</param>
            <param name="offset">An index offset in buffer at which to begin storing the data read from the byte stream.</param>
            <param name="count">The maximum number of items to be read from the byte stream.</param>
            <param name="itemsRead">The total number of values read into the buffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Read``1(VisioForge.Libs.MediaFoundation.IMFByteStream,System.ArraySegment{``0},System.Int32@)">
            <summary>
            Reads data from a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array segment of value types that receives the data.</param>
            <param name="itemsRead">The total number of values read into the array segment.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Read``1(VisioForge.Libs.MediaFoundation.IMFByteStream,``0@)">
            <summary>
            Reads data from a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="structure">Receives a structure read from the streamIndex.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Write(VisioForge.Libs.MediaFoundation.IMFByteStream,System.Byte[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            Writes data to a byte stream.
            </summary>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">A byte array that contains the data to write.</param>
            <param name="offset">An offset from the start of the buffer at which to begin reading the data written to the byte stream.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="bytesWritten">The total number of bytes write into the buffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Write``1(VisioForge.Libs.MediaFoundation.IMFByteStream,``0[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            Writes data to a byte stream.
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array of T that contains the data to write.</param>
            <param name="offset">An offset from the start of the buffer at which to begin reading the data written to the byte stream.</param>
            <param name="count">The number of items to write.</param>
            <param name="itemsWritten">Receives the number of items written.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Write``1(VisioForge.Libs.MediaFoundation.IMFByteStream,System.ArraySegment{``0},System.Int32@)" -->
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.Write``1(VisioForge.Libs.MediaFoundation.IMFByteStream,``0)">
            <summary>
            Writes data to a byte stream.
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="structure">A value type to write into the streamIndex.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.ReadAsync(VisioForge.Libs.MediaFoundation.IMFByteStream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads asynchronously data from a byte stream
            </summary>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">A byte array that receives the data.</param>
            <param name="offset">An offset from the start of the buffer at which to begin storing the data read from the byte stream.</param>
            <param name="count">The maximum number of bytes to be read from the byte stream.</param>
            <returns>A task that represents the asynchronous read operation. The task's result contain the number of bytes read.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.ReadAsync``1(VisioForge.Libs.MediaFoundation.IMFByteStream,``0[],System.Int32,System.Int32)">
            <summary>
            Reads asynchronously data from a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array of T that receives the data.</param>
            <param name="offset">An index offset in buffer at which to begin storing the data read from the byte stream.</param>
            <param name="count">The maximum number of items to be read from the byte stream.</param>
            <returns>A task that represents the asynchronous read operation. The task's result contain the number of items read.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.ReadAsync``1(VisioForge.Libs.MediaFoundation.IMFByteStream,System.ArraySegment{``0})">
            <summary>
            Reads asynchronously data from a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array segment of value types that receives the data.</param>
            <returns>A task that represents the asynchronous read operation. The task's result contain the number of items read.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.ReadAsync(VisioForge.Libs.MediaFoundation.IMFByteStream,System.IntPtr,System.Int32)">
            <summary>
            Reads asynchronously data from a byte stream
            </summary>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="bufferPtr">A pointer designating the memory location that receives the data.</param>
            <param name="bufferSize">The maximum number of bytes to read from the byte stream.</param>
            <returns>A task that represents the asynchronous read operation. The task's result contain the number of bytes read.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.WriteAsync(VisioForge.Libs.MediaFoundation.IMFByteStream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes asynchronously data to a byte stream
            </summary>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">A byte array that contain the data to write.</param>
            <param name="offset">An offset from the start of the buffer at which begin the data to write to the byte stream.</param>
            <param name="count">The maximum number of bytes to be written to the byte stream.</param>
            <returns>A task that represents the asynchronous write operation. The task's result contain the number of bytes written.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.WriteAsync``1(VisioForge.Libs.MediaFoundation.IMFByteStream,``0[],System.Int32,System.Int32)">
            <summary>
            Writes asynchronously data to a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array of T that contain the data to write.</param>
            <param name="offset">An index offset in buffer at which to begin storing the data read from the byte stream.</param>
            <param name="count">The maximum number of items to be read from the byte stream.</param>
            <returns>A task that represents the asynchronous write operation. The task's result contain the number of items written.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.WriteAsync``1(VisioForge.Libs.MediaFoundation.IMFByteStream,System.ArraySegment{``0})">
            <summary>
            Writes asynchronously data to a byte stream
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="buffer">An array segment of value types that contain the data to write.</param>
            <returns>A task that represents the asynchronous write operation. The task's result contain the number of items written.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFByteStreamExtensions.WriteAsync(VisioForge.Libs.MediaFoundation.IMFByteStream,System.IntPtr,System.Int32)">
            <summary>
            Writes asynchronously data to a byte stream
            </summary>
            <param name="byteStream">A valid IMFByteStream instance.</param>
            <param name="bufferPtr">A pointer designating the memory location that contain the data to write.</param>
            <param name="bufferSize">The maximum number of bytes to write to the byte stream.</param>
            <returns>A task that represents the asynchronous write operation. The task's result contain the number of bytes written.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureEngineClassFactoryExtensions.CreateInstance(VisioForge.Libs.MediaFoundation.IMFCaptureEngineClassFactory,VisioForge.Libs.MediaFoundation.IMFCaptureEngine@)">
            <summary>
            Creates an instance of the capture engine.
            </summary>
            <param name="factory">A valid IMFCaptureEngineClassFactory instance.</param>
            <param name="engine">Receives an instance of the capture engine.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSinkExtensions.AddStream(VisioForge.Libs.MediaFoundation.IMFCaptureSink,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFAttributes,System.Int32@)">
            <summary>
            Connects a streamIndex from the capture source to this capture sink.
            </summary>
            <param name="captureSink">A valid IMFCaptureSink instance.</param>
            <param name="streamIndex">A value from the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="mediaType">An IMFMediaType instance that specifies the desired format of the output streamIndex.</param>
            <param name="attributes">An IMFAttributes instance or null.</param>
            <param name="sinkStreamIndex">Receives the index of the new streamIndex on the capture sink.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSinkExtensions.GetService(VisioForge.Libs.MediaFoundation.IMFCaptureSink,System.Int32,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Queries the underlying Sink Writer object.
            </summary>
            <param name="captureSink">A valid IMFCaptureSink instance.</param>
            <param name="sinkStreamIndex">The zero-based index of the streamIndex to query. The index is returned in the sinkStreamIndex parameter of the <see cref="M:VisioForge.Libs.MediaFoundation.IMFCaptureSink.AddStream(System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFAttributes,System.Int32@)"/> method.</param>
            <param name="sourceReader">Receives an instance of the underlying Sink Writer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.AddEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,System.Int32,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)">
            <summary>
            Adds an effect to a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStreamIndex">The capture streamIndex.</param>
            <param name="transform">A Media Foundation transform instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.AddEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)">
            <summary>
            Adds an effect to a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="transform">A Media Foundation transform instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.AddEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,System.Int32,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Adds an effect to a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStreamIndex">The capture streamIndex.</param>
            <param name="activate">An MFT activation instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.AddEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Adds an effect to a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="activate">An MFT activation instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.GetAvailableDeviceMediaType(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Gets a format that is supported by one of the capture streams.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="mediaTypeIndex">The zero-based index of the media type to retrieve.</param>
            <param name="mediaType">Receives an instance of the IMFMediaType interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.GetCurrentDeviceMediaType(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Gets the current media type for a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="mediaType">Receives an instance of the IMFMediaType interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.GetService(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Gets a pointer to the underlying Source Reader object.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceReader">Receives an instance of the underlying Source Reader.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.GetStreamIndexFromFriendlyName(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineFriendlyName,System.Int32@)">
            <summary>
            Gets the actual device streamIndex index translated from a friendly streamIndex name.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="friendlyName">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineFriendlyName"/> enumeration.</param>
            <param name="actualStreamIndex">Receives the value of the streamIndex index that corresponds to the friendly name.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.RemoveAllEffects(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams)">
            <summary>
            Removes all effects from a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.RemoveEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,System.Int32,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)">
            <summary>
            Removes an effect from a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStreamIndex">The capture streamIndex.</param>
            <param name="transform">A Media Foundation transform instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.RemoveEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)">
            <summary>
            Removes an effect from a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="transform">A Media Foundation transform instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.RemoveEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,System.Int32,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Removes an effect from a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStreamIndex">The capture streamIndex.</param>
            <param name="activate">An MFT activation instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.RemoveEffect(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Removes an effect from a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="activate">An MFT activation instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFCaptureSourceExtensions.SetCurrentDeviceMediaType(VisioForge.Libs.MediaFoundation.IMFCaptureSource,VisioForge.Libs.MediaFoundation.CaptureEngineStreams,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Sets the output format for a capture streamIndex.
            </summary>
            <param name="captureSource">A valid IMFCaptureSource instance.</param>
            <param name="sourceStream">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.CaptureEngineStreams"/> enumeration.</param>
            <param name="mediaType">An instance of the IMFMediaType interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFClockExtensions.GetCorrelatedTime(VisioForge.Libs.MediaFoundation.IMFClock,System.Int64@,System.TimeSpan@)">
            <summary>
            Retrieves the last clock time that was correlated with system time.
            </summary>
            <param name="clock">A valid IMFClock instance.</param>
            <param name="clockTime">Receives the last known clock time, in units of the clock's frequency.</param>
            <param name="systemTime">Receives the system time that corresponds to the clock time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFClockExtensions.GetState(VisioForge.Libs.MediaFoundation.IMFClock,VisioForge.Libs.MediaFoundation.MFClockState@)">
            <summary>
            Retrieves the current state of the clock.
            </summary>
            <param name="clock">A valid IMFClock instance.</param>
            <param name="clockState">Receives the clock state</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFGetServiceExtensions.GetService``1(VisioForge.Libs.MediaFoundation.IMFGetService,System.Guid,``0@)">
            <summary>
            Retrieves a service interface.
            </summary>
            <typeparam name="T">The COM interface being requested.</typeparam>
            <param name="getService">A valid IMFGetService instance.</param>
            <param name="guidService">The service identifier (SID) of the service.</param>
            <param name="service">Receives the interface instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaBufferExtensions.Lock(VisioForge.Libs.MediaFoundation.IMFMediaBuffer,System.IO.UnmanagedMemoryStream@)">
            <summary>
            Gives the caller access to the memory in the value, for reading or writing.
            </summary>
            <param name="mediaBuffer">A valid IMFMediaBuffer instance.</param>
            <param name="streamIndex">Receives a memory streamIndex that wrap the media value memory.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>The media value must be unlocked with IMFMediaBuffer.Unlock.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaEngineExExtensions.InsertAudioEffect(VisioForge.Libs.MediaFoundation.IMFMediaEngineEx,VisioForge.Libs.MediaFoundation.Transform.IMFTransform,System.Boolean)">
            <summary>
            Inserts an audio effect.
            </summary>
            <param name="mediaEngine">A valid IMFMediaBufferEx instance.</param>
            <param name="transform">A Media Foundation transform (MFT) that implements the audio effect.</param>
            <param name="optional">
            <list type="bullet">
                <item>
                <term>True</term>
                <description>The effect is optional. If the Media Engine cannot add the effect, it ignores the effect and continues playback.</description>
                </item>
                <item>
                <term>False</term>
                <description>The effect is required. If the Media Engine object cannot add the effect, a playback error occurs.</description>
                </item>
            </list>
            </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaEngineExExtensions.InsertAudioEffect(VisioForge.Libs.MediaFoundation.IMFMediaEngineEx,VisioForge.Libs.MediaFoundation.IMFActivate,System.Boolean)">
            <summary>
            Inserts an audio effect.
            </summary>
            <param name="mediaEngine">A valid IMFMediaBufferEx instance.</param>
            <param name="activate">An activation object that must create an MFT for the audio effect.</param>
            <param name="optional">
            <list type="bullet">
                <item>
                <term>True</term>
                <description>The effect is optional. If the Media Engine cannot add the effect, it ignores the effect and continues playback.</description>
                </item>
                <item>
                <term>False</term>
                <description>The effect is required. If the Media Engine object cannot add the effect, a playback error occurs.</description>
                </item>
            </list>
            </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaEngineExExtensions.InsertVideoEffect(VisioForge.Libs.MediaFoundation.IMFMediaEngineEx,VisioForge.Libs.MediaFoundation.Transform.IMFTransform,System.Boolean)">
            <summary>
            Inserts a video effect.
            </summary>
            <param name="mediaEngine">A valid IMFMediaBufferEx instance.</param>
            <param name="transform">A Media Foundation transform (MFT) that implements the video effect.</param>
            <param name="optional">
            <list type="bullet">
                <item>
                <term>True</term>
                <description>The effect is optional. If the Media Engine cannot add the effect, it ignores the effect and continues playback.</description>
                </item>
                <item>
                <term>False</term>
                <description>The effect is required. If the Media Engine object cannot add the effect, a playback error occurs.</description>
                </item>
            </list>
            </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaEngineExExtensions.InsertVideoEffect(VisioForge.Libs.MediaFoundation.IMFMediaEngineEx,VisioForge.Libs.MediaFoundation.IMFActivate,System.Boolean)">
            <summary>
            Inserts a video effect.
            </summary>
            <param name="mediaEngine">A valid IMFMediaBufferEx instance.</param>
            <param name="activate">An activation object that must create an MFT for the video effect.</param>
            <param name="optional">
            <list type="bullet">
                <item>
                <term>True</term>
                <description>The effect is optional. If the Media Engine cannot add the effect, it ignores the effect and continues playback.</description>
                </item>
                <item>
                <term>False</term>
                <description>The effect is required. If the Media Engine object cannot add the effect, a playback error occurs.</description>
                </item>
            </list>
            </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaEngineExExtensions.SetCurrentTimeEx(VisioForge.Libs.MediaFoundation.IMFMediaEngineEx,System.TimeSpan,VisioForge.Libs.MediaFoundation.MF_MEDIA_ENGINE_SEEK_MODE)">
            <summary>
            Seeks to a new playback position using the specified <see cref="T:VisioForge.Libs.MediaFoundation.MF_MEDIA_ENGINE_SEEK_MODE"/>.
            </summary>
            <param name="mediaEngine">A valid IMFMediaBufferEx instance.</param>
            <param name="seekTime">The new playback position.</param>
            <param name="seekMode">Specifies if the seek is a normal seek or an approximate seek.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaEngineExtensions.SetCurrentTime(VisioForge.Libs.MediaFoundation.IMFMediaEngine,System.TimeSpan)">
            <summary>
            Seeks to a new playback position.
            </summary>
            <param name="mediaEngine">A valid IMFMediaBuffer instance.</param>
            <param name="seekTime">The new playback position.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaSessionExtensions.Start(VisioForge.Libs.MediaFoundation.IMFMediaSession,System.TimeSpan)">
            <summary>
            Starts the Media Session.
            </summary>
            <param name="mediaSession">A valid IMFMediaSession instance.</param>
            <param name="startPosition">The starting position for playback.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaSessionExtensions.Start(VisioForge.Libs.MediaFoundation.IMFMediaSession)">
            <summary>
            Starts the Media Session.
            </summary>
            <param name="mediaSession">A valid IMFMediaSession instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>This method starts the media session at its beginning.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaSourceExtensions.Start(VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor,System.TimeSpan)">
            <summary>
            Starts, seeks, or restarts the media source by specifying where to start playback.
            </summary>
            <param name="mediaSource">A valid IMFMediaSource instance.</param>
            <param name="presentationDescriptor">An IMFPresentationDescriptor instance of the media source's presentation descriptor.</param>
            <param name="startPosition">Specifies where to start playback.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaSourceExtensions.Start(VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor)">
            <summary>
            Starts, seeks, or restarts the media source by specifying where to start playback.
            </summary>
            <param name="mediaSource">A valid IMFMediaSource instance.</param>
            <param name="presentationDescriptor">An IMFPresentationDescriptor instance of the media source's presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>This method starts the media source at its beginning.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTimeRangeExtensions.AddRange(VisioForge.Libs.MediaFoundation.IMFMediaTimeRange,System.TimeSpan,System.TimeSpan)">
            <summary>
            Adds a new range to the list of time ranges.
            </summary>
            <param name="mediaTimeRange">A valid IMFMediaTimeRange instance.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTimeRangeExtensions.ContainsTime(VisioForge.Libs.MediaFoundation.IMFMediaTimeRange,System.TimeSpan)">
            <summary>
            Queries whether a specified time falls within any of the time ranges.
            </summary>
            <param name="mediaTimeRange">A valid IMFMediaTimeRange instance.</param>
            <param name="time">The time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTimeRangeExtensions.GetEnd(VisioForge.Libs.MediaFoundation.IMFMediaTimeRange,System.Int32,System.TimeSpan)">
            <summary>
            Gets the end time for a specified time range.
            </summary>
            <param name="mediaTimeRange">A valid IMFMediaTimeRange instance.</param>
            <param name="index">The zero-based index of the time range to query.</param>
            <param name="end">Receives the end time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTimeRangeExtensions.GetStart(VisioForge.Libs.MediaFoundation.IMFMediaTimeRange,System.Int32,System.TimeSpan)">
            <summary>
            Gets the start time for a specified time range.
            </summary>
            <param name="mediaTimeRange">A valid IMFMediaTimeRange instance.</param>
            <param name="index">The zero-based index of the time range to query.</param>
            <param name="end">Receives the start time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.CreateWaveFormatEx(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.MFWaveFormatExConvertFlags,VisioForge.Libs.MediaFoundation.Misc.WaveFormatEx@)">
            <summary>
            Converts an audio media type to a WaveFormatEx structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="flags">One member of the <see cref="T:VisioForge.Libs.MediaFoundation.MFWaveFormatExConvertFlags"/> enumaration.</param>
            <param name="waveFormatEx">Receives a WaveFormatEx structure representing this audio media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.InitializeFromWaveFormatEx(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.WaveFormatEx)">
            <summary>
            Initializes the media type with a WaveFormatEx structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="waveFormatEx">A WaveFormatEx structure that describe the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.InitializeFromMFVideoFormat(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.MFVideoFormat)">
            <summary>
            Initializes the media type with a MFVideoFormat structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="videoFormat">A MFVideoFormat structure that describe the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.InitializeFromAMMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.AMMediaType)">
            <summary>
            Initializes the media type with a DirectShow AMMediaType structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="amMediaType">An AMMediaType structure that describe the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.InitializeFromVideoInfoHeader(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader,System.Guid)">
            <summary>
            Initializes the media type with a VideoInfoHeader structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="vih2">A VideoInfoHeader structure that describe the media type.</param>
            <param name="subType">Define the media type sub type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.InitializeFromVideoInfoHeader2(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader2,System.Guid)">
            <summary>
            Initializes the media type with a VideoInfoHeader2 structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="vih2">A VideoInfoHeader structure that describe the media type.</param>
            <param name="subType">Define the media type sub type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.WrapMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Guid,System.Guid,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Wrap this media type into another media type. 
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="majorType">Define the major type of the new media type.</param>
            <param name="subType">Define the subtype of the new media type.</param>
            <param name="wrap">Receives a new media type that wrap the current instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.UnwrapMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Retrieve the media type wrapped into this instance.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="original">Receives the original media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.CreateWaveFormatEx(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.WaveFormatEx@)">
            <summary>
            Converts an audio media type to a WaveFormatEx structure.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="waveFormatEx">Receives a WaveFormatEx structure representing this audio media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMediaTypeExtensions.CompareToPartialMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Compares this media type to a partial media type.
            </summary>
            <param name="mediaType">A valid IMFMediaType instance.</param>
            <param name="partialMediaType">A partial media type.</param>
            <returns>True if <paramref name="partialMediaType"/> have the same major type and if all attributes from the partial type exists in the current instance with the same value ; False otherwise.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMetadataExtensions.GetAllLanguages(VisioForge.Libs.MediaFoundation.IMFMetadata,System.String[]@)">
            <summary>
            Gets a list of the languages in which metadata is available.
            </summary>
            <param name="metadata">A valid IMFMetadata instance.</param>
            <param name="languages">Receives the list of languages as an array strings. Each string in the array is an RFC 1766-compliant language tag.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFMetadataExtensions.GetAllPropertyNames(VisioForge.Libs.MediaFoundation.IMFMetadata,System.String[]@)">
            <summary>
            Gets a list of all the metadata property names on this object.
            </summary>
            <param name="metadata">A valid IMFMetadata instance.</param>
            <param name="propertyNames">Receives an array strings.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaItemExtensions.GetDuration(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem,System.TimeSpan@)">
            <summary>
            Gets the duration of the media item.
            </summary>
            <param name="mediaItem">A valid IMFPMediaItem instance.</param>
            <param name="durationValue">Receives the duration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaItemExtensions.GetStartStopPosition(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem,System.TimeSpan@,System.TimeSpan@)">
            <summary>
            Gets the start and stop times for the media item.
            </summary>
            <param name="mediaItem">A valid IMFPMediaItem instance.</param>
            <param name="startValue">Receives the start position.</param>
            <param name="stopValue">Receives the stop position.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaItemExtensions.SetStartStopPosition(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem,System.TimeSpan,System.TimeSpan)">
            <summary>
            Sets the start and stop time for the media item.
            </summary>
            <param name="mediaItem">A valid IMFPMediaItem instance.</param>
            <param name="startValue">Start position.</param>
            <param name="stopValue">Stop position.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaItemExtensions.SetStreamSink(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem,System.Int32,VisioForge.Libs.MediaFoundation.IMFStreamSink)">
            <summary>
            Sets a media sink for the media item. A media sink is an object that consumes the data from one or more streams. 
            </summary>
            <param name="mediaItem">A valid IMFPMediaItem instance.</param>
            <param name="streamIndex">Zero-based index of a streamIndex on the media source.</param>
            <param name="streamSink">An instance to a streamIndex sink.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaItemExtensions.SetStreamSink(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem,System.Int32,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Sets a media sink for the media item. A media sink is an object that consumes the data from one or more streams. 
            </summary>
            <param name="mediaItem">A valid IMFPMediaItem instance.</param>
            <param name="streamIndex">Zero-based index of a streamIndex on the media source.</param>
            <param name="activate">An instance of an activation object that creates the media sink.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.CreateMediaItemFromObject(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,VisioForge.Libs.MediaFoundation.IMFMediaSource,System.IntPtr,VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem@)">
            <summary>
            Creates a media item from an object.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="mediaSource">An instance of a media source.</param>
            <param name="userData">Application-defined value to store in the media item.</param>
            <param name="mediaItem">Receives an instance of a IMFPMediaItem interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.CreateMediaItemFromObject(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,VisioForge.Libs.MediaFoundation.IMFByteStream,System.IntPtr,VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaItem@)">
            <summary>
            Creates a media item from an object.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="mediaSink">An instance of a byte streamIndex.</param>
            <param name="userData">Application-defined value to store in the media item.</param>
            <param name="mediaItem">Receives an instance of a IMFPMediaItem interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.GetDuration(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,System.TimeSpan@)">
            <summary>
            Gets the playback duration of the current media item.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="durationValue">Receives the duration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.GetPosition(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,System.TimeSpan@)">
            <summary>
            Gets the current playback position.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="durationValue">Receives the playback position.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.InsertEffect(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,VisioForge.Libs.MediaFoundation.Transform.IMFTransform,System.Boolean)">
            <summary>
            Applies an audio or video effect to playback.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="transform">A Media Foundation transform (MFT) that implements the effect.</param>
            <param name="optional">
            <list type="bullet">
                <item>
                <term>True</term>
                <description>The effect is optional. If the MFPlay player object cannot add the effect, it ignores the effect and continues playback.</description>
                </item>
                <item>
                <term>False</term>
                <description>The effect is required. If the MFPlay player object cannot add the effect, a playback error occurs.</description>
                </item>
            </list>
            </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.InsertEffect(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,VisioForge.Libs.MediaFoundation.IMFActivate,System.Boolean)">
            <summary>
            Applies an audio or video effect to playback.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="activate">An activation object that creates an MFT.</param>
            <param name="optional">
            <list type="bullet">
                <item>
                <term>True</term>
                <description>The effect is optional. If the MFPlay player object cannot add the effect, it ignores the effect and continues playback.</description>
                </item>
                <item>
                <term>False</term>
                <description>The effect is required. If the MFPlay player object cannot add the effect, a playback error occurs.</description>
                </item>
            </list>
            </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.RemoveEffect(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)">
            <summary>
            Removes an effect that was added with the IMFPMediaPlayer.InsertEffect method.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="transform">The Media Foundation transform (MFT) previously added.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.RemoveEffect(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Removes an effect that was added with the IMFPMediaPlayer.InsertEffect method.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="activate">The activation object used to create the MFT.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPMediaPlayerExtensions.SetPosition(VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer,System.TimeSpan)">
            <summary>
            Sets the playback position.
            </summary>
            <param name="mediaPlayer">A valid IMFPMediaPlayer instance.</param>
            <param name="positionValue">New playback position.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPresentationClockExtensions.GetTime(VisioForge.Libs.MediaFoundation.IMFPresentationClock,System.TimeSpan@)">
            <summary>
            Gets the latest clock time. 
            </summary>
            <param name="presentationClock">A valid IMFPresentationClock instance.</param>
            <param name="clockTime">Receives the latest clock time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPresentationClockExtensions.Start(VisioForge.Libs.MediaFoundation.IMFPresentationClock,System.TimeSpan)">
            <summary>
            Starts the presentation clock.
            </summary>
            <param name="presentationClock">A valid IMFPresentationClock instance.</param>
            <param name="clockStartOffset">The initial starting time</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>Use TimeSpan.MaxValue in the <paramref name="clockStartOffset"/> parameter to start the clock from its current position. Use this value if the clock is paused and you want to restart it from the same position.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFPresentationDescriptorExtensions.RequireProtectedEnvironment(VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor)">
            <summary>
            Determines if the media presentation requires the Protected Media Path (PMP).
            </summary>
            <param name="presentationDescriptor">A valid IMFPresentationDescriptor instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFReadWriteClassFactoryExtensions.CreateInstanceFromURL(VisioForge.Libs.MediaFoundation.ReadWrite.IMFReadWriteClassFactory,System.String,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates an instance of the sink writer given a URL.
            </summary>
            <param name="factory">A valid IMFReadWriteClassFactory instance.</param>
            <param name="url">A string that specifies the name of the output file. The sink writer creates a new file with this name.</param>
            <param name="attributes">A instance to the IMFAttributes interface. You can use this parameter to configure the sink writer.</param>
            <param name="sourceReader">Receives the sink writer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFReadWriteClassFactoryExtensions.CreateInstanceFromURL(VisioForge.Libs.MediaFoundation.ReadWrite.IMFReadWriteClassFactory,System.String,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)" -->
        <member name="M:VisioForge.Libs.MediaFoundation.IMFReadWriteClassFactoryExtensions.CreateInstanceFromObject(VisioForge.Libs.MediaFoundation.ReadWrite.IMFReadWriteClassFactory,VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates an instance of the sink writer, given an IMFByteStream instance.
            </summary>
            <param name="factory">A valid IMFReadWriteClassFactory instance.</param>
            <param name="mediaSink">A byte streamIndex used by the sink writer to write data.</param>
            <param name="attributes">A instance to the IMFAttributes interface. You can use this parameter to configure the sink writer.</param>
            <param name="sourceReader">Receives the sink writer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFReadWriteClassFactoryExtensions.CreateInstanceFromObject(VisioForge.Libs.MediaFoundation.ReadWrite.IMFReadWriteClassFactory,VisioForge.Libs.MediaFoundation.IMFMediaSink,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates an instance of the sink writer, given an IMFMediaSink instance.
            </summary>
            <param name="factory">A valid IMFReadWriteClassFactory instance.</param>
            <param name="mediaSink">An instance of IMFMediaSink used by the sink writer.</param>
            <param name="attributes">A instance to the IMFAttributes interface. You can use this parameter to configure the sink writer.</param>
            <param name="sourceReader">Receives the sink writer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFReadWriteClassFactoryExtensions.CreateInstanceFromObject(VisioForge.Libs.MediaFoundation.ReadWrite.IMFReadWriteClassFactory,VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates an instance of the source reader, given an IMFByteStream instance.
            </summary>
            <param name="factory">A valid IMFReadWriteClassFactory instance.</param>
            <param name="mediaSink">A byte streamIndex used by the source reader to read data.</param>
            <param name="attributes">A instance to the IMFAttributes interface. You can use this parameter to configure the source reader.</param>
            <param name="sourceReader">Receives the source reader.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFReadWriteClassFactoryExtensions.CreateInstanceFromObject(VisioForge.Libs.MediaFoundation.ReadWrite.IMFReadWriteClassFactory,VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates an instance of the source reader, given an IMFMediaSource instance.
            </summary>
            <param name="factory">A valid IMFReadWriteClassFactory instance.</param>
            <param name="mediaSink">An instance of IMFMediaSource used by the source reader.</param>
            <param name="attributes">A instance to the IMFAttributes interface. You can use this parameter to configure the source reader.</param>
            <param name="sourceReader">Receives the source reader.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSAMIStyleExtensions.GetStyles(VisioForge.Libs.MediaFoundation.IMFSAMIStyle,System.String[]@)">
            <summary>
            Gets a list of the style names defined in the SAMI file. 
            </summary>
            <param name="samiStyle">A valid IMFSAMIStyle instance.</param>
            <param name="styles">Receives an array of strings.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSampleExtensions.GetSampleDuration(VisioForge.Libs.MediaFoundation.IMFSample,System.TimeSpan@)">
            <summary>
            Retrieves the duration of the sample.
            </summary>
            <param name="sample">A valid IMFSample instance.</param>
            <param name="sampleTime">Receives the sample duration.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSampleExtensions.GetSampleTime(VisioForge.Libs.MediaFoundation.IMFSample,System.TimeSpan@)">
            <summary>
            Retrieves the presentation time of the sample.
            </summary>
            <param name="sample">A valid IMFSample instance.</param>
            <param name="sampleTime">Receives the presentation time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSampleExtensions.SetSampleDuration(VisioForge.Libs.MediaFoundation.IMFSample,System.TimeSpan)">
            <summary>
            Sets the duration of the sample.
            </summary>
            <param name="sample">A valid IMFSample instance.</param>
            <param name="sampleTime">Duration of the sample.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSampleExtensions.SetSampleTime(VisioForge.Libs.MediaFoundation.IMFSample,System.TimeSpan)">
            <summary>
            Sets the presentation time of the sample.
            </summary>
            <param name="sample">A valid IMFSample instance.</param>
            <param name="sampleTime">The presentation time.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSinkWriterExtensions.GetServiceForStream``1(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter,System.Int32,System.Guid,``0@)">
            <summary>
            Queries the underlying media sink or encoder for an interface.
            </summary>
            <typeparam name="T">The COM interface being requested.</typeparam>
            <param name="sinkWriter">A valid IMFSinkWriter instance.</param>
            <param name="streamIndex">The zero-based index of a streamIndex to query or -1 to query the media sink itself.</param>
            <param name="guidService">A service identifier GUID.</param>
            <param name="service">Receives an instance of the requested interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSinkWriterExtensions.SendStreamTick(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter,System.Int32,System.TimeSpan)">
            <summary>
            Indicates a gap in an input streamIndex.
            </summary>
            <param name="sinkWriter">A valid IMFSinkWriter instance.</param>
            <param name="streamIndex">The zero-based index of the streamIndex.</param>
            <param name="timestamp">The position in the streamIndex where the gap in the data occurs, relative to the start of the streamIndex.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.AddTransformForStream(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,System.Int32,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.AddTransformForStream(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,VisioForge.Libs.MediaFoundation.Transform.IMFTransform)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.AddTransformForStream(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,System.Int32,VisioForge.Libs.MediaFoundation.IMFActivate)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.AddTransformForStream(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,VisioForge.Libs.MediaFoundation.IMFActivate)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.GetTransformForStream(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,System.Int32,System.Guid@,VisioForge.Libs.MediaFoundation.Transform.IMFTransform@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.RemoveAllTransformsForStream(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExExtensions.SetNativeMediaType(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReaderEx,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.ReadWrite.MF_SOURCE_READER_FLAG@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.Flush(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderStreams)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.GetCurrentMediaType(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,VisioForge.Libs.MediaFoundation.IMFMediaType@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.GetNativeMediaType(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaType@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.GetPresentationAttribute(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderFirstStreamOrMediaSource,System.Guid,VisioForge.Libs.MediaFoundation.Misc.PropVariant)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.GetServiceForStream``1(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,System.Int32,System.Guid,``0@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.GetServiceForStream``1(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderFirstStreamOrMediaSource,System.Guid,``0@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.GetStreamSelection(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,System.Boolean@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.ReadSample(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,System.Int32,VisioForge.Libs.MediaFoundation.ReadWrite.MF_SOURCE_READER_CONTROL_FLAG,System.Int32@,VisioForge.Libs.MediaFoundation.ReadWrite.MF_SOURCE_READER_FLAG@,System.TimeSpan@,VisioForge.Libs.MediaFoundation.IMFSample@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.ReadSample(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderStreams,VisioForge.Libs.MediaFoundation.ReadWrite.MF_SOURCE_READER_CONTROL_FLAG,System.Int32@,VisioForge.Libs.MediaFoundation.ReadWrite.MF_SOURCE_READER_FLAG@,System.TimeSpan@,VisioForge.Libs.MediaFoundation.IMFSample@)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.SetCurrentMediaType(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaType)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.SetCurrentMediaType(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderFirstStream,VisioForge.Libs.MediaFoundation.IMFMediaType)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.SetCurrentPosition(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,System.TimeSpan)" -->
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.MediaFoundation.IMFSourceReaderExtensions.SetStreamSelection(VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader,VisioForge.Libs.MediaFoundation.SourceReaderStreams,System.Boolean)" -->
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromURL(VisioForge.Libs.MediaFoundation.IMFSourceResolver,System.String,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source from a URL.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="url">A string that contains the URL to resolve.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="mediaSource">Receives a media source that can handle the media file targeted by <paramref name="url"/>.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromURL(VisioForge.Libs.MediaFoundation.IMFSourceResolver,System.Uri,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source from a Uri.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="url">A Uri that contains the URL to resolve.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="mediaSource">Receives a media source that can handle the media file targeted by <paramref name="url"/>.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromURL(VisioForge.Libs.MediaFoundation.IMFSourceResolver,System.String,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a byte stream from a URL.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="url">A string that contains the URL to resolve.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="byteStream">Receives a byte stream that can handle the media file targeted by <paramref name="url"/>.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromURL(VisioForge.Libs.MediaFoundation.IMFSourceResolver,System.Uri,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a byte stream from a URL.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="url">A Uri that contains the URL to resolve.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="byteStream">Receives a byte stream that can handle the media file targeted by <paramref name="url"/>.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromByteStream(VisioForge.Libs.MediaFoundation.IMFSourceResolver,VisioForge.Libs.MediaFoundation.IMFByteStream,System.String,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source from a byte stream.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="byteStream">An instance of the byte stream's IMFByteStream interface.</param>
            <param name="url">A string that contains the URL of the byte stream. The URL is optional and can be null.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="mediaSource">Receives a media source that can handle the provided byte stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromByteStream(VisioForge.Libs.MediaFoundation.IMFSourceResolver,VisioForge.Libs.MediaFoundation.IMFByteStream,System.Uri,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source from a byte stream.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="byteStream">An instance of the byte stream's IMFByteStream interface.</param>
            <param name="url">A Uri that contains the URL of the byte stream. The URL is optional and can be null.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="mediaSource">Receives a media source that can handle the provided byte stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFSourceResolverExtensions.CreateObjectFromByteStream(VisioForge.Libs.MediaFoundation.IMFSourceResolver,VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.MFResolution,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source from a byte stream.
            </summary>
            <param name="sourceResolver">A valid IMFSourceResolver instance.</param>
            <param name="byteStream">An instance of the byte stream's IMFByteStream interface.</param>
            <param name="flags">One or more members of the MFResolution enumeration.</param>
            <param name="properties">An instance of the IPropertyStore interface of a property store. The method passes the property store to the scheme handler or byte-stream handler that creates the object.</param>
            <param name="mediaSource">Receives a media source that can handle the provided byte stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFStreamingSinkConfigExtensions.StartStreaming(VisioForge.Libs.MediaFoundation.IMFStreamingSinkConfig,System.Int64)">
            <summary>
            Called by the streaming media client before the Media Session starts streaming to specify the byte offset or the time offset.
            </summary>
            <param name="streamingSinkConfig">A valid IMFStreamingSinkConfig instance.</param>
            <param name="byteOffset">A seeking byte offset.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFStreamingSinkConfigExtensions.StartStreaming(VisioForge.Libs.MediaFoundation.IMFStreamingSinkConfig,System.TimeSpan)">
            <summary>
            Called by the streaming media client before the Media Session starts streaming to specify the byte offset or the time offset.
            </summary>
            <param name="streamingSinkConfig">A valid IMFStreamingSinkConfig instance.</param>
            <param name="timePosition">A seeking time offset.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFTimedTextBinaryExtensions.GetData(VisioForge.Libs.MediaFoundation.IMFTimedTextBinary,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer@)">
            <summary>
            Gets the data content of the timed-text object.
            </summary>
            <param name="timedTextBinary">A valid IMFTimedTextBinary instance.</param>
            <param name="data">Return the timed-text data as a MemoryBuffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.IMFVideoDisplayControlExtensions.GetCurrentImage(VisioForge.Libs.MediaFoundation.EVR.IMFVideoDisplayControl,VisioForge.Libs.MediaFoundation.Misc.BitmapInfoHeader,System.Byte[]@,System.TimeSpan@)">
            <summary>
            Gets a copy of the current image being displayed by the video renderer. 
            </summary>
            <param name="videoDisplayControl">A valid IMFVideoDisplayControl instance.</param>
            <param name="bih">A BitmapInfoHeader class that receives a description of the bitmap. </param>
            <param name="dib">Receives byte array that contains a packed Windows device-independent bitmap (DIB).</param>
            <param name="timeStamp">Receives the time stamp of the captured image.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream">
            <summary>
            An helper class that expose the COM interface IStream around a wrapped managed Stream.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Create an instance of ComCallableStream.
            </summary>
            <param name="streamIndex">A managed <see cref="T:System.IO.Stream"/> used by this instance to simulate the COM interface IStream.</param>
            <param name="ownStream">Indicate if the wrapper own the managed streamIndex. If true, the managed streamIndex is disposed with the wrapper instance.</param>
            <remarks>After the object creation, the managed Stream is accessible using the <see cref="P:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.BaseStream"/> property.</remarks>
        </member>
        <member name="P:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.BaseStream">
            <summary>
            Give access to the wrapped managed <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Dispose">
            <summary>
            Dispose the wrapped managed <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Dispose(System.Boolean)">
            <summary>
            Dispose the wrapped managed <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            The Read method reads a specified number of bytes from the streamIndex object into memory, starting at the current seek pointer.
            </summary>
            <param name="value">A byte array which the streamIndex data is read into.</param>
            <param name="bytesCount">The number of bytes of data to read from the streamIndex object.</param>
            <param name="itemsRead">A pointer to a <see cref="T:System.UInt32"/> variable that receives the actual number of bytes read from the streamIndex object.</param>
            <returns>An HRESULT.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            The Write method writes a specified number of bytes into the streamIndex object starting at the current seek pointer.
            </summary>
            <param name="value">A byte array that contains the data that is to be itemsRead to the streamIndex. A valid array must be provided for this parameter even when <paramref name="bytesCount"/> is zero.</param>
            <param name="bytesCount">The number of bytes of data to attempt to write into the streamIndex. This value can be zero.</param>
            <param name="itemsWritten">A pointer to a <see cref="T:System.UInt32"/> variable where this method writes the actual number of bytes itemsRead to the streamIndex object. The caller can set this pointer to <see cref="F:System.IntPtr.Zero"/>, in which case this method does not provide the actual number of bytes itemsRead.</param>
            <returns>An HRESULT.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Seek(System.Int64,System.IO.SeekOrigin,System.IntPtr)">
            <summary>
            The Seek method changes the seek pointer to a new location. The new location is relative to either the beginning of the streamIndex, the end of the streamIndex, or the current seek pointer.
            </summary>
            <param name="offset">The displacement to be added to the location indicated by the <paramref name="origin"/> parameter. If <paramref name="origin"/> is <see cref="F:System.IO.SeekOrigin.Begin"/>, this is interpreted as an unsigned value rather than a signed value.</param>
            <param name="origin">The origin for the displacement specified in <paramref name="offset"/>. The origin can be the beginning of the file (<see cref="F:System.IO.SeekOrigin.Begin"/>), the current seek pointer (<see cref="F:System.IO.SeekOrigin.Current"/>), or the end of the file (<see cref="F:System.IO.SeekOrigin.End"/>). For more information about values, see the <see cref="T:System.IO.SeekOrigin"/> enumeration.</param>
            <param name="newPosition">A pointer to the location where this method writes the value of the new seek pointer from the beginning of the streamIndex. You can set this pointer to <see cref="F:System.IntPtr.Zero"/>. In this case, this method does not provide the new seek pointer.</param>
            <returns>An HRESULT.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.SetSize(System.Int64)">
            <summary>
            The SetSize method changes the size of the streamIndex object.
            </summary>
            <param name="newSize">Specifies the new size, in bytes, of the streamIndex.</param>
            <returns>An HRESULT.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.CopyTo(VisioForge.Libs.MediaFoundation.Misc.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            The CopyTo method copies a specified number of bytes from the current seek pointer in the streamIndex to the current seek pointer in another streamIndex.
            </summary>
            <param name="otherStream">A pointer to the destination streamIndex. The streamIndex pointed to by <paramref name="otherStream"/> can be a new streamIndex or a clone of the source streamIndex.</param>
            <param name="bytesCount">The number of bytes to copy from the source streamIndex.</param>
            <param name="itemsRead">A pointer to the location where this method writes the actual number of bytes read from the source. You can set this pointer to <see cref="F:System.IntPtr.Zero"/>. In this case, this method does not provide the actual number of bytes read.</param>
            <param name="itemsWritten">A pointer to the location where this method writes the actual number of bytes itemsRead to the destination. You can set this pointer to <see cref="F:System.IntPtr.Zero"/>. In this case, this method does not provide the actual number of bytes itemsRead.</param>
            <returns>An HRESULT.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Commit(VisioForge.Libs.MediaFoundation.Misc.STGC)">
            <summary>
            The Commit method ensures that any changes made to a streamIndex object open in transacted mode are reflected in the parent storage.
            </summary>
            <param name="commitFlags">Controls how the changes for the streamIndex object are committed. See the STGC enumeration for a definition of these values.</param>
            <returns>An HRESULT.</returns>
            <remarks>Since transacted IO are not supported by managed streams, this method just call <see cref="M:System.IO.Stream.Flush"/>.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Revert">
            <summary>
            The Revert method discards all changes that have been made to a transacted streamIndex since the last IStream::Commit call.
            </summary>
            <returns>Always return HResult.S_OK.</returns>
            <remarks>Since transacted IO are not supported by managed streams, this method do nothing.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            The LockRegion method restricts access to a specified range of bytes in the streamIndex. Supporting this functionality is optional since some file systems do not provide it.
            </summary>
            <param name="offset">Integer that specifies the byte offset for the beginning of the range.</param>
            <param name="bytesCount">Integer that specifies the length of the range, in bytes, to be restricted.</param>
            <param name="lockType">Specifies the restrictions being requested on accessing the range. This parameter is ignored by this implementation.</param>
            <returns>An HRESULT.</returns>
            <remarks>This method only works if the wrapped streamIndex is a <see cref="T:System.IO.FileStream"/>. For other Stream kinds, the method tell to the caller that locking is not supported.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            The UnlockRegion method removes the access restriction on a range of bytes previously restricted with <see cref="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.LockRegion(System.Int64,System.Int64,System.Int32)"/>.
            </summary>
            <param name="offset">Specifies the byte offset for the beginning of the range.</param>
            <param name="bytesCount">Specifies, in bytes, the length of the range to be restricted.</param>
            <param name="lockType">Specifies the access restrictions previously placed on the range. This parameter is ignored by this implementation.</param>
            <returns>An HRESULT.</returns>
            <remarks>This method only works if the wrapped streamIndex is a <see cref="T:System.IO.FileStream"/>. For other Stream kinds, the method tell to the caller that locking is not supported.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Stat(VisioForge.Libs.MediaFoundation.Misc.STATSTG@,VisioForge.Libs.MediaFoundation.Misc.STATFLAG)">
            <summary>
            The Stat method retrieves the <see cref="T:System.Runtime.InteropServices.ComTypes.STATSTG"/> structure for this streamIndex.
            </summary>
            <param name="statstg">A <see cref="T:System.Runtime.InteropServices.ComTypes.STATSTG"/> structure where this method places information about this streamIndex object.</param>
            <param name="statFlag">Specifies that this method does not return some of the members in the STATSTG structure, thus saving a memory allocation operation. Values are taken from the <see cref="!:DirectShowLib2.ComTypes.STATFLAG"/> enumeration.</param>
            <returns>Always return HResult.E_NOTIMPL.</returns>
            <remarks>In this implementation, this method is unimplemented.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComCallableStream.Clone(VisioForge.Libs.MediaFoundation.Misc.IStream@)">
            <summary>
            The Clone method creates a new streamIndex object with its own seek pointer that references the same bytes as the original streamIndex.
            </summary>
            <param name="clonedStream">When successful, pointer to the location of an IStream instance to the new streamIndex object. If an error occurs, this parameter is null.</param>
            <returns>Always return HResult.E_NOTIMPL.</returns>
            <remarks>In this implementation, this method is unimplemented.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComClass.IsClassIdRegistered(System.Guid)">
            <summary>
            Verifiy by checking the Registery that a CLSID is registered. 
            </summary>
            <param name="classId">The COM CLSID to check.</param>
            <returns>True if the CLSID is likely registered; False otherwise.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComClass.SafeRelease``1(``0@)">
            <summary>
            Realease a COM instance and set the variable to null.
            </summary>
            <typeparam name="T">A COM Interface.</typeparam>
            <param name="obj">A COM instance to release and then set to null.</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComClass.CreateInstance(System.Guid)">
            <summary>
            Create an instance of a COM object designated by its CLSID.
            </summary>
            <param name="classId">The CLSID of the COM object to create.</param>
            <returns>An instance of the COM object</returns>
            <remarks>The COM object is created in the current thread apartment context. If the thread apartment is STA, the created object can only be used in the current thread.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComClass.CreateInstance``1(System.Guid)">
            <summary>
            Create an instance of a COM object designated by its CLSID.
            </summary>
            <typeparam name="T">A COM Interface implemented by the created COM object.</typeparam>
            <param name="classId">The CLSID of the COM object to create.</param>
            <returns>An instance of the requested COM interface</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComClass.CreateInstanceFromFile(System.String,System.Guid)">
            <summary>
            Create an instance of a COM object from from a dll filename and its CLSID
            </summary>
            <param name="filePath">The dll file hosting the COM object.</param>
            <param name="classId">The CLSID of the COM object to create.</param>
            <returns>An instance of the COM object</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.ComClass.CreateInstanceFromFile``1(System.String,System.Guid)">
            <summary>
            Create an instance of a COM object from from a dll filename and its CLSID
            </summary>
            <typeparam name="T">A COM Interface implemented by the created COM object.</typeparam>
            <param name="filePath">The dll file hosting the COM object.</param>
            <param name="classId">The CLSID of the COM object to create.</param>
            <returns>An instance of the COM object</returns>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.STGC">
            <summary>
            The STGC enumeration constants specify the conditions for performing the commit operation in the <see cref="!:IStorage.Commit"/> and <see cref="!:IStream.Commit"/> methods.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGC.Default">
            <summary>You can specify this condition with <see cref="F:VisioForge.Libs.MediaFoundation.Interop.STGC.Consolidate"/>, or some combination of the other three flags in this list of elements. Use this value to increase the readability of code.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGC.Overwrite">
            <summary>The commit operation can overwrite existing data to reduce overall space requirements.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGC.OnlyIfCurrent">
            <summary>Prevents multiple users of a storage object from overwriting each other's changes.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGC.DangerouslyCommitMerelyToDiskCache">
            <summary>Commits the changes to a write-behind disk cache, but does not save the cache to the disk.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGC.Consolidate">
            <summary>Indicates that a storage should be consolidated after it is committed, resulting in a smaller file on disk.</summary>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.STATFLAG">
            <summary>
            The STATFLAG enumeration values indicate whether the method should try to return a name in the <see cref="F:System.Runtime.InteropServices.ComTypes.STATSTG.pwcsName"/> member of the <see cref="T:System.Runtime.InteropServices.ComTypes.STATSTG"/> structure. The values are used in the <see cref="!:IStorage.Stat"/>, and <see cref="!:IStream.Stat"/> methods to save memory when the pwcsName member is not required.
            </summary>
            <unmanaged>STATFLAG_*</unmanaged>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STATFLAG.Default">
            <summary>Requests that the statistics include the pwcsName member of the STATSTG structure.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STATFLAG.NoName">
            <summary>Requests that the statistics not include the pwcsName member of the STATSTG structure.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STATFLAG.NoOpen">
            <summary>Not implemented.</summary>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.STGTY">
            <summary>
            The STGTY enumeration values are used in the type member of the STATSTG structure to indicate the type of the storage element. A storage element is a storage object, a streamIndex object, or a byte-array object (LOCKBYTES).
            </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGTY.Storage">
            <summary>Indicates that the storage element is a storage object.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGTY.Stream">
            <summary>Indicates that the storage element is a streamIndex object.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGTY.LockBytes">
            <summary>Indicates that the storage element is a byte-array object.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.Interop.STGTY.Property">
            <summary>Indicates that the storage element is a property storage object.</summary>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.GCPin">
            <summary>
            A wrapper around <see cref="T:System.Runtime.InteropServices.GCHandle"/> that implement the <see cref="T:System.IDisposable"/> pattern.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.GCPin.#ctor(System.Object)">
            <summary>
            Pin an object so that it can't be collected or moved by the garbage-collector.
            </summary>
            <param name="pinned">The object to pin.</param>
        </member>
        <member name="P:VisioForge.Libs.MediaFoundation.Interop.GCPin.PinnedAddress">
            <summary>
            Gets the address of the pinned object.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.GCPin.Dispose">
            <summary>
            Release the pin on the object.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.GCPin`1">
            <summary>
            An implementation of <see cref="T:VisioForge.Libs.MediaFoundation.Interop.GCPin"/> for value types.
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <remarks>
            <p>The first use of this object (for a given type) can be very slow because of the creation of a dynamic methods. The next usages are a lot faster (about 3 times slower than using unsafe pointers).</p>
            <p>Warning: This object don't pin the value type at all so use it for the shortest time as possible.</p>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.GCPin`1.#ctor(`0@)">
            <summary>
            Get the address of a value type
            </summary>
            <param name="value">The value type to get the address of.</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.GCPin`1.GetPinnedAddress">
            <summary>
            Gets the address of the value type.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer">
            <summary>
            A class based on SafeBuffer that allow to easily read or write into unmanaged memory.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer.#ctor(System.IntPtr,System.UInt32,System.Boolean)">
            <summary>
            Create an instance of a MemoryBuffer around unmanaged memory.
            </summary>
            <param name="bufferPtr">The unmanaged memory pointer.</param>
            <param name="bufferSize">The unmanaged memory size, in bytes.</param>
            <param name="ownBuffer">If true, this instance is responsible to free the unmanaged memory when the object is diposed. Otherwise, the unmanaged memory is not freed.</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer.#ctor(System.UInt32)">
            <summary>
            Create an instance of a MemoryBuffer around unmanaged memory.
            </summary>
            <param name="bufferSize">The unmanaged memory size, in bytes.</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer.ReleaseHandle">
            <summary>
            Free the unmanaged memory.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.MFAsyncCallback">
            <summary>
            An implementation of the IMFAsyncCallback interface that wrap managed delegate
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.PropVariantExtensions.GetObject(VisioForge.Libs.MediaFoundation.Misc.ConstPropVariant)">
            <summary>
            Convert a PropVariant to a managed object
            </summary>
            <param name="variant">The PropVariant to convert.</param>
            <returns>A managed object corresponding to the given PropVariant or null if the PropVariant type is unsupported.</returns>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Interop.RuntimeCallableStream">
            <summary>
             An helper class that expose a managed Stream around a wrapped IStream COM interface.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Interop.TypeExtensions.IsComInterface(System.Type)">
            <summary>
            Determine if a type represents an interface decorated with the ComImport attribute.
            </summary>
            <param name="type">The type to test.</param>
            <returns>True if the type represents an interface decorated with the ComImport attribute; False otherwise.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.IsSupported">
            <summary>
            Indicate if Media Foundation is available by the computer executing that method.
            </summary>
            <returns>true if Media Foundation is supported; false otherwise</returns>
            <remarks>
            <para>
            On desktop OS, Media Foundation is only supported on Windows Vista or higher.
            On server OS, Media Foundation is only supported on Windows 2008 or higher as an installable feature.
            </para>
            <para>
            The following specific Windows editions don't support Media Foundation without installing the corresponding Media Feature Pack:
            <list type="bullet">
            <description>Windows N editions</description>
            <description>Windows KN editions</description>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Startup(VisioForge.Libs.MediaFoundation.MFStartup)">
            <summary>
            Initializes Media Foundation.
            </summary>
            <param name="startupFlags">Media Foundation startup flags.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Startup">
            <summary>
            Initializes Media Foundation.
            </summary>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Startup(System.Int32,VisioForge.Libs.MediaFoundation.MFStartup)">
            <summary>
            Initializes Media Foundation.
            </summary>
            <param name="version">Media Foundation version number (0x10070 for Windows Vista or 0x20070 for higher OS versions).</param>
            <param name="startupFlags">Media Foundation startup flags.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Shutdown">
            <summary>
            Shuts down the Media Foundation platform.
            </summary>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetSupportedMimeTypes(System.String[]@)">
            <summary>
            Retrieves the MIME types that are registered for the source resolver.
            </summary>
            <param name="supportedMimeTypes">Receives the the supported MIME types.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetSupportedSchemes(System.String[]@)">
            <summary>
            Retrieves the URL schemes that are registered for the source resolver.
            </summary>
            <param name="supportedSchemes">Receives the the supported URL schemes.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.LockPlatform">
            <summary>
            Blocks the <see cref="M:VisioForge.Libs.MediaFoundation.MF.Shutdown"/> method.
            </summary>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.UnlockPlatform">
            <summary>
            Unlocks the Media Foundation platform after it was locked by a call to the <see cref="M:VisioForge.Libs.MediaFoundation.MF.LockPlatform"/> method.
            </summary>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAttributes(System.Int32,VisioForge.Libs.MediaFoundation.IMFAttributes@)">
            <summary>
            Creates an empty attribute store.
            </summary>
            <param name="initialSize">The initial number of elements allocated for the attribute store.</param>
            <param name="attributes">Receives an instance of the IMFAttributes interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>The attribute store grows as needed.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAttributes(System.Int32)">
            <summary>
            Creates an empty attribute store.
            </summary>
            <param name="initialSize">The initial number of elements allocated for the attribute store.</param>
            <returns>Return an instance of the IMFAttributes interface</returns>
            <remarks>The attribute store grows as needed.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAttributes(System.Collections.Generic.KeyValuePair{System.Guid,System.Object}[])">
            <summary>
            Creates an attribute store and initialize it with values.
            </summary>
            <param name="initialValues">The initial values.</param>
            <returns>Return an instance of the IMFAttributes interface filled with the initial values</returns>
            <remarks>The attribute store grows as needed.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAttributes(System.Collections.Generic.IDictionary{System.Guid,System.Object})">
            <summary>
            Creates an attribute store and initialize it with values.
            </summary>
            <param name="initialValues">The initial values.</param>
            <returns>Return an instance of the IMFAttributes interface filled with the initial values</returns>
            <remarks>The attribute store grows as needed.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CloneAttributes(VisioForge.Libs.MediaFoundation.IMFAttributes)">
            <summary>
            Clone an attribute store.
            </summary>
            <param name="from">The source attribute store.</param>
            <returns>Returns a duplicated attribute store</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMFByteStreamOnStream(VisioForge.Libs.MediaFoundation.Misc.IStream,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a Microsoft Media Foundation byte stream that wraps a COM stream.
            </summary>
            <param name="comStream">The COM stream to be wrapped.</param>
            <param name="byteStream">Receives an instance of a IMFByteStream interface that wrap the COM stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMFByteStreamOnStream(VisioForge.Libs.MediaFoundation.Misc.IStream)">
            <summary>
            Creates a Microsoft Media Foundation byte stream that wraps a COM stream.
            </summary>
            <param name="comStream">The COM stream to be wrapped.</param>
            <returns>Returns an instance of a IMFByteStream interface that wrap the COM stream</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMFByteStreamOnStream(System.IO.Stream,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a Microsoft Media Foundation byte stream that wraps a managed stream.
            </summary>
            <param name="stream">The managed stream to be wrapped.</param>
            <param name="byteStream">Receives an instance of a IMFByteStream interface that wrap the managed stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMFByteStreamOnStream(System.IO.Stream)">
            <summary>
            Creates a Microsoft Media Foundation byte stream that wraps a managed stream.
            </summary>
            <param name="stream">The managed stream to be wrapped.</param>
            <returns>Returns an instance of a IMFByteStream interface that wrap the managed stream</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateStreamOnMFByteStream(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.Misc.IStream@)">
            <summary>
            Returns a COM stream that wraps a Microsoft Media Foundation byte stream.
            </summary>
            <param name="byteStream">The Media Foundation byte stream to be wrapped.</param>
            <param name="comStream">Receives an instance of a IStream interface that wrap the byte stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateStreamOnMFByteStream(VisioForge.Libs.MediaFoundation.IMFByteStream)">
            <summary>
            Returns a COM stream that wraps a Microsoft Media Foundation byte stream.
            </summary>
            <param name="byteStream">The Media Foundation byte stream to be wrapped.</param>
            <returns>Returns an instance of a IStream interface that wrap the byte stream</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateManagedStreamOnMFByteStream(VisioForge.Libs.MediaFoundation.IMFByteStream,System.IO.Stream@)">
            <summary>
            Returns a managed stream that wraps a Microsoft Media Foundation byte stream.
            </summary>
            <param name="byteStream">The Media Foundation byte stream to be wrapped.</param>
            <param name="stream">Receives a managed stream that wrap the byte stream.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateManagedStreamOnMFByteStream(VisioForge.Libs.MediaFoundation.IMFByteStream)">
            <summary>
            Returns a managed stream that wraps a Microsoft Media Foundation byte stream.
            </summary>
            <param name="byteStream">The Media Foundation byte stream to be wrapped.</param>
            <returns>Returns a managed stream that wrap the byte stream</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateFile(System.String,VisioForge.Libs.MediaFoundation.MFFileAccessMode,VisioForge.Libs.MediaFoundation.MFFileOpenMode,VisioForge.Libs.MediaFoundation.MFFileFlags,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a byte stream from a file.
            </summary>
            <param name="filePath">The file path and name.</param>
            <param name="accessMode">The requested access mode.</param>
            <param name="openMode">The behavior of the function if the file already exists or does not exist.</param>
            <param name="flags">The other file opening flags.</param>
            <param name="byteStream">Receives an instance to the IMFByteStream interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateFile(System.String,VisioForge.Libs.MediaFoundation.MFFileAccessMode,VisioForge.Libs.MediaFoundation.MFFileOpenMode,VisioForge.Libs.MediaFoundation.MFFileFlags)">
            <summary>
            Creates a byte stream from a file.
            </summary>
            <param name="filePath">The file path and name.</param>
            <param name="accessMode">The requested access mode.</param>
            <param name="openMode">The behavior of the function if the file already exists or does not exist.</param>
            <param name="flags">The other file opening flags.</param>
            <returns>Returns an instance to the IMFByteStream interface</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateFileAsync(System.String,VisioForge.Libs.MediaFoundation.MFFileAccessMode,VisioForge.Libs.MediaFoundation.MFFileOpenMode,VisioForge.Libs.MediaFoundation.MFFileFlags)">
            <summary>
            Asynchronously creates a byte stream from a file.
            </summary>
            <param name="filePath">The file path and name.</param>
            <param name="accessMode">The requested access mode.</param>
            <param name="openMode">The behavior of the function if the file already exists or does not exist.</param>
            <param name="flags">The other file opening flags.</param>
            <returns>A task responsible of the byte stream creation</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateFileAsync(System.String,VisioForge.Libs.MediaFoundation.MFFileAccessMode,VisioForge.Libs.MediaFoundation.MFFileOpenMode,VisioForge.Libs.MediaFoundation.MFFileFlags,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a byte stream from a file with cancellation.
            </summary>
            <param name="filePath">The file path and name.</param>
            <param name="accessMode">The requested access mode.</param>
            <param name="openMode">The behavior of the function if the file already exists or does not exist.</param>
            <param name="flags">The other file opening flags.</param>
            <param name="token">A cancellation token to end the asynchronous byte stream creation.</param>
            <returns>A task responsible of the byte stream creation</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTempFile(VisioForge.Libs.MediaFoundation.MFFileAccessMode,VisioForge.Libs.MediaFoundation.MFFileOpenMode,VisioForge.Libs.MediaFoundation.MFFileFlags,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a byte stream that is backed by a temporary local file.
            </summary>
            <param name="accessMode">The requested access mode.</param>
            <param name="openMode">The behavior of the function if the file already exists or does not exist.</param>
            <param name="flags">The other file opening flags.</param>
            <param name="byteStream">Receives an instance to the IMFByteStream interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTempFile(VisioForge.Libs.MediaFoundation.MFFileAccessMode,VisioForge.Libs.MediaFoundation.MFFileOpenMode,VisioForge.Libs.MediaFoundation.MFFileFlags)">
            <summary>
            Creates a byte stream that is backed by a temporary local file.
            </summary>
            <param name="accessMode">The requested access mode.</param>
            <param name="openMode">The behavior of the function if the file already exists or does not exist.</param>
            <param name="flags">The other file opening flags.</param>
            <returns>Returns an instance to the IMFByteStream interface</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMFByteStreamWrapper(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a wrapper for a byte stream.
            </summary>
            <param name="stream">An instance of the original byte stream.</param>
            <param name="streamWrapper">Receives an instance of a byte stream wrapper.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>The returned wrapper call directly through to the original byte stream methods, except for the IMFByteStream::Close method. Calling Close on the wrapper closes the wrapper object, but leaves the original byte stream open.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Creates an empty media type.
            </summary>
            <param name="mediaType">Receives an instance to the IMFMediaType interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaType">
            <summary>
            Creates an empty media type.
            </summary>
            <returns>Returns an instance to the IMFMediaType interface</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWaveFormatExFromMFMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.MFWaveFormatExConvertFlags,VisioForge.Libs.MediaFoundation.Misc.WaveFormatEx@)">
            <summary>
            Converts a Media Foundation audio media type to a WaveFormatEx structure.
            </summary>
            <param name="mediaType">An instance of the media type.</param>
            <param name="flags">WaveFormatEx type.</param>
            <param name="waveFormatEx">Receives the converted WaveFormatEx structure.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWaveFormatExFromMFMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.WaveFormatEx@)">
            <summary>
            Converts a Media Foundation audio media type to a WaveFormatEx structure.
            </summary>
            <param name="mediaType">An instance of the media type.</param>
            <param name="waveFormatEx">Receives the converted WaveFormatEx structure.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>This method create a normal WaveFormatEx structure (ie. not an extensible one)</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromMFVideoFormat(VisioForge.Libs.MediaFoundation.MFVideoFormat,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Create a media type from an MFVideoFormat structure.
            </summary>
            <param name="videoFormat">An MFVideoFormat structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="mediaType">Receives an instance of the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromMFVideoFormat(VisioForge.Libs.MediaFoundation.MFVideoFormat)">
            <summary>
            Create a media type from an MFVideoFormat structure.
            </summary>
            <param name="videoFormat">An MFVideoFormat structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <returns>Returns an instance of the media type</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromAMMediaType(VisioForge.Libs.MediaFoundation.Misc.AMMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Create a media type from an AMMediaType structure.
            </summary>
            <param name="amMediaType">An AMMediaType structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="mediaType">Receives an instance of the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromAMMediaType(VisioForge.Libs.MediaFoundation.Misc.AMMediaType)">
            <summary>
            Create a media type from an AMMediaType structure.
            </summary>
            <param name="amMediaType">An AMMediaType structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <returns>Returns an instance of the media type</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromVideoInfoHeader(VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader,System.Guid,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Create a media type from an VideoInfoHeader structure.
            </summary>
            <param name="vih">An VideoInfoHeader structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subType">The video subtype.</param>
            <param name="mediaType">Receives an instance of the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromVideoInfoHeader(VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader,System.Guid)">
            <summary>
            Create a media type from an VideoInfoHeader structure.
            </summary>
            <param name="vih">An VideoInfoHeader structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subType">The video subtype.</param>
            <returns>Returns an instance of the media type</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromVideoInfoHeader2(VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader2,System.Guid,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Create a media type from an VideoInfoHeader2 structure.
            </summary>
            <param name="vih2">An VideoInfoHeader2 structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subType">The video subtype.</param>
            <param name="mediaType">Receives an instance of the media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromVideoInfoHeader2(VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader2,System.Guid)">
            <summary>
            Create a media type from an VideoInfoHeader2 structure.
            </summary>
            <param name="vih2">An VideoInfoHeader2 structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subType">The video subtype.</param>
            <returns>Returns an instance of the media type</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMFVideoFormatFromMFMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.MFVideoFormat@)">
            <summary>
            Creates an MFVideoFormat structure from a video media type.
            </summary>
            <param name="mediaType">An instance of a video media type.</param>
            <param name="videoFormat">Receives a MFVideoFormat structure.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetUncompressedVideoFormat(VisioForge.Libs.MediaFoundation.MFVideoFormat)">
            <summary>
            Returns the FOURCC or D3DFORMAT value for an uncompressed video format.
            </summary>
            <param name="videoFormat">A MFVideoFormat structure.</param>
            <returns>Returns a FOURCC or D3DFORMAT value that identifies the video format.</returns>
            <remarks>If the video format is compressed or not recognized, the return value is zero</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitAMMediaTypeFromMFMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Guid,VisioForge.Libs.MediaFoundation.Misc.AMMediaType)">
            <summary>
            Initializes a DirectShow AMMediaType structure from a Media Foundation media type.
            </summary>
            <param name="mediaType">An instance of the media type to convert.</param>
            <param name="guidFormatBlockType">The format type GUID.</param>
            <param name="amMediaType">An AMMediaType structure to initialize.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If the value of <paramref name="guidFormatBlockType"/> is Guid.Empty, the function attempts to deduce the correct format block, based on the major type and subtype</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAMMediaTypeFromMFMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Guid,VisioForge.Libs.MediaFoundation.Misc.AMMediaType@)">
            <summary>
            Creates a DirectShow AMMediaType structure from a Media Foundation media type.
            </summary>
            <param name="mediaType">An instance of the media type to convert.</param>
            <param name="guidFormatBlockType">The format type GUID.</param>
            <param name="amMediaType">Receives an AMMediaType structure.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If the value of <paramref name="guidFormatBlockType"/> is Guid.Empty, the function attempts to deduce the correct format block, based on the major type and subtype</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromWaveFormatEx(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.WaveFormatEx)">
            <summary>
            Initializes a media type from a WaveFormatEx structure. 
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="waveFormatEx">A WaveFormatEx structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromMFVideoFormat(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.MFVideoFormat)">
            <summary>
            Initializes a media type from a MFVideoFormat structure. 
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="videoFormat">A MFVideoFormat structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromAMMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.AMMediaType)">
            <summary>
            Initializes a media type from a AMMediaType structure. 
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="amMediaType">An AMMediaType structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromVideoInfoHeader(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader,System.Guid)">
            <summary>
            Initializes a media type from a VideoInfoHeader structure.
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="vih">A VideoInfoHeader structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subType">The format type GUID.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If the value of <paramref name="subType"/> is Guid.Empty, the function attempts to deduce the correct format block</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromVideoInfoHeader2(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.VideoInfoHeader2,System.Guid)">
            <summary>
            Initializes a media type from a VideoInfoHeader2 structure.
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="vih">A VideoInfoHeader2 structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subType">The format type GUID.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If the value of <paramref name="subType"/> is Guid.Empty, the function attempts to deduce the correct format block</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.UnwrapMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Retrieves a media type that was wrapped in another media type by the <see cref="M:VisioForge.Libs.MediaFoundation.MF.WrapMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Guid,System.Guid,VisioForge.Libs.MediaFoundation.IMFMediaType@)"/> method.
            </summary>
            <param name="wrap">An instance of the IMFMediaType interface of the media type that was retrieved by <see cref="M:VisioForge.Libs.MediaFoundation.MF.WrapMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Guid,System.Guid,VisioForge.Libs.MediaFoundation.IMFMediaType@)"/>.</param>
            <param name="original">Receives an instance to the IMFMediaType interface of the original media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.WrapMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Guid,System.Guid,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Creates a media type that wraps another media type.
            </summary>
            <param name="original">An instance of the IMFMediaType interface of the media type to wrap in a new media type.</param>
            <param name="majorType">A Guid that specifies the major type for the new media type.</param>
            <param name="subType">A Guid that specifies the subtype for the new media type.</param>
            <param name="wrap">Receives an instance of the IMFMediaType interface of the new media type that wraps the original media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoMediaTypeFromBitMapInfoHeaderEx(VisioForge.Libs.MediaFoundation.Misc.BitmapInfoHeader,System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.MFVideoInterlaceMode,VisioForge.Libs.MediaFoundation.MFVideoFlags,System.Int32,System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.IMFVideoMediaType@)">
            <summary>
            Creates a video media type from a BitmapInfoHeader structure.
            </summary>
            <param name="bitMapInfoHeader">The BitmapInfoHeader structure to convert.</param>
            <param name="pixelAspectRatioX">The X dimension of the pixel aspect ratio.</param>
            <param name="pixelAspectRatioY">The Y dimension of the pixel aspect ratio.</param>
            <param name="interlaceMode">A member of the MFVideoInterlaceMode enumeration, specifying how the video is interlaced.</param>
            <param name="videoFlags">A bitwise OR of flags from the MFVideoFlags enumeration.</param>
            <param name="framesPerSecondNumerator">The numerator of the frame rate in frames per second.</param>
            <param name="framesPerSecondDenominator">The denominator of the frame rate in frames per second.</param>
            <param name="maxBitRate">The approximate data rate of the video stream, in bits per second. If the rate is unknown, set this parameter to zero.</param>
            <param name="videoMediaType">Receives an instance of the IMFVideoMediaType interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaTypeFromRepresentation(System.Guid,System.IntPtr,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Creates a Media Foundation media type from another format representation.
            </summary>
            <param name="guidRepresentation">A Guid that specifies which format representation to convert.</param>
            <param name="representationPtr">Pointer to a buffer that contains the format representation to convert. The layout of the buffer depends on the value of <paramref name="guidRepresentation"/>.</param>
            <param name="mediaType">Receives an instance of the IMFMediaType interface. </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CompareFullToPartialMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Compares a full media type to a partial media type.
            </summary>
            <param name="fullMediaType">An instance of the IMFMediaType interface of the full media type.</param>
            <param name="partialMediaType">An instance of the IMFMediaType interface of the partial media type.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromMPEG1VideoInfo(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.Mpeg1VideoInfo,System.Guid)">
            <summary>
            Initializes a media type from a DirectShow Mpeg1VideoInfo structure.
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="mpeg1VideoInfo">A Mpeg1VideoInfo structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subtype">The format type GUID.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If the value of <paramref name="subType"/> is Guid.Empty, the function attempts to deduce the correct format block.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InitMediaTypeFromMPEG2VideoInfo(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Mpeg2VideoInfo,System.Guid)">
            <summary>
            Initializes a media type from a DirectShow Mpeg2VideoInfo structure.
            </summary>
            <param name="mediaType">An instance of the media type to initialize.</param>
            <param name="mpeg2VideoInfo">A Mpeg2VideoInfo structure that describes the media type. The caller must fill in the structure members before calling this function.</param>
            <param name="subtype">The format type GUID.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If the value of <paramref name="subType"/> is Guid.Empty, the function attempts to deduce the correct format block.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CloneMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Clone a media type.
            </summary>
            <param name="from">The source media type.</param>
            <returns>Returns a duplicated media type.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePropertyStore(VisioForge.Libs.MediaFoundation.Misc.IPropertyStore@)">
            <summary>
            Creates an in-memory property store.
            </summary>
            <param name="propertyStore">Receives an instance of an empty property store.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePropertyStore(VisioForge.Libs.MediaFoundation.Misc.INamedPropertyStore@)">
            <summary>
            Creates an in-memory property store.
            </summary>
            <param name="propertyStore">Receives an instance of an empty property store.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePropertyStore">
            <summary>
            Creates an in-memory property store.
            </summary>
            <returns>Returns an instance of an empty property store.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceResolver(VisioForge.Libs.MediaFoundation.IMFSourceResolver@)">
            <summary>
            Creates the source resolver, which is used to create a media source from a URL or byte stream.
            </summary>
            <param name="sourceResolver">Receives an instance of the source resolver's IMFSourceResolver interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceResolver">
            <summary>
            Creates the source resolver, which is used to create a media source from a URL or byte stream.
            </summary>
            <returns>Returns an instance of the source resolver's IMFSourceResolver interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDirectShowSourceResolver">
            <summary>
            Creates the DirectShow source resolver.
            </summary>
            <returns>Returns an instance of the DirectShow source resolver.</returns>
            <remarks>
            <para>The DirectShow source resolver is an undocumented component of Windows Media Player that is available since Windows Vista. Use it at your own risk.</para>
            <para>This source resolver can wrap a DirectShow source filter as a Media Foundation media source. This allow reading file formats not supported natively by Media Foundation but by DirectShow.</para>
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAsyncResult(System.Object,VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object,VisioForge.Libs.MediaFoundation.IMFAsyncResult@)">
            <summary>
            Creates an asynchronous result object. Use this function if you are implementing an asynchronous method.
            </summary>
            <param name="storedObject">The object to store in the asynchronous result.</param>
            <param name="callback">An instance of the IMFAsyncCallback interface that is implemented by the caller of the asynchronous method.</param>
            <param name="state">A state object that is provided by the caller of the asynchronous method. This parameter can be null.</param>
            <param name="asyncResult">Receives an instance of the IMFAsyncResult interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.InvokeCallback(VisioForge.Libs.MediaFoundation.IMFAsyncResult)">
            <summary>
            Invokes a callback method to complete an asynchronous operation.
            </summary>
            <param name="asyncResult">An instance of the IMFAsyncResult interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePresentationDescriptor(VisioForge.Libs.MediaFoundation.IMFStreamDescriptor[],VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor@)">
            <summary>
            Creates a presentation descriptor.
            </summary>
            <param name="streamDescriptors">Array of IMFStreamDescriptor interface. Each instance represents a stream descriptor for one stream in the presentation.</param>
            <param name="presentationDescriptor">Receives an instance of an IMFPresentationDescriptor interface of the presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.SerializePresentationDescriptor(VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor,VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer@)">
            <summary>
            Serializes a presentation descriptor to a memory buffer.
            </summary>
            <param name="presentationDescriptor">A valid IMFPresentationDescriptor instance.</param>
            <param name="buffer">Receives a memory buffer containing the serialized presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.SerializePresentationDescriptor(VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor,System.Byte[]@)">
            <summary>
            Serializes a presentation descriptor to a byte array.
            </summary>
            <param name="presentationDescriptor">A valid IMFPresentationDescriptor instance.</param>
            <param name="buffer">Receives a byte array containing the serialized presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.DeserializePresentationDescriptor(VisioForge.Libs.MediaFoundation.Interop.MemoryBuffer,VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor@)">
            <summary>
            Deserializes a presentation descriptor from a memory buffer.
            </summary>
            <param name="buffer">A memory buffer that contains the serialized presentation descriptor.</param>
            <param name="presentationDescriptor">Receives an IMFPresentationDescriptor interface of the presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.DeserializePresentationDescriptor(System.Byte[],VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor@)">
            <summary>
            Deserializes a presentation descriptor from a byte array.
            </summary>
            <param name="buffer">A byte array that contains the serialized presentation descriptor.</param>
            <param name="presentationDescriptor">Receives an IMFPresentationDescriptor interface of the presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePresentationDescriptorFromASFProfile(VisioForge.Libs.MediaFoundation.IMFASFProfile,VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor@)">
            <summary>
            Creates a presentation descriptor from an ASF profile object.
            </summary>
            <param name="profile">The IMFASFProfile interface of the ASF profile object.</param>
            <param name="presentationDescriptor">Receives an IMFPresentationDescriptor interface of the presentation descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMemoryBuffer(System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Allocates system memory and creates a media buffer to manage it.
            </summary>
            <param name="maxLength">Size of the buffer, in bytes.</param>
            <param name="buffer">Receives an instance of the IMFMediaBuffer interface of the media buffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMemoryBuffer(System.Int32)">
            <summary>
            Allocates system memory and creates a media buffer to manage it.
            </summary>
            <param name="maxLength">Size of the buffer, in bytes.</param>
            <returns>Returns an instance of the IMFMediaBuffer interface of the media buffer.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAlignedMemoryBuffer(System.Int32,VisioForge.Libs.MediaFoundation.MemoryAlignment,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Allocates system memory with a specified byte alignment and creates a media buffer to manage the memory.
            </summary>
            <param name="maxLength">Size of the buffer, in bytes.</param>
            <param name="aligment">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.MemoryAlignment"/> enumeration that define the required memory alignment.</param>
            <param name="buffer">Receives an instance of the IMFMediaBuffer interface of the media buffer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAlignedMemoryBuffer(System.Int32,VisioForge.Libs.MediaFoundation.MemoryAlignment)">
            <summary>
            Allocates system memory with a specified byte alignment and creates a media buffer to manage the memory.
            </summary>
            <param name="maxLength">Size of the buffer, in bytes.</param>
            <param name="aligment">A member of the <see cref="T:VisioForge.Libs.MediaFoundation.MemoryAlignment"/> enumeration that define the required memory alignment.</param>
            <returns>Returns an instance of the IMFMediaBuffer interface of the media buffer.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaBufferWrapper(VisioForge.Libs.MediaFoundation.IMFMediaBuffer,System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer that wraps an existing media buffer. The new media buffer points to the same memory as the original media buffer, or to an offset from the start of the memory.
            </summary>
            <param name="buffer">An instance of the IMFMediaBuffer interface of the original media buffer.</param>
            <param name="offset">The start of the new buffer, as an offset in bytes from the start of the original buffer.</param>
            <param name="length">The size of the new buffer. The value of <paramref name="offset"/> + <paramref name="length"/> must be less than or equal to the size of valid data the original buffer.</param>
            <param name="wrappedBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaBufferWrapper(VisioForge.Libs.MediaFoundation.IMFMediaBuffer,System.Int32,System.Int32)">
            <summary>
            Creates a media buffer that wraps an existing media buffer. The new media buffer points to the same memory as the original media buffer, or to an offset from the start of the memory.
            </summary>
            <param name="buffer">An instance of the IMFMediaBuffer interface of the original media buffer.</param>
            <param name="offset">The start of the new buffer, as an offset in bytes from the start of the original buffer.</param>
            <param name="length">The size of the new buffer. The value of <paramref name="offset"/> + <paramref name="length"/> must be less than or equal to the size of valid data the original buffer.</param>
            <returns>Returns an instance of the IMFMediaBuffer interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWICBitmapBuffer(System.Guid,System.Object,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer object that manages a Windows Imaging Component (WIC) bitmap.
            </summary>
            <param name="riid">Set this parameter to {00000121-a8f2-4877-ba0a-fd2b6645fb94} (IID of IWICBitmap).</param>
            <param name="wicBitmap">An instance of the bitmap surface. The bitmap surface must be a WIC bitmap that exposes the IWICBitmap interface.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWICBitmapBuffer(System.Object,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer object that manages a Windows Imaging Component (WIC) bitmap.
            </summary>
            <param name="wicBitmap">An instance of the bitmap surface. The bitmap surface must be a WIC bitmap that exposes the IWICBitmap interface.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWICBitmapBuffer(System.IntPtr,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer object that manages a Windows Imaging Component (WIC) bitmap.
            </summary>
            <param name="wicBitmap">A pointer to the bitmap surface. The bitmap surface must be a WIC bitmap that exposes the IWICBitmap interface.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Create2DMediaBuffer(System.Int32,System.Int32,System.Int32,System.Boolean,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a system-memory buffer object to hold 2D image data.
            </summary>
            <param name="width">Width of the image, in pixels.</param>
            <param name="height">Height of the image, in pixels.</param>
            <param name="fourCC">A FOURCC code or D3DFORMAT value that specifies the video format.</param>
            <param name="bottomUp">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with DirectX.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Create2DMediaBuffer(System.Int32,System.Int32,System.Int32,System.Boolean,VisioForge.Libs.MediaFoundation.IMF2DBuffer@)">
            <summary>
            Creates a system-memory buffer object to hold 2D image data.
            </summary>
            <param name="width">Width of the image, in pixels.</param>
            <param name="height">Height of the image, in pixels.</param>
            <param name="fourCC">A FOURCC code or D3DFORMAT value that specifies the video format.</param>
            <param name="bottomUp">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with DirectX.</param>
            <param name="mediaBuffer">Receives an instance of the IMF2DBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Create2DMediaBuffer(System.Int32,System.Int32,System.Int32,System.Boolean,VisioForge.Libs.MediaFoundation.IMF2DBuffer2@)">
            <summary>
            Creates a system-memory buffer object to hold 2D image data.
            </summary>
            <param name="width">Width of the image, in pixels.</param>
            <param name="height">Height of the image, in pixels.</param>
            <param name="fourCC">A FOURCC code or D3DFORMAT value that specifies the video format.</param>
            <param name="bottomUp">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with DirectX.</param>
            <param name="mediaBuffer">Receives an instance of the IMF2DBuffer2 interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Create2DMediaBuffer(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a system-memory buffer object to hold 2D image data.
            </summary>
            <param name="width">Width of the image, in pixels.</param>
            <param name="height">Height of the image, in pixels.</param>
            <param name="fourCC">A FOURCC code or D3DFORMAT value that specifies the video format.</param>
            <param name="bottomUp">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with DirectX.</param>
            <returns>Returns an instance of the IMF2DBuffer2 interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaBufferFromMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.Int64,System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Allocates a system-memory buffer that is optimal for a specified media type.
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface of the media type.</param>
            <param name="duration">The sample duration. This value is required for audio formats.</param>
            <param name="minLength">The minimum size of the buffer, in bytes. The actual buffer size might be larger. Specify zero to allocate the default buffer size for the media type.</param>
            <param name="minAlignment">The minimum memory alignment for the buffer. Specify zero to use the default memory alignment.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaBufferFromMediaType(VisioForge.Libs.MediaFoundation.IMFMediaType,System.TimeSpan,System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Allocates a system-memory buffer that is optimal for a specified media type.
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface of the media type.</param>
            <param name="duration">The sample duration. This value is required for audio formats.</param>
            <param name="minLength">The minimum size of the buffer, in bytes. The actual buffer size might be larger. Specify zero to allocate the default buffer size for the media type.</param>
            <param name="minAlignment">The minimum memory alignment for the buffer. Specify zero to use the default memory alignment.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDXGISurfaceBuffer(System.Object,System.Int32,System.Boolean,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer to manage a Microsoft DirectX Graphics Infrastructure (DXGI) surface.
            </summary>
            <param name="surface">An instance of the DXGI surface.</param>
            <param name="subresourceIndex">The zero-based index of a subresource of the surface. The media buffer object is associated with this subresource.</param>
            <param name="bottomUpWhenLinear">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with Direct3D.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDXGISurfaceBuffer(System.IntPtr,System.Int32,System.Boolean,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer to manage a Microsoft DirectX Graphics Infrastructure (DXGI) surface.
            </summary>
            <param name="surface">A pointer to the DXGI surface.</param>
            <param name="subresourceIndex">The zero-based index of a subresource of the surface. The media buffer object is associated with this subresource.</param>
            <param name="bottomUpWhenLinear">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with Direct3D.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDXSurfaceBuffer(System.Object,System.Boolean,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer object that manages a Direct3D 9 surface. 
            </summary>
            <param name="surface">An instance of the Direct3D 9 surface.</param>
            <param name="bottomUpWhenLinear">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with Direct3D.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDXSurfaceBuffer(System.IntPtr,System.Boolean,VisioForge.Libs.MediaFoundation.IMFMediaBuffer@)">
            <summary>
            Creates a media buffer object that manages a Direct3D 9 surface. 
            </summary>
            <param name="surface">A pointer to the Direct3D 9 surface.</param>
            <param name="bottomUpWhenLinear">If true, the buffer's IMF2DBuffer.ContiguousCopyTo method copies the buffer into a bottom-up format. The bottom-up format is compatible with GDI for uncompressed RGB images. If this parameter is false, the ContiguousCopyTo method copies the buffer into a top-down format, which is compatible with Direct3D.</param>
            <param name="mediaBuffer">Receives an instance of the IMFMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetTimerPeriodicity(System.Int32@)">
            <summary>
            Retrieves the timer interval for the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AddPeriodicCallback(VisioForge.Libs.MediaFoundation.MFExtern.MFPERIODICCALLBACK,System.Object,System.Int32@)"/> method.
            </summary>
            <param name="periodicity">Receives the timer interval, in milliseconds.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetTimerPeriodicity(System.TimeSpan@)">
            <summary>
            Retrieves the timer interval for the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AddPeriodicCallback(VisioForge.Libs.MediaFoundation.MFExtern.MFPERIODICCALLBACK,System.Object,System.Int32@)"/> method.
            </summary>
            <param name="periodicity">Receives the timer interval.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetSystemTime">
            <summary>
            Returns the system time.
            </summary>
            <returns>Returns the system time.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.AddPeriodicCallback(VisioForge.Libs.MediaFoundation.MFExtern.MFPERIODICCALLBACK,System.Object,System.Int32@)">
            <summary>
            Sets a callback function to be called at a fixed interval.
            </summary>
            <param name="callback">An instance of the the callback function as a delegate.</param>
            <param name="context">A caller-provided context object or null. This parameter is passed to the callback function.</param>
            <param name="key">Receives a key that can be used to cancel the callback. To cancel the callback, call <see cref="M:VisioForge.Libs.MediaFoundation.MF.RemovePeriodicCallback(System.Int32)"/> and pass this key as the key parameter.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.AddPeriodicCallback``1(System.Action{``0},``0,System.Int32@)">
            <summary>
            Sets a callback function to be called at a fixed interval.
            </summary>
            <typeparam name="T">Type of the context object</typeparam>
            <param name="action">An action that have to be called at a fixed interval.</param>
            <param name="context">A caller-provided context object or null. This parameter is passed to the callback function.</param>
            <param name="key">Receives a key that can be used to cancel the callback. To cancel the callback, call <see cref="M:VisioForge.Libs.MediaFoundation.MF.RemovePeriodicCallback(System.Int32)"/> and pass this key as the key parameter.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.RemovePeriodicCallback(System.Int32)">
            <summary>
            Cancels a callback function that was set by the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AddPeriodicCallback(VisioForge.Libs.MediaFoundation.MFExtern.MFPERIODICCALLBACK,System.Object,System.Int32@)"/> method.
            </summary>
            <param name="key">Key that identifies the callback. This value is retrieved by the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AddPeriodicCallback(VisioForge.Libs.MediaFoundation.MFExtern.MFPERIODICCALLBACK,System.Object,System.Int32@)"/> method.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.AllocateWorkQueue(System.Int32@)">
            <summary>
            Creates a new work queue.
            </summary>
            <param name="workQueue">Receives an identifier for the work queue.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.AllocateWorkQueueEx(VisioForge.Libs.MediaFoundation.MFASYNC_WORKQUEUE_TYPE,System.Int32@)">
            <summary>
            Creates a new work queue. This function extends the capabilities of the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AllocateWorkQueue(System.Int32@)"/> method by making it possible to create a work queue that has a message loop.
            </summary>
            <param name="workQueueType">A member of the MFASYNC_WORKQUEUE_TYPE enumeration, specifying the type of work queue to create.</param>
            <param name="workQueue">Receives an identifier for the work queue that was created.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.LockWorkQueue(System.Int32)">
            <summary>
            Locks a work queue.
            </summary>
            <param name="workQueue">The identifier for the work queue. The identifier is returned by the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AllocateWorkQueue(System.Int32@)"/> method.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.UnlockWorkQueue(System.Int32)">
            <summary>
            Unlocks a work queue.
            </summary>
            <param name="workQueue">The identifier for the work queue. The identifier is returned by the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AllocateWorkQueue(System.Int32@)"/> method.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.PutWorkItem(System.Int32,VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object)">
            <summary>
            Puts an asynchronous operation on a work queue.
            </summary>
            <param name="workQueue">The identifier for the work queue. This value can specify one of the standard Media Foundation work queues, or a work queue created by the application.</param>
            <param name="callback">An instance of the IMFAsyncCallback interface.</param>
            <param name="state">A state object defined by the caller. This parameter can be null. You can use this object to hold state information.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.PutWorkItemEx(System.Int32,VisioForge.Libs.MediaFoundation.IMFAsyncResult)">
            <summary>
            Puts an asynchronous operation on a work queue.
            </summary>
            <param name="workQueue">The identifier for the work queue. This value can specify one of the standard Media Foundation work queues, or a work queue created by the application.</param>
            <param name="result">An instance of the IMFAsyncResult interface of an asynchronous result object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.PutWorkItem2(System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object)">
            <summary>
            Puts an asynchronous operation on a work queue, with a specified priority.
            </summary>
            <param name="workQueue">he identifier for the work queue. This value can specify one of the standard Media Foundation work queues, or a work queue created by the application.</param>
            <param name="priority">The priority of the work item. Work items are performed in order of priority.</param>
            <param name="callback">An instance of the IMFAsyncCallback interface.</param>
            <param name="state">A state object defined by the caller. This parameter can be null. You can use this object to hold state information.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.PutWorkItemEx2(System.Int32,System.Int32,VisioForge.Libs.MediaFoundation.IMFAsyncResult)">
            <summary>
            Puts an asynchronous operation on a work queue, with a specified priority.
            </summary>
            <param name="workQueue">The identifier for the work queue. This value can specify one of the standard Media Foundation work queues, or a work queue created by the application.</param>
            <param name="priority">The priority of the work item. Work items are performed in order of priority.</param>
            <param name="result">An instance of the IMFAsyncResult interface of an asynchronous result object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItem(VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object,System.Int64,System.Int64@)">
            <summary>
            Schedules an asynchronous operation to be completed after a specified interval.
            </summary>
            <param name="callback">An instance of the IMFAsyncCallback interface.</param>
            <param name="state">A state object defined by the caller. This parameter can be null. You can use this object to hold state information.</param>
            <param name="timeout">Time-out interval, in milliseconds. Set this parameter to a negative value. The callback is invoked after −Timeout milliseconds. For example, if Timeout is −5000, the callback is invoked after 5000 milliseconds.</param>
            <param name="key">Receives a key that can be used to cancel the timer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItem(VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object,System.TimeSpan,System.Int64@)">
            <summary>
            Schedules an asynchronous operation to be completed after a specified interval.
            </summary>
            <param name="callback">An instance of the IMFAsyncCallback interface.</param>
            <param name="state">A state object defined by the caller. This parameter can be null. You can use this object to hold state information.</param>
            <param name="timeout">Time-out interval. Set this parameter to a negative value. The callback is invoked after −Timeout milliseconds. For example, if Timeout is −5000, the callback is invoked after 5000 milliseconds.</param>
            <param name="key">Receives a key that can be used to cancel the timer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItemEx(VisioForge.Libs.MediaFoundation.IMFAsyncResult,System.Int64,System.Int64@)">
            <summary>
            Schedules an asynchronous operation to be completed after a specified interval.
            </summary>
            <param name="result">An instance of the IMFAsyncResult interface of an asynchronous result object.</param>
            <param name="timeout">Time-out interval, in milliseconds. Set this parameter to a negative value. The callback is invoked after −Timeout milliseconds. For example, if Timeout is −5000, the callback is invoked after 5000 milliseconds.</param>
            <param name="key">Receives a key that can be used to cancel the timer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItemEx(VisioForge.Libs.MediaFoundation.IMFAsyncResult,System.TimeSpan,System.Int64@)">
            <summary>
            Schedules an asynchronous operation to be completed after a specified interval.
            </summary>
            <param name="result">An instance of the IMFAsyncResult interface of an asynchronous result object.</param>
            <param name="timeout">Time-out interval. Set this parameter to a negative value. The callback is invoked after −Timeout milliseconds. For example, if Timeout is −5000, the callback is invoked after 5000 milliseconds.</param>
            <param name="key">Receives a key that can be used to cancel the timer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CancelWorkItem(System.Int64)">
            <summary>
            Attempts to cancel an asynchronous operation that was scheduled with <see cref="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItem(VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object,System.Int64,System.Int64@)"/> or <see cref="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItemEx(VisioForge.Libs.MediaFoundation.IMFAsyncResult,System.Int64,System.Int64@)"/>.
            </summary>
            <param name="key">The key that was received in the key parameter of the <see cref="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItem(VisioForge.Libs.MediaFoundation.IMFAsyncCallback,System.Object,System.Int64,System.Int64@)"/>, <see cref="M:VisioForge.Libs.MediaFoundation.MF.ScheduleWorkItemEx(VisioForge.Libs.MediaFoundation.IMFAsyncResult,System.Int64,System.Int64@)"/>, or <see cref="M:VisioForge.Libs.MediaFoundation.MF.PutWaitingWorkItem(System.IntPtr,System.Int32,VisioForge.Libs.MediaFoundation.IMFAsyncResult,System.Int64@)"/> methods.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetWorkQueueMMCSSClass(System.Int32,System.String@)">
            <summary>
            Retrieves the Multimedia Class Scheduler Service (MMCSS) class currently associated with this work queue.
            </summary>
            <param name="workQueueId">Identifier for the work queue. The identifier is retrieved by the <see cref="M:VisioForge.Libs.MediaFoundation.MF.AllocateWorkQueue(System.Int32@)"/> method.</param>
            <param name="className">Receives the name of the MMCSS class.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePMPMediaSession(VisioForge.Libs.MediaFoundation.MFPMPSessionCreationFlags,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFMediaSession@,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an instance of the Media Session inside a Protected Media Path (PMP) process.
            </summary>
            <param name="creationFlags">A member of the MFPMPSessionCreationFlags enumeration that specifies how to create the session object. </param>
            <param name="configuration">An instance of the IMFAttributes interface. This parameter can be null.</param>
            <param name="mediaSession">Receives an instance of the PMP Media Session's IMFMediaSession interface.</param>
            <param name="enablerActivate">Receives an instance of the IMFActivate interface or the value null. </param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePMPServer(VisioForge.Libs.MediaFoundation.MFPMPSessionCreationFlags,VisioForge.Libs.MediaFoundation.IMFPMPServer@)">
            <summary>
            Creates the protected media path (PMP) server object.
            </summary>
            <param name="creationFlags">A member of the MFPMPSessionCreationFlags enumeration that specifies how to create the PMP session.</param>
            <param name="pmpServer">Receives an instance of the IMFPMPServer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.RequireProtectedEnvironment(VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor)">
            <summary>
            Queries whether a media presentation requires the Protected Media Path (PMP).
            </summary>
            <param name="presentationDescriptor">An instance of the IMFPresentationDescriptor interface of a presentation descriptor. The presentation descriptor is created by the media source, and describes the presentation.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFContentInfo(VisioForge.Libs.MediaFoundation.IMFASFContentInfo@)">
            <summary>
            Creates the ASF Header Object object.
            </summary>
            <param name="contentInfo">Receives an instance of the IMFASFContentInfo interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFContentInfo">
            <summary>
            Creates the ASF Header Object object.
            </summary>
            <returns>Returns an instance of the IMFASFContentInfo interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFSplitter(VisioForge.Libs.MediaFoundation.IMFASFSplitter@)">
            <summary>
            Creates the ASF Splitter.
            </summary>
            <param name="splitter">Receives an instance of the IMFASFSplitter interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFSplitter">
            <summary>
            Creates the ASF Splitter.
            </summary>
            <returns>Returns an instance of the IMFASFSplitter interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFProfile(VisioForge.Libs.MediaFoundation.IMFASFProfile@)">
            <summary>
            Creates the ASF profile object.
            </summary>
            <param name="profile">Receives an instance of the IMFASFProfile interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFProfile">
            <summary>
            Creates the ASF profile object.
            </summary>
            <returns>Returns an instance of the IMFASFProfile interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFIndexer(VisioForge.Libs.MediaFoundation.IMFASFIndexer@)">
            <summary>
            Creates the ASF Indexer object.
            </summary>
            <param name="indexer">Receives an instance of the IMFASFIndexer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFIndexer">
            <summary>
            Creates the ASF Indexer object.
            </summary>
            <returns>Returns an instance of the IMFASFIndexer interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFStreamSelector(VisioForge.Libs.MediaFoundation.IMFASFProfile,VisioForge.Libs.MediaFoundation.IMFASFStreamSelector@)">
            <summary>
            Creates the ASF stream selector.
            </summary>
            <param name="asfProfile">An instance of the IMFASFProfile interface.</param>
            <param name="selector">Receives an instance of the IMFASFStreamSelector interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFStreamSelector(VisioForge.Libs.MediaFoundation.IMFASFProfile)">
            <summary>
            Creates the ASF stream selector.
            </summary>
            <param name="asfProfile">An instance of the IMFASFProfile interface.</param>
            <returns>Returns an instance of the IMFASFStreamSelector interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFProfileFromPresentationDescriptor(VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor,VisioForge.Libs.MediaFoundation.IMFASFProfile@)">
            <summary>
            Creates an ASF profile object from a presentation descriptor.
            </summary>
            <param name="presentationDescriptor">An instance of the IMFPresentationDescriptor interface of the presentation descriptor that contains the profile information.</param>
            <param name="profile">Receives an instance of the IMFASFProfile interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFProfileFromPresentationDescriptor(VisioForge.Libs.MediaFoundation.IMFPresentationDescriptor)">
            <summary>
            Creates an ASF profile object from a presentation descriptor.
            </summary>
            <param name="presentationDescriptor">An instance of the IMFPresentationDescriptor interface of the presentation descriptor that contains the profile information.</param>
            <returns>Returns an instance of the IMFASFProfile interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFStreamingMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates an activation object for the ASF streaming sink.
            </summary>
            <param name="byteStream">An instance of a byte stream object in which the ASF media sink writes the streamed content.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink interface of the ASF streaming-media sink object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>The ASF streaming sink enables an application to write streaming Advanced Systems Format (ASF) packets to an HTTP byte stream.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFStreamingMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream)">
            <summary>
            Creates an activation object for the ASF streaming sink.
            </summary>
            <param name="byteStream">An instance of a byte stream object in which the ASF media sink writes the streamed content.</param>
            <returns>Returns an instance of the IMFMediaSink interface of the ASF streaming-media sink object.</returns>
            <remarks>The ASF streaming sink enables an application to write streaming Advanced Systems Format (ASF) packets to an HTTP byte stream.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFStreamingMediaSinkActivate(VisioForge.Libs.MediaFoundation.IMFActivate,VisioForge.Libs.MediaFoundation.IMFASFContentInfo,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object for the ASF streaming sink.
            </summary>
            <param name="byteStreamActivate">An instance of the IMFActivate interface of an activation object for a byte-stream object that exposes the IMFByteStream interface. The ASF streaming sink will write data to this byte stream.</param>
            <param name="contentInfo">An instance of an ASF ContentInfo Object that contains the properties that describe the ASF content.</param>
            <param name="activate">Receives an instance of the IMFActivate interface of the activation object that is used to create the ASF streaming-media sink.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFStreamingMediaSinkActivate(VisioForge.Libs.MediaFoundation.IMFActivate,VisioForge.Libs.MediaFoundation.IMFASFContentInfo)">
            <summary>
            Creates an activation object for the ASF streaming sink.
            </summary>
            <param name="byteStreamActivate">An instance of the IMFActivate interface of an activation object for a byte-stream object that exposes the IMFByteStream interface. The ASF streaming sink will write data to this byte stream.</param>
            <param name="contentInfo">An instance of an ASF ContentInfo Object that contains the properties that describe the ASF content.</param>
            <returns>Returns an instance of the IMFActivate interface of the activation object that is used to create the ASF streaming-media sink.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFIndexerByteStream(VisioForge.Libs.MediaFoundation.IMFByteStream,System.Int64,VisioForge.Libs.MediaFoundation.IMFByteStream@)">
            <summary>
            Creates a byte stream to access the index in an ASF stream.
            </summary>
            <param name="contentByteStream">An instance of the IMFByteStream interface of a byte stream that contains the ASF stream.</param>
            <param name="indexStartOffset">Byte offset of the index within the ASF stream. To get this value, call IMFASFIndexer.GetIndexPosition.</param>
            <param name="indexByteStream">Receives an instance of the IMFByteStream interface. Use this interface to read from the index or write to the index.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFMultiplexer(VisioForge.Libs.MediaFoundation.IMFASFMultiplexer@)">
            <summary>
            Creates the ASF Multiplexer.
            </summary>
            <param name="multiplexer">Receives an instance of the IMFASFMultiplexer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFMultiplexer">
            <summary>
            Creates the ASF Multiplexer.
            </summary>
            <returns>Returns an instance of the IMFASFMultiplexer interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceReaderFromMediaSource(VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates the source reader from a media source.
            </summary>
            <param name="mediaSource">An instance of the IMFMediaSource interface of a media source.</param>
            <param name="sourceReader">Receives an instance of the IMFSourceReader interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceReaderFromMediaSource(VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates the source reader from a media source.
            </summary>
            <param name="mediaSource">An instance of the IMFMediaSource interface of a media source.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the source reader.</param>
            <param name="sourceReader">Receives an instance of the IMFSourceReader interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSinkWriterFromURL(System.String,VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates the sink writer from a URL or byte stream.
            </summary>
            <param name="outputURL">A string that contains the URL of the output file. This parameter can be null.</param>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. This parameter can be null.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the sink writer.</param>
            <param name="sinkWriter">Receives an instance of the IMFSinkWriter interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSinkWriterFromURL(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates the sink writer from a byte stream.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. This parameter can be null.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the sink writer.</param>
            <param name="sinkWriter">Receives an instance of the IMFSinkWriter interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSinkWriterFromURL(System.String,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates the sink writer from a URL.
            </summary>
            <param name="outputURL">A string that contains the URL of the output file. This parameter can be null.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the sink writer.</param>
            <param name="sinkWriter">Receives an instance of the IMFSinkWriter interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceReaderFromByteStream(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates the source reader from a byte stream.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. This byte stream will provide the source data for the source reader.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the source reader.</param>
            <param name="sourceReader">Receives an instance of the IMFSourceReader interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSinkWriterFromMediaSink(VisioForge.Libs.MediaFoundation.IMFMediaSink,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates the sink writer from a media sink.
            </summary>
            <param name="mediaSink">An instance of the IMFMediaSink interface of a media sink.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the sink writer. This parameter can be null.</param>
            <param name="sinkWriter">Receives an instance of the IMFSinkWriter interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSinkWriterFromMediaSink(VisioForge.Libs.MediaFoundation.IMFMediaSink,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSinkWriter@)">
            <summary>
            Creates the sink writer from a media sink.
            </summary>
            <param name="mediaSink">An instance of the IMFMediaSink interface of a media sink. </param>
            <param name="sinkWriter">Receives an instance of the IMFSinkWriter interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceReaderFromURL(System.String,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates the source reader from a URL.
            </summary>
            <param name="url">The URL of a media file to open.</param>
            <param name="attributes">An instance of the IMFAttributes interface. You can use this parameter to configure the source reader. This parameter can be null.</param>
            <param name="sourceReader">Receives an instance of the IMFSourceReader interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSourceReaderFromURL(System.String,VisioForge.Libs.MediaFoundation.ReadWrite.IMFSourceReader@)">
            <summary>
            Creates the source reader from a URL.
            </summary>
            <param name="url">The URL of a media file to open.</param>
            <param name="sourceReader">Receives an instance of the IMFSourceReader interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTranscodeSinkActivate(VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates the transcode sink activation object.
            </summary>
            <param name="activate">Receives an instance of the IMFActivate interface. This interface is used to create the file sink instance from the activation object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTranscodeSinkActivate">
            <summary>
            Creates the transcode sink activation object.
            </summary>
            <returns>Returns an instance of the IMFActivate interface. This interface is used to create the file sink instance from the activation object.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTranscodeProfile(VisioForge.Libs.MediaFoundation.IMFTranscodeProfile@)">
            <summary>
            Creates an empty transcode profile object.
            </summary>
            <param name="transcodeProfile">Receives an instance of the IMFTranscodeProfile interface of the transcode profile object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTranscodeProfile">
            <summary>
            Creates an empty transcode profile object.
            </summary>
            <returns>Returns an instance of the IMFTranscodeProfile interface of the transcode profile object.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTranscodeTopology(VisioForge.Libs.MediaFoundation.IMFMediaSource,System.String,VisioForge.Libs.MediaFoundation.IMFTranscodeProfile,VisioForge.Libs.MediaFoundation.IMFTopology@)">
            <summary>
            Creates a partial transcode topology.
            </summary>
            <param name="mediaSource">An instance of a media source that encapsulates the source file to be transcoded.</param>
            <param name="outputFilePath">A string that contains the name and path of the output file to be generated.</param>
            <param name="profile">An instance of the transcode profile that contains the configuration settings for the audio stream, the video stream, and the container to which the file is written.</param>
            <param name="transcodeTopo">Receives an instance of the IMFTopology interface of the transcode topology object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.TranscodeGetAudioOutputAvailableTypes(System.Guid,VisioForge.Libs.MediaFoundation.Transform.MFT_EnumFlag,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFCollection@)">
            <summary>
            Gets a list of output formats from an audio encoder.
            </summary>
            <param name="guidSubType">Specifies the subtype of the output media.</param>
            <param name="mftFlags">Bitwise OR of zero or more flags from the MFT_EnumFlag enumeration.</param>
            <param name="codecConfig">An instance of the IMFAttributes interface of an attribute store. The attribute store specifies the encoder configuration settings. This parameter can be null.</param>
            <param name="availableTypes">Receives an instance of the IMFCollection interface of a collection object that contains a list of preferred audio media types. The collection contains IMFMediaType instances.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTranscodeTopologyFromByteStream(VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFTranscodeProfile,VisioForge.Libs.MediaFoundation.IMFTopology@)">
            <summary>
            Creates a topology for transcoding to a byte stream.
            </summary>
            <param name="mediaSource">An instance of the IMFMediaSource interface of a media source. The media source provides that source content for transcoding.</param>
            <param name="outputStream">An instance of the IMFByteStream interface of a byte stream. The transcoded output will be written to this byte stream.</param>
            <param name="profile">An instance of the IMFTranscodeProfile interface of a transcoding profile.</param>
            <param name="transcodeTopo">Receives an instance of the IMFTopology interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.EnumDeviceSources(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFActivate[]@)">
            <summary>
            Enumerates a list of audio or video capture devices.
            </summary>
            <param name="attributes">An instance of an attribute store that contains search criteria.</param>
            <param name="sourceActivate">Receives an array of IMFActivate interface instances. Each item represents an activation object for a media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.EnumAudioDeviceSources(VisioForge.Libs.MediaFoundation.IMFActivate[]@)">
            <summary>
            Enumerates a list of audio capture devices.
            </summary>
            <param name="sourceActivate">Receives an array of IMFActivate interface instances. Each item represents an activation object for a media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.EnumAudioDeviceSources(VisioForge.Libs.MediaFoundation.ERole,VisioForge.Libs.MediaFoundation.IMFActivate[]@)">
            <summary>
            Enumerates a list of audio capture devices.
            </summary>
            <param name="role">Specifies the device role for an audio capture device.</param>
            <param name="sourceActivate">Receives an array of IMFActivate interface instances. Each item represents an activation object for a media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.EnumVideoDeviceSources(VisioForge.Libs.MediaFoundation.IMFActivate[]@)">
            <summary>
            Enumerates a list of video capture devices.
            </summary>
            <param name="sourceActivate">Receives an array of IMFActivate interface instances. Each item represents an activation object for a media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.EnumVideoDeviceSources(System.Guid,VisioForge.Libs.MediaFoundation.IMFActivate[]@)">
            <summary>
            Enumerates a list of video capture devices.
            </summary>
            <param name="videoDeviceCategory">Specifies the device category for a video capture device.</param>
            <param name="sourceActivate">Receives an array of IMFActivate interface instances. Each item represents an activation object for a media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDeviceSource(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source for a hardware capture device.
            </summary>
            <param name="attributes">An instance of the IMFAttributes interface of an attribute store, which is used to select the device.</param>
            <param name="mediaSource">Receives an instance of the media source's IMFMediaSource interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioDeviceSource(VisioForge.Libs.MediaFoundation.ERole,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source for a audio capture device.
            </summary>
            <param name="audioRole">Specifies the device role for an audio capture device.</param>
            <param name="mediaSource">Receives an instance of the media source's IMFMediaSource interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioDeviceSource(System.String,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source for a audio capture device.
            </summary>
            <param name="endpointId">Specifies the audio endpoint ID of the audio capture device.</param>
            <param name="mediaSource">Receives an instance of the media source's IMFMediaSource interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoDeviceSource(System.String,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source for a video capture device.
            </summary>
            <param name="symbolicLink">Specifies the symbolic link to the device.</param>
            <param name="mediaSource">Receives an instance of the media source's IMFMediaSource interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDeviceSourceActivate(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that represents a hardware capture device.
            </summary>
            <param name="attributes">An instance of the IMFAttributes interface of an attribute store, which is used to select the device.</param>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioDeviceSourceActivate(VisioForge.Libs.MediaFoundation.ERole,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that represents an audio capture device.
            </summary>
            <param name="audioRole">Specifies the device role for an audio capture device.</param>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioDeviceSourceActivate(System.String,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that represents an audio capture device.
            </summary>
            <param name="endpointId">Specifies the audio endpoint ID of the audio capture device.</param>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoDeviceSourceActivate(System.String,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that represents a video capture device.
            </summary>
            <param name="symbolicLink">Specifies the symbolic link to the device.</param>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAggregateSource(VisioForge.Libs.MediaFoundation.IMFCollection,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source that aggregates a collection of media sources.
            </summary>
            <param name="sourceCollection">An instance of the IMFCollection interface of the collection object that contains a list of media sources.</param>
            <param name="aggregateSource">Receives an instance of the IMFMediaSource interface of the aggregated media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAggregateSource(VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFMediaSource,VisioForge.Libs.MediaFoundation.IMFMediaSource@)">
            <summary>
            Creates a media source that aggregates two media sources.
            </summary>
            <param name="source1">An instance of the IMFMediaSource interface of the first media source.</param>
            <param name="source2">An instance of the IMFMediaSource interface of the second media source.</param>
            <param name="aggregateSource">Receives an instance of the IMFMediaSource interface of the aggregated media source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioRendererActivate(VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object for the Streaming Audio Renderer.
            </summary>
            <param name="activate">Receives an instance of the IMFActivate interface. Use this interface to create the audio renderer.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioRendererActivate">
            <summary>
            Creates an activation object for the Streaming Audio Renderer.
            </summary>
            <returns>Returns an instance of the IMFActivate interface. Use this interface to create the audio renderer.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioRenderer(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates the Streaming Audio Renderer.
            </summary>
            <param name="audioAttributes">An instance of the IMFAttributes interface, which is used to configure the audio renderer.</param>
            <param name="mediaSink">Receives an instance of the audio renderer's IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAudioRenderer(VisioForge.Libs.MediaFoundation.IMFAttributes)">
            <summary>
            Creates the Streaming Audio Renderer.
            </summary>
            <param name="audioAttributes">An instance of the IMFAttributes interface, which is used to configure the audio renderer.</param>
            <returns>Returns an instance of the audio renderer's IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRendererActivate(System.IntPtr,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object for the enhanced video renderer (EVR) media sink.
            </summary>
            <param name="hwndVideo">Handle to the window where the video will be displayed.</param>
            <param name="activate">Receives an instance of the IMFActivate interface. Use this interface to create the EVR.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRendererActivate(System.IntPtr)">
            <summary>
            Creates an activation object for the enhanced video renderer (EVR) media sink.
            </summary>
            <param name="hwndVideo">Handle to the window where the video will be displayed.</param>
            <returns>Returns an instance of the IMFActivate interface. Use this interface to create the EVR.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRenderer(System.Guid,System.Object@)">
            <summary>
            Creates an instance of the enhanced video renderer (EVR) media sink.
            </summary>
            <param name="riidRenderer">Interface identifier (IID) of the requested interface on the EVR.</param>
            <param name="renderer">Receives an instance of the requested interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRenderer``1(``0@)">
            <summary>
            Creates an instance of the enhanced video renderer (EVR) media sink.
            </summary>
            <typeparam name="T">Type of the renderer interface</typeparam>
            <param name="renderer">Receives an instance of the requested interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRenderer(VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates an instance of the enhanced video renderer (EVR) media sink.
            </summary>
            <param name="mediaSink">Receives an instance of the EVR's IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRenderer``1">
            <summary>
            Creates an instance of the enhanced video renderer (EVR) media sink.
            </summary>
            <typeparam name="T">Type of the renderer interface</typeparam>
            <returns>Returns an instance of the requested interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoRenderer">
            <summary>
            Creates an instance of the enhanced video renderer (EVR) media sink.
            </summary>
            <returns>Returns an instance of the EVR's IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoPresenter(System.Object,System.Guid,System.Guid,System.Object@)">
            <summary>
            Creates the default video presenter for the enhanced video renderer (EVR).
            </summary>
            <param name="owner">An instance of the owner of the object. This parameter can be null.</param>
            <param name="riidDevice">Interface identifier (IID) of the video device interface that will be used for processing the video. Currently the only supported value is IID_IDirect3DDevice9.</param>
            <param name="riid">IID of the requested interface on the video presenter. The video presenter exposes the IMFVideoPresenter interface.</param>
            <param name="videoPresenter">Receives an instance of the requested interface on the video presenter.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoPresenter(VisioForge.Libs.MediaFoundation.EVR.IMFVideoPresenter@)">
            <summary>
            Creates the default video presenter for the enhanced video renderer (EVR).
            </summary>
            <param name="videoPresenter">Receives an instance of the IMFVideoPresenter interface on the video presenter.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoPresenter">
            <summary>
            Creates the default video presenter for the enhanced video renderer (EVR).
            </summary>
            <returns>Returns an instance of the IMFVideoPresenter interface on the video presenter.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoMixer(System.Object,System.Guid,System.Guid,System.Object@)">
            <summary>
            Creates the default video mixer for the enhanced video renderer (EVR).
            </summary>
            <param name="owner">An instance of the owner of the object. This parameter can be null.</param>
            <param name="riidDevice">Interface identifier (IID) of the video device interface that will be used for processing the video. Currently the only supported value is IID_IDirect3DDevice9.</param>
            <param name="riid">IID of the requested interface on the video presenter. The video presenter exposes the IMFTransform interface.</param>
            <param name="videoMixer">Receives an instance of the requested interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoMixer(VisioForge.Libs.MediaFoundation.Transform.IMFTransform@)">
            <summary>
            Creates the default video mixer for the enhanced video renderer (EVR).
            </summary>
            <param name="videoMixer">Receives an instance of the IMFTransform interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoMixer">
            <summary>
            Creates the default video mixer for the enhanced video renderer (EVR).
            </summary>
            <returns>Returns an instance of the IMFTransform interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoMixerAndPresenter(System.Object,System.Object,System.Guid,System.Guid,System.Object@,System.Object@)">
            <summary>
            Creates the default video mixer and video presenter for the enhanced video renderer (EVR).
            </summary>
            <param name="mixerOwner">An instance of the owner of the video mixer. This parameter can be null.</param>
            <param name="presenterOwner">An instance of the owner of the video presenter. This parameter can be null.</param>
            <param name="riidMixer">Interface identifier (IID) of the requested interface on the video mixer. The video mixer exposes the IMFTransform interface.</param>
            <param name="riidPresenter">IID of the requested interface on the video presenter. The video presenter exposes the IMFVideoPresenter interface.</param>
            <param name="videoMixer">Receives an instance of the requested interface on the video mixer.</param>
            <param name="videoPresenter">Receives an instance of the requested interface on the video presenter.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoMixerAndPresenter(VisioForge.Libs.MediaFoundation.Transform.IMFTransform@,VisioForge.Libs.MediaFoundation.EVR.IMFVideoPresenter@)">
            <summary>
            Creates the default video mixer and video presenter for the enhanced video renderer (EVR).
            </summary>
            <param name="videoMixer">Receives an instance of the IMFTransform interface on the video mixer.</param>
            <param name="videoPresenter">Receives an instance of the IMFVideoPresenter interface on the video presenter.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMP3MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates the MP3 media sink.
            </summary>
            <param name="targetByteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the MP3 file to this byte stream. The byte stream must be writable.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink interface of the MP3 media sink.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMP3MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream)">
            <summary>
            Creates the MP3 media sink.
            </summary>
            <param name="targetByteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the MP3 file to this byte stream. The byte stream must be writable.</param>
            <returns>Returns an instance of the IMFMediaSink interface of the MP3 media sink.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSampleGrabberSinkActivate(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFSampleGrabberSinkCallback,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object for the sample grabber media sink.
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface, defining the media type for the sample grabber's input stream.</param>
            <param name="sampleGrabberSinkCallback">An instance of the IMFSampleGrabberSinkCallback interface of a callback object. The caller must implement this interface.</param>
            <param name="activate">Receives an instance of the IMFActivate interface. Use this interface to complete the creation of the sample grabber.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSampleGrabberSinkActivate(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFSampleGrabberSinkCallback)">
            <summary>
            Creates an activation object for the sample grabber media sink.
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface, defining the media type for the sample grabber's input stream.</param>
            <param name="sampleGrabberSinkCallback">An instance of the IMFSampleGrabberSinkCallback interface of a callback object. The caller must implement this interface.</param>
            <returns>Returns an instance of the IMFActivate interface. Use this interface to complete the creation of the sample grabber.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates the ASF media sink.
            </summary>
            <param name="byteStream">An instance of a byte stream that will be used to write the ASF stream.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream)">
            <summary>
            Creates the ASF media sink.
            </summary>
            <param name="byteStream">An instance of a byte stream that will be used to write the ASF stream.</param>
            <returns>Returns an instance of the IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFMediaSinkActivate(System.String,VisioForge.Libs.MediaFoundation.IMFASFContentInfo,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that can be used to create the ASF media sink.
            </summary>
            <param name="fileName">A string that contains the output file name.</param>
            <param name="contentInfo">An instance of the IMFASFContentInfo interface of an initialized ASF Header Object object. Use this interface to configure the ASF media sink.</param>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateASFMediaSinkActivate(System.String,VisioForge.Libs.MediaFoundation.IMFASFContentInfo)">
            <summary>
            Creates an activation object that can be used to create the ASF media sink.
            </summary>
            <param name="fileName">A string that contains the output file name.</param>
            <param name="contentInfo">An instance of the IMFASFContentInfo interface of an initialized ASF Header Object object. Use this interface to configure the ASF media sink.</param>
            <returns>Returns an instance of the IMFActivate interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMPEG4MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates a media sink for authoring MP4 files.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the MP4 file to this byte stream. The byte stream must be writable and support seeking.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of a video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of a audio media type.</param>
            <param name="mediaSink">Receives an instance of the MP4 media sink's IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMPEG4MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates a media sink for authoring MP4 files.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the MP4 file to this byte stream. The byte stream must be writable and support seeking.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of a video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of a audio media type.</param>
            <returns>Returns an instance of the MP4 media sink's IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Create3GPMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates a media sink for authoring 3GP files.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the 3GP file to this byte stream. The byte stream must be writable and support seeking.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of a video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of a audio media type.</param>
            <param name="mediaSink">Receives an instance of the 3GP media sink's IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.Create3GPMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates a media sink for authoring 3GP files.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the 3GP file to this byte stream. The byte stream must be writable and support seeking.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of a video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of a audio media type.</param>
            <returns>Returns an instance of the 3GP media sink's IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAC3MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates an instance of the AC-3 media sink.
            </summary>
            <param name="targetByteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the AC-3 file to this byte stream. The byte stream must be writable.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface. This parameter specifies the media type for the AC-3 audio stream.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAC3MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates an instance of the AC-3 media sink.
            </summary>
            <param name="targetByteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the AC-3 file to this byte stream. The byte stream must be writable.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface. This parameter specifies the media type for the AC-3 audio stream.</param>
            <returns>Returns an instance of the IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateADTSMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates an instance of the audio data transport stream (ADTS) media sink.
            </summary>
            <param name="targetByteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the ADTS stream to this byte stream. The byte stream must be writable.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface. This parameter specifies the media type for the ADTS audio stream.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateADTSMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates an instance of the audio data transport stream (ADTS) media sink.
            </summary>
            <param name="targetByteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the ADTS stream to this byte stream. The byte stream must be writable.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface. This parameter specifies the media type for the ADTS audio stream.</param>
            <returns>Returns an instance of the IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMuxSink(System.Guid,VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates a generic media sink that wraps a multiplexer Microsoft Media Foundation transform (MFT).
            </summary>
            <param name="guidOutputSubType">The subtype GUID of the output type for the MFT.</param>
            <param name="outputAttributes">A list of format attributes for the MFT output type. This parameter is optional and can be null.</param>
            <param name="outputByteStream">An instance of the IMFByteStream interface of a byte stream. The output from the MFT is written to this byte stream. This parameter can be null.</param>
            <param name="muxSink">Receives an instance of the IMFMediaSink interface of the media sink.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateFMPEG4MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates a media sink for authoring fragmented MP4 files.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the MP4 file to this byte stream. The byte stream must be writable and support seeking.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of the video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of the audio media type.</param>
            <param name="mediaSink">Receives an instance of the MP4 media sink's IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateFMPEG4MediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates a media sink for authoring fragmented MP4 files.
            </summary>
            <param name="byteStream">An instance of the IMFByteStream interface of a byte stream. The media sink writes the MP4 file to this byte stream. The byte stream must be writable and support seeking.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of the video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of the audio media type.</param>
            <returns>Returns an instance of the MP4 media sink's IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAVIMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates an Audio-Video Interleaved (AVI) Sink.
            </summary>
            <param name="byteStream">An instance of the byte stream that will be used to write the AVI file.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of the video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of the audio media type.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink Interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateAVIMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates an Audio-Video Interleaved (AVI) Sink.
            </summary>
            <param name="byteStream">An instance of the byte stream that will be used to write the AVI file.</param>
            <param name="videoMediaType">An instance of the IMFMediaType interface of the video media type.</param>
            <param name="audioMediaType">An instance of the IMFMediaType interface of the audio media type.</param>
            <returns>Returns an instance of the IMFMediaSink Interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWAVEMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.IMFMediaSink@)">
            <summary>
            Creates an WAVE archive sink. The WAVE archive sink takes audio and writes it to an .wav file. 
            </summary>
            <param name="byteStream">An instance of the byte stream that will be used to write the .wav file.</param>
            <param name="audioMediaType">An instance of the audio media type.</param>
            <param name="mediaSink">Receives an instance of the IMFMediaSink interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWAVEMediaSink(VisioForge.Libs.MediaFoundation.IMFByteStream,VisioForge.Libs.MediaFoundation.IMFMediaType)">
            <summary>
            Creates an WAVE archive sink. The WAVE archive sink takes audio and writes it to an .wav file. 
            </summary>
            <param name="byteStream">An instance of the byte stream that will be used to write the .wav file.</param>
            <param name="audioMediaType">An instance of the audio media type.</param>
            <returns>Returns an instance of the IMFMediaSink interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWMAEncoderActivate(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that can be used to create a Windows Media Audio (WMA) encoder.
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface. This parameter specifies the encoded output format.</param>
            <param name="encodingConfigurationProperties">An instance of the IPropertyStore interface of a property store that contains encoding parameters.</param>
            <param name="activate">Receives an instance of the IMFActivate interface. Use this interface to create the encoder.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWMAEncoderActivate(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore)">
            <summary>
            Creates an activation object that can be used to create a Windows Media Audio (WMA) encoder.
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface. This parameter specifies the encoded output format.</param>
            <param name="encodingConfigurationProperties">An instance of the IPropertyStore interface of a property store that contains encoding parameters.</param>
            <returns>Returns an instance of the IMFActivate interface. Use this interface to create the encoder.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWMVEncoderActivate(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object that can be used to create a Windows Media Video (WMV) encoder. 
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface. This parameter specifies the encoded output format.</param>
            <param name="encodingConfigurationProperties">An instance of the IPropertyStore interface of a property store that contains encoding parameters.</param>
            <param name="activate">Receives an instance of the IMFActivate interface. Use this interface to create the encoder.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateWMVEncoderActivate(VisioForge.Libs.MediaFoundation.IMFMediaType,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore)">
            <summary>
            Creates an activation object that can be used to create a Windows Media Video (WMV) encoder. 
            </summary>
            <param name="mediaType">An instance of the IMFMediaType interface. This parameter specifies the encoded output format.</param>
            <param name="encodingConfigurationProperties">An instance of the IPropertyStore interface of a property store that contains encoding parameters.</param>
            <returns>Returns an instance of the IMFActivate interface. Use this interface to create the encoder.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSampleCopierMFT(VisioForge.Libs.MediaFoundation.Transform.IMFTransform@)">
            <summary>
            Creates an instance of the sample copier transform.
            </summary>
            <param name="copierMFT">Receives an instance of the IMFTransform interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSampleCopierMFT">
            <summary>
            Creates an instance of the sample copier transform.
            </summary>
            <returns>Returns an instance of the IMFTransform interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTopologyNode(VisioForge.Libs.MediaFoundation.MFTopologyType,VisioForge.Libs.MediaFoundation.IMFTopologyNode@)">
            <summary>
            Creates a topology node.
            </summary>
            <param name="nodeType">The type of node to create, specified as a member of the MFTopologyType enumeration.</param>
            <param name="node">Receives an instance of the node's IMFTopologyNode interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTopologyNode(VisioForge.Libs.MediaFoundation.MFTopologyType)">
            <summary>
            Creates a topology node.
            </summary>
            <param name="nodeType">The type of node to create, specified as a member of the MFTopologyType enumeration.</param>
            <returns>Returns an instance of the node's IMFTopologyNode interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTopology(VisioForge.Libs.MediaFoundation.IMFTopology@)">
            <summary>
            Creates a topology object.
            </summary>
            <param name="topology">Receives an instance of the IMFTopology interface of the topology object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTopology">
            <summary>
            Creates a topology object.
            </summary>
            <returns>Returns an instance of the IMFTopology interface of the topology object.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetTopoNodeCurrentType(VisioForge.Libs.MediaFoundation.IMFTopologyNode,System.Int32,System.Boolean,VisioForge.Libs.MediaFoundation.IMFMediaType@)">
            <summary>
            Gets the media type for a stream associated with a topology node.
            </summary>
            <param name="node">An instance of the IMFTopologyNode interface.</param>
            <param name="streamIndex">The identifier of the stream to query.</param>
            <param name="output">If true, the function gets an output type otherwise the function gets an input type.</param>
            <param name="mediaType">Receives an instance of the IMFMediaType interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTopoLoader(VisioForge.Libs.MediaFoundation.IMFTopoLoader@)">
            <summary>
            Creates a new instance of the topology loader.
            </summary>
            <param name="topoLoader">Receives an instance of the IMFTopoLoader interface of the topology loader.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTopoLoader">
            <summary>
            Creates a new instance of the topology loader.
            </summary>
            <returns>Returns an instance of the IMFTopoLoader interface of the topology loader.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSystemTimeSource(VisioForge.Libs.MediaFoundation.IMFPresentationTimeSource@)">
            <summary>
            Creates a presentation time source that is based on the system time.
            </summary>
            <param name="systemTimeSource">Receives an instance of the object's IMFPresentationTimeSource interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSystemTimeSource">
            <summary>
            Creates a presentation time source that is based on the system time.
            </summary>
            <returns>Returns an instance of the object's IMFPresentationTimeSource interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateCollection(VisioForge.Libs.MediaFoundation.IMFCollection@)">
            <summary>
            Creates an empty collection object.
            </summary>
            <param name="collection">Receives an instance of the collection object's IMFCollection interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateCollection">
            <summary>
            Creates an empty collection object.
            </summary>
            <returns>Returns an instance of the collection object's IMFCollection interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateStreamDescriptor(System.Int32,VisioForge.Libs.MediaFoundation.IMFMediaType[],VisioForge.Libs.MediaFoundation.IMFStreamDescriptor@)">
            <summary>
            Creates a stream descriptor.
            </summary>
            <param name="streamIdentifier">Stream identifier.</param>
            <param name="mediaTypes">An array of IMFMediaType interface instances. These instances are used to initialize the media type handler for the stream descriptor.</param>
            <param name="descriptor">Receives an instance of the IMFStreamDescriptor interface of the new stream descriptor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateEventQueue(VisioForge.Libs.MediaFoundation.IMFMediaEventQueue@)">
            <summary>
            Creates an event queue.
            </summary>
            <param name="mediaEventQueue">Receives an instance of the IMFMediaEventQueue interface of the event queue.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateEventQueue">
            <summary>
            Creates an event queue.
            </summary>
            <returns>Returns an instance of the IMFMediaEventQueue interface of the event queue.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaEvent(VisioForge.Libs.MediaFoundation.MediaEventType,System.Guid,VisioForge.Libs.MediaFoundation.HResult,VisioForge.Libs.MediaFoundation.Misc.ConstPropVariant,VisioForge.Libs.MediaFoundation.IMFMediaEvent@)">
            <summary>
            Creates a media event object.
            </summary>
            <param name="mediaEventType">The event type.</param>
            <param name="extendedType">The extended type.</param>
            <param name="hrStatus">The event status.</param>
            <param name="value">The value associated with the event, if any. This parameter can be null.</param>
            <param name="mediaEvent">Receives an instance of the IMFMediaEvent interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaEvent(VisioForge.Libs.MediaFoundation.MediaEventType,System.Guid,VisioForge.Libs.MediaFoundation.HResult,System.Object,VisioForge.Libs.MediaFoundation.IMFMediaEvent@)">
            <summary>
            Creates a media event object.
            </summary>
            <param name="mediaEventType">The event type.</param>
            <param name="extendedType">The extended type.</param>
            <param name="hrStatus">The event status.</param>
            <param name="value">The value associated with the event, if any. This parameter can be null.</param>
            <param name="mediaEvent">Receives an instance of the IMFMediaEvent interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSample(VisioForge.Libs.MediaFoundation.IMFSample@)">
            <summary>
            Creates an empty media sample.
            </summary>
            <param name="sample">Receives an instance of the IMFSample interface of the media sample.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSample">
            <summary>
            Creates an empty media sample.
            </summary>
            <returns>Returns an instance of the IMFSample interface of the media sample.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleFromSurface(System.Object,VisioForge.Libs.MediaFoundation.IMFSample@)">
            <summary>
            Creates a media sample that manages a Direct3D surface.
            </summary>
            <param name="surface">An instance of the Direct3D surface. This parameter can be null.</param>
            <param name="sample">Receives an instance of the sample's IMFSample interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleFromSurface(System.IntPtr,VisioForge.Libs.MediaFoundation.IMFSample@)">
            <summary>
            Creates a media sample that manages a Direct3D surface.
            </summary>
            <param name="surface">A pointer to the IUnknown interface of the Direct3D surface. This parameter can be null.</param>
            <param name="sample">Receives an instance of the sample's IMFSample interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetService(System.Object,System.Guid,System.Guid,System.Object@)">
            <summary>
            Queries an object for a specified service interface.
            </summary>
            <param name="obj">An instance of the object to query.</param>
            <param name="guidService">The service identifier (SID) of the service.</param>
            <param name="riid">The interface identifier (IID) of the interface being requested.</param>
            <param name="serviceObject">Receives the interface instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetService``1(System.Object,System.Guid,``0@)">
            <summary>
            Queries an object for a specified service interface.
            </summary>
            <typeparam name="T">The type of the requested interface.</typeparam>
            <param name="obj">An instance of the object to query.</param>
            <param name="guidService">The service identifier (SID) of the service.</param>
            <param name="serviceObject">Receives the interface instance.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaSession(VisioForge.Libs.MediaFoundation.IMFAttributes,VisioForge.Libs.MediaFoundation.IMFMediaSession@)">
            <summary>
            Creates the Media Session in the application's process.
            </summary>
            <param name="configuration">An instance of the IMFAttributes interface. This parameter can be null.</param>
            <param name="mediaSession">Receives an instance of the Media Session's IMFMediaSession interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaSession(VisioForge.Libs.MediaFoundation.IMFAttributes)">
            <summary>
            Creates the Media Session in the application's process.
            </summary>
            <param name="configuration">An instance of the IMFAttributes interface. This parameter can be null.</param>
            <returns>Returns an instance of the Media Session's IMFMediaSession interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePresentationClock(VisioForge.Libs.MediaFoundation.IMFPresentationClock@)">
            <summary>
            Creates the presentation clock.
            </summary>
            <param name="presentationClock">Receives an instance of the clock's IMFPresentationClock interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreatePresentationClock">
            <summary>
            Creates the presentation clock.
            </summary>
            <returns>Returns an instance of the clock's IMFPresentationClock interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSimpleTypeHandler(VisioForge.Libs.MediaFoundation.IMFMediaTypeHandler@)">
            <summary>
            Creates a media-type handler that supports a single media type at a time.
            </summary>
            <param name="handler">Receives an instance of the IMFMediaTypeHandler interface of the media-type handler.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSimpleTypeHandler">
            <summary>
            Creates a media-type handler that supports a single media type at a time.
            </summary>
            <returns>Returns an instance of the IMFMediaTypeHandler interface of the media-type handler.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSequencerSegmentOffset(System.Int32,System.Int64,VisioForge.Libs.MediaFoundation.Misc.PropVariant@)">
            <summary>
            Creates a PropVariant that can be used to seek within a sequencer source presentation.
            </summary>
            <param name="id">Sequencer element identifier. This value specifies the segment in which to begin playback.</param>
            <param name="offset">Starting position within the segment, in 100-nanosecond units.</param>
            <param name="segmentOffset">Receives an instance of a PropVariant. The method fills in the PropVariant with the information needed for performing a seek operation.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSequencerSegmentOffset(System.Int32,System.TimeSpan,VisioForge.Libs.MediaFoundation.Misc.PropVariant@)">
            <summary>
            Creates a PropVariant that can be used to seek within a sequencer source presentation.
            </summary>
            <param name="id">Sequencer element identifier. This value specifies the segment in which to begin playback.</param>
            <param name="offset">Starting position within the segment</param>
            <param name="segmentOffset">Receives an instance of a PropVariant. The method fills in the PropVariant with the information needed for performing a seek operation.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSequencerSegmentOffset(System.Int32,System.Int64)">
            <summary>
            Creates a PropVariant that can be used to seek within a sequencer source presentation.
            </summary>
            <param name="id">Sequencer element identifier. This value specifies the segment in which to begin playback.</param>
            <param name="offset">Starting position within the segment, in 100-nanosecond units.</param>
            <returns>Returns an instance of a PropVariant. The method fills in the PropVariant with the information needed for performing a seek operation.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSequencerSegmentOffset(System.Int32,System.TimeSpan)">
            <summary>
            Creates a PropVariant that can be used to seek within a sequencer source presentation.
            </summary>
            <param name="id">Sequencer element identifier. This value specifies the segment in which to begin playback.</param>
            <param name="offset">Starting position within the segment.</param>
            <returns>Returns an instance of a PropVariant. The method fills in the PropVariant with the information needed for performing a seek operation.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateLegacyMediaBufferOnMFMediaBuffer(VisioForge.Libs.MediaFoundation.IMFSample,VisioForge.Libs.MediaFoundation.IMFMediaBuffer,System.Int32,System.Object@)">
            <summary>
            Converts a Media Foundation media buffer into a buffer that is compatible with DirectX Media Objects (DMOs).
            </summary>
            <param name="sample">An instance of the IMFSample interface of the sample that contains the Media Foundation buffer. This parameter can be null.</param>
            <param name="mediaBuffer">An instance of the IMFMediaBuffer interface of the Media Foundation buffer.</param>
            <param name="offset">Offset in bytes from the start of the Media Foundation buffer. This offset defines where the DMO buffer starts. If this parameter is zero, the DMO buffer starts at the beginning of the Media Foundation buffer.</param>
            <param name="legacyMediaBuffer">Receives an instance of a DMO IMediaBuffer interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSequencerSource(VisioForge.Libs.MediaFoundation.IMFSequencerSource@)">
            <summary>
            Creates the sequencer source.
            </summary>
            <param name="sequencerSource">Receives an instance of the IMFSequencerSource interface of the sequencer source.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateSequencerSource">
            <summary>
            Creates the sequencer source.
            </summary>
            <returns>Returns an instance of the IMFSequencerSource interface of the sequencer source.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetStrideForBitmapInfoHeader(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Calculates the minimum surface stride for a video format.
            </summary>
            <param name="format">FOURCC code or D3DFORMAT value that specifies the video format.</param>
            <param name="width">Width of the image, in pixels.</param>
            <param name="stride">Receives the minimum surface stride, in pixels.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CalculateBitmapImageSize(VisioForge.Libs.MediaFoundation.Misc.BitmapInfoHeader,System.Int32@,System.Boolean@)">
            <summary>
            Retrieves the image size for a video format. Given a BitmapInfoHeader structure, this function calculates the correct value of the ImageSize member.
            </summary>
            <param name="bih">A BitmapInfoHeader structure that describes the format.</param>
            <param name="imageSize">Receives the image size, in bytes.</param>
            <param name="known">Receives the value true if the function recognizes the video format. Otherwise, receives the value false.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.FrameRateToAverageTimePerFrame(System.Int32,System.Int32,System.Int64@)">
            <summary>
            Converts a video frame rate into a frame duration.
            </summary>
            <param name="numerator">The numerator of the frame rate.</param>
            <param name="denominator">The denominator of the frame rate.</param>
            <param name="averageTimePerFrame">Receives the average duration of a video frame, in 100-nanosecond units.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.FrameRateToAverageTimePerFrame(System.Int32,System.Int32,System.TimeSpan@)">
            <summary>
            Converts a video frame rate into a frame duration.
            </summary>
            <param name="numerator">The numerator of the frame rate.</param>
            <param name="denominator">The denominator of the frame rate.</param>
            <param name="averageTimePerFrame">Receives the average duration of a video frame.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CopyImage(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies an image or image plane from one buffer to another.
            </summary>
            <param name="destination">Pointer to the start of the first row of pixels in the destination buffer.</param>
            <param name="destinationStride">Stride of the destination buffer, in bytes.</param>
            <param name="source">Pointer to the start of the first row of pixels in the source image.</param>
            <param name="sourceStride">Stride of the source image, in bytes.</param>
            <param name="widthInBytes">Width of the image, in bytes.</param>
            <param name="lines">Number of rows of pixels to copy.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetPluginControl(VisioForge.Libs.MediaFoundation.IMFPluginControl@)">
            <summary>
            Gets an instance of the Microsoft Media Foundation plug-in manager.
            </summary>
            <param name="pluginControl">Receives an instance of the IMFPluginControl interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetPluginControl">
            <summary>
            Gets an instance of the Microsoft Media Foundation plug-in manager.
            </summary>
            <returns>Returns an instance of the IMFPluginControl interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTransformActivate(VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates a generic activation object for Media Foundation transforms (MFTs).
            </summary>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTransformActivate">
            <summary>
            Creates a generic activation object for Media Foundation transforms (MFTs).
            </summary>
            <returns>Returns an instance of the IMFActivate interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateCredentialCache(VisioForge.Libs.MediaFoundation.IMFNetCredentialCache@)">
            <summary>
            Creates a credential cache object. An application can use this object to implement a custom credential manager.
            </summary>
            <param name="credentialCache">Receives an instance of the IMFNetCredentialCache interface of the new credential cache object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.IsFormatYUV(System.Int32)">
            <summary>
            Queries whether a FOURCC code or D3DFORMAT value is a YUV format.
            </summary>
            <param name="format">FOURCC code or D3DFORMAT value.</param>
            <returns>Returns true if the value specifies a YUV format. Otherwise, returns false.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetPlaneSize(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Retrieves the image size, in bytes, for an uncompressed video format.
            </summary>
            <param name="format">FOURCC code or D3DFORMAT value that specifies the video format.</param>
            <param name="width">Width of the image, in pixels.</param>
            <param name="height">Height of the image, in pixels.</param>
            <param name="planeSize">Receives the size of one frame, in bytes. If the format is compressed or is not recognized, this value is zero.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ConvertFromFP16Array(System.Single[],System.Int16[],System.Int32)">
            <summary>
            Converts an array of 16-bit floating-point numbers into an array of 32-bit floating-point numbers.
            </summary>
            <param name="destination">An array of float values. The array must contain at least <paramref name="count"/> elements.</param>
            <param name="source">An array of 16-bit floating-point values, typed as Int16 values. The array must contain at least <paramref name="count"/> elements.</param>
            <param name="count">Number of elements in the <paramref name="source"/> array to convert.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ConvertToFP16Array(System.Int16[],System.Single[],System.Int32)">
            <summary>
            Converts an array of 32-bit floating-point numbers into an array of 16-bit floating-point numbers.
            </summary>
            <param name="destination">An array of 16-bit floating-point values, typed as Int16 values. The array must contain at least <paramref name="count"/> elements.</param>
            <param name="source">An array of float values. The array must contain at least <paramref name="count"/> elements.</param>
            <param name="count">Number of elements in the <paramref name="source"/> array to convert.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleAllocator(VisioForge.Libs.MediaFoundation.IMFVideoSampleAllocator@)">
            <summary>
            Creates an object that allocates video samples.
            </summary>
            <param name="sampleAllocator">Receives a pointer to the IMFVideoSampleAllocator interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleAllocator(VisioForge.Libs.MediaFoundation.IMFVideoSampleAllocatorCallback@)">
            <summary>
            Creates an object that allocates video samples.
            </summary>
            <param name="sampleAllocatorCallback">Receives a pointer to the IMFVideoSampleAllocatorCallback interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleAllocatorEx(VisioForge.Libs.MediaFoundation.IMFVideoSampleAllocator@)">
            <summary>
            Creates an object that allocates video samples that are compatible with Microsoft DirectX Graphics Infrastructure (DXGI).
            </summary>
            <param name="sampleAllocatorCallback">Receives a pointer to the IMFVideoSampleAllocator interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleAllocatorEx(VisioForge.Libs.MediaFoundation.IMFVideoSampleAllocatorEx@)">
            <summary>
            Creates an object that allocates video samples that are compatible with Microsoft DirectX Graphics Infrastructure (DXGI).
            </summary>
            <param name="sampleAllocatorCallback">Receives a pointer to the IMFVideoSampleAllocatorEx interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateVideoSampleAllocatorEx(VisioForge.Libs.MediaFoundation.IMFVideoSampleAllocatorCallback@)">
            <summary>
            Creates an object that allocates video samples that are compatible with Microsoft DirectX Graphics Infrastructure (DXGI).
            </summary>
            <param name="sampleAllocatorCallback">Receives a pointer to the IMFVideoSampleAllocatorCallback interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.MulDiv(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Calculates ((a * b) + d) / c, where each term is a 64-bit signed value.
            </summary>
            <param name="a">A multiplier.</param>
            <param name="b">Another multiplier.</param>
            <param name="c">The divisor.</param>
            <param name="d">The rounding factor.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ShutdownObject(System.Object)">
            <summary>
            Shuts down a Media Foundation object and releases all resources associated with the object.
            </summary>
            <param name="obj">An instance of a shutdownable object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>This is an helper method that wraps the IMFShutdown.Shutdown method. The method queries the object for the IMFShutdown interface and, if successful, calls Shutdown on the object.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateProxyLocator(System.String,VisioForge.Libs.MediaFoundation.Misc.IPropertyStore,VisioForge.Libs.MediaFoundation.IMFNetProxyLocator@)">
            <summary>
            Creates a default proxy locator.
            </summary>
            <param name="protocol">The name of the protocol.</param>
            <param name="proxyConfig">An instance of the IPropertyStore interface of a property store that contains the proxy configuration in the MFNETSOURCE_PROXYSETTINGS property.</param>
            <param name="proxyLocator">Receives an instance of the IMFNetProxyLocator interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateNetSchemePlugin(System.Guid,System.Object@)">
            <summary>
            Creates the scheme handler for the network source.
            </summary>
            <param name="riid">Interface identifier (IID) of the interface to retrieve.</param>
            <param name="schemeHandler">Receives an instance of the requested interface. The scheme handler exposes the IMFSchemeHandler interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateNetSchemePlugin(VisioForge.Libs.MediaFoundation.IMFSchemeHandler@)">
            <summary>
            Creates the scheme handler for the network source.
            </summary>
            <param name="schemeHandler">Receives an instance of the IMFSchemeHandler interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.ValidateMediaTypeSize(System.Guid,System.IntPtr,System.Int32)">
            <summary>
            Validates the size of a buffer for a video format block.
            </summary>
            <param name="formatType">GUID that specifies the type of format block.</param>
            <param name="blockPtr">Pointer to a buffer that contains the format block.</param>
            <param name="blockSize">Size of the pBlock buffer, in bytes.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CalculateImageSize(System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Retrieves the image size, in bytes, for an uncompressed video format.
            </summary>
            <param name="guidSubtype">Media subtype for the video format.</param>
            <param name="width">Width of the image, in pixels.</param>
            <param name="height">Height of the image, in pixels.</param>
            <param name="imageSize">Receives the size of each frame, in bytes. If the format is compressed or is not recognized, the value is zero.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.AverageTimePerFrameToFrameRate(System.Int64,System.Int32@,System.Int32@)">
            <summary>
            Calculates the frame rate, in frames per second, from the average duration of a video frame.
            </summary>
            <param name="averageTimePerFrame">The average duration of a video frame, in 100-nanosecond units.</param>
            <param name="numerator">Receives the numerator of the frame rate.</param>
            <param name="denominator">Receives the denominator of the frame rate.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.AverageTimePerFrameToFrameRate(System.TimeSpan,System.Int32@,System.Int32@)">
            <summary>
            Calculates the frame rate, in frames per second, from the average duration of a video frame.
            </summary>
            <param name="averageTimePerFrame">The average duration of a video frame.</param>
            <param name="numerator">Receives the numerator of the frame rate.</param>
            <param name="denominator">Receives the denominator of the frame rate.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateRemoteDesktopPlugin(VisioForge.Libs.MediaFoundation.IMFRemoteDesktopPlugin@)">
            <summary>
            Creates the remote desktop plug-in object. Use this object if the application is running in a Terminal Services client session.
            </summary>
            <param name="plugin">Receives an instance of the IMFRemoteDesktopPlugin interface of the plug-in object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateRemoteDesktopPlugin">
            <summary>
            Creates the remote desktop plug-in object. Use this object if the application is running in a Terminal Services client session.
            </summary>
            <returns>Returns an instance of the IMFRemoteDesktopPlugin interface of the plug-in object.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateStandardQualityManager(VisioForge.Libs.MediaFoundation.IMFQualityManager@)">
            <summary>
            Creates the default implementation of the quality manager.
            </summary>
            <param name="qualityManager">Receives an instance of the quality manager's IMFQualityManager interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateStandardQualityManager">
            <summary>
            Creates the default implementation of the quality manager.
            </summary>
            <returns>Returns an instance of the quality manager's IMFQualityManager interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTrackedSample(VisioForge.Libs.MediaFoundation.EVR.IMFTrackedSample@)">
            <summary>
            Creates an IMFTrackedSample object that tracks the reference counts on a video media sample.
            </summary>
            <param name="trackedSample">Receives an instance of the IMFTrackedSample interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateTrackedSample">
            <summary>
            Creates an IMFTrackedSample object that tracks the reference counts on a video media sample.
            </summary>
            <returns>Returns an instance of the IMFTrackedSample interface.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.MapDX9FormatToDXGIFormat(System.Int32)">
            <summary>
            Converts a Microsoft Direct3D 9 format identifier to a Microsoft DirectX Graphics Infrastructure (DXGI) format identifier.
            </summary>
            <param name="dx9Format">The D3DFORMAT value or FOURCC code to convert.</param>
            <returns>Returns a DXGI_FORMAT value.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.MapDXGIFormatToDX9Format(System.Int32)">
            <summary>
            Converts a Microsoft DirectX Graphics Infrastructure (DXGI) format identifier to a Microsoft Direct3D 9 format identifier.
            </summary>
            <param name="dx11Format">The DXGI_FORMAT value to convert.</param>
            <returns>Returns a D3DFORMAT value or FOURCC code.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.UnlockDXGIDeviceManager">
            <summary>
            Unlocks the shared Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.
            </summary>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.RegisterLocalSchemeHandler(System.String,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Registers a scheme handler in the caller's process.
            </summary>
            <param name="scheme">A string that contains the scheme. The scheme includes the trailing ':' character; for example, "http:".</param>
            <param name="activate">An instance of the IMFActivate interface of an activation object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.RegisterLocalByteStreamHandler(System.String,System.String,VisioForge.Libs.MediaFoundation.IMFActivate)">
            <summary>
            Registers a byte-stream handler in the caller's process.
            </summary>
            <param name="fileExtension">A string that contains the file name extension for this handler.</param>
            <param name="mimeType">A string that contains the MIME type for this handler.</param>
            <param name="activate">An instance of the IMFActivate interface of an activation object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaExtensionActivate(System.String,System.Object,System.Guid,System.Object@)">
            <summary>
            Creates an activation object for a Windows Runtime class.
            </summary>
            <param name="activatableClassId">The class identifier that is associated with the activatable runtime class.</param>
            <param name="configuration">An instance of an optional IPropertySet object, which is used to configure the Windows Runtime class. This parameter can be null.</param>
            <param name="riid">The interface identifier (IID) of the interface being requested.</param>
            <param name="obj">Receives an instance of the requested interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaExtensionActivate(System.String,System.Object,VisioForge.Libs.MediaFoundation.Interop.IClassFactory@)">
            <summary>
            Creates an activation object for a Windows Runtime class.
            </summary>
            <param name="activatableClassId">The class identifier that is associated with the activatable runtime class.</param>
            <param name="configuration">An instance of an optional IPropertySet object, which is used to configure the Windows Runtime class. This parameter can be null.</param>
            <param name="classFactory">Receives an instance of the IClassFactory interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateMediaExtensionActivate(System.String,System.Object,VisioForge.Libs.MediaFoundation.IMFActivate@)">
            <summary>
            Creates an activation object for a Windows Runtime class.
            </summary>
            <param name="activatableClassId">The class identifier that is associated with the activatable runtime class.</param>
            <param name="configuration">An instance of an optional IPropertySet object, which is used to configure the Windows Runtime class. This parameter can be null.</param>
            <param name="activate">Receives an instance of the IMFActivate interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetContentProtectionSystemCLSID(System.Guid,System.Guid@)">
            <summary>
            Gets the class identifier for a content protection system.
            </summary>
            <param name="guidProtectionSystemID">The GUID that identifies the content protection system.</param>
            <param name="clsid">Receives the class identifier to the content protection system.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateDXGIDeviceManager(System.Int32@,VisioForge.Libs.MediaFoundation.IMFDXGIDeviceManager@)">
            <summary>
            Creates an instance of the Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.
            </summary>
            <param name="resetToken">Receives a token that identifies this instance of the DXGI Device Manager. Use this token when calling IMFDXGIDeviceManager.ResetDevice. </param>
            <param name="deviceManager">Receives an instance of the IMFDXGIDeviceManager interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.LockDXGIDeviceManager(System.Int32@,VisioForge.Libs.MediaFoundation.IMFDXGIDeviceManager@)">
            <summary>
            Locks the shared Microsoft DirectX Graphics Infrastructure (DXGI) Device Manager.
            </summary>
            <param name="resetToken">Receives a token that identifies this instance of the DXGI Device Manager. Use this token when calling IMFDXGIDeviceManager.ResetDevice.</param>
            <param name="deviceManager">Receives an instance of the IMFDXGIDeviceManager interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateProtectedEnvironmentAccess(VisioForge.Libs.MediaFoundation.IMFProtectedEnvironmentAccess@)">
            <summary>
            Creates an IMFProtectedEnvironmentAccess object that allows content protection systems to perform a handshake with the protected environment.
            </summary>
            <param name="protectedEnvironmentAccess">Receives an instance of the IMFProtectedEnvironmentAccess interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.LoadSignedLibrary(System.String,VisioForge.Libs.MediaFoundation.IMFSignedLibrary@)">
            <summary>
            Loads a dynamic link library that is signed for the protected environment.
            </summary>
            <param name="fileName">The name of the dynamic link library to load. This dynamic link library must be signed for the protected environment.</param>
            <param name="signedLibrary">Receives an instance of the IMFSignedLibrary interface for the library.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetSystemId(VisioForge.Libs.MediaFoundation.IMFSystemId@)">
            <summary>
            Returns an IMFSystemId object for retrieving system id data.
            </summary>
            <param name="systemId">Receives an instance of the IMFSystemId interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateContentProtectionDevice(System.Guid,VisioForge.Libs.MediaFoundation.IMFContentProtectionDevice@)">
            <summary>
            Creates an IMFContentProtectionDevice interface for the specified media protection system.
            </summary>
            <param name="protectionSystemId">The idenfier of the media protection system for which you want to create the IMFContentProtectionDevice interface.</param>
            <param name="contentProtectionDevice">Receives an instance of the created IMFContentProtectionDevice interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CheckContentProtectionDevice(System.Guid)">
            <summary>
            Checks whether a hardware security processor is supported for the specified media protection system.
            </summary>
            <param name="protectionSystemId">The identifier of the protection system that you want to check.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.IsContentProtectionDeviceSupported(System.Guid,System.Boolean@)">
            <summary>
            Checks whether a hardware security processor is supported for the specified media protection system.
            </summary>
            <param name="protectionSystemId">The identifier of the protection system that you want to check.</param>
            <param name="isSupported">True if the hardware security processor is supported for the specified protection system; otherwise false.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.CreateContentDecryptorContext(System.Guid,VisioForge.Libs.MediaFoundation.IMFDXGIDeviceManager,VisioForge.Libs.MediaFoundation.IMFContentProtectionDevice,VisioForge.Libs.MediaFoundation.IMFContentDecryptorContext@)">
            <summary>
            Creates an IMFContentDecryptorContext interface for the specified media protection system.
            </summary>
            <param name="guidMediaProtectionSystemId">The identifier of the media protection system for which you want to create an IMFContentDecryptorContext interface.</param>
            <param name="dxgiManager">An instance of the IMFDXGIDeviceManager interface that you want to use for sharing the Direct3D 11 device.</param>
            <param name="contentProtectionDevice">The IMFContentProtectionDevice interface for the specified media protection system.</param>
            <param name="contentDecryptorContext">Receives an instance of the created IMFContentDecryptorContext interface.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetMFTMerit(System.Object,System.Guid,System.Int32@)">
            <summary>
            Gets the merit value of a hardware codec.
            </summary>
            <param name="mft">An instance of the Media Foundation transform (MFT) that represents the codec.</param>
            <param name="mftClsid">The class identifier (CLSID) of the MFT.</param>
            <param name="merit">Receives the merit value.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetMFTMerit(System.Object,System.String,System.Int32@)">
            <summary>
            Gets the merit value of a hardware codec.
            </summary>
            <param name="mft">An instance of the Media Foundation transform (MFT) that represents the codec.</param>
            <param name="symbolLink">A string that contains the symbol link for the underlying hardware device.</param>
            <param name="merit">Receives the merit value.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MF.GetLocalId(System.Byte[],System.String@)">
            <summary>
            Gets the local system ID.
            </summary>
            <param name="verifier">Application-specific verifier value.</param>
            <param name="id">Returned ID string.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.MFPlayer.MFP.CreateMediaPlayer(System.String,System.Boolean,VisioForge.Libs.MediaFoundation.MFPlayer.MFP_CREATION_OPTIONS,VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayerCallback,System.IntPtr,VisioForge.Libs.MediaFoundation.MFPlayer.IMFPMediaPlayer@)">
            <summary>
            Creates a new instance of the MFPlay player object.
            </summary>
            <param name="url">A string that contains the URL of a media file to open.</param>
            <param name="startPlayback">If true, playback starts automatically. If false, playback does not start until the application calls IMFMediaPlayer.Play.</param>
            <param name="creationOptions">Bitwise OR of zero of more flags from the MFP_CREATION_OPTIONS enumeration.</param>
            <param name="callback">An instance of the IMFPMediaPlayerCallback interface of a callback object, implemented by the application.</param>
            <param name="hWnd">A handle to a window where the video will appear. For audio-only playback, this parameter can be IntPtr.Zero.</param>
            <param name="mediaPlayer">Receives an instance of to the IMFPMediaPlayer interface.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.Enum(System.Guid,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo,System.Guid[]@)">
            <summary>
            Enumerates Media Foundation transforms (MFTs) in the registry.
            </summary>
            <param name="transformCategory">Guid specifying the category of MFTs to enumerate.</param>
            <param name="inputType">Indicate the input media type that the results must support. If null is passed, the input type is not use to filter the results.</param>
            <param name="outputType">Indicate the output media type that the results must support. If null is passed, the output type is not use to filter the results.</param>
            <param name="resultCLSID">Receives an array of MFT CLSIDs that match the parameters.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.Enum(System.Guid,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo,VisioForge.Libs.MediaFoundation.IMFAttributes,System.Guid[]@)">
            <summary>
            Enumerates Media Foundation transforms (MFTs) in the registry.
            </summary>
            <param name="transformCategory">Guid specifying the category of MFTs to enumerate.</param>
            <param name="inputType">Indicate the input media type that the results must support. If null is passed, the input type is not use to filter the results.</param>
            <param name="outputType">Indicate the output media type that the results must support. If null is passed, the output type is not use to filter the results.</param>
            <param name="attributes">Indicate attributes that the results must support.</param>
            <param name="resultCLSID">Receives an array of MFT CLSIDs that match the parameters.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>The parameter <paramref name="attributes"/> is ingnored on Windows 7 or higher and should be null.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.EnumEx(System.Guid,VisioForge.Libs.MediaFoundation.Transform.MFT_EnumFlag,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo,VisioForge.Libs.MediaFoundation.IMFActivate[]@)">
            <summary>
            Enumerates Media Foundation transforms (MFTs) in the registry.
            </summary>
            <param name="transformCategory">Guid specifying the category of MFTs to enumerate.</param>
            <param name="flags">One or more members of the MFT_EnumFlag enumeration.</param>
            <param name="inputType">Indicate the input media type that the results must support. If null is passed, the input type is not use to filter the results.</param>
            <param name="outputType">Indicate the output media type that the results must support. If null is passed, the output type is not use to filter the results.</param>
            <param name="resultActivate">Receives an array of IMFActivate that match the parameters.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.GetInfo(System.Guid,System.String@,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[]@,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[]@)">
            <summary>
            Gets information from the registry about a Media Foundation transform (MFT). 
            </summary>
            <param name="clsidMFT">The CLSID of the MFT to query.</param>
            <param name="name">Receives the name of the MFT.</param>
            <param name="inputTypes">Receives an array of input types supported by the MFT.</param>
            <param name="outputTypes">Receives an array of output types supported by the MFT.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.Register(System.Guid,System.Guid,System.String,VisioForge.Libs.MediaFoundation.Transform.MFT_EnumFlag,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[],VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[],VisioForge.Libs.MediaFoundation.IMFAttributes)">
            <summary>
            Register the Media Foundation transform (MFT) into the registry.
            </summary>
            <param name="clsidMFT">The CLSID of the MFT.</param>
            <param name="transformCategory">Guid specifying the category of the MFT.</param>
            <param name="name">The MFT's firendly name.</param>
            <param name="flags">One or more members of the MFT_EnumFlag enumeration.</param>
            <param name="inputTypes">An array specifiying the MFT's input types.</param>
            <param name="outputTypes">An array specifiying the MFT's output types.</param>
            <param name="attributes">An attribute store containing additional registry information.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.RegisterLocal(VisioForge.Libs.MediaFoundation.Interop.IClassFactory,System.Guid,System.String,VisioForge.Libs.MediaFoundation.Transform.MFT_EnumFlag,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[],VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[])">
            <summary>
            Registers a Media Foundation Transform (MFT) in the caller's process.
            </summary>
            <param name="classFactory">A class factory object who have the responsibility to create the MFT.</param>
            <param name="transformCategory">Guid specifying the category of the MFT.</param>
            <param name="name">The MFT's firendly name.</param>
            <param name="flags">One or more members of the MFT_EnumFlag enumeration.</param>
            <param name="inputTypes">An array specifiying the MFT's input types.</param>
            <param name="outputTypes">An array specifiying the MFT's output types.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.RegisterLocalByCLSID(System.Guid,System.Guid,System.String,VisioForge.Libs.MediaFoundation.Transform.MFT_EnumFlag,VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[],VisioForge.Libs.MediaFoundation.Transform.MFTRegisterTypeInfo[])">
            <summary>
            Registers a Media Foundation Transform (MFT) in the caller's process.
            </summary>
            <param name="clsidMFT">The CLSID of the MFT.</param>
            <param name="transformCategory">Guid specifying the category of the MFT.</param>
            <param name="name">The MFT's firendly name.</param>
            <param name="flags">One or more members of the MFT_EnumFlag enumeration.</param>
            <param name="inputTypes">An array specifiying the MFT's input types.</param>
            <param name="outputTypes">An array specifiying the MFT's output types.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.Unregister(System.Guid)">
            <summary>
            Unregister the Media Foundation transform (MFT) from the registry.
            </summary>
            <param name="clsidMFT">The CLSID of the MFT.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.UnregisterLocal(VisioForge.Libs.MediaFoundation.Interop.IClassFactory)">
            <summary>
            Unregisters one or more Media Foundation transforms (MFTs) from the caller's process.
            </summary>
            <param name="classFactory">An instance of the <see cref="T:VisioForge.Libs.MediaFoundation.Interop.IClassFactory"/> interface of a class factory object.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
            <remarks>If null is passed to <paramref name="classFactory"/> then all local MFT are unregistered.</remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Transform.MFT.UnregisterLocalByCLSID(System.Guid)">
            <summary>
            Unregisters a Media Foundation transform (MFT) from the caller's process.
            </summary>
            <param name="clsidMFT">The CLSID of the MFT.</param>
            <returns>If this function succeeds, it returns the S_OK member. Otherwise, it returns another HResult's member that describe the error.</returns>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.DvInfo">
            <summary> FORMAT_DvInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.MFVideoFormat">
            <summary> FORMAT_MFVideoFormat </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.MPEG2Video">
            <summary> FORMAT_MPEG2Video </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.MPEGStreams">
            <summary> FORMAT_MPEGStreams </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.MPEGVideo">
            <summary> FORMAT_MPEGVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.VideoInfo">
            <summary> FORMAT_VideoInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.VideoInfo2">
            <summary> FORMAT_VideoInfo2 </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.WaveFormatEx">
            <summary> FORMAT_WaveFormatEx </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFRepresentation.AMMediaType">
            <summary> AM_MEDIA_TYPE_REPRESENTATION </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Default">
            <summary> From MFMediaType_Default </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Audio">
            <summary> From MFMediaType_Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Video">
            <summary> From MFMediaType_Video </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Protected">
            <summary> From MFMediaType_Protected </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.SAMI">
            <summary> From MFMediaType_SAMI </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Script">
            <summary> From MFMediaType_Script </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Image">
            <summary> From MFMediaType_Image </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.HTML">
            <summary> From MFMediaType_HTML </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Binary">
            <summary> From MFMediaType_Binary </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.FileTransfer">
            <summary> From MFMediaType_FileTransfer </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.MFMediaType.Stream">
            <summary> From MFMediaType_Stream </summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_UNEXPECTED">
            <summary>Catastrophic failure</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_NOTIMPL">
            <summary>Not implemented</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_OUTOFMEMORY">
            <summary>Ran out of memory</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_INVALIDARG">
            <summary>One or more arguments are invalid</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_NOINTERFACE">
            <summary>No such interface supported</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_POINTER">
            <summary>Invalid pointer</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_HANDLE">
            <summary>Invalid handle</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_ABORT">
            <summary>Operation aborted</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_FAIL">
            <summary>Unspecified error</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.E_ACCESSDENIED">
            <summary>General access denied error</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.WIN32_ERROR_FILE_NOT_FOUND">
            <summary>The system cannot find the file specified.</summary>
            <unmanaged>HRESULT_FROM_WIN32(ERROR_FILE_NOT_FOUND)</unmanaged>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.WIN32_ERROR_MORE_DATA">
            <summary>More data is available.</summary>
            <unmanaged>HRESULT_FROM_WIN32(ERROR_MORE_DATA)</unmanaged>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.WIN32_ERROR_NO_MORE_ITEMS">
            <summary>No more data is available.</summary>
            <unmanaged>HRESULT_FROM_WIN32(ERROR_NO_MORE_ITEMS)</unmanaged>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.WIN32_ERROR_NOT_FOUND">
            <summary>Element not found.</summary>
            <unmanaged>HRESULT_FROM_WIN32(ERROR_NOT_FOUND)</unmanaged>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_S_CONVERTED">
            <summary>The underlying file was converted to compound file format.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_S_MULTIPLEOPENS">
            <summary>Multiple opens prevent consolidated. (commit succeeded).</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_S_CONSOLIDATIONFAILED">
            <summary>Consolidation of the storage file failed. (commit succeeded).</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_S_CANNOTCONSOLIDATE">
            <summary>Consolidation of the storage file is inappropriate. (commit succeeded).</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_INVALIDFUNCTION">
            <summary>Unable to perform requested operation.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_FILENOTFOUND">
            <summary>The file could not be found.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_TOOMANYOPENFILES">
            <summary>There are insufficient resources to open another file.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_ACCESSDENIED">
            <summary>Access Denied.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_INSUFFICIENTMEMORY">
            <summary>There is insufficient memory available to complete operation.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_INVALIDPOINTER">
            <summary>Invalid pointer error.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_WRITEFAULT">
            <summary>A disk error occurred during a write operation.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_LOCKVIOLATION">
            <summary>A lock violation has occurred.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_FILEALREADYEXISTS">
            <summary>File already exists.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_INVALIDPARAMETER">
            <summary>Invalid parameter error.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_MEDIUMFULL">
            <summary>There is insufficient disk space to complete operation.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_INVALIDNAME">
            <summary>The name is not valid.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_INVALIDFLAG">
            <summary>Invalid flag error.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_NOTCURRENT">
            <summary>The storage has been changed since the last commit.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_REVERTED">
            <summary>Attempted to use an object that has ceased to exist.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.STG_E_CANTSAVE">
            <summary>Can't save.</summary>
        </member>
        <member name="F:VisioForge.Libs.MediaFoundation.HResult.ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE">
            <summary>The function failed because the specified GDI device did not have any monitors associated with it.</summary>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Misc.ConstPropVariant">
             <summary>
             ConstPropVariant is used for [In] parameters.  This is important since
             for [In] parameters, you must *not* clear the PropVariant.  The caller
             will need to do that himself.
            
             Likewise, if you want to store a copy of a ConstPropVariant, you should
             store it to a PropVariant using the PropVariant constructor that takes a
             ConstPropVariant.  If you try to store the ConstPropVariant, when the
             caller frees his copy, yours will no longer be valid.
             </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.ConstPropVariant.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.ConstPropVariant.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Misc.MFRect">
            <summary>
            MFRect is a managed representation of the Win32 RECT structure.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.#ctor">
            <summary>
            Empty contructor. Initialize all fields to 0
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A parametred constructor. Initialize fields with given values.
            </summary>
            <param name="left">the left value</param>
            <param name="top">the top value</param>
            <param name="right">the right value</param>
            <param name="bottom">the bottom value</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.#ctor(System.Drawing.Rectangle)">
            <summary>
            A parametred constructor. Initialize fields with a given <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="rectangle">A <see cref="T:System.Drawing.Rectangle"/></param>
            <remarks>
            Warning, MFRect define a rectangle by defining two of his corners and <see cref="T:System.Drawing.Rectangle"/> define a rectangle with his upper/left corner, his width and his height.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.ToString">
            <summary>
            Provide de string representation of this MFRect instance
            </summary>
            <returns>A string formated like this : [left, top - right, bottom]</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.IsEmpty">
            <summary>
            Checks to see if the rectangle is empty
            </summary>
            <returns>Returns true if the rectangle is empty</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.op_Implicit(VisioForge.Libs.MediaFoundation.Misc.MFRect)~System.Drawing.Rectangle">
             <summary>
             Define implicit cast between MFRect and System.Drawing.Rectangle for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.ToRectangle"/> for similar functionality.
             <code>
               // Define a new Rectangle instance
               Rectangle r = new Rectangle(0, 0, 100, 100);
               // Do implicit cast between Rectangle and MFRect
               MFRect mfR = r;
            
               Console.WriteLine(mfR.ToString());
             </code>
             </summary>
             <param name="r">a MFRect to be cast</param>
             <returns>A casted System.Drawing.Rectangle</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.op_Implicit(System.Drawing.Rectangle)~VisioForge.Libs.MediaFoundation.Misc.MFRect">
             <summary>
             Define implicit cast between System.Drawing.Rectangle and MFRect for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.FromRectangle(System.Drawing.Rectangle)"/> for similar functionality.
             <code>
               // Define a new MFRect instance
               MFRect mfR = new MFRect(0, 0, 100, 100);
               // Do implicit cast between MFRect and Rectangle
               Rectangle r = mfR;
            
               Console.WriteLine(r.ToString());
             </code>
             </summary>
             <param name="r">A System.Drawing.Rectangle to be cast</param>
             <returns>A casted MFRect</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.ToRectangle">
            <summary>
            Get the System.Drawing.Rectangle equivalent to this MFRect instance.
            </summary>
            <returns>A System.Drawing.Rectangle</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.FromRectangle(System.Drawing.Rectangle)">
            <summary>
            Get a new MFRect instance for a given <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="r">The <see cref="T:System.Drawing.Rectangle"/> used to initialize this new MFGuid</param>
            <returns>A new instance of MFGuid</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFRect.CopyFrom(VisioForge.Libs.MediaFoundation.Misc.MFRect)">
            <summary>
            Copy the members from an MFRect into this object
            </summary>
            <param name="from">The rectangle from which to copy the values.</param>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Misc.MFGuid">
            <summary>
            MFGuid is a wrapper class around a System.Guid value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.#ctor">
            <summary>
            Empty constructor.
            Initialize it with System.Guid.Empty
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.#ctor(System.String)">
            <summary>
            Constructor.
            Initialize this instance with a given System.Guid string representation.
            </summary>
            <param name="g">A valid System.Guid as string</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.#ctor(System.Guid)">
            <summary>
            Constructor.
            Initialize this instance with a given System.Guid.
            </summary>
            <param name="g">A System.Guid value type</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.ToString">
            <summary>
            Get a string representation of this MFGuid Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.ToString(System.String)">
            <summary>
            Get a string representation of this MFGuid Instance with a specific format.
            </summary>
            <param name="format"><see cref="M:System.Guid.ToString"/> for a description of the format parameter.</param>
            <returns>A string representing this instance according to the format parameter</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.op_Implicit(VisioForge.Libs.MediaFoundation.Misc.MFGuid)~System.Guid">
             <summary>
             Define implicit cast between MFGuid and System.Guid for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.ToGuid"/> for similar functionality.
             <code>
               // Define a new MFGuid instance
               MFGuid mfG = new MFGuid("{33D57EBF-7C9D-435e-A15E-D300B52FBD91}");
               // Do implicit cast between MFGuid and Guid
               Guid g = mfG;
            
               Console.WriteLine(g.ToString());
             </code>
             </summary>
             <param name="g">MFGuid to be cast</param>
             <returns>A casted System.Guid</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.op_Implicit(System.Guid)~VisioForge.Libs.MediaFoundation.Misc.MFGuid">
             <summary>
             Define implicit cast between System.Guid and MFGuid for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.FromGuid(System.Guid)"/> for similar functionality.
             <code>
               // Define a new Guid instance
               Guid g = new Guid("{B9364217-366E-45f8-AA2D-B0ED9E7D932D}");
               // Do implicit cast between Guid and MFGuid
               MFGuid mfG = g;
            
               Console.WriteLine(mfG.ToString());
             </code>
             </summary>
             <param name="g">System.Guid to be cast</param>
             <returns>A casted MFGuid</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.ToGuid">
            <summary>
            Get the System.Guid equivalent to this MFGuid instance.
            </summary>
            <returns>A System.Guid</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFGuid.FromGuid(System.Guid)">
            <summary>
            Get a new MFGuid instance for a given System.Guid
            </summary>
            <param name="g">The System.Guid to wrap into a MFGuid</param>
            <returns>A new instance of MFGuid</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.#ctor">
            <summary>
            Construct an empty MFError
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.#ctor(System.Int32)">
            <summary>
            Construct an MFError from an int
            </summary>
            <param name="hr">an int to turn into an MFError</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.#ctor(VisioForge.Libs.MediaFoundation.HResult)">
            <summary>
            Construct an MFError from an MFHResult
            </summary>
            <param name="hr">an MFHResult to turn into an MFError</param>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.op_Implicit(System.Int32)~VisioForge.Libs.MediaFoundation.Misc.MFError">
            <summary>
            If hr is a fatal error, an exception is thrown, otherwise an MFError is returned.  This
            allows you to check for status codes (like MF_S_PROTECTION_NOT_REQUIRED).
            </summary>
            <example>
            // Throws an exception if the create fails.
            MFError hrthrow = new MFError();
            hrthrow = MFExtern.MFCreateAttributes(out ia, 6);
            </example>
            <param name="hr">The value from which to construct the MFError.</param>
            <returns>The new MFError</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.op_Implicit(VisioForge.Libs.MediaFoundation.Misc.MFError)~System.Int32">
            <summary>
            Convert an MFError back to an integer
            </summary>
            <param name="hr">The MFError from which to retrieve the integer</param>
            <returns>The MFError as an integer</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.ToString">
            <summary>
            Convert the MFError to the error string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.MFError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If MediaFoundation error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="T:VisioForge.Libs.MediaFoundation.Misc.AMMediaType">
            <summary>
            When you are done with an instance of this class,
            it should be released with FreeAMMediaType() to avoid leaking
            </summary>
        </member>
        <member name="M:VisioForge.Libs.MediaFoundation.Misc.AMMediaType.FreeAMMediaType(VisioForge.Libs.MediaFoundation.Misc.AMMediaType)">
            <summary>
             Free the nested structures and release any
             COM objects within an AMMediaType struct.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.BiQuadFilter">
            <summary>
            BiQuad filter
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.Transform(System.Single)">
            <summary>
            Passes a single sample through the filter
            </summary>
            <param name="inSample">Input sample</param>
            <returns>Output sample</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.SetLowPassFilter(System.Single,System.Single,System.Single)">
            <summary>
            Set this up as a low pass filter
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="cutoffFrequency">Cut-off Frequency</param>
            <param name="q">Bandwidth</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.SetPeakingEq(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set this up as a peaking EQ
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="centreFrequency">Centre Frequency</param>
            <param name="q">Bandwidth (Q)</param>
            <param name="dbGain">Gain in decibels</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.SetHighPassFilter(System.Single,System.Single,System.Single)">
            <summary>
            Set this as a high pass filter
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.LowPassFilter(System.Single,System.Single,System.Single)">
            <summary>
            Create a low pass filter
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.HighPassFilter(System.Single,System.Single,System.Single)">
            <summary>
            Create a High pass filter
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.BandPassFilterConstantSkirtGain(System.Single,System.Single,System.Single)">
            <summary>
            Create a bandpass filter with constant skirt gain
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.BandPassFilterConstantPeakGain(System.Single,System.Single,System.Single)">
            <summary>
            Create a bandpass filter with constant peak gain
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.NotchFilter(System.Single,System.Single,System.Single)">
            <summary>
            Creates a notch filter
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.AllPassFilter(System.Single,System.Single,System.Single)">
            <summary>
            Creaes an all pass filter
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.PeakingEQ(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a Peaking EQ
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.LowShelf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            H(s) = A * (s^2 + (sqrt(A)/Q)*s + A)/(A*s^2 + (sqrt(A)/Q)*s + 1)
            </summary>
            <param name="sampleRate"></param>
            <param name="cutoffFrequency"></param>
            <param name="shelfSlope">a "shelf slope" parameter (for shelving EQ only).  
            When S = 1, the shelf slope is as steep as it can be and remain monotonically
            increasing or decreasing gain with frequency.  The shelf slope, in dB/octave, 
            remains proportional to S for all other values for a fixed f0/Fs and dBgain.</param>
            <param name="dbGain">Gain in decibels</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.BiQuadFilter.HighShelf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            H(s) = A * (A*s^2 + (sqrt(A)/Q)*s + 1)/(s^2 + (sqrt(A)/Q)*s + A)
            </summary>
            <param name="sampleRate"></param>
            <param name="cutoffFrequency"></param>
            <param name="shelfSlope"></param>
            <param name="dbGain"></param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.Complex">
            <summary>
            Type to represent complex number
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.Complex.X">
            <summary>
            Real Part
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.Complex.Y">
            <summary>
            Imaginary Part
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator">
            <summary>
            Envelope generator (ADSR)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.EnvelopeState">
            <summary>
            Envelope State
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.EnvelopeState.Idle">
            <summary>
            Idle
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.EnvelopeState.Attack">
            <summary>
            Attack
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.EnvelopeState.Decay">
            <summary>
            Decay
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.EnvelopeState.Sustain">
            <summary>
            Sustain
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.EnvelopeState.Release">
            <summary>
            Release
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.#ctor">
            <summary>
            Creates and Initializes an Envelope Generator
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.AttackRate">
            <summary>
            Attack Rate (seconds * SamplesPerSecond)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.DecayRate">
            <summary>
            Decay Rate (seconds * SamplesPerSecond)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.ReleaseRate">
            <summary>
            Release Rate (seconds * SamplesPerSecond)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.SustainLevel">
            <summary>
            Sustain Level (1 = 100%)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.SetTargetRatioAttack(System.Single)">
            <summary>
            Sets the attack curve
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.SetTargetRatioDecayRelease(System.Single)">
            <summary>
            Sets the decay release curve
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.Process">
            <summary>
            Read the next volume multiplier from the envelope generator
            </summary>
            <returns>A volume multiplier</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.Gate(System.Boolean)">
            <summary>
            Trigger the gate
            </summary>
            <param name="gate">If true, enter attack phase, if false enter release phase (unless already idle)</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.State">
            <summary>
            Current envelope state
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.Reset">
            <summary>
            Reset to idle state
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.EnvelopeGenerator.GetOutput">
            <summary>
            Get the current output level
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.FastFourierTransform">
            <summary>
            Summary description for FastFourierTransform.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.FastFourierTransform.FFT(System.Boolean,System.Int32,VisioForge.Libs.Types.DSPComplex[])">
            <summary>
            This computes an in-place complex-to-complex FFT 
            x and y are the real and imaginary arrays of 2^m points.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.FastFourierTransform.HammingWindow(System.Int32,System.Int32)">
            <summary>
            Applies a Hamming Window
            </summary>
            <param name="n">Index into frame</param>
            <param name="frameSize">Frame size (e.g. 1024)</param>
            <returns>Multiplier for Hamming window</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.FastFourierTransform.HannWindow(System.Int32,System.Int32)">
            <summary>
            Applies a Hann Window
            </summary>
            <param name="n">Index into frame</param>
            <param name="frameSize">Frame size (e.g. 1024)</param>
            <returns>Multiplier for Hann window</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.FastFourierTransform.BlackmannHarrisWindow(System.Int32,System.Int32)">
            <summary>
            Applies a Blackman-Harris Window
            </summary>
            <param name="n">Index into frame</param>
            <param name="frameSize">Frame size (e.g. 1024)</param>
            <returns>Multiplier for Blackmann-Harris window</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.ImpulseResponseConvolution">
            <summary>
            Summary description for ImpulseResponseConvolution.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.ImpulseResponseConvolution.Convolve(System.Single[],System.Single[])">
            <summary>
            A very simple mono convolution algorithm
            </summary>
            <remarks>
            This will be very slow
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.ImpulseResponseConvolution.Normalize(System.Single[])">
            <summary>
            This is actually a downwards normalize for data that will clip
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Dsp.WdlResampler">
            <summary>
            Fully managed resampler, based on Cockos WDL Resampler
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.WdlResampler.#ctor">
            <summary>
            Creates a new Resampler
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.WdlResampler.SetMode(System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            sets the mode
            if sinc set, it overrides interp or filtercnt
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.WdlResampler.SetFilterParms(System.Single,System.Single)">
            <summary>
            Sets the filter parameters
            used for filtercnt>0 but not sinc
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.WdlResampler.SetFeedMode(System.Boolean)">
            <summary>
            Set feed mode
            </summary>
            <param name="wantInputDriven">if true, that means the first parameter to ResamplePrepare will specify however much input you have, not how much you want</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.WdlResampler.Reset(System.Double)">
            <summary>
            Reset
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Dsp.WdlResampler.ResamplePrepare(System.Int32,System.Int32,System.Single[]@,System.Int32@)">
            <summary>
            Prepare
            note that it is safe to call ResamplePrepare without calling ResampleOut (the next call of ResamplePrepare will function as normal)
            nb inbuffer was WDL_ResampleSample **, returning a place to put the in buffer, so we return a buffer and offset
            </summary>
            <param name="out_samples">req_samples is output samples desired if !wantInputDriven, or if wantInputDriven is input samples that we have</param>
            <param name="nch"></param>
            <param name="inbuffer"></param>
            <param name="inbufferOffset"></param>
            <returns>returns number of samples desired (put these into *inbuffer)</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.BooleanMixerControl">
            <summary>
            Boolean mixer control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.BooleanMixerControl.GetDetails(System.IntPtr)">
            <summary>
            Gets the details for this control
            </summary>
            <param name="pDetails">memory pointer</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.BooleanMixerControl.Value">
            <summary>
            The current value of the control
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.CustomMixerControl">
            <summary>
            Custom Mixer control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.CustomMixerControl.GetDetails(System.IntPtr)">
            <summary>
            Get the data for this custom control
            </summary>
            <param name="pDetails">pointer to memory to receive data</param>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.ListTextMixerControl">
            <summary>
            List text mixer control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.ListTextMixerControl.GetDetails(System.IntPtr)">
            <summary>
            Get the details for this control
            </summary>
            <param name="pDetails">Memory location to read to</param>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.Mixer">
            <summary>Represents a Windows mixer device</summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.NumberOfDevices">
            <summary>The number of mixer devices available</summary>	
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.Mixer.#ctor(System.Int32)">
            <summary>Connects to the specified mixer</summary>
            <param name="mixerIndex">The index of the mixer to use. 
            This should be between zero and NumberOfDevices - 1</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.DestinationCount">
            <summary>The number of destinations this mixer supports</summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.Name">
            <summary>The name of this mixer device</summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.Manufacturer">
            <summary>The manufacturer code for this mixer device</summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.ProductID">
            <summary>The product identifier code for this mixer device</summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.Mixer.GetDestination(System.Int32)">
            <summary>Retrieve the specified MixerDestination object</summary>
            <param name="destinationIndex">The ID of the destination to use.
            Should be between 0 and DestinationCount - 1</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.Destinations">
            <summary>
            A way to enumerate the destinations
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.Mixer.Mixers">
            <summary>
            A way to enumerate all available devices
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerControl">
            <summary>
            Represents a mixer control
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControl.mixerHandle">
            <summary>
            Mixer Handle
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControl.nChannels">
            <summary>
            Number of Channels
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControl.mixerHandleType">
            <summary>
            Mixer Handle Type
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.GetMixerControls(System.IntPtr,VisioForge.Libs.NAudio.Mixer.MixerLine,VisioForge.Libs.NAudio.Mixer.MixerFlags)">
            <summary>
            Gets all the mixer controls
            </summary>
            <param name="mixerHandle">Mixer Handle</param>
            <param name="mixerLine">Mixer Line</param>
            <param name="mixerHandleType">Mixer Handle Type</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.GetMixerControl(System.IntPtr,System.Int32,System.Int32,System.Int32,VisioForge.Libs.NAudio.Mixer.MixerFlags)">
            <summary>
            Gets a specified Mixer Control
            </summary>
            <param name="mixerHandle">Mixer Handle</param>
            <param name="nLineID">Line ID</param>
            <param name="controlId">Control ID</param>
            <param name="nChannels">Number of Channels</param>
            <param name="mixerFlags">Flags to use (indicates the meaning of mixerHandle)</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.GetControlDetails">
            <summary>
            Gets the control details
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.GetDetails(System.IntPtr)">
            <summary>
            Gets the control details
            </summary>
            <param name="pDetails"></param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.Name">
            <summary>
            Mixer control name
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.ControlType">
            <summary>
            Mixer control type
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.IsControlBoolean(VisioForge.Libs.NAudio.Mixer.MixerControlType)">
            <summary>
            Returns true if this is a boolean control
            </summary>
            <param name="controlType">Control type</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.IsBoolean">
            <summary>
            Is this a boolean control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.IsControlListText(VisioForge.Libs.NAudio.Mixer.MixerControlType)">
            <summary>
            Determines whether a specified mixer control type is a list text control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.IsListText">
            <summary>
            True if this is a list text control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.IsSigned">
            <summary>
            True if this is a signed control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.IsUnsigned">
            <summary>
            True if this is an unsigned control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerControl.IsCustom">
            <summary>
            True if this is a custom control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerControl.ToString">
            <summary>
            String representation for debug purposes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerControlType">
            <summary>
            Mixer control types
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Custom">
            <summary>Custom</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.BooleanMeter">
            <summary>Boolean meter</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.SignedMeter">
            <summary>Signed meter</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.PeakMeter">
            <summary>Peak meter</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.UnsignedMeter">
            <summary>Unsigned meter</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Boolean">
            <summary>Boolean</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.OnOff">
            <summary>On Off</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Mute">
            <summary>Mute</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Mono">
            <summary>Mono</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Loudness">
            <summary>Loudness</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.StereoEnhance">
            <summary>Stereo Enhance</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Button">
            <summary>Button</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Decibels">
            <summary>Decibels</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Signed">
            <summary>Signed</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Unsigned">
            <summary>Unsigned</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Percent">
            <summary>Percent</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Slider">
            <summary>Slider</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Pan">
            <summary>Pan</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.QSoundPan">
            <summary>Q-sound pan</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Fader">
            <summary>Fader</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Volume">
            <summary>Volume</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Bass">
            <summary>Bass</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Treble">
            <summary>Treble</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Equalizer">
            <summary>Equaliser</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.SingleSelect">
            <summary>Single Select</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Mux">
            <summary>Mux</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.MultipleSelect">
            <summary>Multiple select</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.Mixer">
            <summary>Mixer</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.MicroTime">
            <summary>Micro time</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerControlType.MilliTime">
            <summary>Milli time</summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerFlags">
            <summary>
            Mixer Interop Flags
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.Handle">
            <summary>
            MIXER_OBJECTF_HANDLE 	= 0x80000000;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.Mixer">
            <summary>
            MIXER_OBJECTF_MIXER 	= 0x00000000;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.MixerHandle">
            <summary>
            MIXER_OBJECTF_HMIXER
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.WaveOut">
            <summary>
            MIXER_OBJECTF_WAVEOUT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.WaveOutHandle">
            <summary>
            MIXER_OBJECTF_HWAVEOUT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.WaveIn">
            <summary>
            MIXER_OBJECTF_WAVEIN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.WaveInHandle">
            <summary>
            MIXER_OBJECTF_HWAVEIN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.MidiOut">
            <summary>
            MIXER_OBJECTF_MIDIOUT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.MidiOutHandle">
            <summary>
            MIXER_OBJECTF_HMIDIOUT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.MidiIn">
            <summary>
            MIXER_OBJECTF_MIDIIN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.MidiInHandle">
            <summary>
            MIXER_OBJECTF_HMIDIIN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.Aux">
            <summary>
            MIXER_OBJECTF_AUX
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.Value">
            <summary>
            MIXER_GETCONTROLDETAILSF_VALUE      	= 0x00000000;
            MIXER_SETCONTROLDETAILSF_VALUE      	= 0x00000000;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.ListText">
            <summary>
            MIXER_GETCONTROLDETAILSF_LISTTEXT   	= 0x00000001;
            MIXER_SETCONTROLDETAILSF_LISTTEXT   	= 0x00000001;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.QueryMask">
            <summary>
            MIXER_GETCONTROLDETAILSF_QUERYMASK  	= 0x0000000F;
            MIXER_SETCONTROLDETAILSF_QUERYMASK  	= 0x0000000F;
            MIXER_GETLINECONTROLSF_QUERYMASK    	= 0x0000000F;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.All">
            <summary>
            MIXER_GETLINECONTROLSF_ALL          	= 0x00000000;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.OneById">
            <summary>
            MIXER_GETLINECONTROLSF_ONEBYID      	= 0x00000001;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.OneByType">
            <summary>
            MIXER_GETLINECONTROLSF_ONEBYTYPE    	= 0x00000002;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.GetLineInfoOfDestination">
            <summary>
            MIXER_GETLINEINFOF_DESTINATION      	= 0x00000000;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.GetLineInfoOfSource">
            <summary>
            MIXER_GETLINEINFOF_SOURCE           	= 0x00000001;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.GetLineInfoOfLineId">
            <summary>
            MIXER_GETLINEINFOF_LINEID           	= 0x00000002;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.GetLineInfoOfComponentType">
            <summary>
            MIXER_GETLINEINFOF_COMPONENTTYPE    	= 0x00000003;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.GetLineInfoOfTargetType">
            <summary>
            MIXER_GETLINEINFOF_TARGETTYPE       	= 0x00000004;
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerFlags.GetLineInfoOfQueryMask">
            <summary>
            MIXER_GETLINEINFOF_QUERYMASK        	= 0x0000000F;
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerInterop.MIXERLINE_LINEF">
            <summary>
            Mixer Line Flags
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.MIXERLINE_LINEF.MIXERLINE_LINEF_ACTIVE">
            <summary>
            Audio line is active. An active line indicates that a signal is probably passing 
            through the line.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.MIXERLINE_LINEF.MIXERLINE_LINEF_DISCONNECTED">
            <summary>
            Audio line is disconnected. A disconnected line's associated controls can still be 
            modified, but the changes have no effect until the line is connected.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.MIXERLINE_LINEF.MIXERLINE_LINEF_SOURCE">
            <summary>
            Audio line is an audio source line associated with a single audio destination line. 
            If this flag is not set, this line is an audio destination line associated with zero 
            or more audio source lines.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds">
            <summary>
            BOUNDS structure
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds.minimum">
            <summary>
            dwMinimum / lMinimum / reserved 0
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds.maximum">
            <summary>
            dwMaximum / lMaximum / reserved 1
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds.reserved2">
            <summary>
            reserved 2
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds.reserved3">
            <summary>
            reserved 3
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds.reserved4">
            <summary>
            reserved 4
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Bounds.reserved5">
            <summary>
            reserved 5
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics">
            <summary>
            METRICS structure
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics.step">
            <summary>
            cSteps / reserved[0]
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics.customData">
            <summary>
            cbCustomData / reserved[1], number of bytes for control details
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics.reserved2">
            <summary>
            reserved 2
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics.reserved3">
            <summary>
            reserved 3
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics.reserved4">
            <summary>
            reserved 4
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerInterop.Metrics.reserved5">
            <summary>
            reserved 5
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerInterop.MIXERCONTROL">
            <summary>
            MIXERCONTROL struct
            http://msdn.microsoft.com/en-us/library/dd757293%28VS.85%29.aspx
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerLine">
            <summary>
            Represents a mixer line (source or destination)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerLine.#ctor(System.IntPtr,System.Int32,VisioForge.Libs.NAudio.Mixer.MixerFlags)">
            <summary>
            Creates a new mixer destination
            </summary>
            <param name="mixerHandle">Mixer Handle</param>
            <param name="destinationIndex">Destination Index</param>
            <param name="mixerHandleType">Mixer Handle Type</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerLine.#ctor(System.IntPtr,System.Int32,System.Int32,VisioForge.Libs.NAudio.Mixer.MixerFlags)">
            <summary>
            Creates a new Mixer Source For a Specified Source
            </summary>
            <param name="mixerHandle">Mixer Handle</param>
            <param name="destinationIndex">Destination Index</param>
            <param name="sourceIndex">Source Index</param>
            <param name="mixerHandleType">Flag indicating the meaning of mixerHandle</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerLine.GetMixerIdForWaveIn(System.Int32)">
            <summary>
            Creates a new Mixer Source
            </summary>
            <param name="waveInDevice">Wave In Device</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.Name">
            <summary>
            Mixer Line Name
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.ShortName">
            <summary>
            Mixer Line short name
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.LineId">
            <summary>
            The line ID
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.ComponentType">
            <summary>
            Component Type
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.TypeDescription">
            <summary>
            Mixer destination type description
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.Channels">
            <summary>
            Number of channels
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.SourceCount">
            <summary>
            Number of sources
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.ControlsCount">
            <summary>
            Number of controls
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.IsActive">
            <summary>
            Is this destination active
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.IsDisconnected">
            <summary>
            Is this destination disconnected
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.IsSource">
            <summary>
            Is this destination a source
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerLine.GetSource(System.Int32)">
            <summary>
            Gets the specified source
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.Controls">
            <summary>
            Enumerator for the controls on this Mixer Limne
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.Sources">
            <summary>
            Enumerator for the sources on this Mixer Line
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerLine.TargetName">
            <summary>
            The name of the target output device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerLine.ToString">
            <summary>
            Describes this Mixer Line (for diagnostic purposes)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType">
            <summary>
            Mixer Line Component type enumeration
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationUndefined">
            <summary>
            Audio line is a destination that cannot be defined by one of the standard component types. A mixer device is required to use this component type for line component types that have not been defined by Microsoft Corporation.
            MIXERLINE_COMPONENTTYPE_DST_UNDEFINED
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationDigital">
            <summary>
            Audio line is a digital destination (for example, digital input to a DAT or CD audio device).
            MIXERLINE_COMPONENTTYPE_DST_DIGITAL 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationLine">
            <summary>
            Audio line is a line level destination (for example, line level input from a CD audio device) that will be the final recording source for the analog-to-digital converter (ADC). Because most audio cards for personal computers provide some sort of gain for the recording audio source line, the mixer device will use the MIXERLINE_COMPONENTTYPE_DST_WAVEIN type.
            MIXERLINE_COMPONENTTYPE_DST_LINE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationMonitor">
            <summary>
            Audio line is a destination used for a monitor.
            MIXERLINE_COMPONENTTYPE_DST_MONITOR
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationSpeakers">
            <summary>
            Audio line is an adjustable (gain and/or attenuation) destination intended to drive speakers. This is the typical component type for the audio output of audio cards for personal computers.
            MIXERLINE_COMPONENTTYPE_DST_SPEAKERS
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationHeadphones">
            <summary>
            Audio line is an adjustable (gain and/or attenuation) destination intended to drive headphones. Most audio cards use the same audio destination line for speakers and headphones, in which case the mixer device simply uses the MIXERLINE_COMPONENTTYPE_DST_SPEAKERS type.
            MIXERLINE_COMPONENTTYPE_DST_HEADPHONES
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationTelephone">
            <summary>
            Audio line is a destination that will be routed to a telephone line.
            MIXERLINE_COMPONENTTYPE_DST_TELEPHONE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationWaveIn">
            <summary>
            Audio line is a destination that will be the final recording source for the waveform-audio input (ADC). This line typically provides some sort of gain or attenuation. This is the typical component type for the recording line of most audio cards for personal computers.
            MIXERLINE_COMPONENTTYPE_DST_WAVEIN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.DestinationVoiceIn">
            <summary>
            Audio line is a destination that will be the final recording source for voice input. This component type is exactly like MIXERLINE_COMPONENTTYPE_DST_WAVEIN but is intended specifically for settings used during voice recording/recognition. Support for this line is optional for a mixer device. Many mixer devices provide only MIXERLINE_COMPONENTTYPE_DST_WAVEIN.
            MIXERLINE_COMPONENTTYPE_DST_VOICEIN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceUndefined">
            <summary>
            Audio line is a source that cannot be defined by one of the standard component types. A mixer device is required to use this component type for line component types that have not been defined by Microsoft Corporation.
            MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceDigital">
            <summary>
            Audio line is a digital source (for example, digital output from a DAT or audio CD).
            MIXERLINE_COMPONENTTYPE_SRC_DIGITAL
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceLine">
            <summary>
            Audio line is a line-level source (for example, line-level input from an external stereo) that can be used as an optional recording source. Because most audio cards for personal computers provide some sort of gain for the recording source line, the mixer device will use the MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY type.
            MIXERLINE_COMPONENTTYPE_SRC_LINE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceMicrophone">
            <summary>
            Audio line is a microphone recording source. Most audio cards for personal computers provide at least two types of recording sources: an auxiliary audio line and microphone input. A microphone audio line typically provides some sort of gain. Audio cards that use a single input for use with a microphone or auxiliary audio line should use the MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE component type.
            MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceSynthesizer">
            <summary>
            Audio line is a source originating from the output of an internal synthesizer. Most audio cards for personal computers provide some sort of MIDI synthesizer (for example, an Adlib®-compatible or OPL/3 FM synthesizer).
            MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceCompactDisc">
            <summary>
            Audio line is a source originating from the output of an internal audio CD. This component type is provided for audio cards that provide an audio source line intended to be connected to an audio CD (or CD-ROM playing an audio CD).
            MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceTelephone">
            <summary>
            Audio line is a source originating from an incoming telephone line.
            MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourcePcSpeaker">
            <summary>
            Audio line is a source originating from personal computer speaker. Several audio cards for personal computers provide the ability to mix what would typically be played on the internal speaker with the output of an audio card. Some audio cards support the ability to use this output as a recording source.
            MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceWaveOut">
            <summary>
            Audio line is a source originating from the waveform-audio output digital-to-analog converter (DAC). Most audio cards for personal computers provide this component type as a source to the MIXERLINE_COMPONENTTYPE_DST_SPEAKERS destination. Some cards also allow this source to be routed to the MIXERLINE_COMPONENTTYPE_DST_WAVEIN destination.
            MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceAuxiliary">
            <summary>
            Audio line is a source originating from the auxiliary audio line. This line type is intended as a source with gain or attenuation that can be routed to the MIXERLINE_COMPONENTTYPE_DST_SPEAKERS destination and/or recorded from the MIXERLINE_COMPONENTTYPE_DST_WAVEIN destination.
            MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Mixer.MixerLineComponentType.SourceAnalog">
            <summary>
            Audio line is an analog source (for example, analog output from a video-cassette tape).
            MIXERLINE_COMPONENTTYPE_SRC_ANALOG
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.MixerSource">
            <summary>
            Represents a Mixer source
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerSource.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Creates a new Mixer Source
            </summary>
            <param name="nMixer">Mixer ID</param>
            <param name="nDestination">Destination ID</param>
            <param name="nSource">Source ID</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerSource.Name">
            <summary>
            Source Name
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerSource.ShortName">
            <summary>
            Source short name
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerSource.ControlsCount">
            <summary>
            Number of controls
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.MixerSource.GetControl(System.Int32)">
            <summary>
            Retrieves the specified control
            </summary>
            <param name="nControl"></param>
            <returns></returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerSource.Channels">
            <summary>
            Number of channels
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.MixerSource.TypeDescription">
            <summary>
            Source type description
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.SignedMixerControl">
            <summary>
            Represents a signed mixer control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.SignedMixerControl.GetDetails(System.IntPtr)">
            <summary>
            Gets details for this contrl
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.SignedMixerControl.Value">
            <summary>
            The value of the control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.SignedMixerControl.MinValue">
            <summary>
            Minimum value for this control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.SignedMixerControl.MaxValue">
            <summary>
            Maximum value for this control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.SignedMixerControl.Percent">
            <summary>
            Value of the control represented as a percentage
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.SignedMixerControl.ToString">
            <summary>
            String Representation for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl">
            <summary>
            Represents an unsigned mixer control
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl.GetDetails(System.IntPtr)">
            <summary>
            Gets the details for this control
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl.Value">
            <summary>
            The control value
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl.MinValue">
            <summary>
            The control's minimum value
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl.MaxValue">
            <summary>
            The control's maximum value
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl.Percent">
            <summary>
            Value of the control represented as a percentage
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Mixer.UnsignedMixerControl.ToString">
            <summary>
            String Representation for debugging purposes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.BufferHelpers">
            <summary>
            Helper methods for working with audio buffers
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.BufferHelpers.Ensure(System.Byte[],System.Int32)">
            <summary>
            Ensures the buffer is big enough
            </summary>
            <param name="buffer"></param>
            <param name="bytesRequired"></param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.BufferHelpers.Ensure(System.Single[],System.Int32)">
            <summary>
            Ensures the buffer is big enough
            </summary>
            <param name="buffer"></param>
            <param name="samplesRequired"></param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.ByteArrayExtensions">
            <summary>
            these will become extension methods once we move to .NET 3.5
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteArrayExtensions.IsEntirelyNull(System.Byte[])">
            <summary>
            Checks if the buffer passed in is entirely full of nulls
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteArrayExtensions.DescribeAsHex(System.Byte[],System.String,System.Int32)">
            <summary>
            Converts to a string containing the buffer described in hex
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteArrayExtensions.DecodeAsString(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Decodes the buffer using the specified encoding, stopping at the first null
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteArrayExtensions.Concat(System.Byte[][])">
            <summary>
            Concatenates the given arrays into a single array.
            </summary>
            <param name="byteArrays">The arrays to concatenate</param>
            <returns>The concatenated resulting array.</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.ByteEncoding">
            <summary>
            An encoding for use with file types that have one byte per character
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Utils.ByteEncoding.Instance">
            <summary>
            The one and only instance of this class
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            <see cref="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            <see cref="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            <see cref="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            <see cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ByteEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            <see cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)"/>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.ChunkIdentifier">
            <summary>
            Chunk Identifier helpers
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.ChunkIdentifier.ChunkIdentifierToInt32(System.String)">
            <summary>
            Chunk identifier to Int32 (replaces mmioStringToFOURCC)
            </summary>
            <param name="s">four character chunk identifier</param>
            <returns>Chunk identifier as int 32</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.CircularBuffer">
            <summary>
            A very basic circular buffer implementation
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.CircularBuffer.#ctor(System.Int32)">
            <summary>
            Create a new circular buffer
            </summary>
            <param name="size">Max buffer size in bytes</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.CircularBuffer.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to the buffer
            </summary>
            <param name="data">Data to write</param>
            <param name="offset">Offset into data</param>
            <param name="count">Number of bytes to write</param>
            <returns>number of bytes written</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.CircularBuffer.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from the buffer
            </summary>
            <param name="data">Buffer to read into</param>
            <param name="offset">Offset into read buffer</param>
            <param name="count">Bytes to read</param>
            <returns>Number of bytes actually read</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.CircularBuffer.MaxLength">
            <summary>
            Maximum length of this circular buffer
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.CircularBuffer.Count">
            <summary>
            Number of bytes currently stored in the circular buffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.CircularBuffer.Reset">
            <summary>
            Resets the buffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.CircularBuffer.Advance(System.Int32)">
            <summary>
            Advances the buffer, discarding bytes
            </summary>
            <param name="count">Bytes to advance</param>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.Decibels">
            <summary>
            A util class for conversions
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.Decibels.LinearToDecibels(System.Double)">
            <summary>
            linear to dB conversion
            </summary>
            <param name="lin">linear value</param>
            <returns>decibel value</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.Decibels.DecibelsToLinear(System.Double)">
            <summary>
            dB to linear conversion
            </summary>
            <param name="dB">decibel value</param>
            <returns>linear value</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.FieldDescriptionAttribute">
            <summary>
            Allows us to add descriptions to interop members
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.FieldDescriptionAttribute.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.FieldDescriptionAttribute.#ctor(System.String)">
            <summary>
            Field description
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.FieldDescriptionAttribute.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.FieldDescriptionHelper">
            <summary>
            Helper to get descriptions
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.FieldDescriptionHelper.Describe(System.Type,System.Guid)">
            <summary>
            Describes the Guid  by looking for a FieldDescription attribute on the specified class
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.HResult">
            <summary>
            HResult
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Utils.HResult.S_OK">
            <summary>
            S_OK
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Utils.HResult.S_FALSE">
            <summary>
            S_FALSE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Utils.HResult.E_INVALIDARG">
            <summary>
            E_INVALIDARG (from winerror.h)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.HResult.MAKE_HRESULT(System.Int32,System.Int32,System.Int32)">
            <summary>
            MAKE_HRESULT macro
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.HResult.GetHResult(System.Runtime.InteropServices.COMException)">
            <summary>
            Helper to deal with the fact that in Win Store apps,
            the HResult property name has changed
            </summary>
            <param name="exception">COM Exception</param>
            <returns>The HResult</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.IEEE">
            <summary>
            Methods for converting between IEEE 80-bit extended double precision
            and standard C# double precision.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IEEE.ConvertToIeeeExtended(System.Double)">
            <summary>
            Converts a C# double precision number to an 80-bit
            IEEE extended double precision number (occupying 10 bytes).
            </summary>
            <param name="num">The double precision number to convert to IEEE extended.</param>
            <returns>An array of 10 bytes containing the IEEE extended number.</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IEEE.ConvertFromIeeeExtended(System.Byte[])">
            <summary>
            Converts an IEEE 80-bit extended precision number to a
            C# double precision number.
            </summary>
            <param name="bytes">The 80-bit IEEE extended number (as an array of 10 bytes).</param>
            <returns>A C# double precision number that is a close representation of the IEEE extended number.</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream">
            <summary>
            Pass-through stream that ignores Dispose
            Useful for dealing with MemoryStreams that you want to re-use
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.SourceStream">
            <summary>
            The source stream all other methods fall through to
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.IgnoreDispose">
            <summary>
            If true the Dispose will be ignored, if false, will pass through to the SourceStream
            Set to true by default
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new IgnoreDisposeStream
            </summary>
            <param name="sourceStream">The source stream</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.CanRead">
            <summary>
            Can Read
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.CanSeek">
            <summary>
            Can Seek
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.CanWrite">
            <summary>
            Can write to the underlying stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Flush">
            <summary>
            Flushes the underlying stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Length">
            <summary>
            Gets the length of the underlying stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Position">
            <summary>
            Gets or sets the position of the underlying stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads from the underlying stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeks on the underlying stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the underlying stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes to the underlying stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.IgnoreDisposeStream.Dispose(System.Boolean)">
            <summary>
            Dispose - by default (IgnoreDispose = true) will do nothing,
            leaving the underlying stream undisposed
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.MergeSort.Sort``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
            <summary>
            In-place and stable implementation of MergeSort
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.MergeSort.Sort``1(System.Collections.Generic.IList{``0})">
            <summary>
            MergeSort a list of comparable items
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.MergeSort.Sort``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            MergeSort a list 
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.NativeMethods">
            <summary>
            General purpose native methods for internal NAudio use
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Utils.WavePositionExtensions">
            <summary>
            WavePosition extension methods
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Utils.WavePositionExtensions.GetPositionTimeSpan(VisioForge.Libs.NAudio.Wave.IWavePosition)">
            <summary>
            Get Position as timespan
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION">
            <summary>
            Describes an audio jack.
            </summary>
            <remarks>
            MSDN Reference: http://msdn.microsoft.com/en-us/library/dd316543.aspx
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.ChannelMapping">
            <summary>
            Specifies the mapping of the two audio channels in a stereo jack to speaker positions.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.Color">
            <summary>
            The jack color.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.ConnectionType">
            <summary>
            The connection type.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.GeoLocation">
            <summary>
            The geometric location of the jack.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.GenLocation">
            <summary>
            The general location of the jack.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.PortConnection">
            <summary>
            The type of port represented by the jack.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION.IsConnected">
            <summary>
            Indicates whether an endpoint device is plugged into the jack, if supported by the adapter.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION2">
            <summary>
            Describes an audio jack.
            </summary>
            <remarks>
            MSDN Reference: http://msdn.microsoft.com/en-us/library/dd316545.aspx
            </remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION2.DeviceStateInfo">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.VisioForge.KSJACK_DESCRIPTION2.JackCapabilities">
            <summary>
            Stores the audio jack's capabilities.
            </summary>
            <remarks>
            From Ksmedia.h, the available flags for this are:
            1. JACKDESC2_PRESENCE_DETECT_CAPABILITY (0x00000001)
            2. JACKDESC2_DYNAMIC_FORMAT_CHANGE_CAPABILITY (0x00000002) 
            </remarks>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Manufacturers">
            <summary>
            Manufacturer codes from mmreg.h
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Microsoft">
            <summary>Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Creative">
            <summary>Creative Labs, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Mediavision">
            <summary>Media Vision, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Fujitsu">
            <summary>Fujitsu Corp.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Artisoft">
            <summary>Artisoft, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.TurtleBeach">
            <summary>Turtle Beach, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ibm">
            <summary>IBM Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Vocaltec">
            <summary>Vocaltec LTD.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Roland">
            <summary>Roland</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.DspSolutions">
            <summary>DSP Solutions, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Nec">
            <summary>NEC</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ati">
            <summary>ATI</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Wanglabs">
            <summary>Wang Laboratories, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Tandy">
            <summary>Tandy Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Voyetra">
            <summary>Voyetra</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Antex">
            <summary>Antex Electronics Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.IclPS">
            <summary>ICL Personal Systems</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Intel">
            <summary>Intel Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Gravis">
            <summary>Advanced Gravis</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Val">
            <summary>Video Associates Labs, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Interactive">
            <summary>InterActive Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Yamaha">
            <summary>Yamaha Corporation of America</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Everex">
            <summary>Everex Systems, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Echo">
            <summary>Echo Speech Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Sierra">
            <summary>Sierra Semiconductor Corp</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Cat">
            <summary>Computer Aided Technologies</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Apps">
            <summary>APPS Software International</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.DspGroup">
            <summary>DSP Group, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Melabs">
            <summary>microEngineering Labs</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.ComputerFriends">
            <summary>Computer Friends, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ess">
            <summary>ESS Technology</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Audiofile">
            <summary>Audio, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Motorola">
            <summary>Motorola, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Canopus">
            <summary>Canopus, co., Ltd.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Epson">
            <summary>Seiko Epson Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Truevision">
            <summary>Truevision</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Aztech">
            <summary>Aztech Labs, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Videologic">
            <summary>Videologic</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Scalacs">
            <summary>SCALACS</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Korg">
            <summary>Korg Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Apt">
            <summary>Audio Processing Technology</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ics">
            <summary>Integrated Circuit Systems, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Iteratedsys">
            <summary>Iterated Systems, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Metheus">
            <summary>Metheus</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Logitech">
            <summary>Logitech, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Winnov">
            <summary>Winnov, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ncr">
            <summary>NCR Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Exan">
            <summary>EXAN</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ast">
            <summary>AST Research Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Willowpond">
            <summary>Willow Pond Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Sonicfoundry">
            <summary>Sonic Foundry</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Vitec">
            <summary>Vitec Multimedia</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Moscom">
            <summary>MOSCOM Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Siliconsoft">
            <summary>Silicon Soft, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Supermac">
            <summary>Supermac</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Audiopt">
            <summary>Audio Processing Technology</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Speechcomp">
            <summary>Speech Compression</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ahead">
            <summary>Ahead, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Dolby">
            <summary>Dolby Laboratories</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Oki">
            <summary>OKI</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Auravision">
            <summary>AuraVision Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Olivetti">
            <summary>Ing C. Olivetti &amp; C., S.p.A.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Iomagic">
            <summary>I/O Magic Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Matsushita">
            <summary>Matsushita Electric Industrial Co., LTD.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Controlres">
            <summary>Control Resources Limited</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Xebec">
            <summary>Xebec Multimedia Solutions Limited</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Newmedia">
            <summary>New Media Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Nms">
            <summary>Natural MicroSystems</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Lyrrus">
            <summary>Lyrrus Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Compusic">
            <summary>Compusic</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Opti">
            <summary>OPTi Computers Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Adlacc">
            <summary>Adlib Accessories Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Compaq">
            <summary>Compaq Computer Corp.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Dialogic">
            <summary>Dialogic Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Insoft">
            <summary>InSoft, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Mptus">
            <summary>M.P. Technologies, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Weitek">
            <summary>Weitek</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.LernoutAndHauspie">
            <summary>Lernout &amp; Hauspie</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Qciar">
            <summary>Quanta Computer Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Apple">
            <summary>Apple Computer, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Digital">
            <summary>Digital Equipment Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Motu">
            <summary>Mark of the Unicorn</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Workbit">
            <summary>Workbit Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ositech">
            <summary>Ositech Communications Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Miro">
            <summary>miro Computer Products AG</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Cirruslogic">
            <summary>Cirrus Logic</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Isolution">
            <summary>ISOLUTION  B.V.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Horizons">
            <summary>Horizons Technology, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Concepts">
            <summary>Computer Concepts Ltd</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Vtg">
            <summary>Voice Technologies Group, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Radius">
            <summary>Radius</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Rockwell">
            <summary>Rockwell International</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Xyz">
            <summary>Co. XYZ for testing</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Opcode">
            <summary>Opcode Systems</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Voxware">
            <summary>Voxware Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.NorthernTelecom">
            <summary>Northern Telecom Limited</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Apicom">
            <summary>APICOM</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Grande">
            <summary>Grande Software</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Addx">
            <summary>ADDX</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Wildcat">
            <summary>Wildcat Canyon Software</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Rhetorex">
            <summary>Rhetorex Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Brooktree">
            <summary>Brooktree Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ensoniq">
            <summary>ENSONIQ Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Fast">
            <summary>FAST Multimedia AG</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Nvidia">
            <summary>NVidia Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Oksori">
            <summary>OKSORI Co., Ltd.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Diacoustics">
            <summary>DiAcoustics, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Gulbransen">
            <summary>Gulbransen, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.KayElemetrics">
            <summary>Kay Elemetrics, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Crystal">
            <summary>Crystal Semiconductor Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.SplashStudios">
            <summary>Splash Studios</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Quarterdeck">
            <summary>Quarterdeck Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Tdk">
            <summary>TDK Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.DigitalAudioLabs">
            <summary>Digital Audio Labs, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Seersys">
            <summary>Seer Systems, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Picturetel">
            <summary>PictureTel Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.AttMicroelectronics">
            <summary>AT&amp;T Microelectronics</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Osprey">
            <summary>Osprey Technologies, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Mediatrix">
            <summary>Mediatrix Peripherals</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Soundesigns">
            <summary>SounDesignS M.C.S. Ltd.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Aldigital">
            <summary>A.L. Digital Ltd.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.SpectrumSignalProcessing">
            <summary>Spectrum Signal Processing, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ecs">
            <summary>Electronic Courseware Systems, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Amd">
            <summary>AMD</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Coredynamics">
            <summary>Core Dynamics</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Canam">
            <summary>CANAM Computers</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Softsound">
            <summary>Softsound, Ltd.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Norris">
            <summary>Norris Communications, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Ddd">
            <summary>Danka Data Devices</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Euphonics">
            <summary>EuPhonics</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Precept">
            <summary>Precept Software, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.CrystalNet">
            <summary>Crystal Net Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Chromatic">
            <summary>Chromatic Research, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Voiceinfo">
            <summary>Voice Information Systems, Inc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Viennasys">
            <summary>Vienna Systems</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Connectix">
            <summary>Connectix Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Gadgetlabs">
            <summary>Gadget Labs LLC</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Frontier">
            <summary>Frontier Design Group LLC</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Viona">
            <summary>Viona Development GmbH</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Casio">
            <summary>Casio Computer Co., LTD</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.Diamondmm">
            <summary>Diamond Multimedia</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.S3">
            <summary>S3</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Manufacturers.FraunhoferIis">
            <summary>Fraunhofer</summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.MmException">
            <summary>
            Summary description for MmException.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.MmException.#ctor(VisioForge.Libs.NAudio.MmResult,System.String)">
            <summary>
            Creates a new MmException
            </summary>
            <param name="result">The result returned by the Windows API call</param>
            <param name="function">The name of the Windows API that failed</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.MmException.Try(VisioForge.Libs.NAudio.MmResult,System.String)">
            <summary>
            Helper function to automatically raise an exception on failure
            </summary>
            <param name="result">The result of the API call</param>
            <param name="function">The API function name</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.MmException.Result">
            <summary>
            Returns the Windows API result
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.MmResult">
            <summary>
            Windows multimedia error codes from mmsystem.h.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.NoError">
            <summary>no error, MMSYSERR_NOERROR</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.UnspecifiedError">
            <summary>unspecified error, MMSYSERR_ERROR</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.BadDeviceId">
            <summary>device ID out of range, MMSYSERR_BADDEVICEID</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.NotEnabled">
            <summary>driver failed enable, MMSYSERR_NOTENABLED</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.AlreadyAllocated">
            <summary>device already allocated, MMSYSERR_ALLOCATED</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.InvalidHandle">
            <summary>device handle is invalid, MMSYSERR_INVALHANDLE</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.NoDriver">
            <summary>no device driver present, MMSYSERR_NODRIVER</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.MemoryAllocationError">
            <summary>memory allocation error, MMSYSERR_NOMEM</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.NotSupported">
            <summary>function isn't supported, MMSYSERR_NOTSUPPORTED</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.BadErrorNumber">
            <summary>error value out of range, MMSYSERR_BADERRNUM</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.InvalidFlag">
            <summary>invalid flag passed, MMSYSERR_INVALFLAG</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.InvalidParameter">
            <summary>invalid parameter passed, MMSYSERR_INVALPARAM</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.HandleBusy">
            <summary>handle being used simultaneously on another thread (eg callback),MMSYSERR_HANDLEBUSY</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.InvalidAlias">
            <summary>specified alias not found, MMSYSERR_INVALIDALIAS</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.BadRegistryDatabase">
            <summary>bad registry database, MMSYSERR_BADDB</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.RegistryKeyNotFound">
            <summary>registry key not found, MMSYSERR_KEYNOTFOUND</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.RegistryReadError">
            <summary>registry read error, MMSYSERR_READERROR</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.RegistryWriteError">
            <summary>registry write error, MMSYSERR_WRITEERROR</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.RegistryDeleteError">
            <summary>registry delete error, MMSYSERR_DELETEERROR</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.RegistryValueNotFound">
            <summary>registry value not found, MMSYSERR_VALNOTFOUND</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.NoDriverCallback">
            <summary>driver does not call DriverCallback, MMSYSERR_NODRIVERCB</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.MoreData">
            <summary>more data to be returned, MMSYSERR_MOREDATA</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.WaveBadFormat">
            <summary>unsupported wave format, WAVERR_BADFORMAT</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.WaveStillPlaying">
            <summary>still something playing, WAVERR_STILLPLAYING</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.WaveHeaderUnprepared">
            <summary>header not prepared, WAVERR_UNPREPARED</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.WaveSync">
            <summary>device is synchronous, WAVERR_SYNC</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.AcmNotPossible">
            <summary>Conversion not possible (ACMERR_NOTPOSSIBLE)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.AcmBusy">
            <summary>Busy (ACMERR_BUSY)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.AcmHeaderUnprepared">
            <summary>Header Unprepared (ACMERR_UNPREPARED)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.AcmCancelled">
            <summary>Cancelled (ACMERR_CANCELED)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.MixerInvalidLine">
            <summary>invalid line (MIXERR_INVALLINE)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.MixerInvalidControl">
            <summary>invalid control (MIXERR_INVALCONTROL)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.MmResult.MixerInvalidValue">
            <summary>invalid value (MIXERR_INVALVALUE)</summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveCallbackInfo">
            <summary>
            Wave Callback Info
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveCallbackInfo.Strategy">
            <summary>
            Callback Strategy
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveCallbackInfo.Handle">
            <summary>
            Window Handle (if applicable)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveCallbackInfo.FunctionCallback">
            <summary>
            Sets up a new WaveCallbackInfo for function callbacks
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveCallbackInfo.NewWindow">
            <summary>
            Sets up a new WaveCallbackInfo to use a New Window
            IMPORTANT: only use this on the GUI thread
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveCallbackInfo.ExistingWindow(System.IntPtr)">
            <summary>
            Sets up a new WaveCallbackInfo to use an existing window
            IMPORTANT: only use this on the GUI thread
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveCallbackStrategy">
            <summary>
            Wave Callback Strategy
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveCallbackStrategy.FunctionCallback">
            <summary>
            Use a function
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveCallbackStrategy.NewWindow">
            <summary>
            Create a new window (should only be done if on GUI thread)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveCallbackStrategy.ExistingWindow">
            <summary>
            Use an existing window handle
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveCallbackStrategy.Event">
            <summary>
            Use an event handle
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveHeader">
            <summary>
            WaveHeader interop structure (WAVEHDR)
            http://msdn.microsoft.com/en-us/library/dd743837%28VS.85%29.aspx
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.dataBuffer">
            <summary>pointer to locked data buffer (lpData)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.bufferLength">
            <summary>length of data buffer (dwBufferLength)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.bytesRecorded">
            <summary>used for input only (dwBytesRecorded)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.userData">
            <summary>for client's use (dwUser)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.flags">
            <summary>assorted flags (dwFlags)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.loops">
            <summary>loop control counter (dwLoops)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.next">
            <summary>PWaveHdr, reserved for driver (lpNext)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeader.reserved">
            <summary>reserved for driver</summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveHeaderFlags">
            <summary>
            Wave Header Flags enumeration
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeaderFlags.BeginLoop">
            <summary>
            WHDR_BEGINLOOP
            This buffer is the first buffer in a loop.  This flag is used only with output buffers.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeaderFlags.Done">
            <summary>
            WHDR_DONE
            Set by the device driver to indicate that it is finished with the buffer and is returning it to the application.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeaderFlags.EndLoop">
            <summary>
            WHDR_ENDLOOP
            This buffer is the last buffer in a loop.  This flag is used only with output buffers.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeaderFlags.InQueue">
            <summary>
            WHDR_INQUEUE
            Set by Windows to indicate that the buffer is queued for playback.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveHeaderFlags.Prepared">
            <summary>
            WHDR_PREPARED
            Set by Windows to indicate that the buffer has been prepared with the waveInPrepareHeader or waveOutPrepareHeader function.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveInCapabilities">
            <summary>
            WaveInCapabilities structure (based on WAVEINCAPS2 from mmsystem.h)
            http://msdn.microsoft.com/en-us/library/ms713726(VS.85).aspx
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.manufacturerId">
            <summary>
            wMid
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.productId">
            <summary>
            wPid
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.driverVersion">
            <summary>
            vDriverVersion
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.productName">
            <summary>
            Product Name (szPname)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.supportedFormats">
            <summary>
            Supported formats (bit flags) dwFormats 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.channels">
            <summary>
            Supported channels (1 for mono 2 for stereo) (wChannels)
            Seems to be set to -1 on a lot of devices
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.reserved">
            <summary>
            wReserved1
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.Channels">
            <summary>
            Number of channels supported
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.ProductName">
            <summary>
            The product name
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.NameGuid">
            <summary>
            The device name Guid (if provided)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.ProductGuid">
            <summary>
            The product name Guid (if provided)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.ManufacturerGuid">
            <summary>
            The manufacturer guid (if provided)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInCapabilities.SupportsWaveFormat(VisioForge.Libs.NAudio.Wave.SupportedWaveFormat)">
            <summary>
            Checks to see if a given SupportedWaveFormat is supported
            </summary>
            <param name="waveFormat">The SupportedWaveFormat</param>
            <returns>true if supported</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveCapabilitiesHelpers.GetNameFromGuid(System.Guid)">
            <summary>
            The device name from the registry if supported
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveInEventArgs">
            <summary>
            Event Args for WaveInStream event
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEventArgs.#ctor(System.Byte[],System.Int32)">
            <summary>
            Creates new WaveInEventArgs
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEventArgs.Buffer">
            <summary>
            Buffer containing recorded data. Note that it might not be completely
            full. <seealso cref="P:VisioForge.Libs.NAudio.Wave.WaveInEventArgs.BytesRecorded"/>
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEventArgs.BytesRecorded">
            <summary>
            The number of recorded bytes in Buffer. <seealso cref="P:VisioForge.Libs.NAudio.Wave.WaveInEventArgs.Buffer"/>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveInterop">
            <summary>
            MME Wave function interop
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveInOutOpenFlags.CallbackNull">
            <summary>
            CALLBACK_NULL
            No callback
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveInOutOpenFlags.CallbackFunction">
            <summary>
            CALLBACK_FUNCTION
            dwCallback is a FARPROC 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveInOutOpenFlags.CallbackEvent">
            <summary>
            CALLBACK_EVENT
            dwCallback is an EVENT handle 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveInOutOpenFlags.CallbackWindow">
            <summary>
            CALLBACK_WINDOW
            dwCallback is a HWND 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveInOutOpenFlags.CallbackThread">
            <summary>
            CALLBACK_THREAD
            callback is a thread ID 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage.WaveInOpen">
            <summary>
            WIM_OPEN
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage.WaveInClose">
            <summary>
            WIM_CLOSE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage.WaveInData">
            <summary>
            WIM_DATA
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage.WaveOutClose">
            <summary>
            WOM_CLOSE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage.WaveOutDone">
            <summary>
            WOM_DONE
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage.WaveOutOpen">
            <summary>
            WOM_OPEN
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities">
            <summary>
            WaveOutCapabilities structure (based on WAVEOUTCAPS2 from mmsystem.h)
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_waveoutcaps_str.asp
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.manufacturerId">
            <summary>
            wMid
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.productId">
            <summary>
            wPid
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.driverVersion">
            <summary>
            vDriverVersion
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.productName">
            <summary>
            Product Name (szPname)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.supportedFormats">
            <summary>
            Supported formats (bit flags) dwFormats 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.channels">
            <summary>
            Supported channels (1 for mono 2 for stereo) (wChannels)
            Seems to be set to -1 on a lot of devices
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.reserved">
            <summary>
            wReserved1
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.support">
            <summary>
            Optional functionality supported by the device
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.Channels">
            <summary>
            Number of channels supported
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.SupportsPlaybackRateControl">
            <summary>
            Whether playback control is supported
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.ProductName">
            <summary>
            The product name
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.SupportsWaveFormat(VisioForge.Libs.NAudio.Wave.SupportedWaveFormat)">
            <summary>
            Checks to see if a given SupportedWaveFormat is supported
            </summary>
            <param name="waveFormat">The SupportedWaveFormat</param>
            <returns>true if supported</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.NameGuid">
            <summary>
            The device name Guid (if provided)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.ProductGuid">
            <summary>
            The product name Guid (if provided)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutCapabilities.ManufacturerGuid">
            <summary>
            The manufacturer guid (if provided)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat">
            <summary>
            Supported wave formats for WaveOutCapabilities
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_1M08">
            <summary>
            11.025 kHz, Mono,   8-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_1S08">
            <summary>
            11.025 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_1M16">
            <summary>
            11.025 kHz, Mono,   16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_1S16">
            <summary>
            11.025 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_2M08">
            <summary>
            22.05  kHz, Mono,   8-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_2S08">
            <summary>
            22.05  kHz, Stereo, 8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_2M16">
            <summary>
            22.05  kHz, Mono,   16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_2S16">
            <summary>
            22.05  kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_4M08">
            <summary>
            44.1   kHz, Mono,   8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_4S08">
            <summary>
            44.1   kHz, Stereo, 8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_4M16">
            <summary>
            44.1   kHz, Mono,   16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_4S16">
            <summary>
             44.1   kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_44M08">
            <summary>
            44.1   kHz, Mono,   8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_44S08">
            <summary>
            44.1   kHz, Stereo, 8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_44M16">
            <summary>
            44.1   kHz, Mono,   16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_44S16">
            <summary>
            44.1   kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_48M08">
            <summary>
            48     kHz, Mono,   8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_48S08">
            <summary>
             48     kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_48M16">
            <summary>
            48     kHz, Mono,   16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_48S16">
            <summary>
            48     kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_96M08">
            <summary>
            96     kHz, Mono,   8-bit 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_96S08">
            <summary>
            96     kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_96M16">
            <summary>
            96     kHz, Mono,   16-bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SupportedWaveFormat.WAVE_FORMAT_96S16">
            <summary>
            96     kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveOutSupport">
            <summary>
            Flags indicating what features this WaveOut device supports
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutSupport.Pitch">
            <summary>supports pitch control (WAVECAPS_PITCH)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutSupport.PlaybackRate">
            <summary>supports playback rate control (WAVECAPS_PLAYBACKRATE)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutSupport.Volume">
            <summary>supports volume control (WAVECAPS_VOLUME)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutSupport.LRVolume">
            <summary>supports separate left-right volume control (WAVECAPS_LRVOLUME)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutSupport.Sync">
            <summary>(WAVECAPS_SYNC)</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveOutSupport.SampleAccurate">
            <summary>(WAVECAPS_SAMPLEACCURATE)</summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.ISampleChunkConverter">
            <summary>
            Sample provider interface to make WaveChannel32 extensible
            Still a bit ugly, hence internal at the moment - and might even make these into
            bit depth converting WaveProviders
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.NotifyingSampleProvider">
            <summary>
            Simple class that raises an event on every sample
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.NotifyingSampleProvider.#ctor(VisioForge.Libs.NAudio.Wave.ISampleProvider)">
            <summary>
            Initializes a new instance of NotifyingSampleProvider
            </summary>
            <param name="source">Source Sample Provider</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.NotifyingSampleProvider.WaveFormat">
            <summary>
            WaveFormat
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.NotifyingSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Reads samples from this sample provider
            </summary>
            <param name="buffer">Sample buffer</param>
            <param name="offset">Offset into sample buffer</param>
            <param name="sampleCount">Number of samples desired</param>
            <returns>Number of samples read</returns>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.SampleProviders.NotifyingSampleProvider.Sample">
            <summary>
            Sample notifier
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider">
            <summary>
            Allows you to:
            1. insert a pre-delay of silence before the source begins
            2. skip over a certain amount of the beginning of the source
            3. only play a set amount from the source
            4. insert silence at the end after the source is complete
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.DelayBySamples">
            <summary>
            Number of samples of silence to insert before playing source
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.DelayBy">
            <summary>
            Amount of silence to insert before playing
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.SkipOverSamples">
            <summary>
            Number of samples in source to discard
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.SkipOver">
            <summary>
            Amount of audio to skip over from the source before beginning playback
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.TakeSamples">
            <summary>
            Number of samples to read from source (if 0, then read it all)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.Take">
            <summary>
            Amount of audio to take from the source (TimeSpan.Zero means play to end)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.LeadOutSamples">
            <summary>
            Number of samples of silence to insert after playing source
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.LeadOut">
            <summary>
            Amount of silence to insert after playing source
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.#ctor(VisioForge.Libs.NAudio.Wave.ISampleProvider)">
            <summary>
            Creates a new instance of offsetSampleProvider
            </summary>
            <param name="sourceProvider">The Source Sample Provider to read from</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.WaveFormat">
            <summary>
            The WaveFormat of this SampleProvider
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.OffsetSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Reads from this sample provider
            </summary>
            <param name="buffer">Sample buffer</param>
            <param name="offset">Offset within sample buffer to read to</param>
            <param name="count">Number of samples required</param>
            <returns>Number of samples read</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.PanningSampleProvider">
            <summary>
            Converts a mono sample provider to stereo, with a customisable pan strategy
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.PanningSampleProvider.#ctor(VisioForge.Libs.NAudio.Wave.ISampleProvider)">
            <summary>
            Initialises a new instance of the PanningSampleProvider
            </summary>
            <param name="source">Source sample provider, must be mono</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.PanningSampleProvider.Pan">
            <summary>
            Pan value, must be between -1 (left) and 1 (right)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.PanningSampleProvider.PanStrategy">
            <summary>
            The pan strategy currently in use
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.PanningSampleProvider.WaveFormat">
            <summary>
            The WaveFormat of this sample provider
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.PanningSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Reads samples from this sample provider
            </summary>
            <param name="buffer">Sample buffer</param>
            <param name="offset">Offset into sample buffer</param>
            <param name="count">Number of samples desired</param>
            <returns>Number of samples read</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.StereoSamplePair">
            <summary>
            Pair of floating point values, representing samples or multipliers
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.StereoSamplePair.Left">
            <summary>
            Left value
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.StereoSamplePair.Right">
            <summary>
            Right value
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.IPanStrategy">
            <summary>
            Required Interface for a Panning Strategy
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.IPanStrategy.GetMultipliers(System.Single)">
            <summary>
            Gets the left and right multipliers for a given pan value
            </summary>
            <param name="pan">Pan value from -1 to 1</param>
            <returns>Left and right multipliers in a stereo sample pair</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.StereoBalanceStrategy">
            <summary>
            Simplistic "balance" control - treating the mono input as if it was stereo
            In the centre, both channels full volume. Opposite channel decays linearly 
            as balance is turned to to one side
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.StereoBalanceStrategy.GetMultipliers(System.Single)">
            <summary>
            Gets the left and right channel multipliers for this pan value
            </summary>
            <param name="pan">Pan value, between -1 and 1</param>
            <returns>Left and right multipliers</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.SquareRootPanStrategy">
            <summary>
            Square Root Pan, thanks to Yuval Naveh
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SquareRootPanStrategy.GetMultipliers(System.Single)">
            <summary>
            Gets the left and right channel multipliers for this pan value
            </summary>
            <param name="pan">Pan value, between -1 and 1</param>
            <returns>Left and right multipliers</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.SinPanStrategy">
            <summary>
            Sinus Pan, thanks to Yuval Naveh
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SinPanStrategy.GetMultipliers(System.Single)">
            <summary>
            Gets the left and right channel multipliers for this pan value
            </summary>
            <param name="pan">Pan value, between -1 and 1</param>
            <returns>Left and right multipliers</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.LinearPanStrategy">
            <summary>
            Linear Pan
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.LinearPanStrategy.GetMultipliers(System.Single)">
            <summary>
            Gets the left and right channel multipliers for this pan value
            </summary>
            <param name="pan">Pan value, between -1 and 1</param>
            <returns>Left and right multipliers</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase">
            <summary>
            Helper base class for classes converting to ISampleProvider
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase.source">
            <summary>
            Source Wave Provider
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase.sourceBuffer">
            <summary>
            Source buffer (to avoid constantly creating small buffers during playback)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase.#ctor(VisioForge.Libs.NAudio.Wave.IWaveProvider)">
            <summary>
            Initialises a new instance of SampleProviderConverterBase
            </summary>
            <param name="source">Source Wave provider</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase.WaveFormat">
            <summary>
            Wave format of this wave provider
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Reads samples from the source wave provider
            </summary>
            <param name="buffer">Sample buffer</param>
            <param name="offset">Offset into sample buffer</param>
            <param name="count">Number of samples required</param>
            <returns>Number of samples read</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleProviderConverterBase.EnsureSourceBuffer(System.Int32)">
            <summary>
            Ensure the source buffer exists and is big enough
            </summary>
            <param name="sourceBytesRequired">Bytes required</param>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleToWaveProvider">
            <summary>
            Helper class for when you need to convert back to an IWaveProvider from
            an ISampleProvider. Keeps it as IEEE float
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleToWaveProvider.#ctor(VisioForge.Libs.NAudio.Wave.ISampleProvider)">
            <summary>
            Initializes a new instance of the WaveProviderFloatToWaveProvider class
            </summary>
            <param name="source">Source wave provider</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleToWaveProvider.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads from this provider
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SampleToWaveProvider.WaveFormat">
            <summary>
            The waveformat of this WaveProvider (same as the source)
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator">
            <summary>
            Signal Generator
            Sin, Square, Triangle, SawTooth, White Noise, Pink Noise, Sweep.
            </summary>
            <remarks>
            Posibility to change ISampleProvider
            Example :
            ---------
            WaveOut _waveOutGene = new WaveOut();
            WaveGenerator wg = new SignalGenerator();
            wg.Type = ...
            wg.Frequency = ...
            wg ...
            _waveOutGene.Init(wg);
            _waveOutGene.Play();
            </remarks>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.#ctor">
            <summary>
            Initializes a new instance for the Generator (Default :: 44.1Khz, 2 channels, Sinus, Frequency = 440, Gain = 1)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance for the Generator (UserDef SampleRate &amp; Channels)
            </summary>
            <param name="sampleRate">Desired sample rate</param>
            <param name="channel">Number of channels</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.WaveFormat">
            <summary>
            The waveformat of this WaveProvider (same as the source)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.Frequency">
            <summary>
            Frequency for the Generator. (20.0 - 20000.0 Hz)
            Sin, Square, Triangle, SawTooth, Sweep (Start Frequency).
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.FrequencyLog">
            <summary>
            Return Log of Frequency Start (Read only)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.FrequencyEnd">
            <summary>
            End Frequency for the Sweep Generator. (Start Frequency in Frequency)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.FrequencyEndLog">
            <summary>
            Return Log of Frequency End (Read only)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.Gain">
            <summary>
            Gain for the Generator. (0.0 to 1.0)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.PhaseReverse">
            <summary>
            Channel PhaseReverse
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.Type">
            <summary>
            Type of Generator.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.SweepLengthSecs">
            <summary>
            Length Seconds for the Sweep Generator.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Reads from this provider.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGenerator.NextRandomTwo">
            <summary>
            Private :: Random for WhiteNoise &amp; Pink Noise (Value form -1 to 1)
            </summary>
            <returns>Random value from -1 to +1</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType">
            <summary>
            Signal Generator type
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.Pink">
            <summary>
            Pink noise
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.White">
            <summary>
            White noise
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.Sweep">
            <summary>
            Sweep
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.Sin">
            <summary>
            Sine wave
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.Square">
            <summary>
            Square wave
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.Triangle">
            <summary>
            Triangle Wave
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.SampleProviders.SignalGeneratorType.SawTooth">
            <summary>
            Sawtooth wave
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleProviders.VolumeSampleProvider">
            <summary>
            Very simple sample provider supporting adjustable gain
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.VolumeSampleProvider.#ctor(VisioForge.Libs.NAudio.Wave.ISampleProvider)">
            <summary>
            Initializes a new instance of VolumeSampleProvider
            </summary>
            <param name="source">Source Sample Provider</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.VolumeSampleProvider.WaveFormat">
            <summary>
            WaveFormat
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleProviders.VolumeSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Reads samples from this sample provider
            </summary>
            <param name="buffer">Sample buffer</param>
            <param name="offset">Offset into sample buffer</param>
            <param name="sampleCount">Number of samples desired</param>
            <returns>Number of samples read</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleProviders.VolumeSampleProvider.Volume">
            <summary>
            Allows adjusting the volume, 1.0f = full volume
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveFormat">
            <summary>
            Represents a Wave file format
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.waveFormatTag">
            <summary>format type</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.channels">
            <summary>number of channels</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.sampleRate">
            <summary>sample rate</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.averageBytesPerSecond">
            <summary>for buffer estimation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.blockAlign">
            <summary>block size of data</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.bitsPerSample">
            <summary>number of bits per sample of mono data</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormat.extraSize">
            <summary>number of following bytes</summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.#ctor">
            <summary>
            Creates a new PCM 44.1Khz stereo 16 bit format
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new 16 bit wave format with the specified sample
            rate and channel count
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of channels</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.ConvertLatencyToByteSize(System.Int32)">
            <summary>
            Gets the size of a wave buffer equivalent to the latency in milliseconds.
            </summary>
            <param name="milliseconds">The milliseconds.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.CreateCustomFormat(VisioForge.Libs.NAudio.Wave.WaveFormatEncoding,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a WaveFormat with custom members
            </summary>
            <param name="tag">The encoding</param>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of channels</param>
            <param name="averageBytesPerSecond">Average Bytes Per Second</param>
            <param name="blockAlign">Block Align</param>
            <param name="bitsPerSample">Bits Per Sample</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.CreateALawFormat(System.Int32,System.Int32)">
            <summary>
            Creates an A-law wave format
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of Channels</param>
            <returns>Wave Format</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.CreateMuLawFormat(System.Int32,System.Int32)">
            <summary>
            Creates a Mu-law wave format
            </summary>
            <param name="sampleRate">Sample Rate</param>
            <param name="channels">Number of Channels</param>
            <returns>Wave Format</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new PCM format with the specified sample rate, bit depth and channels
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.CreateIeeeFloatWaveFormat(System.Int32,System.Int32)">
            <summary>
            Creates a new 32 bit IEEE floating point wave format
            </summary>
            <param name="sampleRate">sample rate</param>
            <param name="channels">number of channels</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.MarshalFromPtr(System.IntPtr)">
            <summary>
            Helper function to retrieve a WaveFormat structure from a pointer
            </summary>
            <param name="pointer">WaveFormat structure</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.MarshalToPtr(VisioForge.Libs.NAudio.Wave.WaveFormat)">
            <summary>
            Helper function to marshal WaveFormat to an IntPtr
            </summary>
            <param name="format">WaveFormat</param>
            <returns>IntPtr to WaveFormat structure (needs to be freed by callee)</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.FromFormatChunk(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads in a WaveFormat (with extra data) from a fmt chunk (chunk identifier and
            length should already have been read)
            </summary>
            <param name="br">Binary reader</param>
            <param name="formatChunkLength">Format chunk length</param>
            <returns>A WaveFormatExtraData</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.#ctor(System.IO.BinaryReader)">
            <summary>
            Reads a new WaveFormat object from a stream
            </summary>
            <param name="br">A binary reader that wraps the stream</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.ToString">
            <summary>
            Reports this WaveFormat as a string
            </summary>
            <returns>String describing the wave format</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.Equals(System.Object)">
            <summary>
            Compares with another WaveFormat object
            </summary>
            <param name="obj">Object to compare to</param>
            <returns>True if the objects are the same</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.GetHashCode">
            <summary>
            Provides a Hashcode for this WaveFormat
            </summary>
            <returns>A hashcode</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.Encoding">
            <summary>
            Returns the encoding type used
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>
            Writes this WaveFormat object to a stream
            </summary>
            <param name="writer">the output stream</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.Channels">
            <summary>
            Returns the number of channels (1=mono,2=stereo etc)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.SampleRate">
            <summary>
            Returns the sample rate (samples per second)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.AverageBytesPerSecond">
            <summary>
            Returns the average number of bytes used per second
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.BlockAlign">
            <summary>
            Returns the block alignment
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.BitsPerSample">
            <summary>
            Returns the number of bits per sample (usually 16 or 32, sometimes 24 or 8)
            Can be 0 for some codecs
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormat.ExtraSize">
            <summary>
            Returns the number of extra bytes used by this waveformat. Often 0,
            except for compressed formats which store extra data after the WAVEFORMATEX header
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler">
            <summary>
            Custom marshaller for WaveFormat structures
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler.GetInstance(System.String)">
            <summary>
            Gets the instance of this marshaller
            </summary>
            <param name="cookie"></param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler.CleanUpManagedData(System.Object)">
            <summary>
            Clean up managed data
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler.CleanUpNativeData(System.IntPtr)">
            <summary>
            Clean up native data
            </summary>
            <param name="pNativeData"></param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler.GetNativeDataSize">
            <summary>
            Get native data size
            </summary>        
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler.MarshalManagedToNative(System.Object)">
            <summary>
            Marshal managed to native
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatCustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
            <summary>
            Marshal Native to Managed
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding">
            <summary>
            Summary description for WaveFormatEncoding.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Unknown">
            <summary>WAVE_FORMAT_UNKNOWN,	Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Pcm">
            <summary>WAVE_FORMAT_PCM		Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Adpcm">
            <summary>WAVE_FORMAT_ADPCM		Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.IeeeFloat">
            <summary>WAVE_FORMAT_IEEE_FLOAT Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vselp">
            <summary>WAVE_FORMAT_VSELP		Compaq Computer Corp.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.IbmCvsd">
            <summary>WAVE_FORMAT_IBM_CVSD	IBM Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.ALaw">
            <summary>WAVE_FORMAT_ALAW		Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MuLaw">
            <summary>WAVE_FORMAT_MULAW		Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Dts">
            <summary>WAVE_FORMAT_DTS		Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Drm">
            <summary>WAVE_FORMAT_DRM		Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WmaVoice9">
            <summary>WAVE_FORMAT_WMAVOICE9 </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.OkiAdpcm">
            <summary>WAVE_FORMAT_OKI_ADPCM	OKI</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DviAdpcm">
            <summary>WAVE_FORMAT_DVI_ADPCM	Intel Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.ImaAdpcm">
            <summary>WAVE_FORMAT_IMA_ADPCM  Intel Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MediaspaceAdpcm">
            <summary>WAVE_FORMAT_MEDIASPACE_ADPCM Videologic</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.SierraAdpcm">
            <summary>WAVE_FORMAT_SIERRA_ADPCM Sierra Semiconductor Corp </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.G723Adpcm">
            <summary>WAVE_FORMAT_G723_ADPCM Antex Electronics Corporation </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DigiStd">
            <summary>WAVE_FORMAT_DIGISTD DSP Solutions, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DigiFix">
            <summary>WAVE_FORMAT_DIGIFIX DSP Solutions, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DialogicOkiAdpcm">
            <summary>WAVE_FORMAT_DIALOGIC_OKI_ADPCM Dialogic Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MediaVisionAdpcm">
            <summary>WAVE_FORMAT_MEDIAVISION_ADPCM Media Vision, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.CUCodec">
            <summary>WAVE_FORMAT_CU_CODEC Hewlett-Packard Company </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.YamahaAdpcm">
            <summary>WAVE_FORMAT_YAMAHA_ADPCM Yamaha Corporation of America</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.SonarC">
            <summary>WAVE_FORMAT_SONARC Speech Compression</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DspGroupTrueSpeech">
            <summary>WAVE_FORMAT_DSPGROUP_TRUESPEECH DSP Group, Inc </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.EchoSpeechCorporation1">
            <summary>WAVE_FORMAT_ECHOSC1 Echo Speech Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.AudioFileAf36">
            <summary>WAVE_FORMAT_AUDIOFILE_AF36, Virtual Music, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Aptx">
            <summary>WAVE_FORMAT_APTX Audio Processing Technology</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.AudioFileAf10">
            <summary>WAVE_FORMAT_AUDIOFILE_AF10, Virtual Music, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Prosody1612">
            <summary>WAVE_FORMAT_PROSODY_1612, Aculab plc</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Lrc">
            <summary>WAVE_FORMAT_LRC, Merging Technologies S.A. </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DolbyAc2">
            <summary>WAVE_FORMAT_DOLBY_AC2, Dolby Laboratories</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Gsm610">
            <summary>WAVE_FORMAT_GSM610, Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MsnAudio">
            <summary>WAVE_FORMAT_MSNAUDIO, Microsoft Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.AntexAdpcme">
            <summary>WAVE_FORMAT_ANTEX_ADPCME, Antex Electronics Corporation</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.ControlResVqlpc">
            <summary>WAVE_FORMAT_CONTROL_RES_VQLPC, Control Resources Limited </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DigiReal">
            <summary>WAVE_FORMAT_DIGIREAL, DSP Solutions, Inc. </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.DigiAdpcm">
            <summary>WAVE_FORMAT_DIGIADPCM, DSP Solutions, Inc.</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.ControlResCr10">
            <summary>WAVE_FORMAT_CONTROL_RES_CR10, Control Resources Limited</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_NMS_VBXADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CS_IMAADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ECHOSC3">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_DIGITALK">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_XEBEC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_G721_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_G728_CELP">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_MSG723">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Mpeg">
            <summary>WAVE_FORMAT_MPEG, Microsoft Corporation </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_RT24">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_PAC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MpegLayer3">
            <summary>WAVE_FORMAT_MPEGLAYER3, ISO/MPEG Layer3 Format Tag </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_LUCENT_G723">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CIRRUS">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ESPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CANOPUS_ATRAC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_G726_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_G722_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DSAT_DISPLAY">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_BYTE_ALIGNED">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC8">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC10">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC16">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC20">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT24">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29HW">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR12">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR18">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ40">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SOFTSOUND">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ60">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_MSRT24">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_G729A">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_MVI_MVI2">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DF_G726">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DF_GSM610">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ISIAUDIO">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ONLIVE">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SBC24">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DOLBY_AC3_SPDIF">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_MEDIASONIC_G723">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_PROSODY_8KBPS">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ZYXEL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_PHILIPS_LPCBB">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_PACKED">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_MALDEN_PHONYTALK">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Gsm">
            <summary>WAVE_FORMAT_GSM</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.G729">
            <summary>WAVE_FORMAT_G729</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.G723">
            <summary>WAVE_FORMAT_G723</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Acelp">
            <summary>WAVE_FORMAT_ACELP</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.RawAac">
            <summary>
            WAVE_FORMAT_RAW_AAC1
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_RHETOREX_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_IRAT">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VIVO_G723">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VIVO_SIREN">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DIGITAL_G723">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SANYO_LD_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACEPLNET">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP4800">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP8V3">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729A">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_KELVIN">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_G726ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_PUREVOICE">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_HALFRATE">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_TUBGSM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_MSAUDIO1">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WindowsMediaAudio">
            <summary>
            Windows Media Audio, WAVE_FORMAT_WMAUDIO2, Microsoft Corporation
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WindowsMediaAudioProfessional">
            <summary>
            Windows Media Audio Professional WAVE_FORMAT_WMAUDIO3, Microsoft Corporation
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WindowsMediaAudioLosseless">
            <summary>
            Windows Media Audio Lossless, WAVE_FORMAT_WMAUDIO_LOSSLESS
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WindowsMediaAudioSpdif">
            <summary>
            Windows Media Audio Professional over SPDIF WAVE_FORMAT_WMASPDIF (0x0164)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ULAW">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ALAW">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_16K">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH8">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH10">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_UHER_ADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_QUARTERDECK">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ILINK_VC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_RAW_SPORT">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_ESST_AC3">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_IPI_HSX">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_IPI_RPELP">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_CS2">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SONY_SCX">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_FM_TOWNS_SND">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_BTV_DIGITAL">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_QDESIGN_MUSIC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_VME_VMPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_TPC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_OLIGSM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_OLIADPCM">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_OLICELP">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_OLISBC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_OLIOPR">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_LH_CODEC">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_NORRIS">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS">
            <summary></summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MPEG_ADTS_AAC">
            <summary>
            Advanced Audio Coding (AAC) audio in Audio Data Transport Stream (ADTS) format.
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_ADTS_AAC.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral band replication (SBR) or parametric stereo (PS) tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MPEG_RAW_AAC">
            <summary></summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MPEG_LOAS">
            <summary>
            MPEG-4 audio transport stream with a synchronization layer (LOAS) and a multiplex layer (LATM).
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_LOAS.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral SBR or PS tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.NOKIA_MPEG_ADTS_AAC">
            <summary>NOKIA_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.NOKIA_MPEG_RAW_AAC">
            <summary>NOKIA_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.VODAFONE_MPEG_ADTS_AAC">
            <summary>VODAFONE_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.VODAFONE_MPEG_RAW_AAC">
            <summary>VODAFONE_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.MPEG_HEAAC">
            <summary>
            High-Efficiency Advanced Audio Coding (HE-AAC) stream.
            The format block is an HEAACWAVEFORMAT structure.
            </summary>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DVM">
            <summary>WAVE_FORMAT_DVM</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vorbis1">
            <summary>WAVE_FORMAT_VORBIS1 "Og" Original stream compatible</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vorbis2">
            <summary>WAVE_FORMAT_VORBIS2 "Pg" Have independent header</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vorbis3">
            <summary>WAVE_FORMAT_VORBIS3 "Qg" Have no codebook header</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vorbis1P">
            <summary>WAVE_FORMAT_VORBIS1P "og" Original stream compatible</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vorbis2P">
            <summary>WAVE_FORMAT_VORBIS2P "pg" Have independent headere</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Vorbis3P">
            <summary>WAVE_FORMAT_VORBIS3P "qg" Have no codebook header</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.Extensible">
            <summary>WAVE_FORMAT_EXTENSIBLE</summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveFormatEncoding.WAVE_FORMAT_DEVELOPMENT">
            <summary></summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible">
            <summary>
            WaveFormatExtensible
            http://www.microsoft.com/whdc/device/audio/multichaud.mspx
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible.#ctor">
            <summary>
            Parameterless constructor for marshalling
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new WaveFormatExtensible for PCM or IEEE
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible.ToStandardWaveFormat">
            <summary>
            WaveFormatExtensible for PCM or floating point can be awkward to work with
            This creates a regular WaveFormat structure representing the same audio format
            </summary>
            <returns></returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible.SubFormat">
            <summary>
            SubFormat (may be one of AudioMediaSubtypes)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible.Serialize(System.IO.BinaryWriter)">
            <summary>
            Serialize
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtensible.ToString">
            <summary>
            String representation
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveFormatExtraData">
            <summary>
            This class used for marshalling from unmanaged code
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveFormatExtraData.ExtraData">
            <summary>
            Allows the extra data to be read
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtraData.#ctor">
            <summary>
            parameterless constructor for marshalling
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtraData.#ctor(System.IO.BinaryReader)">
            <summary>
            Reads this structure from a BinaryReader
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveFormatExtraData.Serialize(System.IO.BinaryWriter)">
            <summary>
            Writes this structure to a BinaryWriter
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.IWaveIn">
            <summary>
            Generic interface for wave recording
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveIn.WaveFormat">
            <summary>
            Recording WaveFormat
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWaveIn.StartRecording">
            <summary>
            Start Recording
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWaveIn.StopRecording">
            <summary>
            Stop Recording
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.IWaveIn.DataAvailable">
            <summary>
            Indicates recorded data is available 
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.IWaveIn.RecordingStopped">
            <summary>
            Indicates that all recorded data has now been received.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveIn">
            <summary>
            Allows recording using the Windows waveIn APIs
            Events are raised as recorded buffers are made available
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.WaveIn.DataAvailable">
            <summary>
            Indicates recorded data is available 
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.WaveIn.RecordingStopped">
            <summary>
            Indicates that all recorded data has now been received.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.#ctor">
            <summary>
            Prepares a Wave input device for recording
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.#ctor(System.IntPtr)">
            <summary>
            Creates a WaveIn device using the specified window handle for callbacks
            </summary>
            <param name="windowHandle">A valid window handle</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.#ctor(VisioForge.Libs.NAudio.Wave.WaveCallbackInfo)">
            <summary>
            Prepares a Wave input device for recording
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveIn.DeviceCount">
            <summary>
            Returns the number of Wave In devices available in the system
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.GetCapabilities(System.Int32)">
            <summary>
            Retrieves the capabilities of a waveIn device
            </summary>
            <param name="devNumber">Device to test</param>
            <returns>The WaveIn device capabilities</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveIn.BufferMilliseconds">
            <summary>
            Milliseconds for the buffer. Recommended value is 100ms
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveIn.NumberOfBuffers">
            <summary>
            Number of Buffers to use (usually 2 or 3)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveIn.DeviceNumber">
            <summary>
            The device number to use
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.Callback(System.IntPtr,VisioForge.Libs.NAudio.Wave.WaveInterop.WaveMessage,System.IntPtr,VisioForge.Libs.NAudio.Wave.WaveHeader,System.IntPtr)">
            <summary>
            Called when we get a new buffer of recorded data
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.StartRecording">
            <summary>
            Start recording
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.StopRecording">
            <summary>
            Stop recording
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveIn.WaveFormat">
            <summary>
            WaveFormat we are recording in
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.Dispose(System.Boolean)">
            <summary>
            Dispose pattern
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.GetMixerLine">
            <summary>
            Microphone Level
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveIn.Dispose">
            <summary>
            Dispose method
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveInEvent">
            <summary>
            Recording using waveIn api with event callbacks.
            Use this for recording in non-gui applications
            Events are raised as recorded buffers are made available
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.WaveInEvent.DataAvailable">
            <summary>
            Indicates recorded data is available 
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.WaveInEvent.RecordingStopped">
            <summary>
            Indicates that all recorded data has now been received.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.#ctor">
            <summary>
            Prepares a Wave input device for recording
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEvent.DeviceCount">
            <summary>
            Returns the number of Wave In devices available in the system
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.GetCapabilities(System.Int32)">
            <summary>
            Retrieves the capabilities of a waveIn device
            </summary>
            <param name="devNumber">Device to test</param>
            <returns>The WaveIn device capabilities</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEvent.BufferMilliseconds">
            <summary>
            Milliseconds for the buffer. Recommended value is 100ms
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEvent.NumberOfBuffers">
            <summary>
            Number of Buffers to use (usually 2 or 3)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEvent.DeviceNumber">
            <summary>
            The device number to use
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.StartRecording">
            <summary>
            Start recording
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.StopRecording">
            <summary>
            Stop recording
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInEvent.WaveFormat">
            <summary>
            WaveFormat we are recording in
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.Dispose(System.Boolean)">
            <summary>
            Dispose pattern
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.GetMixerLine">
            <summary>
            Microphone Level
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInEvent.Dispose">
            <summary>
            Dispose method
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut">
            <summary>
            NativeDirectSoundOut using DirectSound COM interop.
            Contact author: Alexandre Mutel - alexandre_mutel at yahoo.fr
            Modified by: Graham "Gee" Plumb
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.DirectSoundOut.PlaybackStopped">
            <summary>
            Playback Stopped
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Devices">
            <summary>
            Gets the DirectSound output devices in the system
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.#ctor(System.Guid,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut"/> class.
            (40ms seems to work under Vista).
            </summary>
            <param name="latency">The latency.</param>
            <param name="device">Selected device</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Play">
            <summary>
            Begin playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Stop">
            <summary>
            Stop playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Pause">
            <summary>
            Pause Playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.GetPosition">
            <summary>
            Gets the current position in bytes from the wave output device.
            (n.b. this is not the same thing as the position within your reader
            stream)
            </summary>
            <returns>Position in bytes</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundOut.PlaybackPosition">
            <summary>
            Gets the current position from the wave output device.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Init(VisioForge.Libs.NAudio.Wave.IWaveProvider)">
            <summary>
            Initialise playback
            </summary>
            <param name="waveProvider">The waveprovider to be played</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundOut.PlaybackState">
            <summary>
            Current playback state
            </summary>
            <value></value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Volume">
            <summary>
            The volume 1.0 is full scale
            </summary>
            <value></value>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.IsBufferLost">
            <summary>
            Determines whether the SecondaryBuffer is lost.
            </summary>
            <returns>
            	<c>true</c> if [is buffer lost]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.MsToBytes(System.Int32)">
            <summary>
            Convert ms to bytes size according to WaveFormat
            </summary>
            <param name="ms">The ms</param>
            <returns>number of byttes</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.PlaybackThreadFunc">
            <summary>
            Processes the samples in a separate thread.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.StopPlayback">
            <summary>
            Stop playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.Feed(System.Int32)">
            <summary>
            Feeds the SecondaryBuffer with the WaveStream
            </summary>
            <param name="bytesToCopy">number of bytes to feed</param>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut.IDirectSound">
            <summary>
            IDirectSound interface
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut.IDirectSoundBuffer">
            <summary>
            IDirectSoundBuffer interface
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut.IDirectSoundNotify">
            <summary>
            IDirectSoundNotify interface
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DirectSoundCreate(System.Guid@,VisioForge.Libs.NAudio.Wave.DirectSoundOut.IDirectSound@,System.IntPtr)">
            <summary>
            Instanciate DirectSound from the DLL
            </summary>
            <param name="GUID">The GUID.</param>
            <param name="directSound">The direct sound.</param>
            <param name="pUnkOuter">The p unk outer.</param>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DSDEVID_DefaultPlayback">
            <summary>
            DirectSound default playback device GUID 
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DSDEVID_DefaultCapture">
            <summary>
            DirectSound default capture device GUID
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DSDEVID_DefaultVoicePlayback">
            <summary>
            DirectSound default device for voice playback
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DSDEVID_DefaultVoiceCapture">
            <summary>
            DirectSound default device for voice capture
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DSEnumCallback">
            <summary>
            The DSEnumCallback function is an application-defined callback function that enumerates the DirectSound drivers. 
            The system calls this function in response to the application's call to the DirectSoundEnumerate or DirectSoundCaptureEnumerate function.
            </summary>
            <param name="lpGuid">Address of the GUID that identifies the device being enumerated, or NULL for the primary device. This value can be passed to the DirectSoundCreate8 or DirectSoundCaptureCreate8 function to create a device object for that driver. </param>
            <param name="lpcstrDescription">Address of a null-terminated string that provides a textual description of the DirectSound device. </param>
            <param name="lpcstrModule">Address of a null-terminated string that specifies the module name of the DirectSound driver corresponding to this device. </param>
            <param name="lpContext">Address of application-defined data. This is the pointer passed to DirectSoundEnumerate or DirectSoundCaptureEnumerate as the lpContext parameter. </param>
            <returns>Returns TRUE to continue enumerating drivers, or FALSE to stop.</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.DirectSoundEnumerate(VisioForge.Libs.NAudio.Wave.DirectSoundOut.DSEnumCallback,System.IntPtr)">
            <summary>
            The DirectSoundEnumerate function enumerates the DirectSound drivers installed in the system.
            </summary>
            <param name="lpDSEnumCallback">callback function</param>
            <param name="lpContext">User context</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.DirectSoundOut.GetDesktopWindow">
            <summary>
            Gets the HANDLE of the desktop window.
            </summary>
            <returns>HANDLE of the Desktop window</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.DirectSoundDeviceInfo">
            <summary>
            Class for enumerating DirectSound devices
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundDeviceInfo.Guid">
            <summary>
            The device identifier
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundDeviceInfo.Description">
            <summary>
            Device description
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.DirectSoundDeviceInfo.ModuleName">
            <summary>
            Device module name
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.IWaveBuffer">
            <summary>
            IWaveBuffer interface use to store wave datas. 
            Data can be manipulated with arrays (<see cref="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.ByteBuffer"/>,<see cref="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.FloatBuffer"/>,
            <see cref="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.ShortBuffer"/>,<see cref="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.IntBuffer"/> ) that are pointing to the same memory buffer.
            This is a requirement for all subclasses.
            
            Use the associated Count property based on the type of buffer to get the number of data in the 
            buffer.
            
            <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> for the standard implementation using C# unions.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.ByteBuffer">
            <summary>
            Gets the byte buffer.
            </summary>
            <value>The byte buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.FloatBuffer">
            <summary>
            Gets the float buffer.
            </summary>
            <value>The float buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.ShortBuffer">
            <summary>
            Gets the short buffer.
            </summary>
            <value>The short buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.IntBuffer">
            <summary>
            Gets the int buffer.
            </summary>
            <value>The int buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.MaxSize">
            <summary>
            Gets the max size in bytes of the byte buffer..
            </summary>
            <value>Maximum number of bytes in the buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.ByteBufferCount">
            <summary>
            Gets the byte buffer count.
            </summary>
            <value>The byte buffer count.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.FloatBufferCount">
            <summary>
            Gets the float buffer count.
            </summary>
            <value>The float buffer count.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.ShortBufferCount">
            <summary>
            Gets the short buffer count.
            </summary>
            <value>The short buffer count.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveBuffer.IntBufferCount">
            <summary>
            Gets the int buffer count.
            </summary>
            <value>The int buffer count.</value>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.IWavePlayer">
            <summary>
            Represents the interface to a device that can play a WaveFile
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWavePlayer.Play">
            <summary>
            Begin playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWavePlayer.Stop">
            <summary>
            Stop playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWavePlayer.Pause">
            <summary>
            Pause Playback
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWavePlayer.Init(VisioForge.Libs.NAudio.Wave.IWaveProvider)">
            <summary>
            Initialise playback
            </summary>
            <param name="waveProvider">The waveprovider to be played</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWavePlayer.PlaybackState">
            <summary>
            Current playback state
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWavePlayer.Volume">
            <summary>
            The volume 1.0 is full scale
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.IWavePlayer.PlaybackStopped">
            <summary>
            Indicates that playback has gone into a stopped state due to 
            reaching the end of the input stream or an error has been encountered during playback
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.IWavePosition">
            <summary>
            Interface for IWavePlayers that can report position
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWavePosition.GetPosition">
            <summary>
            Position (in terms of bytes played - does not necessarily)
            </summary>
            <returns>Position in bytes</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWavePosition.OutputWaveFormat">
            <summary>
            Gets a <see cref="T:VisioForge.Libs.NAudio.Wave.WaveFormat"/> instance indicating the format the hardware is using.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.IWaveProvider">
            <summary>
            Generic interface for all WaveProviders.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.IWaveProvider.WaveFormat">
            <summary>
            Gets the WaveFormat of this WaveProvider.
            </summary>
            <value>The wave format.</value>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.IWaveProvider.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Fill the specified buffer with wave data.
            </summary>
            <param name="buffer">The buffer to fill of wave data.</param>
            <param name="offset">Offset into buffer</param>
            <param name="count">The number of bytes to read</param>
            <returns>the number of bytes written to the buffer.</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.ISampleProvider">
            <summary>
            Like IWaveProvider, but makes it much simpler to put together a 32 bit floating
            point mixing engine
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.ISampleProvider.WaveFormat">
            <summary>
            Gets the WaveFormat of this Sample Provider.
            </summary>
            <value>The wave format.</value>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.ISampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Fill the specified buffer with 32 bit floating point samples
            </summary>
            <param name="buffer">The buffer to fill with samples.</param>
            <param name="offset">Offset into buffer</param>
            <param name="count">The number of samples to read</param>
            <returns>the number of samples written to the buffer.</returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.PlaybackState">
            <summary>
            Playback State
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.PlaybackState.Stopped">
            <summary>
            Stopped
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.PlaybackState.Playing">
            <summary>
            Playing
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.PlaybackState.Paused">
            <summary>
            Paused
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.StoppedEventArgs">
            <summary>
            Stopped Event Args
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.StoppedEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of StoppedEventArgs
            </summary>
            <param name="exception">An exception to report (null if no exception)</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.StoppedEventArgs.Exception">
            <summary>
            An exception. Will be null if the playback or record operation stopped
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveBuffer">
            <summary>
            WaveBuffer class use to store wave datas. Data can be manipulated with arrays
            (<see cref="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.ByteBuffer"/>,<see cref="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.FloatBuffer"/>,<see cref="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.ShortBuffer"/>,<see cref="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.IntBuffer"/> ) that are pointing to the
            same memory buffer. Use the associated Count property based on the type of buffer to get the number of 
            data in the buffer.
            Implicit casting is now supported to float[], byte[], int[], short[].
            You must not use Length on returned arrays.
            
            n.b. FieldOffset is 8 now to allow it to work natively on 64 bit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.WaveBuffer.numberOfBytes">
            <summary>
            Number of Bytes
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> class.
            </summary>
            <param name="sizeToAllocateInBytes">The number of bytes. The size of the final buffer will be aligned on 4 Bytes (upper bound)</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> class binded to a specific byte buffer.
            </summary>
            <param name="bufferToBoundTo">A byte buffer to bound the WaveBuffer to.</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.BindTo(System.Byte[])">
            <summary>
            Binds this WaveBuffer instance to a specific byte buffer.
            </summary>
            <param name="bufferToBoundTo">A byte buffer to bound the WaveBuffer to.</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.op_Implicit(VisioForge.Libs.NAudio.Wave.WaveBuffer)~System.Byte[]">
            <summary>
            Performs an implicit conversion from <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> to <see cref="T:System.Byte"/>.
            </summary>
            <param name="waveBuffer">The wave buffer.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.op_Implicit(VisioForge.Libs.NAudio.Wave.WaveBuffer)~System.Single[]">
            <summary>
            Performs an implicit conversion from <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="waveBuffer">The wave buffer.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.op_Implicit(VisioForge.Libs.NAudio.Wave.WaveBuffer)~System.Int32[]">
            <summary>
            Performs an implicit conversion from <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="waveBuffer">The wave buffer.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.op_Implicit(VisioForge.Libs.NAudio.Wave.WaveBuffer)~System.Int16[]">
            <summary>
            Performs an implicit conversion from <see cref="T:VisioForge.Libs.NAudio.Wave.WaveBuffer"/> to <see cref="T:System.Int16"/>.
            </summary>
            <param name="waveBuffer">The wave buffer.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.ByteBuffer">
            <summary>
            Gets the byte buffer.
            </summary>
            <value>The byte buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.FloatBuffer">
            <summary>
            Gets the float buffer.
            </summary>
            <value>The float buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.ShortBuffer">
            <summary>
            Gets the short buffer.
            </summary>
            <value>The short buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.IntBuffer">
            <summary>
            Gets the int buffer.
            </summary>
            <value>The int buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.MaxSize">
            <summary>
            Gets the max size in bytes of the byte buffer..
            </summary>
            <value>Maximum number of bytes in the buffer.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.ByteBufferCount">
            <summary>
            Gets or sets the byte buffer count.
            </summary>
            <value>The byte buffer count.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.FloatBufferCount">
            <summary>
            Gets or sets the float buffer count.
            </summary>
            <value>The float buffer count.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.ShortBufferCount">
            <summary>
            Gets or sets the short buffer count.
            </summary>
            <value>The short buffer count.</value>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveBuffer.IntBufferCount">
            <summary>
            Gets or sets the int buffer count.
            </summary>
            <value>The int buffer count.</value>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.Clear">
            <summary>
            Clears the associated buffer.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.Copy(System.Array)">
            <summary>
            Copy this WaveBuffer to a destination buffer up to ByteBufferCount bytes.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveBuffer.CheckValidityCount(System.String,System.Int32,System.Int32)">
            <summary>
            Checks the validity of the count parameters.
            </summary>
            <param name="argName">Name of the arg.</param>
            <param name="value">The value.</param>
            <param name="sizeOfValue">The size of value.</param>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveOut">
            <summary>
            Represents a wave out device
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.WaveOut.PlaybackStopped">
            <summary>
            Indicates playback has stopped automatically
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.GetCapabilities(System.Int32)">
            <summary>
            Retrieves the capabilities of a waveOut device
            </summary>
            <param name="devNumber">Device to test</param>
            <returns>The WaveOut device capabilities</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.DeviceCount">
            <summary>
            Returns the number of Wave Out devices available in the system
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.DesiredLatency">
            <summary>
            Gets or sets the desired latency in milliseconds
            Should be set before a call to Init
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.NumberOfBuffers">
            <summary>
            Gets or sets the number of buffers used
            Should be set before a call to Init
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.DeviceNumber">
            <summary>
            Gets or sets the device number
            Should be set before a call to Init
            This must be between 0 and <see>DeviceCount</see> - 1.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.#ctor">
            <summary>
            Creates a default WaveOut device
            Will use window callbacks if called from a GUI thread, otherwise function
            callbacks
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.#ctor(System.IntPtr)">
            <summary>
            Creates a WaveOut device using the specified window handle for callbacks
            </summary>
            <param name="windowHandle">A valid window handle</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.#ctor(VisioForge.Libs.NAudio.Wave.WaveCallbackInfo)">
            <summary>
            Opens a WaveOut device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Init(VisioForge.Libs.NAudio.Wave.IWaveProvider)">
            <summary>
            Initialises the WaveOut device
            </summary>
            <param name="waveProvider">WaveProvider to play</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Play">
            <summary>
            Start playing the audio from the WaveStream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Pause">
            <summary>
            Pause the audio
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Resume">
            <summary>
            Resume playing after a pause from the same position
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Stop">
            <summary>
            Stop and reset the WaveOut device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.GetPosition">
            <summary>
            Gets the current position in bytes from the wave output device.
            (n.b. this is not the same thing as the position within your reader
            stream - it calls directly into waveOutGetPosition)
            </summary>
            <returns>Position in bytes</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.OutputWaveFormat">
            <summary>
            Gets a <see cref="T:VisioForge.Libs.NAudio.Wave.WaveFormat"/> instance indicating the format the hardware is using.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.PlaybackState">
            <summary>
            Playback State
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOut.Volume">
            <summary>
            Volume for this device 1.0 is full scale
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Dispose">
            <summary>
            Closes this WaveOut device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Dispose(System.Boolean)">
            <summary>
            Closes the WaveOut device and disposes of buffers
            </summary>
            <param name="disposing">True if called from <see>Dispose</see></param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOut.Finalize">
            <summary>
            Finalizer. Only called when user forgets to call <see>Dispose</see>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveOutEvent">
            <summary>
            Alternative WaveOut class, making use of the Event callback
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.WaveOutEvent.PlaybackStopped">
            <summary>
            Indicates playback has stopped automatically
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutEvent.DesiredLatency">
            <summary>
            Gets or sets the desired latency in milliseconds
            Should be set before a call to Init
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutEvent.NumberOfBuffers">
            <summary>
            Gets or sets the number of buffers used
            Should be set before a call to Init
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutEvent.DeviceNumber">
            <summary>
            Gets or sets the device number
            Should be set before a call to Init
            This must be between 0 and <see>DeviceCount</see> - 1.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.#ctor">
            <summary>
            Opens a WaveOut device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Init(VisioForge.Libs.NAudio.Wave.IWaveProvider)">
            <summary>
            Initialises the WaveOut device
            </summary>
            <param name="waveProvider">WaveProvider to play</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Play">
            <summary>
            Start playing the audio from the WaveStream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Pause">
            <summary>
            Pause the audio
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Resume">
            <summary>
            Resume playing after a pause from the same position
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Stop">
            <summary>
            Stop and reset the WaveOut device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.GetPosition">
            <summary>
            Gets the current position in bytes from the wave output device.
            (n.b. this is not the same thing as the position within your reader
            stream - it calls directly into waveOutGetPosition)
            </summary>
            <returns>Position in bytes</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutEvent.OutputWaveFormat">
            <summary>
            Gets a <see cref="T:VisioForge.Libs.NAudio.Wave.WaveFormat"/> instance indicating the format the hardware is using.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutEvent.PlaybackState">
            <summary>
            Playback State
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Volume">
            <summary>
            Obsolete property
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Dispose">
            <summary>
            Closes this WaveOut device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Dispose(System.Boolean)">
            <summary>
            Closes the WaveOut device and disposes of buffers
            </summary>
            <param name="disposing">True if called from <see>Dispose</see></param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutEvent.Finalize">
            <summary>
            Finalizer. Only called when user forgets to call <see>Dispose</see>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider">
            <summary>
            Provides a buffered store of samples
            Read method will return queued samples or fill buffer with zeroes
            Now backed by a circular buffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.#ctor(VisioForge.Libs.NAudio.Wave.WaveFormat)">
            <summary>
            Creates a new buffered WaveProvider
            </summary>
            <param name="waveFormat">WaveFormat</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.BufferLength">
            <summary>
            Buffer length in bytes
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.BufferDuration">
            <summary>
            Buffer duration
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.DiscardOnBufferOverflow">
            <summary>
            If true, when the buffer is full, start throwing away data
            if false, AddSamples will throw an exception when buffer is full
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.BufferedBytes">
            <summary>
            The number of buffered bytes
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.BufferedDuration">
            <summary>
            Buffered Duration
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.WaveFormat">
            <summary>
            Gets the WaveFormat
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.AddSamples(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds samples. Takes a copy of buffer, so that buffer can be reused if necessary
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads from this WaveProvider
            Will always return count bytes, since we will zero-fill the buffer if not enough available
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BufferedWaveProvider.ClearBuffer">
            <summary>
            Discards all audio from the buffer
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider">
            <summary>
            Allows any number of inputs to be patched to outputs
            Uses could include swapping left and right channels, turning mono into stereo,
            feeding different input sources to different soundcard outputs etc
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.#ctor(System.Collections.Generic.IEnumerable{VisioForge.Libs.NAudio.Wave.IWaveProvider},System.Int32)">
            <summary>
            Creates a multiplexing wave provider, allowing re-patching of input channels to different
            output channels
            </summary>
            <param name="inputs">Input wave providers. Must all be of the same format, but can have any number of channels</param>
            <param name="numberOfOutputChannels">Desired number of output channels.</param>
        </member>
        <member name="F:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.inputBuffer">
            <summary>
            persistent temporary buffer to prevent creating work for garbage collector
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from this WaveProvider
            </summary>
            <param name="buffer">Buffer to be filled with sample data</param>
            <param name="offset">Offset to write to within buffer, usually 0</param>
            <param name="count">Number of bytes required</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.WaveFormat">
            <summary>
            The WaveFormat of this WaveProvider
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.ConnectInputToOutput(System.Int32,System.Int32)">
            <summary>
            Connects a specified input channel to an output channel
            </summary>
            <param name="inputChannel">Input Channel index (zero based). Must be less than InputChannelCount</param>
            <param name="outputChannel">Output Channel index (zero based). Must be less than OutputChannelCount</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.InputChannelCount">
            <summary>
            The number of input channels. Note that this is not the same as the number of input wave providers. If you pass in
            one stereo and one mono input provider, the number of input channels is three.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.MultiplexingWaveProvider.OutputChannelCount">
            <summary>
            The number of output channels, as specified in the constructor.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveInProvider">
            <summary>
            Buffered WaveProvider taking source data from WaveIn
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInProvider.#ctor(VisioForge.Libs.NAudio.Wave.IWaveIn)">
            <summary>
            Creates a new WaveInProvider
            n.b. Should make sure the WaveFormat is set correctly on IWaveIn before calling
            </summary>
            <param name="waveIn">The source of wave data</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInProvider.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the WaveInProvider
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInProvider.WaveFormat">
            <summary>
            The WaveFormat
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveProvider16">
            <summary>
            Base class for creating a 16 bit wave provider
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider16.#ctor">
            <summary>
            Initializes a new instance of the WaveProvider16 class 
            defaulting to 44.1kHz mono
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider16.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WaveProvider16 class with the specified
            sample rate and number of channels
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider16.SetWaveFormat(System.Int32,System.Int32)">
            <summary>
            Allows you to specify the sample rate and channels for this WaveProvider
            (should be initialised before you pass it to a wave player)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider16.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Implements the Read method of IWaveProvider by delegating to the abstract
            Read method taking a short array
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider16.Read(System.Int16[],System.Int32,System.Int32)">
            <summary>
            Method to override in derived classes
            Supply the requested number of samples into the buffer
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveProvider16.WaveFormat">
            <summary>
            The Wave Format
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveProvider32">
            <summary>
            Base class for creating a 32 bit floating point wave provider
            Can also be used as a base class for an ISampleProvider that can 
            be plugged straight into anything requiring an IWaveProvider
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider32.#ctor">
            <summary>
            Initializes a new instance of the WaveProvider32 class 
            defaulting to 44.1kHz mono
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider32.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WaveProvider32 class with the specified
            sample rate and number of channels
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider32.SetWaveFormat(System.Int32,System.Int32)">
            <summary>
            Allows you to specify the sample rate and channels for this WaveProvider
            (should be initialised before you pass it to a wave player)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider32.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Implements the Read method of IWaveProvider by delegating to the abstract
            Read method taking a float array
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveProvider32.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            Method to override in derived classes
            Supply the requested number of samples into the buffer
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveProvider32.WaveFormat">
            <summary>
            The Wave Format
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream">
            <summary>
            Helper stream that lets us read from compressed audio files with large block alignment
            as though we could read any amount and reposition anywhere
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.#ctor(VisioForge.Libs.NAudio.Wave.WaveStream)">
            <summary>
            Creates a new BlockAlignReductionStream
            </summary>
            <param name="sourceStream">the input stream</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.BlockAlign">
            <summary>
            Block alignment of this stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.WaveFormat">
            <summary>
            Wave Format
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.Length">
            <summary>
            Length of this Stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.Position">
            <summary>
            Current position within stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.Dispose(System.Boolean)">
            <summary>
            Disposes this WaveStream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.BlockAlignReductionStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from this stream
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.ISampleNotifier">
            <summary>
            An interface for WaveStreams which can report notification of individual samples
            </summary>
        </member>
        <member name="E:VisioForge.Libs.NAudio.Wave.ISampleNotifier.Sample">
            <summary>
            A sample has been detected
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SampleEventArgs">
            <summary>
            Sample event arguments
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleEventArgs.Left">
            <summary>
            Left sample
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SampleEventArgs.Right">
            <summary>
            Right sample
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SampleEventArgs.#ctor(System.Single,System.Single)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.RawSourceWaveStream">
            <summary>
            WaveStream that simply passes on data from its source stream
            (e.g. a MemoryStream)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.RawSourceWaveStream.#ctor(System.IO.Stream,VisioForge.Libs.NAudio.Wave.WaveFormat)">
            <summary>
            Initialises a new instance of RawSourceWaveStream
            </summary>
            <param name="sourceStream">The source stream containing raw audio</param>
            <param name="waveFormat">The waveformat of the audio in the source stream</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RawSourceWaveStream.WaveFormat">
            <summary>
            The WaveFormat of this stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RawSourceWaveStream.Length">
            <summary>
            The length in bytes of this stream (if supported)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RawSourceWaveStream.Position">
            <summary>
            The current position in this stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.RawSourceWaveStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the stream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.RiffChunk">
            <summary>
            Holds information about a RIFF file chunk
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.RiffChunk.#ctor(System.Int32,System.Int32,System.Int64)">
            <summary>
            Creates a RiffChunk object
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RiffChunk.Identifier">
            <summary>
            The chunk identifier
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RiffChunk.IdentifierAsString">
            <summary>
            The chunk identifier converted to a string
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RiffChunk.Length">
            <summary>
            The chunk length
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.RiffChunk.StreamPosition">
            <summary>
            The stream position this chunk is located at
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream">
            <summary>
            A simple compressor
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.#ctor(VisioForge.Libs.NAudio.Wave.WaveStream)">
            <summary>
            Create a new simple compressor stream
            </summary>
            <param name="sourceStream">Source stream</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.MakeUpGain">
            <summary>
            Make-up Gain
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Threshold">
            <summary>
            Threshold
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Attack">
            <summary>
            Attack time
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Release">
            <summary>
            Release time
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.HasData(System.Int32)">
            <summary>
            Determine whether the stream has the required amount of data.
            </summary>
            <param name="count">Number of bytes of data required from the stream.</param>
            <returns>Flag indicating whether the required amount of data is avialable.</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Enabled">
            <summary>
            Turns gain on or off
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Length">
            <summary>
            Returns the stream length
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Position">
            <summary>
            Gets or sets the current position in the stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.WaveFormat">
            <summary>
            Gets the WaveFormat of this stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes from this stream
            </summary>
            <param name="array">Buffer to read into</param>
            <param name="offset">Offset in array to read into</param>
            <param name="count">Number of bytes to read</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.Dispose(System.Boolean)">
            <summary>
            Disposes this stream
            </summary>
            <param name="disposing">true if the user called this</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.SimpleCompressorStream.BlockAlign">
            <summary>
            Gets the block alignment for this stream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveInBuffer">
            <summary>
            A buffer of Wave samples
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInBuffer.#ctor(System.IntPtr,System.Int32)">
            <summary>
            creates a new wavebuffer
            </summary>
            <param name="waveInHandle">WaveIn device to write to</param>
            <param name="bufferSize">Buffer size in bytes</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInBuffer.Reuse">
            <summary>
            Place this buffer back to record more audio
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInBuffer.Finalize">
            <summary>
            Finalizer for this wave buffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInBuffer.Dispose">
            <summary>
            Releases resources held by this WaveBuffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveInBuffer.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this WaveBuffer
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInBuffer.Data">
            <summary>
            Provides access to the actual record buffer (for reading only)
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInBuffer.Done">
            <summary>
            Indicates whether the Done flag is set on this buffer
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInBuffer.InQueue">
            <summary>
            Indicates whether the InQueue flag is set on this buffer
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInBuffer.BytesRecorded">
            <summary>
            Number of bytes recorded
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveInBuffer.BufferSize">
            <summary>
            The buffer size in bytes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveOffsetStream">
            <summary>
            Simply shifts the input stream in time, optionally
            clipping its start and end.
            (n.b. may include looping in the future)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.#ctor(VisioForge.Libs.NAudio.Wave.WaveStream,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new WaveOffsetStream
            </summary>
            <param name="sourceStream">the source stream</param>
            <param name="startTime">the time at which we should start reading from the source stream</param>
            <param name="sourceOffset">amount to trim off the front of the source stream</param>
            <param name="sourceLength">length of time to play from source stream</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.#ctor(VisioForge.Libs.NAudio.Wave.WaveStream)">
            <summary>
            Creates a WaveOffsetStream with default settings (no offset or pre-delay,
            and whole length of source stream)
            </summary>
            <param name="sourceStream">The source stream</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.StartTime">
            <summary>
            The length of time before which no audio will be played
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.SourceOffset">
            <summary>
            An offset into the source stream from which to start playing
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.SourceLength">
            <summary>
            Length of time to read from the source stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.BlockAlign">
            <summary>
            Gets the block alignment for this WaveStream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.Length">
            <summary>
            Returns the stream length
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.Position">
            <summary>
            Gets or sets the current position in the stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes from this wave stream
            </summary>
            <param name="destBuffer">The destination buffer</param>
            <param name="offset">Offset into the destination buffer</param>
            <param name="numBytes">Number of bytes read</param>
            <returns>Number of bytes read.</returns>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.WaveFormat">
            <summary>
            <see cref="P:VisioForge.Libs.NAudio.Wave.WaveStream.WaveFormat"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.HasData(System.Int32)">
            <summary>
            Determines whether this channel has any data to play
            to allow optimisation to not read, but bump position forward
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOffsetStream.Dispose(System.Boolean)">
            <summary>
            Disposes this WaveStream
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveOutBuffer">
            <summary>
            A buffer of Wave samples for streaming to a Wave Output device
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.#ctor(System.IntPtr,System.Int32,VisioForge.Libs.NAudio.Wave.IWaveProvider,System.Object)">
            <summary>
            creates a new wavebuffer
            </summary>
            <param name="hWaveOut">WaveOut device to write to</param>
            <param name="bufferSize">Buffer size in bytes</param>
            <param name="bufferFillStream">Stream to provide more data</param>
            <param name="waveOutLock">Lock to protect WaveOut API's from being called on >1 thread</param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.Finalize">
            <summary>
            Finalizer for this wave buffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.Dispose">
            <summary>
            Releases resources held by this WaveBuffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this WaveBuffer
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.OnDone">
            this is called by the WAVE callback and should be used to refill the buffer
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.InQueue">
            <summary>
            Whether the header's in queue flag is set
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveOutBuffer.BufferSize">
            <summary>
            The buffer size in bytes
            </summary>
        </member>
        <member name="T:VisioForge.Libs.NAudio.Wave.WaveStream">
            <summary>
            Base class for all WaveStream classes. Derives from stream.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.WaveFormat">
            <summary>
            Retrieves the WaveFormat for this stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.CanRead">
            <summary>
            We can read from this stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.CanSeek">
            <summary>
            We can seek within this stream
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.CanWrite">
            <summary>
            We can't write to this stream
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveStream.Flush">
            <summary>
            Flush does not need to do anything
            See <see cref="M:System.IO.Stream.Flush"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            An alternative way of repositioning.
            See <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the WaveStream. Not Supported.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes to the WaveStream. Not Supported.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.BlockAlign">
            <summary>
            The block alignment for this wavestream. Do not modify the Position
            to anything that is not a whole multiple of this value
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveStream.Skip(System.Int32)">
            <summary>
            Moves forward or backwards the specified number of seconds in the stream
            </summary>
            <param name="seconds">Number of seconds to move, can be negative</param>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.CurrentTime">
            <summary>
            The current position in the stream in Time format
            </summary>
        </member>
        <member name="P:VisioForge.Libs.NAudio.Wave.WaveStream.TotalTime">
            <summary>
            Total length in real-time of the stream (may be an estimate for compressed files)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.NAudio.Wave.WaveStream.HasData(System.Int32)">
            <summary>
            Whether the WaveStream has non-zero sample data at the current position for the 
            specified count
            </summary>
            <param name="count">Number of bytes to read</param>
        </member>
        <member name="P:VisioForge.Libs.NDI.Source.Address">
            <summary>
            Gets or sets address.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.IWebMVorbisEncodeSettings">
            <summary>
            WebM vorbis encoder filter interface.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WebM.IWebMVorbisEncodeSettings.SetMode(System.Boolean)">
            <summary>
            Sets mode.
            </summary>
            <param name="quality">
            true to quality mode.
            </param>
            <returns>
            Returns true if the operation was successful.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.WebM.IWebMVorbisEncodeSettings.SetQuality(System.Single)">
            <summary>
            Sets quality.
            </summary>
            <param name="inQuality">
            Quality.
            </param>
            <returns>
            Returns true if the operation was successful.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.WebM.IWebMVorbisEncodeSettings.SetBitrate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets bitrate.
            </summary>
            <param name="inBitrate">
            Bitrate.
            </param>
            <param name="inMinBitrate">
            Min bitrate.
            </param>
            <param name="inMaxBitrate">
            Max bitrate.
            </param>
            <returns>
            Returns true if the operation was successful.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.WebM.VP8PostProcessingFlags">
            <summary>
            VP8 post-processing flag.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PostProcessingFlags.VP8AddNoise">
            <summary>
            Add noise.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PostProcessingFlags.VP8Deblock">
            <summary>
            Deblock.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PostProcessingFlags.VP8Demacroblock">
            <summary>
            Demacroblock.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PostProcessingFlags.VP8None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.IVPXEncoder">
            <summary>
            VPX encoder filter interface.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.IVPXEncoder2">
            <summary>
            VPX encoder filter interface.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.IVP8Encoder">
            <summary>
            VP8 encoder filter interface.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.ApplySettings">
            <summary>
            The filter maintains a set of encoder configuration values, held
            in cache.  Any parameters set (using the methods below) are always
            applied to the cached value, irrespective of the state of the graph.
            <para></para>
            When the graph is started, the filter initializes the VP8 encoder
            using the cached configuration values.  This is done automatically,
            as part of the activities associated with transitioning the filter
            from the stopped state.
            <para></para>
            If the graph has been started, then any parameters set by the user
            are still applied to the cache (as before).  However, to apply the
            configuration values in cache to the VP8 encoder, the user must also
            call ApplySettings.
            <para></para>
            It is harmless to call ApplySettings while the graph is stopped.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.ResetSettings">
            <summary>
            Sets the configuration values in cache to their defaults, the same
            as they had when the filter instance was originally created.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetDeadline(System.Int32)">
            <summary>
            Time to spend encoding, in microseconds. 
            </summary>
            <param name="Deadline">
            Deadline time. 0 - infinite.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetDeadline(System.Int32@)">
            <summary>
            Time to spend encoding, in microseconds. 
            </summary>
            <param name="Deadline">
            Deadline time.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetThreadCount(System.Int32)">
            <summary>
            For multi-threaded implementations, use no more than this number of threads. 
            The codec may use fewer threads than allowed. The value 0 is equivalent to the value 1.
            </summary>
            <param name="Threads">
            Threads count.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetThreadCount(System.Int32@)">
            <summary>
            For multi-threaded implementations, use no more than this number of threads. 
            The codec may use fewer threads than allowed. The value 0 is equivalent to the value 1.
            </summary>
            <param name="Threads">
            Threads count.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetErrorResilient(System.Int32)">
            <summary>
            Error resilient mode indicates to the encoder that it should take
            measures appropriate for streaming over lossy or noisy links, if
            possible.  The value 0 means feature is disabled (the default),
            and any positive value means the feature is enabled.
            </summary>
            <param name="ErrorResilient">
            Error resilient parameter.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetErrorResilient(System.Int32@)">
            <summary>
            Error resilient mode indicates to the encoder that it should take
            measures appropriate for streaming over lossy or noisy links, if
            possible.  The value 0 means feature is disabled (the default),
            and any positive value means the feature is enabled.
            </summary>
            <param name="ErrorResilient">
            Error resilient parameter.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetDropframeThreshold(System.Int32)">
            <summary>
            Temporal resampling allows the codec to "drop" frames as a strategy to
            meet its target data rate. This can cause temporal discontinuities in
            the encoded video, which may appear as stuttering during playback. This
            trade-off is often acceptable, but for many applications is not. It can
            be disabled in these cases.
            This threshold is described as a percentage of the target data buffer.
            When the data buffer falls below this percentage of fullness, a
            dropped frame is indicated. Set the threshold to zero (0) to disable
            this feature.
            </summary>
            <param name="DropframeThreshold">
            Dropframe threshold.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetDropframeThreshold(System.Int32@)">
            <summary>
            Temporal resampling allows the codec to "drop" frames as a strategy to
            meet its target data rate. This can cause temporal discontinuities in
            the encoded video, which may appear as stuttering during playback. This
            trade-off is often acceptable, but for many applications is not. It can
            be disabled in these cases.
            This threshold is described as a percentage of the target data buffer.
            When the data buffer falls below this percentage of fullness, a
            dropped frame is indicated. Set the threshold to zero (0) to disable
            this feature.
            </summary>
            <param name="DropframeThreshold">
            Dropframe threshold.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetResizeAllowed(System.Int32)">
            <summary>
            Enable/disable spatial resampling
            Spatial resampling allows the codec to compress a lower resolution
            version of the frame, which is then upscaled by the encoder to the
            correct presentation resolution. This increases visual quality at
            low data rates, at the expense of CPU time on the encoder/decoder.
            </summary>
            <param name="ResizeAllowed">
            Resize allowed.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetResizeAllowed(System.Int32@)">
            <summary>
            Enable/disable spatial resampling
            Spatial resampling allows the codec to compress a lower resolution
            version of the frame, which is then upscaled by the encoder to the
            correct presentation resolution. This increases visual quality at
            low data rates, at the expense of CPU time on the encoder/decoder.
            </summary>
            <param name="ResizeAllowed">
            Resize allowed.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetResizeUpThreshold(System.Int32)">
            <summary>
            Spatial resampling up watermark.
            This threshold is described as a percentage of the target data buffer.
            When the data buffer rises above this percentage of fullness, the
            encoder will step up to a higher resolution version of the frame.
            </summary>
            <param name="ResizeUpThreshold">
            Resize up threshold.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetResizeUpThreshold(System.Int32@)">
            <summary>
            Spatial resampling up watermark.
            This threshold is described as a percentage of the target data buffer.
            When the data buffer rises above this percentage of fullness, the
            encoder will step up to a higher resolution version of the frame.
            </summary>
            <param name="ResizeUpThreshold">
            Resize up threshold.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetResizeDownThreshold(System.Int32)">
            <summary>
            Spatial resampling down watermark.
            This threshold is described as a percentage of the target data buffer.
            When the data buffer falls below this percentage of fullness, the
            encoder will step down to a lower resolution version of the frame.
            </summary>
            <param name="ResizeDownThreshold">
            Resize down threshold.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetResizeDownThreshold(System.Int32@)">
            <summary>
            Spatial resampling down watermark.
            This threshold is described as a percentage of the target data buffer.
            When the data buffer falls below this percentage of fullness, the
            encoder will step down to a lower resolution version of the frame.
            </summary>
            <param name="ResizeDownThreshold">
            Resize down threshold.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetEndUsage(VisioForge.Libs.WebM.VP8EndUsage)">
            <summary>
            Indicates whether the end usage of this stream is to be streamed over
            a bandwidth constrained link (kEndUsageCBR), or whether it will be
            played back on a high bandwidth link, as from a local disk, where
            higher variations in bitrate are acceptable (kEndUsageVBR, the default).
            </summary>
            <param name="EndUsage">
            End usage parameter.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetEndUsage(VisioForge.Libs.WebM.VP8EndUsage@)">
            <summary>
            Indicates whether the end usage of this stream is to be streamed over
            a bandwidth constrained link (kEndUsageCBR), or whether it will be
            played back on a high bandwidth link, as from a local disk, where
            higher variations in bitrate are acceptable (kEndUsageVBR, the default).
            </summary>
            <param name="EndUsage">
            End usage parameter.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetLagInFrames(System.Int32)">
            <summary>
            If set, this value allows the encoder to consume a number of input
            frames before producing output frames. This allows the encoder to
            base decisions for the current frame on future frames. This does
            increase the latency of the encoding pipeline, so it is not appropriate
            in all situations (ex: realtime encoding).
            This is a maximum value - the encoder may produce frames
            sooner than the given limit. Set this value to 0 to disable this feature.
            </summary>
            <param name="LagInFrames">
            Lag in frames.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetLagInFrames(System.Int32@)">
            <summary>
            If set, this value allows the encoder to consume a number of input
            frames before producing output frames. This allows the encoder to
            base decisions for the current frame on future frames. This does
            increase the latency of the encoding pipeline, so it is not appropriate
            in all situations (ex: realtime encoding).
            This is a maximum value - the encoder may produce frames
            sooner than the given limit. Set this value to 0 to disable this feature.
            </summary>
            <param name="LagInFrames">
            Lag in frames.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetTokenPartitions(System.Int32)">
            <summary>
            VP8 token partition mode.
            This defines VP8 partitioning mode for compressed data, i.e., the number
            of sub-streams in the bitstream. Used for parallelized decoding.
            Value 0 = one token partition.
            Value 1 = two token partitions.
            Value 2 = four token partitions.
            Value 3 = eight token partitions.
            </summary>
            <param name="TokenPartition">
            Token partition.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetTokenPartitions(System.Int32@)">
            <summary>
            VP8 token partition mode.
            This defines VP8 partitioning mode for compressed data, i.e., the number
            of sub-streams in the bitstream. Used for parallelized decoding.
            Value 0 = one token partition.
            Value 1 = two token partitions.
            Value 2 = four token partitions.
            Value 3 = eight token partitions.
            </summary>
            <param name="TokenPartition">
            Token partition.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetTargetBitrate(System.Int32)">
            <summary>
            Target data rate.
            Target bandwidth to use for this stream, in kilobits per second.
            The value 0 means "use the codec default".
            </summary>
            <param name="Bitrate">
            Bitrate.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetTargetBitrate(System.Int32@)">
            <summary>
            Target data rate.
            Target bandwidth to use for this stream, in kilobits per second.
            The value 0 means "use the codec default".
            </summary>
            <param name="Bitrate">
            Bitrate.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetMinQuantizer(System.Int32)">
            <summary>
            Minimum (Best Quality) Quantizer.
            The quantizer is the most direct control over the quality of the
            encoded image.  The quantizer range is [0, 63].
            </summary>
            <param name="MinQuantizer">
            Minimal quantizer.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetMinQuantizer(System.Int32@)">
            <summary>
            Minimum (Best Quality) Quantizer.
            The quantizer is the most direct control over the quality of the
            encoded image.  The quantizer range is [0, 63].
            </summary>
            <param name="MinQuantizer">
            Minimal quantizer.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetMaxQuantizer(System.Int32)">
            <summary>
            Maximum (Worst Quality) Quantizer.
            The quantizer is the most direct control over the quality of the
            encoded image.  The quantizer range is [0, 63].
            </summary>
            <param name="MaxQuantizer">
            Maximal quantizer.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetMaxQuantizer(System.Int32@)">
            <summary>
            Maximum (Worst Quality) Quantizer.
            The quantizer is the most direct control over the quality of the
            encoded image.  The quantizer range is [0, 63].
            </summary>
            <param name="MaxQuantizer">
            Maximal quantizer.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetUndershootPct(System.Int32)">
            <summary>
            Rate control undershoot tolerance.
            This value, expressed as a percentage of the target bitrate, describes
            the target bitrate for easier frames, allowing bits to be saved for
            harder frames. Set to zero to use the codec default.
            </summary>
            <param name="UndershootPct">
            Undershoot pct.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetUndershootPct(System.Int32@)">
            <summary>
            Rate control undershoot tolerance.
            This value, expressed as a percentage of the target bitrate, describes
            the target bitrate for easier frames, allowing bits to be saved for
            harder frames. Set to zero to use the codec default.
            </summary>
            <param name="UndershootPct">
            Undershoot pct.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetOvershootPct(System.Int32)">
            <summary>
            Rate control overshoot tolerance.
            This value, expressed as a percentage of the target bitrate, describes
            the maximum allowed bitrate for a given frame.  Set to zero to use the
            codec default.
            </summary>
            <param name="OvershootPct">
            Overshoot pct.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetOvershootPct(System.Int32@)">
            <summary>
            Rate control overshoot tolerance.
            This value, expressed as a percentage of the target bitrate, describes
            the maximum allowed bitrate for a given frame.  Set to zero to use the
            codec default.
            </summary>
            <param name="OvershootPct">
            Overshoot pct.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetDecoderBufferSize(System.Int32)">
            <summary>
            Decoder Buffer Size.
            This value indicates the amount of data that may be buffered by the
            decoding application. This value is expressed in units of
            time (milliseconds). For example, a value of 5000 indicates that the
            client will buffer (at least) 5000 ms worth of encoded data.
            </summary>
            <param name="TimeInMilliseconds">
            Time, in milliseconds.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetDecoderBufferSize(System.Int32@)">
            <summary>
            Decoder Buffer Size.
            This value indicates the amount of data that may be buffered by the
            decoding application. This value is expressed in units of
            time (milliseconds). For example, a value of 5000 indicates that the
            client will buffer (at least) 5000 ms worth of encoded data.
            </summary>
            <param name="TimeInMilliseconds">
            Time, in milliseconds.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetDecoderBufferInitialSize(System.Int32)">
            <summary>
            Decoder Buffer Initial Size.
            This value indicates the amount of data that will be buffered by the
            decoding application prior to beginning playback. This value is
            expressed in units of time (milliseconds).
            </summary>
            <param name="TimeInMilliseconds">
            Time in milliseconds.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetDecoderBufferInitialSize(System.Int32@)">
            <summary>
            Decoder Buffer Initial Size.
            This value indicates the amount of data that will be buffered by the
            decoding application prior to beginning playback. This value is
            expressed in units of time (milliseconds).
            </summary>
            <param name="TimeInMilliseconds">
            Time in milliseconds.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetDecoderBufferOptimalSize(System.Int32)">
            <summary>
            Decoder Buffer Optimal Size.
            This value indicates the amount of data that the encoder should try
            to maintain in the decoder's buffer. This value is expressed in units
            of time (milliseconds).
            </summary>
            <param name="TimeInMilliseconds">
            Time, in milliseconds.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetDecoderBufferOptimalSize(System.Int32@)">
            <summary>
            Decoder Buffer Optimal Size.
            This value indicates the amount of data that the encoder should try
            to maintain in the decoder's buffer. This value is expressed in units
            of time (milliseconds).
            </summary>
            <param name="TimeInMilliseconds">
            Time, in milliseconds.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetKeyframeMode(System.Int32)">
            <summary>
            Keyframe placement mode.
            This value indicates whether the encoder should place keyframes at a
            fixed interval, or determine the optimal placement automatically
            (as governed by the KeyframeMinInterval and KeyframeMaxInterval).
            </summary>
            <param name="Mode">
            Mode.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetKeyframeMode(System.Int32@)">
            <summary>
            Keyframe placement mode.
            This value indicates whether the encoder should place keyframes at a
            fixed interval, or determine the optimal placement automatically
            (as governed by the KeyframeMinInterval and KeyframeMaxInterval).
            </summary>
            <param name="Mode">
            Mode.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetKeyframeMinInterval(System.Int32)">
            <summary>
            Keyframe minimum interval.
            This value, expressed as a number of frames, prevents the encoder from
            placing a keyframe nearer than MinInterval to the previous keyframe. At
            least MinInterval frames non-keyframes will be coded before the next
            keyframe. Set MinInterval equal to MaxInterval for a fixed interval.
            </summary>
            <param name="MinInterval">
            Minimal interval.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetKeyframeMinInterval(System.Int32@)">
            <summary>
            Keyframe minimum interval.
            This value, expressed as a number of frames, prevents the encoder from
            placing a keyframe nearer than MinInterval to the previous keyframe. At
            least MinInterval frames non-keyframes will be coded before the next
            keyframe. Set MinInterval equal to MaxInterval for a fixed interval.
            </summary>
            <param name="MinInterval">
            Minimal interval.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetKeyframeMaxInterval(System.Int32)">
            <summary>
            Keyframe maximum interval.
            This value, expressed as a number of frames, forces the encoder to code
            a keyframe if one has not been coded in the last MaxInterval frames.
            A value of 0 implies all frames will be keyframes. Set MinInterval
            equal to MaxInterval for a fixed interval.
            </summary>
            <param name="MaxInterval">
            Maximal interval.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetKeyframeMaxInterval(System.Int32@)">
            <summary>
            Keyframe maximum interval.
            This value, expressed as a number of frames, forces the encoder to code
            a keyframe if one has not been coded in the last MaxInterval frames.
            A value of 0 implies all frames will be keyframes. Set MinInterval
            equal to MaxInterval for a fixed interval.
            </summary>
            <param name="MaxInterval">
            Maximal interval.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetPassMode(VisioForge.Libs.WebM.VP8PassMode)">
            <summary>
            Multi-pass Encoding Mode
            This value should be set to the current phase for multi-pass encoding.
            </summary>
            <param name="PassMode">
            Pass mode.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetPassMode(VisioForge.Libs.WebM.VP8PassMode@)">
            <summary>
            Multi-pass Encoding Mode
            This value should be set to the current phase for multi-pass encoding.
            </summary>
            <param name="PassMode">
            Pass mode.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetTwoPassStatsBuf(System.Byte@,System.Int64)">
            <summary>
            Stats Buffer
            The stats buffer is the buffer containing all of the stats packets from
            the first pass, concatenated together.  It is only used during the last
            pass of a multi-pass (really, two-pass) mode.
            </summary>
            <param name="Buffer">
            Buffer.
            </param>
            <param name="Length">
            Buffer length.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetTwoPassStatsBuf(System.IntPtr,System.Int64@)">
            <summary>
            Stats Buffer
            The stats buffer is the buffer containing all of the stats packets from
            the first pass, concatenated together.  It is only used during the last
            pass of a multi-pass (really, two-pass) mode.
            </summary>
            <param name="Buffer">
            Buffer.
            </param>
            <param name="Length">
            Buffer length.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetTwoPassVbrBiasPct(System.Int32)">
            <summary>
            Two-pass mode CBR/VBR bias
            Bias, expressed on a scale of 0 to 100, for determining target size
            for the current frame. The value 0 indicates the optimal CBR mode
            value should be used. The value 100 indicates the optimal VBR mode
            value should be used. Values in between indicate which way the
            encoder should "lean."
            RC mode bias between CBR and VBR(0-100: 0->CBR, 100->VBR)
            </summary>
            <param name="Bias">
            Bias.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetTwoPassVbrBiasPct(System.Int32@)">
            <summary>
            Two-pass mode CBR/VBR bias
            Bias, expressed on a scale of 0 to 100, for determining target size
            for the current frame. The value 0 indicates the optimal CBR mode
            value should be used. The value 100 indicates the optimal VBR mode
            value should be used. Values in between indicate which way the
            encoder should "lean."
            RC mode bias between CBR and VBR(0-100: 0->CBR, 100->VBR)
            </summary>
            <param name="Bias">
            Bias.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetTwoPassVbrMinsectionPct(System.Int32)">
            <summary>
            Two-pass mode per-GOP minimum bitrate
            This value, expressed as a percentage of the target bitrate, indicates
            the minimum bitrate to be used for a single GOP (aka "section").
            </summary>
            <param name="Bitrate">
            Bitrate.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetTwoPassVbrMinsectionPct(System.Int32@)">
            <summary>
            Two-pass mode per-GOP minimum bitrate
            This value, expressed as a percentage of the target bitrate, indicates
            the minimum bitrate to be used for a single GOP (aka "section").
            </summary>
            <param name="Bitrate">
            Bitrate.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetTwoPassVbrMaxsectionPct(System.Int32)">
            <summary>
            Two-pass mode per-GOP maximum bitrate
            This value, expressed as a percentage of the target bitrate, indicates
            the maximum bitrate to be used for a single GOP (aka "section").
            </summary>
            <param name="Bitrate">
            Bitrate.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.GetTwoPassVbrMaxsectionPct(System.Int32@)">
            <summary>
            Two-pass mode per-GOP maximum bitrate
            This value, expressed as a percentage of the target bitrate, indicates
            the maximum bitrate to be used for a single GOP (aka "section").
            </summary>
            <param name="Bitrate">
            Bitrate.
            </param>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.SetForceKeyframe">
            <summary>
            Force Keyframe
            Set a flag to request that a keyframe be created from the next frame
            encoded.  When the frame is encoded, automatically clear the flag.
            If the graph is stopped, then this flag will only be applied when the
            graph transitions out of stopped.  You can also clear the flag manually.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WebM.IVP8Encoder.ClearForceKeyframe">
            <summary>
            Force Keyframe
            Set a flag to request that a keyframe be created from the next frame
            encoded.  When the frame is encoded, automatically clear the flag.
            If the graph is stopped, then this flag will only be applied when the
            graph transitions out of stopped.  You can also clear the flag manually.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.VP8Deadline">
            <summary>
            VP8 deadline.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8Deadline.kDeadlineBestQuality">
            <summary>
            Best quality.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8Deadline.kDeadlineGoodQuality">
            <summary>
            Good quality.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8Deadline.kDeadlineRealtime">
            <summary>
            Real-time.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.VP8EndUsage">
            <summary>
            VP8 end usage.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8EndUsage.kEndUsageCBR">
            <summary>
            CBR.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8EndUsage.kEndUsageDefault">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8EndUsage.kEndUsageVBR">
            <summary>
            VBR.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.VP8PassMode">
            <summary>
            VP8 pass mode.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PassMode.kPassModeOnePass">
            <summary>
            One pass.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PassMode.kPassModeFirstPass">
            <summary>
            First pass.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.VP8PassMode.kPassModeLastPass">
            <summary>
            Last pass.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.WebMGUIDs">
            <summary>
            WebM GUIDs.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.WebMGUIDs.MEDIASUBTYPE_WEBM">
            <summary>
            WebM subtype.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.WebMGUIDs.MEDIASUBTYPE_VP8_STATS">
            <summary>
            VP8 statistic subtype.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.WebMGUIDs.MEDIASUBTYPE_VP80">
            <summary>
            VP8 subtype.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WebM.WebMGUIDs.MEDIASUBTYPE_I420">
            <summary>
            I420 subtype.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WebM.IWebmMux">
            <summary>
            WemM mux filter interface.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.ClientNetManager">
            <summary>
            CLSID_ClientNetManager
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.MutexType.Language">
            <summary> CLSID_WMMUTEX_Language </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.MutexType.Bitrate">
            <summary> CLSID_WMMUTEX_Bitrate </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.MutexType.Presentation">
            <summary> CLSID_WMMUTEX_Presentation </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.MutexType.Unknown">
            <summary> CLSID_WMMUTEX_Unknown </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.BandwidthSharingType.Exclusive">
            <summary> CLSID_WMBandwidthSharing_Exclusive </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.BandwidthSharingType.Partial">
            <summary> CLSID_WMBandwidthSharing_Partial </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.WMEncStreamEdit">
            <summary>
            From CLSID_WMEncStreamEdit
            </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Video">
            <summary> MEDIATYPE_Video 'vids' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Interleaved">
            <summary> MEDIATYPE_Interleaved 'iavs' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Audio">
            <summary> MEDIATYPE_Audio 'auds' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Texts">
            <summary> MEDIATYPE_Text 'txts' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Stream">
            <summary> MEDIATYPE_Stream </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.VBI">
            <summary> MEDIATYPE_VBI </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Midi">
            <summary> MEDIATYPE_Midi </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.File">
            <summary> MEDIATYPE_File </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.ScriptCommand">
            <summary> MEDIATYPE_ScriptCommand </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.AuxLine21Data">
            <summary> MEDIATYPE_AUXLine21Data </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Timecode">
            <summary> MEDIATYPE_Timecode </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.LMRT">
            <summary> MEDIATYPE_LMRT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.URLStream">
            <summary> MEDIATYPE_URL_STREAM </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.AnalogVideo">
            <summary> MEDIATYPE_AnalogVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.AnalogAudio">
            <summary> MEDIATYPE_AnalogAudio </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Mpeg2Sections">
            <summary> MEDIATYPE_MPEG2_SECTIONS </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.DTVCCData">
            <summary> MEDIATYPE_DTVCCData </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.MSTVCaption">
            <summary> MEDIATYPE_MSTVCaption </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Image">
            <summary> WMMEDIATYPE_Image 'imag' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.FileTransfer">
            <summary> WMMEDIATYPE_FileTransfer 'fxfr' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaType.Text">
            <summary> WMMEDIATYPE_Text 'text' </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.CLPL">
            <summary> MEDIASUBTYPE_CLPL </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.YUYV">
            <summary> MEDIASUBTYPE_YUYV </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IYUV">
            <summary> MEDIASUBTYPE_IYUV </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.YVU9">
            <summary> MEDIASUBTYPE_YVU9 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Y411">
            <summary> MEDIASUBTYPE_Y411 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Y41P">
            <summary> MEDIASUBTYPE_Y41P </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.YUY2">
            <summary> MEDIASUBTYPE_YUY2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.YVYU">
            <summary> MEDIASUBTYPE_YVYU </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.UYVY">
            <summary> MEDIASUBTYPE_UYVY </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Y211">
            <summary> MEDIASUBTYPE_Y211 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.CLJR">
            <summary> MEDIASUBTYPE_CLJR </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IF09">
            <summary> MEDIASUBTYPE_IF09 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.CPLA">
            <summary> MEDIASUBTYPE_CPLA </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MJPG">
            <summary> MEDIASUBTYPE_MJPG </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.TVMJ">
            <summary> MEDIASUBTYPE_TVMJ </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WAKE">
            <summary> MEDIASUBTYPE_WAKE </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.CFCC">
            <summary> MEDIASUBTYPE_CFCC </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IJPG">
            <summary> MEDIASUBTYPE_IJPG </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.PLUM">
            <summary> MEDIASUBTYPE_Plum </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DVCS">
            <summary> MEDIASUBTYPE_DVCS </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DVSD">
            <summary> MEDIASUBTYPE_DVSD </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MDVF">
            <summary> MEDIASUBTYPE_MDVF </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB1">
            <summary> MEDIASUBTYPE_RGB1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB4">
            <summary> MEDIASUBTYPE_RGB4 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB8">
            <summary> MEDIASUBTYPE_RGB8 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB565">
            <summary> MEDIASUBTYPE_RGB565 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB555">
            <summary> MEDIASUBTYPE_RGB555 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB24">
            <summary> MEDIASUBTYPE_RGB24 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB32">
            <summary> MEDIASUBTYPE_RGB32 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB1555">
            <summary> MEDIASUBTYPE_ARGB1555 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB4444">
            <summary> MEDIASUBTYPE_ARGB4444 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB32">
            <summary> MEDIASUBTYPE_ARGB32 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.A2R10G10B10">
            <summary> MEDIASUBTYPE_A2R10G10B10 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.A2B10G10R10">
            <summary> MEDIASUBTYPE_A2B10G10R10 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AYUV">
            <summary> MEDIASUBTYPE_AYUV </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AI44">
            <summary> MEDIASUBTYPE_AI44 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IA44">
            <summary> MEDIASUBTYPE_IA44 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB32_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_RGB32_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB16_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_RGB16_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB32_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB32_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB4444_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB4444_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB1555_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB1555_D3D_DX7_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB32_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_RGB32_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RGB16_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_RGB16_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB32_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB32_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB4444_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB4444_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ARGB1555_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB1555_D3D_DX9_RT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.YV12">
            <summary> MEDIASUBTYPE_YV12 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.NV12">
            <summary> MEDIASUBTYPE_NV12 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IMC1">
            <summary> MEDIASUBTYPE_IMC1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IMC2">
            <summary> MEDIASUBTYPE_IMC2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IMC3">
            <summary> MEDIASUBTYPE_IMC3 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IMC4">
            <summary> MEDIASUBTYPE_IMC4 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.S340">
            <summary> MEDIASUBTYPE_S340 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.S342">
            <summary> MEDIASUBTYPE_S342 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Overlay">
            <summary> MEDIASUBTYPE_Overlay </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1Packet">
            <summary> MEDIASUBTYPE_MPEG1Packet </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1Payload">
            <summary> MEDIASUBTYPE_MPEG1Payload </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1AudioPayload">
            <summary> MEDIASUBTYPE_MPEG1AudioPayload </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1SystemStream">
            <summary> MEDIATYPE_MPEG1SystemStream </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1System">
            <summary> MEDIASUBTYPE_MPEG1System </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1VideoCD">
            <summary> MEDIASUBTYPE_MPEG1VideoCD </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1Video">
            <summary> MEDIASUBTYPE_MPEG1Video </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MPEG1Audio">
            <summary> MEDIASUBTYPE_MPEG1Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Avi">
            <summary> MEDIASUBTYPE_Avi </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Asf">
            <summary> MEDIASUBTYPE_Asf </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.QTMovie">
            <summary> MEDIASUBTYPE_QTMovie </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.QTRpza">
            <summary> MEDIASUBTYPE_QTRpza </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.QTSmc">
            <summary> MEDIASUBTYPE_QTSmc </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.QTRle">
            <summary> MEDIASUBTYPE_QTRle </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.QTJpeg">
            <summary> MEDIASUBTYPE_QTJpeg </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.PCMAudio_Obsolete">
            <summary> MEDIASUBTYPE_PCMAudio_Obsolete </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.PCM">
            <summary> MEDIASUBTYPE_PCM </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WAVE">
            <summary> MEDIASUBTYPE_WAVE </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AU">
            <summary> MEDIASUBTYPE_AU </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AIFF">
            <summary> MEDIASUBTYPE_AIFF </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.dvhd">
            <summary> MEDIASUBTYPE_dvhd </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.dvsl">
            <summary> MEDIASUBTYPE_dvsl </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.dv25">
            <summary> MEDIASUBTYPE_dv25 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.dv50">
            <summary> MEDIASUBTYPE_dv50 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.dvh1">
            <summary> MEDIASUBTYPE_dvh1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Line21_BytePair">
            <summary> MEDIASUBTYPE_Line21_BytePair </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Line21_GOPPacket">
            <summary> MEDIASUBTYPE_Line21_GOPPacket </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Line21_VBIRawData">
            <summary> MEDIASUBTYPE_Line21_VBIRawData </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.TELETEXT">
            <summary> MEDIASUBTYPE_TELETEXT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WSS">
            <summary> MEDIASUBTYPE_WSS </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.VPS">
            <summary> MEDIASUBTYPE_VPS </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DRM_Audio">
            <summary> MEDIASUBTYPE_DRM_Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.IEEE_FLOAT">
            <summary> MEDIASUBTYPE_IEEE_FLOAT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DOLBY_AC3_SPDIF">
            <summary> MEDIASUBTYPE_DOLBY_AC3_SPDIF </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.RAW_SPORT">
            <summary> MEDIASUBTYPE_RAW_SPORT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.SPDIF_TAG_241h">
            <summary> MEDIASUBTYPE_SPDIF_TAG_241h </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DssVideo">
            <summary> MEDIASUBTYPE_DssVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DssAudio">
            <summary> MEDIASUBTYPE_DssAudio </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.VPVideo">
            <summary> MEDIASUBTYPE_VPVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.VPVBI">
            <summary> MEDIASUBTYPE_VPVBI </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_NTSC_M">
            <summary> MEDIASUBTYPE_AnalogVideo_NTSC_M </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_B">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_B </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_D">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_D </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_G">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_G </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_H">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_H </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_I">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_I </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_M">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_M </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_N">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_N </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_PAL_N_COMBO">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_N_COMBO </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_B">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_B </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_D">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_D </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_G">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_G </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_H">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_H </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_K">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_K </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_K1">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_K1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AnalogVideo_SECAM_L">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_L </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.I420">
            <summary> MEDIASUBTYPE_I420 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.VideoImage">
            <summary> WMMEDIASUBTYPE_VIDEOIMAGE </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Mpeg2Video">
            <summary> WMMEDIASUBTYPE_MPEG2_VIDEO </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WebStream">
            <summary> WMMEDIASUBTYPE_WebStream </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Mpeg2Audio">
            <summary> MEDIASUBTYPE_MPEG2_AUDIO </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DolbyAC3">
            <summary> MEDIASUBTYPE_DOLBY_AC3 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DvbSI">
            <summary> MEDIASUBTYPE_DVB_SI </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.AtscSI">
            <summary> MEDIASUBTYPE_ATSC_SI </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Mpeg2Data">
            <summary> MEDIASUBTYPE_MPEG2DATA </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Mpeg2Program">
            <summary> MEDIASUBTYPE_MPEG2_PROGRAM </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Mpeg2Transport">
            <summary> MEDIASUBTYPE_MPEG2_TRANSPORT </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Mpeg2TransportStride">
            <summary> MEDIASUBTYPE_MPEG2_TRANSPORT_STRIDE </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.None">
            <summary> MEDIASUBTYPE_None </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.H264">
            <summary> MEDIASUBTYPE_H264 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.NV24">
            <summary> MEDIASUBTYPE_NV24 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.Data708_608">
            <summary> MEDIASUBTYPE_708_608Data </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.DtvCcData">
            <summary> MEDIASUBTYPE_DtvCcData </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.P422">
            <summary> MEDIASUBTYPE_P422 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MP43">
            <summary> WMMEDIASUBTYPE_MP43 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MP4S">
            <summary> WMMEDIASUBTYPE_MP4S </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.M4S2">
            <summary> WMMEDIASUBTYPE_M4S2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMV1">
            <summary> WMMEDIASUBTYPE_WMV1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMV2">
            <summary> WMMEDIASUBTYPE_WMV2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MSS1">
            <summary> WMMEDIASUBTYPE_MSS1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMAudioV9">
            <summary> WMMEDIASUBTYPE_WMAudioV9 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMAudio_Lossless">
            <summary> WMMEDIASUBTYPE_WMAudio_Lossless </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MSS2">
            <summary> WMMEDIASUBTYPE_MSS2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMSP1">
            <summary> WMMEDIASUBTYPE_WMSP1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMSP2">
            <summary> WMMEDIASUBTYPE_WMSP2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMV3">
            <summary> WMMEDIASUBTYPE_WMV3 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMVP">
            <summary> WMMEDIASUBTYPE_WMVP </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WVP2">
            <summary> WMMEDIASUBTYPE_WVP2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMVA">
            <summary> WMMEDIASUBTYPE_WMVA </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WVC1">
            <summary> WMMEDIASUBTYPE_WVC1 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMAudioV8">
            <summary> WMMEDIASUBTYPE_WMAudioV8 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMAudioV7">
            <summary> WMMEDIASUBTYPE_WMAudioV7 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.WMAudioV2">
            <summary> WMMEDIASUBTYPE_WMAudioV2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.ACELPnet">
            <summary> WMMEDIASUBTYPE_ACELPnet </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.MediaSubType.MP3">
            <summary> WMMEDIASUBTYPE_MP3 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.None">
            <summary> FORMAT_None </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.VideoInfo">
            <summary> FORMAT_VideoInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.VideoInfo2">
            <summary> FORMAT_VideoInfo2 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.WaveEx">
            <summary> FORMAT_WaveFormatEx </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.MpegVideo">
            <summary> FORMAT_MPEGVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.MpegStreams">
            <summary> FORMAT_MPEGStreams </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.DvInfo">
            <summary> FORMAT_DvInfo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.AnalogVideo">
            <summary> FORMAT_AnalogVideo </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.Mpeg2Video">
            <summary> FORMAT_MPEG2Video </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.DolbyAC3">
            <summary> FORMAT_DolbyAC3 </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.Mpeg2Audio">
            <summary> FORMAT_MPEG2Audio </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.WSS525">
            <summary> FORMAT_525WSS </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.Script">
            <summary> WMFORMAT_Script </summary>
        </member>
        <member name="F:VisioForge.Libs.WindowsMediaLib.Defs.FormatType.WebStream">
            <summary> WMFORMAT_WebStream </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.Defs.AMMediaType">
            <summary>
            From WM_MEDIA_TYPE - When you are done with an instance of this class,
            it should be released with FreeWMMediaType() to avoid leaking
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.Defs.BitmapInfoHeader">
            <summary>
            From BITMAPINFOHEADER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.Defs.VideoInfoHeader">
            <summary>
            From VIDEOINFOHEADER
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.Defs.VideoInfoHeader2">
            <summary>
            From VIDEOINFOHEADER2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.Defs.WaveFormat">
            <summary>
            From WAVEFORMAT
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.Defs.WaveFormatEx">
            <summary>
            From WAVEFORMATEX
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.Defs.AMToString.AMMediaTypeToString(VisioForge.Libs.WindowsMediaLib.Defs.AMMediaType)">
            <summary>
            Produces a usable string that describes the MediaType object
            </summary>
            <returns>Concatenation of MajorType + SubType + FormatType + Fixed + Temporal + SampleSize.ToString</returns>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.Defs.AMToString.MediaTypeToString(System.Guid)">
            <summary>
            Converts AMMediaType.MajorType Guid to a readable string
            </summary>
            <returns>MajorType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.Defs.AMToString.MediaSubTypeToString(System.Guid)">
            <summary>
            Converts the AMMediaType.SubType Guid to a readable string
            </summary>
            <returns>SubType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.Defs.AMToString.MediaFormatTypeToString(System.Guid)">
            <summary>
            Converts the AMMediaType.FormatType Guid to a readable string
            </summary>
            <returns>FormatType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.Defs.AMToString.WalkClass(System.Type,System.Guid)">
            <summary>
            Use reflection to walk a class looking for a property containing a specified guid
            </summary>
            <param name="MyType">Class to scan</param>
            <param name="guid">Guid to scan for</param>
            <returns>String representing property name that matches, or Guid.ToString() for no match</returns>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.WMUtils.FreeWMMediaType(VisioForge.Libs.WindowsMediaLib.Defs.AMMediaType)">
            <summary>
             Free the nested structures and release any
             COM objects within an WMMediaType struct.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.WMError.LoadLibraryExFlags">
            <summary>
            From #defines in WinBase.h
            </summary>
        </member>
        <member name="T:VisioForge.Libs.WindowsMediaLib.WMError.FormatMessageFlags">
            <summary>
            From FORMAT_MESSAGE_* defines in WinBase.h
            </summary>
        </member>
        <member name="M:VisioForge.Libs.WindowsMediaLib.WMError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If Windows Media error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult">
            <summary>
            The class contains all information about the Aztec code which was found
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult.Compact">
            <summary>
            Gets a value indicating whether this Aztec code is compact.
            </summary>
            <value>
              <c>true</c> if compact; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult.NbDatablocks">
            <summary>
            Gets the nb datablocks.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult.NbLayers">
            <summary>
            Gets the nb layers.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix,VisioForge.Libs.Types.BarcodeResultPoint[],System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult"/> class.
            </summary>
            <param name="bits">The bits.</param>
            <param name="points">The points.</param>
            <param name="compact">if set to <c>true</c> [compact].</param>
            <param name="nbDatablocks">The nb datablocks.</param>
            <param name="nbLayers">The nb layers.</param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Aztec.Internal.Decoder">
            <summary>
            The main class which implements Aztec Code decoding -- as opposed to locating and extracting
            the Aztec Code from an image.
            </summary>
            <author>David Olivier</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.decode(VisioForge.Libs.ZXing.Aztec.Internal.AztecDetectorResult)">
            <summary>
            Decodes the specified detector result.
            </summary>
            <param name="detectorResult">The detector result.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.getEncodedData(System.Boolean[])">
            <summary>
            Gets the string encoded in the aztec code bits
            </summary>
            <param name="correctedBits">The corrected bits.</param>
            <returns>the decoded string</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.getTable(System.Char)">
            <summary>
            gets the table corresponding to the char passed
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.getCharacter(System.String[],System.Int32)">
            <summary>
            Gets the character (or string) corresponding to the passed code in the given table
            </summary>
            <param name="table">the table used</param>
            <param name="code">the code of the character</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.correctBits(System.Boolean[])">
            <summary>
            performs RS error correction on an array of bits
            </summary>
            <param name="rawbits">The rawbits.</param>
            <returns>the corrected array</returns>
            <exception cref="T:VisioForge.Libs.ZXing.FormatException">if the input contains too many errors</exception>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.extractBits(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Gets the array of bits from an Aztec Code matrix
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>the array of bits</returns>
            <exception see="FormatException">if the matrix is not a valid aztec code</exception>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.removeDashedLines(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Transforms an Aztec code matrix by removing the control dashed lines
            </summary>
            <param name="matrix">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Decoder.readCode(System.Boolean[],System.Int32,System.Int32)">
            <summary>
            Reads a code of given length and at given index in an array of bits
            </summary>
            <param name="rawbits">The rawbits.</param>
            <param name="startIndex">The start index.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Aztec.Internal.Detector">
            <summary>
            Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code
            is rotated or skewed, or partially obscured.
            </summary>
            <author>David Olivier</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Aztec.Internal.Detector"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.detect">
            <summary>
            Detects an Aztec Code in an image.
            </summary>
            <returns>encapsulating results of detecting an Aztec Code</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.extractParameters(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point[])">
            <summary>
            Extracts the number of data layers and data blocks from the layer around the bull's eye 
            </summary>
            <param name="bullEyeCornerPoints">bullEyeCornerPoints the array of bull's eye corners</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.getMatrixCornerPoints(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point[])">
            <summary>
            Gets the Aztec code corners from the bull's eye corners and the parameters
            </summary>
            <param name="bullEyeCornerPoints">the array of bull's eye corners</param>
            <returns>the array of aztec code corners</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.correctParameterData(System.Boolean[],System.Boolean)">
            <summary>
            Corrects the parameter bits using Reed-Solomon algorithm
            </summary>
            <param name="parameterData">paremeter bits</param>
            <param name="compact">compact true if this is a compact Aztec code</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.getBullEyeCornerPoints(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point)">
            <summary>
            Finds the corners of a bull-eye centered on the passed point
            </summary>
            <param name="pCenter">Center point</param>
            <returns>The corners of the bull-eye</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.getMatrixCenter">
            <summary>
            Finds a candidate center point of an Aztec code from an image
            </summary>
            <returns>the center point</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.sampleGrid(VisioForge.Libs.ZXing.Common.BitMatrix,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary>
            Samples an Aztec matrix from an image
            </summary>
            <param name="image">The image.</param>
            <param name="topLeft">The top left.</param>
            <param name="bottomLeft">The bottom left.</param>
            <param name="bottomRight">The bottom right.</param>
            <param name="topRight">The top right.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.getParameters(System.Boolean[])">
            <summary>
            Sets number of layers and number of data blocks from parameter bits
            </summary>
            <param name="parameterData">The parameter data.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.sampleLine(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,System.Int32)">
            <summary>
            Samples a line
            </summary>
            <param name="p1">first point</param>
            <param name="p2">second point</param>
            <param name="size">size number of bits</param>
            <returns>the array of bits</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.isWhiteOrBlackRectangle(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point)">
            <summary>
            Determines whether [is white or black rectangle] [the specified p1].
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="p3">The p3.</param>
            <param name="p4">The p4.</param>
            <returns>true if the border of the rectangle passed in parameter is compound of white points only
            or black points only</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.getColor(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point)">
            <summary>
            Gets the color of a segment
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>1 if segment more than 90% black, -1 if segment is more than 90% white, 0 else</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.Internal.Detector.getFirstDifferent(VisioForge.Libs.ZXing.Aztec.Internal.Detector.Point,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets the coordinate of the first point with a different color in the given direction
            </summary>
            <param name="init">The init.</param>
            <param name="color">if set to <c>true</c> [color].</param>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Aztec.AztecReader">
            <summary>
            This implementation can detect and decode Aztec codes in an image.
            </summary>
            <author>David Olivier</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.AztecReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Locates and decodes a barcode in some format within an image.
            </summary>
            <param name="image">image of barcode to decode</param>
            <returns>
            a String representing the content encoded by the Data Matrix code
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.AztecReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
             Locates and decodes a Data Matrix code in an image.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a {@link java.util.Hashtable} from {@link com.google.zxing.DecodeHintType}
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Aztec.AztecReader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.BarcodeFormat">
            <summary>
            Enumerates barcode formats known to this package.
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.AZTEC">
            <summary>Aztec 2D barcode format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.CODABAR">
            <summary>CODABAR 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.CODE_39">
            <summary>Code 39 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.CODE_93">
            <summary>Code 93 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.CODE_128">
            <summary>Code 128 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.DATA_MATRIX">
            <summary>Data Matrix 2D barcode format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.EAN_8">
            <summary>EAN-8 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.EAN_13">
            <summary>EAN-13 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.ITF">
            <summary>ITF (Interleaved Two of Five) 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.MAXICODE">
            <summary>MaxiCode 2D barcode format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.PDF_417">
            <summary>PDF417 format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.QR_CODE">
            <summary>QR Code 2D barcode format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.RSS_14">
            <summary>RSS 14</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.RSS_EXPANDED">
            <summary>RSS EXPANDED</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.UPC_A">
            <summary>UPC-A 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.UPC_E">
            <summary>UPC-E 1D format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.UPC_EAN_EXTENSION">
            <summary>UPC/EAN extension format. Not a stand-alone format.</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BarcodeFormat.All_1D">
            <summary>
            UPC_A | UPC_E | EAN_13 | EAN_8 | CODABAR | CODE_39 | CODE_93 | CODE_128 | ITF | RSS_14 | RSS_EXPANDED
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.BarcodeReader">
            <summary>
            A smart class to decode the barcode inside a bitmap object
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BarcodeReader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReader.#ctor(VisioForge.Libs.ZXing.Reader,System.Func{System.Drawing.Bitmap,VisioForge.Libs.ZXing.LuminanceSource},System.Func{VisioForge.Libs.ZXing.LuminanceSource,VisioForge.Libs.ZXing.Binarizer})">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BarcodeReader"/> class.
            </summary>
            <param name="reader">Sets the reader which should be used to find and decode the barcode.
            If null then MultiFormatReader is used</param>
            <param name="createLuminanceSource">Sets the function to create a luminance source object for a bitmap.
            If null, an exception is thrown when Decode is called</param>
            <param name="createBinarizer">Sets the function to create a binarizer object for a luminance source.
            If null then HybridBinarizer is used</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReader.#ctor(VisioForge.Libs.ZXing.Reader,System.Func{System.Drawing.Bitmap,VisioForge.Libs.ZXing.LuminanceSource},System.Func{VisioForge.Libs.ZXing.LuminanceSource,VisioForge.Libs.ZXing.Binarizer},System.Func{System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat,VisioForge.Libs.ZXing.LuminanceSource})">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BarcodeReader"/> class.
            </summary>
            <param name="reader">Sets the reader which should be used to find and decode the barcode.
            If null then MultiFormatReader is used</param>
            <param name="createLuminanceSource">Sets the function to create a luminance source object for a bitmap.
            If null, an exception is thrown when Decode is called</param>
            <param name="createBinarizer">Sets the function to create a binarizer object for a luminance source.
            If null then HybridBinarizer is used</param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1">
            <summary>
            A smart class to decode the barcode inside a bitmap object
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.Reader">
            <summary>
            Gets the reader which should be used to find and decode the barcode.
            </summary>
            <value>
            The reader.
            </value>
        </member>
        <member name="E:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.ResultPointFound">
            <summary>
            Gets or sets a method which is called if an important point is found
            </summary>
            <value>
            The result point callback.
            </value>
        </member>
        <member name="E:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.ResultFound">
            <summary>
            event is executed if a result was found via decode
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.TryHarder">
            <summary>
            Gets or sets a flag which cause a deeper look into the bitmap
            </summary>
            <value>
              <c>true</c> if [try harder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.PureBarcode">
            <summary>
            Image is a pure monochrome image of a barcode.
            </summary>
            <value>
              <c>true</c> if monochrome image of a barcode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.CharacterSet">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
            <value>
            The character set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.PossibleFormats">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.List} of {@link BarcodeFormat}s.
            </summary>
            <value>
            The possible formats.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.AutoRotate">
            <summary>
            Gets or sets a value indicating whether the image should be automatically rotated.
            Rotation is supported for 90, 180 and 270 degrees
            </summary>
            <value>
              <c>true</c> if image should be rotated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.CreateLuminanceSource">
            <summary>
            Optional: Gets or sets the function to create a luminance source object for a bitmap.
            If null a platform specific default LuminanceSource is used
            </summary>
            <value>
            The function to create a luminance source object.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.CreateBinarizer">
            <summary>
            Optional: Gets or sets the function to create a binarizer object for a luminance source.
            If null then HybridBinarizer is used
            </summary>
            <value>
            The function to create a binarizer object.
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.#ctor(VisioForge.Libs.ZXing.Reader,System.Func{`0,VisioForge.Libs.ZXing.LuminanceSource},System.Func{VisioForge.Libs.ZXing.LuminanceSource,VisioForge.Libs.ZXing.Binarizer})">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1"/> class.
            </summary>
            <param name="reader">Sets the reader which should be used to find and decode the barcode.
            If null then MultiFormatReader is used</param>
            <param name="createLuminanceSource">Sets the function to create a luminance source object for a bitmap.
            If null, an exception is thrown when Decode is called</param>
            <param name="createBinarizer">Sets the function to create a binarizer object for a luminance source.
            If null then HybridBinarizer is used</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.#ctor(VisioForge.Libs.ZXing.Reader,System.Func{`0,VisioForge.Libs.ZXing.LuminanceSource},System.Func{VisioForge.Libs.ZXing.LuminanceSource,VisioForge.Libs.ZXing.Binarizer},System.Func{System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat,VisioForge.Libs.ZXing.LuminanceSource})">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1"/> class.
            </summary>
            <param name="reader">Sets the reader which should be used to find and decode the barcode.
            If null then MultiFormatReader is used</param>
            <param name="createLuminanceSource">Sets the function to create a luminance source object for a bitmap.
            If null, an exception is thrown when Decode is called</param>
            <param name="createBinarizer">Sets the function to create a binarizer object for a luminance source.
            If null then HybridBinarizer is used</param>
            <param name="createRGBLuminanceSource">Sets the function to create a luminance source object for a rgb array.
            If null the RGBLuminanceSource is used. The handler is only called when Decode with a byte[] array is called.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.Decode(`0)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="barcodeBitmap">The barcode bitmap.</param>
            <returns>the result data or null</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.DecodeMultiple(`0)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="barcodeBitmap">The barcode bitmap.</param>
            <returns>the result data or null</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.Decode(System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="rawRGB">The image as byte[] array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <returns>
            the result data or null
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BarcodeReaderGeneric`1.DecodeMultiple(System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="rawRGB">The image as byte[] array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <returns>
            the result data or null
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.BaseLuminanceSource">
            <summary>
            The base class for luminance sources which supports 
            cropping and rotating based upon the luminance values.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.BaseLuminanceSource.luminances">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BaseLuminanceSource"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BaseLuminanceSource"/> class.
            </summary>
            <param name="luminanceArray">The luminance array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.getRow(System.Int32,System.Byte[])">
            <summary>
            Fetches one row of luminance data from the underlying platform's bitmap. Values range from
            0 (black) to 255 (white). It is preferable for implementations of this method
            to only fetch this row rather than the whole image, since no 2D Readers may be installed and
            getMatrix() may never be called.
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt; Height.</param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            Always use the returned object, and ignore the .length of the array.</param>
            <returns>
            An array containing the luminance data.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.rotateCounterClockwise">
            <summary>
            Returns a new object with rotated image data by 90 degrees counterclockwise.
            Only callable if {@link #isRotateSupported()} is true.
            </summary>
            <returns>
            A rotated version of this object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.rotateCounterClockwise45">
            <summary>
            TODO: not implemented yet
            </summary>
            <returns>
            A rotated version of this object.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BaseLuminanceSource.RotateSupported">
            <summary>
            </summary>
            <returns> Whether this subclass supports counter-clockwise rotation.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new object with cropped image data. Implementations may keep a reference to the
            original data rather than a copy. Only callable if CropSupported is true.
            </summary>
            <param name="left">The left coordinate, 0 &lt;= left &lt; Width.</param>
            <param name="top">The top coordinate, 0 &lt;= top &lt;= Height.</param>
            <param name="width">The width of the rectangle to crop.</param>
            <param name="height">The height of the rectangle to crop.</param>
            <returns>
            A cropped version of this object.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BaseLuminanceSource.CropSupported">
            <summary>
            </summary>
            <returns> Whether this subclass supports cropping.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BaseLuminanceSource.CreateLuminanceSource(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Should create a new luminance source with the right class type.
            The method is used in methods crop and rotate.
            </summary>
            <param name="newLuminances">The new luminances.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Binarizer">
            <summary> This class hierarchy provides a set of methods to convert luminance data to 1 bit data.
            It allows the algorithm to vary polymorphically, for example allowing a very expensive
            thresholding technique for servers and a fast one for mobile. It also permits the implementation
            to vary, e.g. a JNI version for Android and a Java fallback version for other platforms.
            
            <author>dswitkin@google.com (Daniel Switkin)</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Binarizer.#ctor(VisioForge.Libs.ZXing.LuminanceSource)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Binarizer"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Binarizer.LuminanceSource">
            <summary>
            Gets the luminance source object.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Binarizer.getBlackRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray)">
            <summary> Converts one row of luminance data to 1 bit data. May actually do the conversion, or return
            cached data. Callers should assume this method is expensive and call it as seldom as possible.
            This method is intended for decoding 1D barcodes and may choose to apply sharpening.
            For callers which only examine one row of pixels at a time, the same BitArray should be reused
            and passed in with each call for performance. However it is legal to keep more than one row
            at a time if needed.
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt; bitmap height.</param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            If used, the Binarizer will call BitArray.clear(). Always use the returned object.
            </param>
            <returns> The array of bits for this row (true means black).</returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Binarizer.BlackMatrix">
            <summary> Converts a 2D array of luminance data to 1 bit data. As above, assume this method is expensive
            and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or
            may not apply sharpening. Therefore, a row from this matrix may not be identical to one
            fetched using getBlackRow(), so don't mix and match between them.
            </summary>
            <returns> The 2D array of bits for the image (true means black).</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Binarizer.createBinarizer(VisioForge.Libs.ZXing.LuminanceSource)">
            <summary> Creates a new object with the same type as this Binarizer implementation, but with pristine
            state. This is needed because Binarizer implementations may be stateful, e.g. keeping a cache
            of 1 bit data. See Effective Java for why we can't use Java's clone() method.
            </summary>
            <param name="source">The LuminanceSource this Binarizer will operate on.</param>
            <returns> A new concrete Binarizer implementation object.</returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Binarizer.Width">
            <summary>
            Gets the width of the luminance source object.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Binarizer.Height">
            <summary>
            Gets the height of the luminance source object.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.BinaryBitmap">
            <summary> This class is the core bitmap class used by ZXing to represent 1 bit data. Reader objects
            accept a BinaryBitmap and attempt to decode it.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BinaryBitmap.Width">
            <returns> The width of the bitmap.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BinaryBitmap.Height">
            <returns> The height of the bitmap.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BinaryBitmap.getBlackRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray)">
            <summary> Converts one row of luminance data to 1 bit data. May actually do the conversion, or return
            cached data. Callers should assume this method is expensive and call it as seldom as possible.
            This method is intended for decoding 1D barcodes and may choose to apply sharpening.
            
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt; bitmap height.
            </param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            If used, the Binarizer will call BitArray.clear(). Always use the returned object.
            </param>
            <returns> The array of bits for this row (true means black).
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BinaryBitmap.BlackMatrix">
            <summary> Converts a 2D array of luminance data to 1 bit. As above, assume this method is expensive
            and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or
            may not apply sharpening. Therefore, a row from this matrix may not be identical to one
            fetched using getBlackRow(), so don't mix and match between them.
            
            </summary>
            <returns> The 2D array of bits for the image (true means black).
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BinaryBitmap.CropSupported">
            <returns> Whether this bitmap can be cropped.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BinaryBitmap.crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Returns a new object with cropped image data. Implementations may keep a reference to the
            original data rather than a copy. Only callable if isCropSupported() is true.
            
            </summary>
            <param name="left">The left coordinate, 0 &lt;= left &lt; getWidth().
            </param>
            <param name="top">The top coordinate, 0 &lt;= top &lt;= getHeight().
            </param>
            <param name="width">The width of the rectangle to crop.
            </param>
            <param name="height">The height of the rectangle to crop.
            </param>
            <returns> A cropped version of this object.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.BinaryBitmap.RotateSupported">
            <returns> Whether this bitmap supports counter-clockwise rotation.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BinaryBitmap.rotateCounterClockwise">
            <summary>
            Returns a new object with rotated image data by 90 degrees counterclockwise.
            Only callable if {@link #isRotateSupported()} is true.
            </summary>
            <returns> A rotated version of this object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BinaryBitmap.rotateCounterClockwise45">
            <summary>
            Returns a new object with rotated image data by 45 degrees counterclockwise.
            Only callable if {@link #isRotateSupported()} is true.
            </summary>
            <returns>A rotated version of this object.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BitmapLuminanceSource.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BitmapLuminanceSource"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BitmapLuminanceSource.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.BitmapLuminanceSource"/> class
            with the image of a Bitmap instance
            </summary>
            <param name="bitmap">The bitmap.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.BitmapLuminanceSource.CreateLuminanceSource(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Should create a new luminance source with the right class type.
            The method is used in methods crop and rotate.
            </summary>
            <param name="newLuminances">The new luminances.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.BitArray">
            <summary> <p>A simple, fast array of bits, represented compactly by an array of ints internally.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.flip(System.Int32)">
            <summary> Flips bit i.
            
            </summary>
            <param name="i">bit to set
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.getNextSet(System.Int32)">
            <summary>
            Gets the next set.
            </summary>
            <param name="from">first bit to check</param>
            <returns>index of first bit that is set, starting from the given index, or size if none are set
            at or beyond this given index</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.getNextUnset(System.Int32)">
            <summary>
            see getNextSet(int)
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.setBulk(System.Int32,System.Int32)">
            <summary> Sets a block of 32 bits, starting at bit i.
            
            </summary>
            <param name="i">first bit to set
            </param>
            <param name="newBits">the new value of the next 32 bits. Note again that the least-significant bit
            corresponds to bit i, the next-least-significant to i+1, and so on.
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.setRange(System.Int32,System.Int32)">
            <summary>
            Sets a range of bits.
            </summary>
            <param name="start">start of range, inclusive.</param>
            <param name="end">end of range, exclusive</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.isRange(System.Int32,System.Int32,System.Boolean)">
            <summary> Efficient method to check if a range of bits is set, or not set.
            
            </summary>
            <param name="start">start of range, inclusive.
            </param>
            <param name="end">end of range, exclusive
            </param>
            <param name="value">if true, checks that bits in range are set, otherwise checks that they are not set
            </param>
            <returns> true iff all bits are set or not set in range, according to value argument
            </returns>
            <throws>  IllegalArgumentException if end is less than or equal to start </throws>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.appendBit(System.Boolean)">
            <summary>
            Appends the bit.
            </summary>
            <param name="bit">The bit.</param>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitArray.Array">
            <returns> underlying array of ints. The first element holds the first 32 bits, and the least
            significant bit is bit 0.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.appendBits(System.Int32,System.Int32)">
            <summary>
            Appends the least-significant bits, from value, in order from most-significant to
            least-significant. For example, appending 6 bits from 0x000001E will append the bits
            0, 1, 1, 1, 1, 0 in that order.
            </summary>
            <param name="value">The value.</param>
            <param name="numBits">The num bits.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.toBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Toes the bytes.
            </summary>
            <param name="bitOffset">first bit to start writing</param>
            <param name="array">array to write into. Bytes are written most-significant byte first. This is the opposite
            of the internal representation, which is exposed by BitArray</param>
            <param name="offset">position in array to start writing</param>
            <param name="numBytes">how many bytes to write</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitArray.reverse">
            <summary> Reverses all bits in the array.</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.BitMatrix">
            <summary>
            <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common
            module, x is the column position, and y is the row position. The ordering is always x, y.
            The origin is at the top-left.</p>
            
            <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins
            with a new int. This is done intentionally so that we can copy out a row into a BitArray very
            efficiently.</p>
            
            <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,
            meaning they represent lower x values. This is compatible with BitArray's implementation.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitMatrix.Width">
            <returns> The width of the matrix
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitMatrix.Height">
            <returns> The height of the matrix
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitMatrix.Dimension">
            <summary> This method is for compatibility with older code. It's only logical to call if the matrix
            is square, so I'm throwing if that's not the case. 
            </summary>
            <returns> row/column dimension of this matrix
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitMatrix.Item(System.Int32,System.Int32)">
            <summary> <p>Gets the requested bit, where true means black.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
            <returns> value of given bit in matrix
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.flip(System.Int32,System.Int32)">
            <summary> <p>Flips the given bit.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.setRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>Sets a square region of the bit matrix to true.</p>
            
            </summary>
            <param name="left">The horizontal position to begin at (inclusive)
            </param>
            <param name="top">The vertical position to begin at (inclusive)
            </param>
            <param name="width">The width of the region
            </param>
            <param name="height">The height of the region
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.getRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray)">
            <summary> A fast method to retrieve one row of data from the matrix as a BitArray.
            
            </summary>
            <param name="y">The row to retrieve
            </param>
            <param name="row">An optional caller-allocated BitArray, will be allocated if null or too small
            </param>
            <returns> The resulting BitArray - this reference should always be used even when passing
            your own row
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.setRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Sets the row.
            </summary>
            <param name="y">row to set</param>
            <param name="row">{@link BitArray} to copy from</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.getEnclosingRectangle">
            <summary>
            This is useful in detecting the enclosing rectangle of a 'pure' barcode.
            </summary>
            <returns>{left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitMatrix.getTopLeftOnBit">
            <summary>
            This is useful in detecting a corner of a 'pure' barcode.
            </summary>
            <returns>{x,y} coordinate of top-left-most 1 bit, or null if it is all white</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.BitSource">
            <summary> <p>This provides an easy abstraction to read bits at a time from a sequence of bytes, where the
            number of bits read is not often a multiple of 8.</p>
            
            <p>This class is thread-safe but not reentrant. Unless the caller modifies the bytes array
            it passed in, in which case all bets are off.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitSource.#ctor(System.Byte[])">
            <param name="bytes">bytes from which this will read bits. Bits will be read from the first byte first.
            Bits are read within a byte from most-significant to least-significant bit.
            </param>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitSource.BitOffset">
            <summary>
            index of next bit in current byte which would be read by the next call to {@link #readBits(int)}.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.BitSource.ByteOffset">
            <summary>
            index of next byte in input byte array which would be read by the next call to {@link #readBits(int)}.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitSource.readBits(System.Int32)">
            <param name="numBits">number of bits to read
            </param>
            <returns> int representing the bits read. The bits will appear as the least-significant
            bits of the int
            </returns>
            <exception cref="T:System.ArgumentException">if numBits isn't in [1,32] or more than is available</exception>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.BitSource.available">
            <returns> number of bits that can be read successfully
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ByteArray">
            <summary> This class implements an array of unsigned bytes.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ByteArray.at(System.Int32)">
            <summary> Access an unsigned byte at location index.</summary>
            <param name="index">The index in the array to access.
            </param>
            <returns> The unsigned value of the byte as an int.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ByteMatrix">
            <summary> A class which wraps a 2D array of bytes. The default usage is signed. If you want to use it as a
            unsigned container, it's up to you to do byteValue &amp; 0xff at each location.
            
            JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned
            -1, 0, and 1, I'm going to use less memory and go with bytes.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ByteMatrix.ToBitmap">
            <summary>
            Converts this ByteMatrix to a black and white bitmap.
            </summary>
            <returns>A black and white bitmap converted from this ByteMatrix.</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.CharacterSetECI">
            <summary> Encapsulates a Character Set ECI, according to "Extended Channel Interpretations" 5.3.1.1
            of ISO 18004.
            
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.CharacterSetECI.getCharacterSetECIByValue(System.Int32)">
            <param name="value">character set ECI value
            </param>
            <returns> {@link CharacterSetECI} representing ECI of given value, or null if it is legal but
            unsupported
            </returns>
            <throws>  IllegalArgumentException if ECI value is invalid </throws>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.CharacterSetECI.getCharacterSetECIByName(System.String)">
            <param name="name">character set ECI encoding name
            </param>
            <returns> {@link CharacterSetECI} representing ECI for character encoding, or null if it is legal
            but unsupported
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.Collections">
            <summary> <p>This is basically a substitute for <code>java.util.Collections</code>, which is not
            present in MIDP 2.0 / CLDC 1.1.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Collections.insertionSort``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary> Sorts its argument (destructively) using insert sort; in the context of this package
            insertion sort is simple and efficient given its relatively small inputs.
            
            </summary>
            <param name="vector">vector to sort
            </param>
            <param name="comparator">comparator to define sort ordering
            </param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.DecoderResult">
            <summary>
            Encapsulates the result of decoding a matrix of bits. This typically
            applies to 2D barcode formats. For now it contains the raw bytes obtained,
            as well as a String interpretation of those bytes, if applicable.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.DefaultGridSampler">
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.DetectorResult">
            <summary> <p>Encapsulates the result of detecting a barcode in an image. This includes the raw
            matrix of black/white pixels corresponding to the barcode, and possibly points of interest
            in the image, like the location of finder patterns or corners of the barcode in the image.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.MathUtils.round(System.Single)">
            <summary>
            Ends up being a bit faster than {@link Math#round(float)}. This merely rounds its
            argument to the nearest int, where x.5 rounds up to x+1.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.Detector.MonochromeRectangleDetector">
            <summary> <p>A somewhat generic detector that looks for a barcode-like rectangular region within an image.
            It looks within a mostly white region of an image for a region of black and white, but mostly
            black. It returns the four corners of the region, as best it can determine.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.MonochromeRectangleDetector.detect">
            <summary> <p>Detects a rectangular region of black and white -- mostly black -- with a region of mostly
            white, in an image.</p>
            
            </summary>
            <returns> {@link BarcodeResultPoint}[] describing the corners of the rectangular region. The first and
            last points are opposed on the diagonal, as are the second and third. The first point will be
            the topmost point and the last, the bottommost. The second point will be leftmost and the
            third, the rightmost
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.MonochromeRectangleDetector.findCornerFromCenter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Attempts to locate a corner of the barcode by scanning up, down, left or right from a center
            point which should be within the barcode.
            
            </summary>
            <param name="centerX">center's x component (horizontal)
            </param>
            <param name="deltaX">same as deltaY but change in x per step instead
            </param>
            <param name="left">minimum value of x
            </param>
            <param name="right">maximum value of x
            </param>
            <param name="centerY">center's y component (vertical)
            </param>
            <param name="deltaY">change in y per step. If scanning up this is negative; down, positive;
            left or right, 0
            </param>
            <param name="top">minimum value of y to search through (meaningless when di == 0)
            </param>
            <param name="bottom">maximum value of y
            </param>
            <param name="maxWhiteRun">maximum run of white pixels that can still be considered to be within
            the barcode
            </param>
            <returns> a {@link com.google.zxing.BarcodeResultPoint} encapsulating the corner that was found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.MonochromeRectangleDetector.blackWhiteRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary> Computes the start and end of a region of pixels, either horizontally or vertically, that could
            be part of a Data Matrix barcode.
            
            </summary>
            <param name="fixedDimension">if scanning horizontally, this is the row (the fixed vertical location)
            where we are scanning. If scanning vertically it's the column, the fixed horizontal location
            </param>
            <param name="maxWhiteRun">largest run of white pixels that can still be considered part of the
            barcode region
            </param>
            <param name="minDim">minimum pixel location, horizontally or vertically, to consider
            </param>
            <param name="maxDim">maximum pixel location, horizontally or vertically, to consider
            </param>
            <param name="horizontal">if true, we're scanning left-right, instead of up-down
            </param>
            <returns> int[] with start and end of found range, or null if no such range is found
            (e.g. only white was found)
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector">
            <summary>
            Detects a candidate barcode-like rectangular region within an image. It
            starts around the center of the image, increases the size of the candidate
            region until it finds a white rectangular region. By keeping track of the
            last black points it encountered, it determines the corners of the barcode.
            </summary>
            <author>David Olivier</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.Create(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Creates a WhiteRectangleDetector instance
            </summary>
            <param name="image">The image.</param>
            <returns>null, if image is too small, otherwise a WhiteRectangleDetector instance</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.Create(VisioForge.Libs.ZXing.Common.BitMatrix,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a WhiteRectangleDetector instance
            </summary>
            <param name="image">The image.</param>
            <param name="initSize">Size of the init.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            null, if image is too small, otherwise a WhiteRectangleDetector instance
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector"/> class.
            </summary>
            <param name="image">The image.</param>
            <exception cref="T:System.ArgumentException">if image is too small</exception>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector"/> class.
            </summary>
            <param name="image">The image.</param>
            <param name="initSize">Size of the init.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.detect">
            <summary>
            Detects a candidate barcode-like rectangular region within an image. It
            starts around the center of the image, increases the size of the candidate
            region until it finds a white rectangular region.
            </summary>
            <returns><see cref="T:VisioForge.Libs.Types.BarcodeResultPoint" />[] describing the corners of the rectangular
            region. The first and last points are opposed on the diagonal, as
            are the second and third. The first point will be the topmost
            point and the last, the bottommost. The second point will be
            leftmost and the third, the rightmost</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.centerEdges(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary>
            recenters the points of a constant distance towards the center
            </summary>
            <param name="y">bottom most point</param>
            <param name="z">left most point</param>
            <param name="x">right most point</param>
            <param name="t">top most point</param>
            <returns><see cref="T:VisioForge.Libs.Types.BarcodeResultPoint"/>[] describing the corners of the rectangular
            region. The first and last points are opposed on the diagonal, as
            are the second and third. The first point will be the topmost
            point and the last, the bottommost. The second point will be
            leftmost and the third, the rightmost</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.Detector.WhiteRectangleDetector.containsBlackPoint(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Determines whether a segment contains a black point
            </summary>
            <param name="a">min value of the scanned coordinate</param>
            <param name="b">max value of the scanned coordinate</param>
            <param name="fixed">value of fixed coordinate</param>
            <param name="horizontal">set to true if scan must be horizontal, false if vertical</param>
            <returns>
              true if a black point has been found, else false.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ECI">
            <summary> Superclass of classes encapsulating types ECIs, according to "Extended Channel Interpretations"
            5.3 of ISO 18004.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ECI.getECIByValue(System.Int32)">
            <param name="value">ECI value
            </param>
            <returns> {@link ECI} representing ECI of given value, or null if it is legal but unsupported
            </returns>
            <throws>  IllegalArgumentException if ECI value is invalid </throws>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.GlobalHistogramBinarizer">
            <summary> This Binarizer implementation uses the old ZXing global histogram approach. It is suitable
            for low-end mobile devices which don't have enough CPU or memory to use a local thresholding
            algorithm. However, because it picks a global black point, it cannot handle difficult shadows
            and gradients.
            
            Faster mobile devices and all desktop applications should probably use HybridBinarizer instead.
            
            <author>dswitkin@google.com (Daniel Switkin)</author>
            <author>Sean Owen</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.GlobalHistogramBinarizer.#ctor(VisioForge.Libs.ZXing.LuminanceSource)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Common.GlobalHistogramBinarizer"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.GlobalHistogramBinarizer.getBlackRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Applies simple sharpening to the row data to improve performance of the 1D Readers.
            </summary>
            <param name="y"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.GlobalHistogramBinarizer.BlackMatrix">
            <summary>
            Does not sharpen the data, as this call is intended to only be used by 2D Readers.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.GlobalHistogramBinarizer.createBinarizer(VisioForge.Libs.ZXing.LuminanceSource)">
            <summary>
            Creates a new object with the same type as this Binarizer implementation, but with pristine
            state. This is needed because Binarizer implementations may be stateful, e.g. keeping a cache
            of 1 bit data. See Effective Java for why we can't use Java's clone() method.
            </summary>
            <param name="source">The LuminanceSource this Binarizer will operate on.</param>
            <returns>
            A new concrete Binarizer implementation object.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.GridSampler">
            <summary> Implementations of this class can, given locations of finder patterns for a QR code in an
            image, sample the right points in the image to reconstruct the QR code, accounting for
            perspective distortion. It is abstracted since it is relatively expensive and should be allowed
            to take advantage of platform-specific optimized implementations, like Sun's Java Advanced
            Imaging library, but which may not be available in other environments such as J2ME, and vice
            versa.
            
            The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}
            with an instance of a class which implements this interface.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.GridSampler.Instance">
            <returns> the current implementation of {@link GridSampler}
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.GridSampler.setGridSampler(VisioForge.Libs.ZXing.Common.GridSampler)">
            <summary> Sets the implementation of {@link GridSampler} used by the library. One global
            instance is stored, which may sound problematic. But, the implementation provided
            ought to be appropriate for the entire platform, and all uses of this library
            in the whole lifetime of the JVM. For instance, an Android activity can swap in
            an implementation that takes advantage of native platform libraries.
            
            </summary>
            <param name="newGridSampler">The platform-specific object to install.
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.GridSampler.sampleGrid(VisioForge.Libs.ZXing.Common.BitMatrix,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary> <p>Samples an image for a square matrix of bits of the given dimension. This is used to extract
            the black/white modules of a 2D barcode like a QR Code found in an image. Because this barcode
            may be rotated or perspective-distorted, the caller supplies four points in the source image
            that define known points in the barcode, so that the image may be sampled appropriately.</p>
            
            <p>The last eight "from" parameters are four X/Y coordinate pairs of locations of points in
            the image that define some significant points in the image to be sample. For example,
            these may be the location of finder pattern in a QR Code.</p>
            
            <p>The first eight "to" parameters are four X/Y coordinate pairs measured in the destination
            {@link BitMatrix}, from the top left, where the known points in the image given by the "from"
            parameters map to.</p>
            
            <p>These 16 parameters define the transformation needed to sample the image.</p>
            
            </summary>
            <param name="image">image to sample
            </param>
            <param name="dimension">width/height of {@link BitMatrix} to sample from image
            </param>
            <returns> {@link BitMatrix} representing a grid of points sampled from the image within a region
            defined by the "from" parameters
            </returns>
            <throws>  ReaderException if image can't be sampled, for example, if the transformation defined </throws>
            <summary>   by the given points is invalid or results in sampling outside the image boundaries
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.GridSampler.checkAndNudgePoints(VisioForge.Libs.ZXing.Common.BitMatrix,System.Single[])">
            <summary> <p>Checks a set of points that have been transformed to sample points on an image against
            the image's dimensions to see if the point are even within the image.</p>
            
            <p>This method will actually "nudge" the endpoints back onto the image if they are found to be
            barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder
            patterns in an image where the QR Code runs all the way to the image border.</p>
            
            <p>For efficiency, the method will check points from either end of the line until one is found
            to be within the image. Because the set of points are assumed to be linear, this is valid.</p>
            
            </summary>
            <param name="image">image into which the points should map
            </param>
            <param name="points">actual points in x1,y1,...,xn,yn form
            </param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.HybridBinarizer">
            <summary> This class implements a local thresholding algorithm, which while slower than the
            GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for
            high frequency images of barcodes with black data on white backgrounds. For this application,
            it does a much better job than a global blackpoint with severe shadows and gradients.
            However it tends to produce artifacts on lower frequency images and is therefore not
            a good general purpose binarizer for uses outside ZXing.
            
            This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers,
            and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already
            inherently local, and only fails for horizontal gradients. We can revisit that problem later,
            but for now it was not a win to use local blocks for 1D.
            
            This Binarizer is the default for the unit tests and the recommended class for library users.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.HybridBinarizer.binarizeEntireImage">
            <summary>
            Calculates the final BitMatrix once for all requests. This could be called once from the
            constructor instead, but there are some advantages to doing it lazily, such as making
            profiling easier, and not doing heavy lifting when callers don't expect it.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.HybridBinarizer.calculateThresholdForBlock(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[][],VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            For each 8x8 block in the image, calculate the average black point using a 5x5 grid
            of the blocks around it. Also handles the corner cases (fractional blocks are computed based
            on the last 8 pixels in the row/column which are also used in the previous block).
            </summary>
            <param name="luminances">The luminances.</param>
            <param name="subWidth">Width of the sub.</param>
            <param name="subHeight">Height of the sub.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="blackPoints">The black points.</param>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.HybridBinarizer.thresholdBlock(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Applies a single threshold to an 8x8 block of pixels.
            </summary>
            <param name="luminances">The luminances.</param>
            <param name="xoffset">The xoffset.</param>
            <param name="yoffset">The yoffset.</param>
            <param name="threshold">The threshold.</param>
            <param name="stride">The stride.</param>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.HybridBinarizer.calculateBlackPoints(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates a single black point for each 8x8 block of pixels and saves it away.
            See the following thread for a discussion of this algorithm:
            http://groups.google.com/group/zxing/browse_thread/thread/d06efa2c35a7ddc0
            </summary>
            <param name="luminances">The luminances.</param>
            <param name="subWidth">Width of the sub.</param>
            <param name="subHeight">Height of the sub.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.PerspectiveTransform">
            <summary> <p>This class implements a perspective transform in two dimensions. Given four source and four
            destination points, it will compute the transformation implied between them. The code is based
            directly upon section 3.4.2 of George Wolberg's "Digital Image Warping"; see pages 54-56.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.PerspectiveTransform.transformPoints(System.Single[],System.Single[])">
            <summary>Convenience method, not optimized for performance. </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF">
            <summary>
            <p>This class contains utility methods for performing mathematical operations over
            the Galois Fields. Operations use a given primitive polynomial in calculations.</p>
            <p>Throughout this package, elements of the GF are represented as an {@code int}
            for convenience and speed (but at the cost of memory).
            </p>
            </summary>
            <author>Sean Owen</author>
            <author>David Olivier</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.#ctor(System.Int32,System.Int32)">
             Create a representation of GF(size) using the given primitive polynomial.
            
             @param primitive irreducible polynomial whose coefficients are represented by
              the bits of an int, where the least-significant bit represents the constant
              coefficient
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.buildMonomial(System.Int32,System.Int32)">
            @return the monomial representing coefficient * x^degree
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.addOrSubtract(System.Int32,System.Int32)">
             Implements both addition and subtraction -- they are the same in GF(size).
            
             @return sum/difference of a and b
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.exp(System.Int32)">
            @return 2 to the power of a in GF(size)
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.log(System.Int32)">
            @return base 2 log of a in GF(size)
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.inverse(System.Int32)">
            @return multiplicative inverse of a
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF.multiply(System.Int32,System.Int32)">
            <summary>
            Multiplies the specified a with b.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>product of a and b in GF(size)</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly">
            <summary>
            <p>Represents a polynomial whose coefficients are elements of a GF.
            Instances of this class are immutable.</p>
            <p>Much credit is due to William Rucklidge since portions of this code are an indirect
            port of his C++ Reed-Solomon implementation.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly.#ctor(VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGF,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly"/> class.
            </summary>
            <param name="field">the {@link GenericGF} instance representing the field to use
            to perform computations</param>
            <param name="coefficients">coefficients as ints representing elements of GF(size), arranged
            from most significant (highest-power term) coefficient to least significant</param>
            <exception cref="T:System.ArgumentException">if argument is null or empty,
            or if leading coefficient is 0 and this is not a
            constant polynomial (that is, it is not the monomial "0")</exception>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly.Degree">
            <summary>
            degree of this polynomial
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly.isZero">
            <summary>
            Gets a value indicating whether this <see cref="T:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly"/> is zero.
            </summary>
            <value>true iff this polynomial is the monomial "0"</value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly.getCoefficient(System.Int32)">
            <summary>
            coefficient of x^degree term in this polynomial
            </summary>
            <param name="degree">The degree.</param>
            <returns>coefficient of x^degree term in this polynomial</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.GenericGFPoly.evaluateAt(System.Int32)">
            <summary>
            evaluation of this polynomial at a given point
            </summary>
            <param name="a">A.</param>
            <returns>evaluation of this polynomial at a given point</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ReedSolomon.ReedSolomonDecoder">
            <summary> <p>Implements Reed-Solomon decoding, as the name implies.</p>
            
            <p>The algorithm will not be explained here, but the following references were helpful
            in creating this implementation:</p>
            
            <ul>
            <li>Bruce Maggs.
            <a href="http://www.cs.cmu.edu/afs/cs.cmu.edu/project/pscico-guyb/realworld/www/rs_decode.ps">
            "Decoding Reed-Solomon Codes"</a> (see discussion of Forney's Formula)</li>
            <li>J.I. Hall. <a href="www.mth.msu.edu/~jhall/classes/codenotes/GRS.pdf">
            "Chapter 5. Generalized Reed-Solomon Codes"</a>
            (see discussion of Euclidean algorithm)</li>
            </ul>
            
            <p>Much credit is due to William Rucklidge since portions of this code are an indirect
            port of his C++ Reed-Solomon implementation.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  William Rucklidge
            </author>
            <author>  sanfordsquires
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.ReedSolomon.ReedSolomonDecoder.decode(System.Int32[],System.Int32)">
            <summary> <p>Decodes given set of received codewords, which include both data and error-correction
            codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place,
            in the input.</p>
            
            </summary>
            <param name="received">data and error-correction codewords
            </param>
            <param name="twoS">number of error-correction codewords available
            </param>
            <throws>  ReedSolomonException if decoding fails for any reason </throws>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.ReedSolomon.ReedSolomonEncoder">
            <summary> <p>Implements Reed-Solomon enbcoding, as the name implies.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  William Rucklidge
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Common.StringUtils">
            <summary>
            Common string-related functions.
            </summary>
            <author>Sean Owen</author>
            <author>Alex Dupre</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Common.StringUtils.guessEncoding(System.Byte[],System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Guesses the encoding.
            </summary>
            <param name="bytes">bytes encoding a string, whose encoding should be guessed</param>
            <param name="hints">decode hints if applicable</param>
            <returns>name of guessed encoding; at the moment will only guess one of:
            {@link #SHIFT_JIS}, {@link #UTF8}, {@link #ISO88591}, or the platform
            default encoding if none of these can possibly be correct</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.DataMatrixReader">
             <summary>
             This implementation can detect and decode Data Matrix codes in an image.
            
             <author>bbrown@google.com (Brian Brown)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.DataMatrixReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
             <summary>
             Locates and decodes a Data Matrix code in an image.
            
             <returns>a String representing the content encoded by the Data Matrix code</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if a Data Matrix code cannot be decoded</exception>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.DataMatrixReader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)">
             <summary>
             This method detects a code in a "pure" image -- that is, pure monochrome image
             which contains only an unrotated, unskewed, image of a code, with some white border
             around it. This is a specialized method that works exceptionally fast in this special
             case.
            
             @see com.google.zxing.pdf417.PDF417Reader#extractPureBits(BitMatrix)
             @see com.google.zxing.qrcode.QRCodeReader#extractPureBits(BitMatrix)
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser">
            <summary>
            <author>bbrown@google.com (Brian Brown)</author>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)" -->
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readVersion(VisioForge.Libs.ZXing.Common.BitMatrix)">
             <summary>
             <p>Creates the version object based on the dimension of the original bit matrix from 
             the datamatrix code.</p>
            
             <p>See ISO 16022:2006 Table 7 - ECC 200 symbol attributes</p>
             
             <param name="bitMatrix">Original <see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />including alignment patterns</param>
             <returns><see cref="P:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.Version" />encapsulating the Data Matrix Code's "version"</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if the dimensions of the mapping matrix are not valid</exception>
             Data Matrix dimensions.
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readCodewords">
             <summary>
             <p>Reads the bits in the <see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />representing the mapping matrix (No alignment patterns)
             in the correct order in order to reconstitute the codewords bytes contained within the
             Data Matrix Code.</p>
            
             <returns>bytes encoded within the Data Matrix Code</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if the exact number of bytes expected is not read</exception>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readModule(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <p>Reads a bit of the mapping matrix accounting for boundary wrapping.</p>
            
            <param name="row">Row to read in the mapping matrix</param>
            <param name="column">Column to read in the mapping matrix</param>
            <param name="numRows">Number of rows in the mapping matrix</param>
            <param name="numColumns">Number of columns in the mapping matrix</param>
            <returns>value of the given bit in the mapping matrix</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readUtah(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <p>Reads the 8 bits of the standard Utah-shaped pattern.</p>
            
            <p>See ISO 16022:2006, 5.8.1 Figure 6</p>
            
            <param name="row">Current row in the mapping matrix, anchored at the 8th bit (LSB) of the pattern</param>
            <param name="column">Current column in the mapping matrix, anchored at the 8th bit (LSB) of the pattern</param>
            <param name="numRows">Number of rows in the mapping matrix</param>
            <param name="numColumns">Number of columns in the mapping matrix</param>
            <returns>byte from the utah shape</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readCorner1(System.Int32,System.Int32)">
            <summary>
            <p>Reads the 8 bits of the special corner condition 1.</p>
            
            <p>See ISO 16022:2006, Figure F.3</p>
            
            <param name="numRows">Number of rows in the mapping matrix</param>
            <param name="numColumns">Number of columns in the mapping matrix</param>
            <returns>byte from the Corner condition 1</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readCorner2(System.Int32,System.Int32)">
            <summary>
            <p>Reads the 8 bits of the special corner condition 2.</p>
            
            <p>See ISO 16022:2006, Figure F.4</p>
            
            <param name="numRows">Number of rows in the mapping matrix</param>
            <param name="numColumns">Number of columns in the mapping matrix</param>
            <returns>byte from the Corner condition 2</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readCorner3(System.Int32,System.Int32)">
            <summary>
            <p>Reads the 8 bits of the special corner condition 3.</p>
            
            <p>See ISO 16022:2006, Figure F.5</p>
            
            <param name="numRows">Number of rows in the mapping matrix</param>
            <param name="numColumns">Number of columns in the mapping matrix</param>
            <returns>byte from the Corner condition 3</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.readCorner4(System.Int32,System.Int32)">
            <summary>
            <p>Reads the 8 bits of the special corner condition 4.</p>
            
            <p>See ISO 16022:2006, Figure F.6</p>
            
            <param name="numRows">Number of rows in the mapping matrix</param>
            <param name="numColumns">Number of columns in the mapping matrix</param>
            <returns>byte from the Corner condition 4</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.BitMatrixParser.extractDataRegion(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            <p>Extracts the data region from a <see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />that contains
            alignment patterns.</p>
            
            <param name="bitMatrix">Original <see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />with alignment patterns</param>
            <returns>BitMatrix that has the alignment patterns removed</returns>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.DataBlock">
             <summary>
             <p>Encapsulates a block of data within a Data Matrix Code. Data Matrix Codes may split their data into
             multiple blocks, each of which is a unit of data and error-correction codewords. Each
             is represented by an instance of this class.</p>
            
             <author>bbrown@google.com (Brian Brown)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DataBlock.getDataBlocks(System.Byte[],VisioForge.Libs.ZXing.Datamatrix.Internal.Version)">
             <summary>
             <p>When Data Matrix Codes use multiple data blocks, they actually interleave the bytes of each of them.
             That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This
             method will separate the data into original blocks.</p>
            
             <param name="rawCodewords">bytes as read directly from the Data Matrix Code</param>
             <param name="version">version of the Data Matrix Code</param>
             <returns>DataBlocks containing original bytes, "de-interleaved" from representation in the</returns>
                     Data Matrix Code
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser">
             <summary>
             <p>Data Matrix Codes can encode text as bits in one of several modes, and can use multiple modes
             in one Data Matrix Code. This class decodes the bits back into text.</p>
            
             <p>See ISO 16022:2006, 5.2.1 - 5.2.9.2</p>
            
             <author>bbrown@google.com (Brian Brown)</author>
             <author>Sean Owen</author>
             </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.C40_BASIC_SET_CHARS">
            <summary>
            See ISO 16022:2006, Annex C Table C.1
            The C40 Basic Character Set (*'s used for placeholders for the shift values)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.TEXT_BASIC_SET_CHARS">
            <summary>
            See ISO 16022:2006, Annex C Table C.2
            The Text Basic Character Set (*'s used for placeholders for the shift values)
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.decodeAsciiSegment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder,System.Text.StringBuilder,VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.Mode@)">
            <summary>
            See ISO 16022:2006, 5.2.3 and Annex C, Table C.2
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.decodeC40Segment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder)">
            <summary>
            See ISO 16022:2006, 5.2.5 and Annex C, Table C.1
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.decodeTextSegment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder)">
            <summary>
            See ISO 16022:2006, 5.2.6 and Annex C, Table C.2
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.decodeAnsiX12Segment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder)">
            <summary>
            See ISO 16022:2006, 5.2.7
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.decodeEdifactSegment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder)">
            <summary>
            See ISO 16022:2006, 5.2.8 and Annex C Table C.3
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.decodeBase256Segment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder,System.Collections.Generic.IList{System.Byte[]})">
            <summary>
            See ISO 16022:2006, 5.2.9 and Annex B, B.2
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.DecodedBitStreamParser.unrandomize255State(System.Int32,System.Int32)">
            <summary>
            See ISO 16022:2006, Annex B, B.2
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Decoder">
             <summary>
             <p>The main class which implements Data Matrix Code decoding -- as opposed to locating and extracting
             the Data Matrix Code from an image.</p>
            
             <author>bbrown@google.com (Brian Brown)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Decoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Decoder"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Decoder.decode(System.Boolean[][])">
             <summary>
             <p>Convenience method that can decode a Data Matrix Code represented as a 2D array of booleans.
             "true" is taken to mean a black module.</p>
            
             <param name="image">booleans representing white/black Data Matrix Code modules</param>
             <returns>text and bytes encoded within the Data Matrix Code</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if the Data Matrix Code cannot be decoded</exception>
             <exception cref="!:ChecksumException">if error correction fails</exception>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Decoder.decode(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            <p>Decodes a Data Matrix Code represented as a <see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />. A 1 or "true" is taken
            to mean a black module.</p>
            </summary>
            <param name="bits">booleans representing white/black Data Matrix Code modules</param>
            <returns>text and bytes encoded within the Data Matrix Code</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Decoder.correctErrors(System.Byte[],System.Int32)">
             <summary>
             <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to
             correct the errors in-place using Reed-Solomon error correction.</p>
            
             <param name="codewordBytes">data and error correction codewords</param>
             <param name="numDataCodewords">number of codewords that are data bytes</param>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Version">
             <summary>
             The Version object encapsulates attributes about a particular
             size Data Matrix Code.
            
             <author>bbrown@google.com (Brian Brown)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Version.getVersionForDimensions(System.Int32,System.Int32)">
             <summary>
             <p>Deduces version information from Data Matrix dimensions.</p>
            
             <param name="numRows">Number of rows in modules</param>
             <param name="numColumns">Number of columns in modules</param>
             <returns>Version for a Data Matrix Code of those dimensions</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if dimensions do correspond to a valid Data Matrix size</exception>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Version.ECBlocks">
            <summary>
            <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will
            use blocks of differing sizes within one version, so, this encapsulates the parameters for
            each set of blocks. It also holds the number of error-correction codewords per block since it
            will be the same across all blocks within one version.</p>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Version.ECB">
            <summary>
            <p>Encapsualtes the parameters for one error-correction block in one symbol version.
            This includes the number of data codewords, and the number of times a block with these
            parameters is used consecutively in the Data Matrix code version's format.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Version.buildVersions">
            <summary>
            See ISO 16022:2006 5.5.1 Table 7
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector">
            <summary>
            <p>Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code
            is rotated or skewed, or partially obscured.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.detect">
            <summary>
            <p>Detects a Data Matrix Code in an image.</p>
            </summary>
            <returns><see cref="T:VisioForge.Libs.ZXing.Common.DetectorResult" />encapsulating results of detecting a Data Matrix Code or null</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.correctTopRightRectangular(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,System.Int32,System.Int32)">
            <summary>
            Calculates the position of the white top right module using the output of the rectangle detector
            for a rectangular matrix
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.correctTopRight(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,System.Int32)">
            <summary>
            Calculates the position of the white top right module using the output of the rectangle detector
            for a square matrix
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.increment(System.Collections.Generic.IDictionary{VisioForge.Libs.Types.BarcodeResultPoint,System.Int32},VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary>
            Increments the Integer associated with a key by one.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.transitionsBetween(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary>
            Counts the number of black/white transitions between two points, using something like Bresenham's algorithm.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.ResultPointsAndTransitions">
            <summary>
            Simply encapsulates two points and a number of transitions between them.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Datamatrix.Internal.Detector.ResultPointsAndTransitionsComparator">
            <summary>
            Orders ResultPointsAndTransitions by number of transitions, ascending.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.DecodeHintType">
            <summary>
            Encapsulates a type of hint that a caller may pass to a barcode reader to help it
            more quickly or accurately decode it. It is up to implementations to decide what,
            if anything, to do with the information that is supplied.
            <seealso cref="M:VisioForge.Libs.ZXing.Reader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})" />
            </summary>
            <author>Sean Owen</author>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.OTHER">
            <summary>
            Unspecified, application-specific hint. Maps to an unspecified <see cref="T:System.Object" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.PURE_BARCODE">
            <summary>
            Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;
            use <see cref="T:System.Boolean" /> = true.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.POSSIBLE_FORMATS">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a <see cref="T:System.Collections.ICollection" /> of <see cref="T:VisioForge.Libs.ZXing.BarcodeFormat" />s.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.TRY_HARDER">
            <summary>
            Spend more time to try to find a barcode; optimize for accuracy, not speed.
            Doesn't matter what it maps to; use <see cref="T:System.Boolean" /> = true.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.CHARACTER_SET">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.ALLOWED_LENGTHS">
            <summary>
            Allowed lengths of encoded data -- reject anything else. Maps to an int[].
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.ASSUME_CODE_39_CHECK_DIGIT">
            <summary>
            Assume Code 39 codes employ a check digit. Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.DecodeHintType.NEED_RESULT_POINT_CALLBACK">
            <summary>
            The caller needs to be notified via callback when a possible <see cref="!:BarcodeResultPoint" />
            is found. Maps to a <see cref="T:VisioForge.Libs.ZXing.ResultPointCallback" />.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.FormatException">
            <summary>
            Thrown when a barcode was successfully detected, but some aspect of
            the content did not conform to the barcode's format rules. This could have
            been due to a mis-detection.
            <author>Sean Owen</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.IBarcodeReader">
            <summary>
            Interface for a smart class to decode the barcode inside a bitmap object
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IBarcodeReader.ResultPointFound">
            <summary>
            event is executed when a result point was found
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IBarcodeReader.ResultFound">
            <summary>
            event is executed when a result was found via decode
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReader.TryHarder">
            <summary>
            Gets or sets a flag which cause a deeper look into the bitmap
            </summary>
            <value>
              <c>true</c> if [try harder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReader.PureBarcode">
            <summary>
            Image is a pure monochrome image of a barcode.
            </summary>
            <value>
              <c>true</c> if monochrome image of a barcode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReader.CharacterSet">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
            <value>
            The character set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReader.PossibleFormats">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.List} of {@link BarcodeFormat}s.
            </summary>
            <value>
            The possible formats.
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IBarcodeReader.Decode(System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat)">
            <summary>
            Decodes the specified barcode bitmap which is given by a generic byte array with the order RGB24.
            </summary>
            <param name="rawRGB">The image as RGB24 array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <returns>
            the result data or null
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IBarcodeReader.Decode(System.Drawing.Bitmap)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="barcodeBitmap">The barcode bitmap.</param>
            <returns>the result data or null</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1">
            <summary>
            Interface for a smart class to decode the barcode inside a bitmap object
            </summary>
            <typeparam name="T">gives the type of the input data</typeparam>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.ResultPointFound">
            <summary>
            event is executed when a result point was found
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.ResultFound">
            <summary>
            event is executed when a result was found via decode
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.TryHarder">
            <summary>
            Gets or sets a flag which cause a deeper look into the bitmap
            </summary>
            <value>
              <c>true</c> if [try harder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.PureBarcode">
            <summary>
            Image is a pure monochrome image of a barcode.
            </summary>
            <value>
              <c>true</c> if monochrome image of a barcode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.CharacterSet">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
            <value>
            The character set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.PossibleFormats">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.List} of {@link BarcodeFormat}s.
            </summary>
            <value>
            The possible formats.
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.Decode(System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat)">
            <summary>
            Decodes the specified barcode bitmap which is given by a generic byte array.
            </summary>
            <param name="rawRGB">The barcode bitmap.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <returns>
            the result data or null
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IBarcodeReaderGeneric`1.Decode(`0)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="barcodeBitmap">The barcode bitmap.</param>
            <returns>the result data or null</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.IMultipleBarcodeReader">
            <summary>
            Interface for a smart class to decode multiple barcodes inside a bitmap object
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IMultipleBarcodeReader.ResultPointFound">
            <summary>
            event is executed when a result point was found
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IMultipleBarcodeReader.ResultFound">
            <summary>
            event is executed when a result was found via decode
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReader.TryHarder">
            <summary>
            Gets or sets a flag which cause a deeper look into the bitmap
            </summary>
            <value>
              <c>true</c> if [try harder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReader.PureBarcode">
            <summary>
            Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;
            use {@link Boolean#TRUE}.
            </summary>
            <value>
              <c>true</c> if monochrome image of a barcode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReader.CharacterSet">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
            <value>
            The character set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReader.PossibleFormats">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.List} of {@link BarcodeFormat}s.
            </summary>
            <value>
            The possible formats.
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IMultipleBarcodeReader.DecodeMultiple(System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat)">
            <summary>
            Decodes the specified barcode bitmap which is given by a generic byte array with the order RGB24.
            </summary>
            <param name="rawRGB">The image as RGB24 array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <returns>
            the result data or null
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IMultipleBarcodeReader.DecodeMultiple(System.Drawing.Bitmap)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="barcodeBitmap">The barcode bitmap.</param>
            <returns>the result data or null</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1">
            <summary>
            Interface for a smart class to decode multiple barcodes inside a bitmap object
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.ResultPointFound">
            <summary>
            event is executed when a result point was found
            </summary>
        </member>
        <member name="E:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.ResultFound">
            <summary>
            event is executed when a result was found via decode
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.TryHarder">
            <summary>
            Gets or sets a flag which cause a deeper look into the bitmap
            </summary>
            <value>
              <c>true</c> if [try harder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.PureBarcode">
            <summary>
            Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;
            use {@link Boolean#TRUE}.
            </summary>
            <value>
              <c>true</c> if monochrome image of a barcode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.CharacterSet">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
            <value>
            The character set.
            </value>
        </member>
        <member name="P:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.PossibleFormats">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.List} of {@link BarcodeFormat}s.
            </summary>
            <value>
            The possible formats.
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.DecodeMultiple(System.Byte[],System.Int32,System.Int32,VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat)">
            <summary>
            Decodes the specified barcode bitmap which is given by a generic byte array with the order RGB24.
            </summary>
            <param name="rawRGB">The barcode bitmap.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <returns>
            the result data or null
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.IMultipleBarcodeReaderGeneric`1.DecodeMultiple(`0)">
            <summary>
            Decodes the specified barcode bitmap.
            </summary>
            <param name="barcodeBitmap">The barcode bitmap.</param>
            <returns>the result data or null</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.LuminanceSource">
            <summary> The purpose of this class hierarchy is to abstract different bitmap implementations across
            platforms into a standard interface for requesting greyscale luminance values. The interface
            only provides immutable methods; therefore crop and rotation create copies. This is to ensure
            that one Reader does not modify the original luminance source and leave it in an unknown state
            for other Readers in the chain.
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.LuminanceSource.getRow(System.Int32,System.Byte[])">
            <summary> Fetches one row of luminance data from the underlying platform's bitmap. Values range from
            0 (black) to 255 (white). Because Java does not have an unsigned byte type, callers will have
            to bitwise and with 0xff for each value. It is preferable for implementations of this method
            to only fetch this row rather than the whole image, since no 2D Readers may be installed and
            getMatrix() may never be called.
            
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt; Height.
            </param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            Always use the returned object, and ignore the .length of the array.
            </param>
            <returns> An array containing the luminance data.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:VisioForge.Libs.ZXing.LuminanceSource.Matrix" -->
        <member name="P:VisioForge.Libs.ZXing.LuminanceSource.Width">
            <returns> The width of the bitmap.</returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.LuminanceSource.Height">
            <returns> The height of the bitmap.</returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.LuminanceSource.CropSupported">
            <returns> Whether this subclass supports cropping.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.LuminanceSource.crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Returns a new object with cropped image data. Implementations may keep a reference to the
            original data rather than a copy. Only callable if CropSupported is true.
            
            </summary>
            <param name="left">The left coordinate, 0 &lt;= left &lt; Width.
            </param>
            <param name="top">The top coordinate, 0 &lt;= top &lt;= Height.
            </param>
            <param name="width">The width of the rectangle to crop.
            </param>
            <param name="height">The height of the rectangle to crop.
            </param>
            <returns> A cropped version of this object.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.LuminanceSource.RotateSupported">
            <returns> Whether this subclass supports counter-clockwise rotation.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.LuminanceSource.rotateCounterClockwise">
            <summary>
            Returns a new object with rotated image data by 90 degrees counterclockwise.
            Only callable if {@link #isRotateSupported()} is true.
            </summary>
            <returns> A rotated version of this object.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.LuminanceSource.rotateCounterClockwise45">
            <summary>
            Returns a new object with rotated image data by 45 degrees counterclockwise.
            Only callable if {@link #isRotateSupported()} is true.
            </summary>
            <returns>A rotated version of this object.</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Maxicode.Internal.BitMatrixParser">
            <summary>
            <author>mike32767</author>
            <author>Manuel Kasten</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Maxicode.Internal.BitMatrixParser.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            <param name="bitMatrix"><see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />to parse</param>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Maxicode.Internal.DecodedBitStreamParser">
             <summary>
             <p>MaxiCodes can encode text or structured information as bits in one of several modes,
             with multiple character sets in one code. This class decodes the bits back into text.</p>
            
             <author>mike32767</author>
             <author>Manuel Kasten</author>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Maxicode.Internal.Decoder">
             <summary>
             <p>The main class which implements MaxiCode decoding -- as opposed to locating and extracting
             the MaxiCode from an image.</p>
            
             <author>Manuel Kasten</author>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Maxicode.MaxiCodeReader">
            <summary>
            This implementation can detect and decode a MaxiCode in an image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Maxicode.MaxiCodeReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
             <summary>
             Locates and decodes a MaxiCode in an image.
            
             <returns>a String representing the content encoded by the MaxiCode</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if a MaxiCode cannot be decoded</exception>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Maxicode.MaxiCodeReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Locates and decodes a MaxiCode within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a <see cref="T:System.Collections.Generic.IDictionary`2"/> from <see cref="T:VisioForge.Libs.ZXing.DecodeHintType"/>
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Maxicode.MaxiCodeReader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)">
             <summary>
             This method detects a code in a "pure" image -- that is, pure monochrome image
             which contains only an unrotated, unskewed, image of a code, with some white border
             around it. This is a specialized method that works exceptionally fast in this special
             case.
            
             @see com.google.zxing.pdf417.PDF417Reader#extractPureBits(BitMatrix)
             @see com.google.zxing.datamatrix.DataMatrixReader#extractPureBits(BitMatrix)
             @see com.google.zxing.qrcode.QRCodeReader#extractPureBits(BitMatrix)
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.MultiFormatReader">
            <summary>
            MultiFormatReader is a convenience class and the main entry point into the library for most uses.
            By default it attempts to decode all barcode formats that the library supports. Optionally, you
            can provide a hints object to request different behavior, for example only decoding QR codes.
            </summary>
            <author>Sean Owen</author>
            <author>dswitkin@google.com (Daniel Switkin)</author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.MultiFormatReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary> This version of decode honors the intent of Reader.decode(BinaryBitmap) in that it
            passes null as a hint to the decoders. However, that makes it inefficient to call repeatedly.
            Use setHints() followed by decodeWithState() for continuous scan applications.
            
            </summary>
            <param name="image">The pixel data to decode
            </param>
            <returns> The contents of the image
            </returns>
            <throws>  ReaderException Any errors which occurred </throws>
        </member>
        <member name="M:VisioForge.Libs.ZXing.MultiFormatReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary> Decode an image using the hints provided. Does not honor existing state.
            
            </summary>
            <param name="image">The pixel data to decode
            </param>
            <param name="hints">The hints to use, clearing the previous state.
            </param>
            <returns> The contents of the image
            </returns>
            <throws>  ReaderException Any errors which occurred </throws>
        </member>
        <member name="M:VisioForge.Libs.ZXing.MultiFormatReader.decodeWithState(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary> Decode an image using the state set up by calling setHints() previously. Continuous scan
            clients will get a <b>large</b> speed increase by using this instead of decode().
            
            </summary>
            <param name="image">The pixel data to decode
            </param>
            <returns> The contents of the image
            </returns>
            <throws>  ReaderException Any errors which occurred </throws>
        </member>
        <member name="P:VisioForge.Libs.ZXing.MultiFormatReader.Hints">
            <summary> This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls
            to decodeWithState(image) can reuse the same set of readers without reallocating memory. This
            is important for performance in continuous scan clients.
            
            </summary>
            <param name="hints">The set of hints to use for subsequent calls to decode(image)
            </param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Multi.ByQuadrantReader">
            <summary>
            This class attempts to decode a barcode from an image, not by scanning the whole image,
            but by scanning subsets of the image. This is important when there may be multiple barcodes in
            an image, and detecting a barcode may find parts of multiple barcode and fail to decode
            (e.g. QR Codes). Instead this scans the four quadrants of the image -- and also the center
            'quadrant' to cover the case where a barcode is found in the center.
            </summary>
            <seealso cref="T:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader" />
        </member>
        <member name="T:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader">
            <summary>
              <p>Attempts to locate multiple barcodes in an image by repeatedly decoding portion of the image.
            After one barcode is found, the areas left, above, right and below the barcode's
            {@link com.google.zxing.BarcodeResultPoint}s are scanned, recursively.</p>
              <p>A caller may want to also employ {@link ByQuadrantReader} when attempting to find multiple
            2D barcodes, like QR Codes, in an image, where the presence of multiple barcodes might prevent
            detecting any one of them.</p>
              <p>That is, instead of passing a {@link Reader} a caller might pass
              <code>new ByQuadrantReader(reader)</code>.</p>
              <author>Sean Owen</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader.#ctor(VisioForge.Libs.ZXing.Reader)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader"/> class.
            </summary>
            <param name="delegate">The @delegate.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader.decodeMultiple(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Decodes the multiple.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader.decodeMultiple(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Decodes the multiple.
            </summary>
            <param name="image">The image.</param>
            <param name="hints">The hints.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Locates and decodes a barcode in some format within an image.
            </summary>
            <param name="image">image of barcode to decode</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Locates and decodes a barcode in some format within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a <see cref="T:System.Collections.Generic.IDictionary`2"/> from <see cref="T:VisioForge.Libs.ZXing.DecodeHintType"/>
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.GenericMultipleBarcodeReader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Multi.MultipleBarcodeReader">
            <summary>
            Implementation of this interface attempt to read several barcodes from one image.
            <author>Sean Owen</author>
            	<seealso cref="T:VisioForge.Libs.ZXing.Reader"/>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.MultipleBarcodeReader.decodeMultiple(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Decodes the multiple.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.MultipleBarcodeReader.decodeMultiple(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Decodes the multiple.
            </summary>
            <param name="image">The image.</param>
            <param name="hints">The hints.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiDetector">
             <summary>
             <p>Encapsulates logic that can detect one or more QR Codes in an image, even if the QR Code
             is rotated or skewed, or partially obscured.</p>
            
             <author>Sean Owen</author>
             <author>Hannes Erven</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiDetector.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiDetector"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiDetector.detectMulti(System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Detects the multi.
            </summary>
            <param name="hints">The hints.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder" -->
        <member name="F:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.DIFF_MODSIZE_CUTOFF_PERCENT">
            <summary>
            More or less arbitrary cutoff point for determining if two finder patterns might belong
            to the same code if they differ less than DIFF_MODSIZE_CUTOFF_PERCENT percent in their
            estimated modules sizes.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.DIFF_MODSIZE_CUTOFF">
            <summary>
            More or less arbitrary cutoff point for determining if two finder patterns might belong
            to the same code if they differ less than DIFF_MODSIZE_CUTOFF pixels/module in their
            estimated modules sizes.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.ModuleSizeComparator">
            <summary>
            A comparator that orders FinderPatterns by their estimated module size.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
             <summary>
             <p>Creates a finder that will search the image for three finder patterns.</p>
            
             <param name="image">image to search</param>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.selectMutipleBestPatterns">
            <summary>
            </summary>
            <returns>the 3 best <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPattern" />s from our list of candidates. The "best" are
                    those that have been detected at least CENTER_QUORUM times, and whose module
                    size differs from the average among those patterns the least
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Multi.QrCode.QRCodeMultiReader">
            <summary>
            This implementation can detect and decode multiple QR Codes in an image.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.QrCode.QRCodeMultiReader.decodeMultiple(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Decodes the multiple.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Multi.QrCode.QRCodeMultiReader.decodeMultiple(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Decodes the multiple.
            </summary>
            <param name="image">The image.</param>
            <param name="hints">The hints.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.CodaBarReader">
             <summary>
             <p>Decodes CodaBar barcodes.</p>
            
             <author>Bas Vijfwinkel</author>
             </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.CodaBarReader.CHARACTER_ENCODINGS">
            These represent the encodings of characters, as patterns of wide and narrow bars. The 7 least-significant bits of
            each int correspond to the pattern of wide and narrow, with 1s representing "wide" and 0s representing narrow.
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.CodaBarReader.setCounters(VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Records the size of all runs of white and black pixels, starting with white.
            This is just like recordPattern, except it records all the counters, and
            uses our builtin "counters" member for storage.
            </summary>
            <param name="row">row to count from</param>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.Code128Reader">
             <summary>
             <p>Decodes Code 128 barcodes.</p>
            
             <author>Sean Owen</author>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.Code39Reader">
            <summary>
              <p>Decodes Code 39 barcodes. This does not support "Full ASCII Code 39" yet.</p>
            	<author>Sean Owen</author>
            @see Code93Reader
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.Code39Reader.CHARACTER_ENCODINGS">
            <summary>
            These represent the encodings of characters, as patterns of wide and narrow bars.
            The 9 least-significant bits of each int correspond to the pattern of wide and narrow,
            with 1s representing "wide" and 0s representing narrow.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.Code39Reader.#ctor">
            <summary>
            Creates a reader that assumes all encoded data is data, and does not treat the final
            character as a check digit. It will not decoded "extended Code 39" sequences.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.Code39Reader.#ctor(System.Boolean)">
             <summary>
             Creates a reader that can be configured to check the last character as a check digit.
             It will not decoded "extended Code 39" sequences.
            
             <param name="usingCheckDigit">if true, treat the last data character as a check digit, not</param>
             data, and verify that the checksum passes.
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.Code39Reader.#ctor(System.Boolean,System.Boolean)">
             <summary>
             Creates a reader that can be configured to check the last character as a check digit,
             or optionally attempt to decode "extended Code 39" sequences that are used to encode
             the full ASCII character set.
            
             <param name="usingCheckDigit">if true, treat the last data character as a check digit, not</param>
             data, and verify that the checksum passes.
             <param name="extendedMode">if true, will attempt to decode extended Code 39 sequences in the</param>
             text.
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.Code39Reader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns><see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.Code93Reader">
            <summary>
              <p>Decodes Code 93 barcodes.</p>
            	<author>Sean Owen</author>
            <see cref="T:VisioForge.Libs.ZXing.OneD.Code39Reader" />
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.Code93Reader.CHARACTER_ENCODINGS">
            <summary>
            These represent the encodings of characters, as patterns of wide and narrow bars.
            The 9 least-significant bits of each int correspond to the pattern of wide and narrow.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.Code93Reader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.Code93Reader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.Code93Reader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns><see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.EAN13Reader">
             <summary>
             <p>Implements decoding of the EAN-13 format.</p>
            
             <author>dswitkin@google.com (Daniel Switkin)</author>
             <author>Sean Owen</author>
             <author>alasdair@google.com (Alasdair Mackintosh)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.EAN13Reader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.EAN13Reader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.EAN13Reader.decodeMiddle(VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Text.StringBuilder)">
            <summary>
            Subclasses override this to decode the portion of a barcode between the start
            and end guard patterns.
            </summary>
            <param name="row">row of black/white values to search</param>
            <param name="startRange">start/end offset of start guard pattern</param>
            <param name="resultString"><see cref="T:System.Text.StringBuilder"/>to append decoded chars to</param>
            <returns>
            horizontal offset of first pixel after the "middle" that was decoded or -1 if decoding could not complete successfully
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.EAN13Reader.BarcodeFormat">
            <summary>
            Get the format of this decoder.
            <returns>The 1D format.</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.EAN13Reader.determineFirstDigit(System.Text.StringBuilder,System.Int32)">
            <summary>
            Based on pattern of odd-even ('L' and 'G') patterns used to encoded the explicitly-encoded
            digits in a barcode, determines the implicitly encoded first digit and adds it to the
            result string.
            </summary>
            <param name="resultString">string to insert decoded first digit into</param>
            <param name="lgPatternFound">int whose bits indicates the pattern of odd/even L/G patterns used to</param>
             encode digits
            <return>-1 if first digit cannot be determined</return>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.EAN8Reader">
            <summary>
              <p>Implements decoding of the EAN-8 format.</p>
              <author>Sean Owen</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.EAN8Reader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.EAN8Reader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.EAN8Reader.decodeMiddle(VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Text.StringBuilder)">
            <summary>
            Decodes the middle.
            </summary>
            <param name="row">The row.</param>
            <param name="startRange">The start range.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.EAN8Reader.BarcodeFormat">
            <summary>
            Get the format of this decoder.
            <returns>The 1D format.</returns>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.EANManufacturerOrgSupport">
             <summary>
             Records EAN prefix to GS1 Member Organization, where the member organization
             correlates strongly with a country. This is an imperfect means of identifying
             a country of origin by EAN-13 barcode value. See
             <a href="http://en.wikipedia.org/wiki/List_of_GS1_country_codes">
             http://en.wikipedia.org/wiki/List_of_GS1_country_codes</a>.
            
             <author>Sean Owen</author>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.ITFReader">
             <summary>
             <p>Implements decoding of the ITF format, or Interleaved Two of Five.</p>
            
             <p>This Reader will scan ITF barcodes of certain lengths only.
             At the moment it reads length 6, 10, 12, 14, 16, 24, and 44 as these have appeared "in the wild". Not all
             lengths are scanned, especially shorter ones, to avoid false positives. This in turn is due to a lack of
             required checksum function.</p>
            
             <p>The checksum is optional and is not applied by this Reader. The consumer of the decoded
             value will have to apply a checksum if required.</p>
            
             <p><a href="http://en.wikipedia.org/wiki/Interleaved_2_of_5">http://en.wikipedia.org/wiki/Interleaved_2_of_5</a>
             is a great reference for Interleaved 2 of 5 information.</p>
            
             <author>kevin.osullivan@sita.aero, SITA Lab.</author>
             </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.ITFReader.START_PATTERN">
             <summary>
             Start/end guard pattern.
            
             Note: The end pattern is reversed because the row is reversed before
             searching for the END_PATTERN
             </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.ITFReader.PATTERNS">
            <summary>
            Patterns of Wide / Narrow lines to indicate each digit
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Attempts to decode a one-dimensional barcode format given a single row of
            an image.
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.decodeMiddle(VisioForge.Libs.ZXing.Common.BitArray,System.Int32,System.Int32,System.Text.StringBuilder)">
            <summary>
            </summary>
            <param name="row">row of black/white values to search</param>
            <param name="payloadStart">offset of start pattern</param>
            <param name="payloadEnd">The payload end.</param>
            <param name="resultString"><see cref="T:System.Text.StringBuilder"/>to append decoded chars to</param>
            <returns>
            false, if decoding could not complete successfully
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.decodeStart(VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Identify where the start of the middle / payload section starts.
            </summary>
            <param name="row">row of black/white values to search</param>
            <returns>Array, containing index of start of 'start block' and end of 'start block'</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.validateQuietZone(VisioForge.Libs.ZXing.Common.BitArray,System.Int32)">
             <summary>
             The start &amp; end patterns must be pre/post fixed by a quiet zone. This
             zone must be at least 10 times the width of a narrow line.  Scan back until
             we either get to the start of the barcode or match the necessary number of
             quiet zone pixels.
            
             Note: Its assumed the row is reversed when using this method to find
             quiet zone after the end pattern.
            
             ref: http://www.barcode-1.net/i25code.html
             </summary>
             <param name="row">bit array representing the scanned barcode.</param>
             <param name="startPattern">index into row of the start or end pattern.</param>
             <returns>false, if the quiet zone cannot be found</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.skipWhiteSpace(VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Skip all whitespace until we get to the first black line.
            </summary>
            <param name="row">row of black/white values to search</param>
            <returns>index of the first black line or -1 if no black lines are found in the row.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.decodeEnd(VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Identify where the end of the middle / payload section ends.
            </summary>
            <param name="row">row of black/white values to search</param>
            <returns>Array, containing index of start of 'end block' and end of 'end
            block' or null, if nothing found</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.findGuardPattern(VisioForge.Libs.ZXing.Common.BitArray,System.Int32,System.Int32[])">
            <summary>
            </summary>
            <param name="row">row of black/white values to search</param>
            <param name="rowOffset">position to start search</param>
            <param name="pattern">pattern of counts of number of black and white pixels that are being searched for as a pattern</param>
            <returns>start/end horizontal offset of guard pattern, as an array of two ints</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.ITFReader.decodeDigit(System.Int32[],System.Int32@)">
            <summary>
            Attempts to decode a sequence of ITF black/white lines into single
            digit.
            </summary>
            <param name="counters">the counts of runs of observed black/white/black/... values</param>
            <param name="bestMatch">The decoded digit</param>
            <returns>
            false, if digit cannot be decoded
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.MultiFormatOneDReader">
            <summary>
            <author>dswitkin@google.com (Daniel Switkin)</author>
            <author>Sean Owen</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.MultiFormatOneDReader.#ctor(System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.MultiFormatOneDReader"/> class.
            </summary>
            <param name="hints">The hints.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.MultiFormatOneDReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.MultiFormatOneDReader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.MultiFormatUPCEANReader">
            <summary>
              <p>A reader that can read all available UPC/EAN formats. If a caller wants to try to
            read all such formats, it is most efficient to use this implementation rather than invoke
            individual readers.</p>
              <author>Sean Owen</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.MultiFormatUPCEANReader.#ctor(System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.MultiFormatUPCEANReader"/> class.
            </summary>
            <param name="hints">The hints.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.MultiFormatUPCEANReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode or null if an error occurs or barcode cannot be found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.MultiFormatUPCEANReader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.OneDReader">
            <summary>
            Encapsulates functionality and implementation that is common to all families
            of one-dimensional barcodes.
            <author>dswitkin@google.com (Daniel Switkin)</author>
            <author>Sean Owen</author>
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.OneDReader.INTEGER_MATH_SHIFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Locates and decodes a barcode in some format within an image.
            </summary>
            <param name="image">image of barcode to decode</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Locates and decodes a barcode in some format within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            Note that we don't try rotation without the try harder flag, even if rotation was supported.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a <see cref="T:System.Collections.Generic.IDictionary`2"/> from <see cref="T:VisioForge.Libs.ZXing.DecodeHintType"/>
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.doDecode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            We're going to examine rows from the middle outward, searching alternately above and below the
            middle, and farther out each time. rowStep is the number of rows between each successive
            attempt above and below the middle. So we'd scan row middle, then middle - rowStep, then
            middle + rowStep, then middle - (2 * rowStep), etc.
            rowStep is bigger as the image is taller, but is always at least 1. We've somewhat arbitrarily
            decided that moving up and down by about 1/16 of the image is pretty good; we try more of the
            image if "trying harder".
            </summary>
            <param name="image">The image to decode</param>
            <param name="hints">Any hints that were requested</param>
            <returns>The contents of the decoded barcode</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.recordPattern(VisioForge.Libs.ZXing.Common.BitArray,System.Int32,System.Int32[])">
            <summary>
            Records the size of successive runs of white and black pixels in a row, starting at a given point.
            The values are recorded in the given array, and the number of runs recorded is equal to the size
            of the array. If the row starts on a white pixel at the given start point, then the first count
            recorded is the run of white pixels starting from that point; likewise it is the count of a run
            of black pixels if the row begin on a black pixels at that point.
            </summary>
            <param name="row">row to count from</param>
            <param name="start">offset into row to start at</param>
            <param name="counters">array into which to record counts</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.recordPatternInReverse(VisioForge.Libs.ZXing.Common.BitArray,System.Int32,System.Int32[])">
            <summary>
            Records the pattern in reverse.
            </summary>
            <param name="row">The row.</param>
            <param name="start">The start.</param>
            <param name="counters">The counters.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.patternMatchVariance(System.Int32[],System.Int32[],System.Int32)">
            <summary>
            Determines how closely a set of observed counts of runs of black/white values matches a given
            target pattern. This is reported as the ratio of the total variance from the expected pattern
            proportions across all pattern elements, to the length of the pattern.
            </summary>
            <param name="counters">observed counters</param>
            <param name="pattern">expected pattern</param>
            <param name="maxIndividualVariance">The most any counter can differ before we give up</param>
            <returns>ratio of total variance between counters and pattern compared to total pattern size,
             where the ratio has been multiplied by 256. So, 0 means no variance (perfect match); 256 means
             the total variance between counters and patterns equals the pattern length, higher values mean
             even more variance</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.OneDReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Attempts to decode a one-dimensional barcode format given a single row of
            an image.
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.getDecodeFinderCounters">
            <summary>
            Gets the decode finder counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.getDataCharacterCounters">
            <summary>
            Gets the data character counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.getOddRoundingErrors">
            <summary>
            Gets the odd rounding errors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.getEvenRoundingErrors">
            <summary>
            Gets the even rounding errors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.getOddCounts">
            <summary>
            Gets the odd counts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.getEvenCounts">
            <summary>
            Gets the even counts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.parseFinderValue(System.Int32[],System.Int32[][],System.Int32@)">
            <summary>
            Parses the finder value.
            </summary>
            <param name="counters">The counters.</param>
            <param name="finderPatterns">The finder patterns.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.count(System.Int32[])">
            <summary>
            Counts the specified array.
            </summary>
            <param name="array">The array.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.increment(System.Int32[],System.Single[])">
            <summary>
            Increments the specified array.
            </summary>
            <param name="array">The array.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.decrement(System.Int32[],System.Single[])">
            <summary>
            Decrements the specified array.
            </summary>
            <param name="array">The array.</param>
            <param name="errors">The errors.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.AbstractRSSReader.isFinderPattern(System.Int32[])">
            <summary>
            Determines whether [is finder pattern] [the specified counters].
            </summary>
            <param name="counters">The counters.</param>
            <returns>
              <c>true</c> if [is finder pattern] [the specified counters]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter.ChecksumPortion">
            <summary>
            Gets the checksum portion.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="checksumPortion">The checksum portion.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="o">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.DataCharacter.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.BitArrayBuilder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AbstractExpandedDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AbstractExpandedDecoder.getInformation">
            <summary>
            Gets the information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AbstractExpandedDecoder.parseInformation">
            <summary>
            Parses the information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AbstractExpandedDecoder.createDecoder(VisioForge.Libs.ZXing.Common.BitArray)">
            <summary>
            Creates the decoder.
            </summary>
            <param name="information">The information.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI013103decoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI01320xDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI01392xDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI01393xDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI013x0x1xDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI013x0xDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI01AndOtherAIs">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI01decoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AI01weightDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.AnyAIDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.BlockParsedResult">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.CurrentParsingState">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.DecodedChar">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.DecodedInformation">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.DecodedNumeric">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.DecodedObject">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.FieldParser">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.Decoders.GeneralAppIdDecoder">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.ExpandedPair">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.ExpandedRow">
            <summary>
            One row of an RSS Expanded Stacked symbol, consisting of 1+ expanded pairs.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.RSS.Expanded.ExpandedRow.IsReversed">
            <summary>
            Did this row of the image have to be reversed (mirrored) to recognize the pairs?
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.Expanded.ExpandedRow.Equals(System.Object)">
            <summary>
            Two rows are equal if they contain the same pairs in the same order.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.Expanded.RSSExpandedReader">
            <summary>
            <author>Pablo Orduña, University of Deusto (pablo.orduna@deusto.es)</author>
            <author>Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.Expanded.RSSExpandedReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.Expanded.RSSExpandedReader.reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern.StartEnd">
            <summary>
            Gets the start end.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern.ResultPoints">
            <summary>
            Gets the result points.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern.#ctor(System.Int32,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="startEnd">The start end.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="rowNumber">The row number.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="o">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.FinderPattern.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.RSS14Reader">
            <summary>
            Decodes RSS-14, including truncated and stacked variants. See ISO/IEC 24724:2006.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.RSS14Reader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.RSS.RSS14Reader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.RSS14Reader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.RSS14Reader.reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.RSS.RSSUtils">
            <summary>
            Adapted from listings in ISO/IEC 24724 Appendix B and Appendix G.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.RSSUtils.getRSSwidths(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the RS swidths.
            </summary>
            <param name="val">The val.</param>
            <param name="n">The n.</param>
            <param name="elements">The elements.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="noNarrow">if set to <c>true</c> [no narrow].</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.RSS.RSSUtils.getRSSvalue(System.Int32[],System.Int32,System.Boolean)">
            <summary>
            Gets the RS svalue.
            </summary>
            <param name="widths">The widths.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="noNarrow">if set to <c>true</c> [no narrow].</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.UPCAReader">
            <summary>
              <p>Implements decoding of the UPC-A format.</p>
              <author>dswitkin@google.com (Daniel Switkin)</author>
              <author>Sean Owen</author>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCAReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Like decodeRow(int, BitArray, java.util.Map), but
            allows caller to inform method about where the UPC/EAN start pattern is
            found. This allows this to be computed once and reused across many implementations.</p>
            </summary>
            <param name="rowNumber"></param>
            <param name="row"></param>
            <param name="startGuardRange"></param>
            <param name="hints"></param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCAReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCAReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Decodes the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="hints">The hints.</param>
            <returns></returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.UPCAReader.BarcodeFormat">
            <summary>
            Get the format of this decoder.
            <returns>The 1D format.</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCAReader.decodeMiddle(VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Text.StringBuilder)">
            <summary>
            Subclasses override this to decode the portion of a barcode between the start
            and end guard patterns.
            </summary>
            <param name="row">row of black/white values to search</param>
            <param name="startRange">start/end offset of start guard pattern</param>
            <param name="resultString"><see cref="T:System.Text.StringBuilder"/>to append decoded chars to</param>
            <returns>
            horizontal offset of first pixel after the "middle" that was decoded or -1 if decoding could not complete successfully
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.UPCEANExtension2Support">
            <summary>
            @see UPCEANExtension5Support
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VisioForge.Libs.ZXing.OneD.UPCEANExtension2Support.parseExtensionString(System.String)" -->
        <member name="T:VisioForge.Libs.ZXing.OneD.UPCEANExtension5Support">
            @see UPCEANExtension2Support
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANExtension5Support.parseExtensionString(System.String)">
            <summary>
            Parses the extension string.
            </summary>
            <param name="raw">raw content of extension</param>
            <returns>formatted interpretation of raw content as a {@link Map} mapping
            one {@link BarcodeResultMetadataType} to appropriate value, or {@code null} if not known</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.UPCEANReader">
            <summary>
              <p>Encapsulates functionality and implementation that is common to UPC and EAN families
            of one-dimensional barcodes.</p>
              <author>dswitkin@google.com (Daniel Switkin)</author>
              <author>Sean Owen</author>
              <author>alasdair@google.com (Alasdair Mackintosh)</author>
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.UPCEANReader.START_END_PATTERN">
            <summary>
            Start/end guard pattern.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.UPCEANReader.MIDDLE_PATTERN">
            <summary>
            Pattern marking the middle of a UPC/EAN pattern, separating the two halves.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.UPCEANReader.L_PATTERNS">
            <summary>
            "Odd", or "L" patterns used to encode UPC/EAN digits.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.UPCEANReader.L_AND_G_PATTERNS">
            <summary>
            As above but also including the "even", or "G" patterns used to encode UPC/EAN digits.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.UPCEANReader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Attempts to decode a one-dimensional barcode format given a single row of
            an image.</p>
            </summary>
            <param name="rowNumber">row number from top of the row</param>
            <param name="row">the black/white pixel data of the row</param>
            <param name="hints">decode hints</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Result"/>containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.decodeRow(System.Int32,VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            <p>Like decodeRow(int, BitArray, java.util.Map), but
            allows caller to inform method about where the UPC/EAN start pattern is
            found. This allows this to be computed once and reused across many implementations.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.checkChecksum(System.String)">
            <summary>
            <returns>see checkStandardUPCEANChecksum(String)</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.checkStandardUPCEANChecksum(System.String)">
            <summary>
            Computes the UPC/EAN checksum on a string of digits, and reports
            whether the checksum is correct or not.
            </summary>
            <param name="s">string of digits to check</param>
            <returns>true iff string of digits passes the UPC/EAN checksum algorithm</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.decodeEnd(VisioForge.Libs.ZXing.Common.BitArray,System.Int32)">
            <summary>
            Decodes the end.
            </summary>
            <param name="row">The row.</param>
            <param name="endStart">The end start.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.findGuardPattern(VisioForge.Libs.ZXing.Common.BitArray,System.Int32,System.Boolean,System.Int32[],System.Int32[])">
            <summary>
            </summary>
            <param name="row">row of black/white values to search</param>
            <param name="rowOffset">position to start search</param>
            <param name="whiteFirst">if true, indicates that the pattern specifies white/black/white/...</param>
            pixel counts, otherwise, it is interpreted as black/white/black/...
            <param name="pattern">pattern of counts of number of black and white pixels that are being</param>
            searched for as a pattern
            <param name="counters">array of counters, as long as pattern, to re-use</param>
            <returns>start/end horizontal offset of guard pattern, as an array of two ints</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.decodeDigit(VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Int32,System.Int32[][],System.Int32@)">
            <summary>
            Attempts to decode a single UPC/EAN-encoded digit.
            </summary>
            <param name="row">row of black/white values to decode</param>
            <param name="counters">the counts of runs of observed black/white/black/... values</param>
            <param name="rowOffset">horizontal offset to start decoding from</param>
            <param name="patterns">the set of patterns to use to decode -- sometimes different encodings</param>
            for the digits 0-9 are used, and this indicates the encodings for 0 to 9 that should
            be used
            <returns>horizontal offset of first pixel beyond the decoded digit</returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.UPCEANReader.BarcodeFormat">
            <summary>
            Get the format of this decoder.
            <returns>The 1D format.</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEANReader.decodeMiddle(VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Text.StringBuilder)">
            <summary>
            Subclasses override this to decode the portion of a barcode between the start
            and end guard patterns.
            </summary>
            <param name="row">row of black/white values to search</param>
            <param name="startRange">start/end offset of start guard pattern</param>
            <param name="resultString"><see cref="T:System.Text.StringBuilder" />to append decoded chars to</param>
            <returns>horizontal offset of first pixel after the "middle" that was decoded or -1 if decoding could not complete successfully</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.OneD.UPCEReader">
            <summary>
              <p>Implements decoding of the UPC-E format.</p>
              <p/>
              <p><a href="http://www.barcodeisland.com/upce.phtml">This</a>is a great reference for
            UPC-E information.</p>
              <author>Sean Owen</author>
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.UPCEReader.MIDDLE_END_PATTERN">
            <summary>
            The pattern that marks the middle, and end, of a UPC-E pattern.
            There is no "second half" to a UPC-E barcode.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.OneD.UPCEReader.NUMSYS_AND_CHECK_DIGIT_PATTERNS">
            <summary>
            See L_AND_G_PATTERNS these values similarly represent patterns of
            even-odd parity encodings of digits that imply both the number system (0 or 1)
            used, and the check digit.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.OneD.UPCEReader"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEReader.decodeMiddle(VisioForge.Libs.ZXing.Common.BitArray,System.Int32[],System.Text.StringBuilder)">
            <summary>
            Decodes the middle.
            </summary>
            <param name="row">The row.</param>
            <param name="startRange">The start range.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEReader.decodeEnd(VisioForge.Libs.ZXing.Common.BitArray,System.Int32)">
            <summary>
            Decodes the end.
            </summary>
            <param name="row">The row.</param>
            <param name="endStart">The end start.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEReader.checkChecksum(System.String)">
            <summary>
              <returns>see checkStandardUPCEANChecksum(String)</returns>
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEReader.determineNumSysAndCheckDigit(System.Text.StringBuilder,System.Int32)">
            <summary>
            Determines the num sys and check digit.
            </summary>
            <param name="resultString">The result string.</param>
            <param name="lgPatternFound">The lg pattern found.</param>
            <returns></returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.OneD.UPCEReader.BarcodeFormat">
            <summary>
            Get the format of this decoder.
            <returns>The 1D format.</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.OneD.UPCEReader.convertUPCEtoUPCA(System.String)">
             <summary>
             Expands a UPC-E value back into its full, equivalent UPC-A code value.
            
             <param name="upce">UPC-E code as string of digits</param>
             <returns>equivalent UPC-A code as string of digits</returns>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser">
             <summary>
             <p>
             This class parses the BitMatrix image into codewords.
             </p>
            
             <author>SITA Lab (kevin.osullivan@sita.aero)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.readCodewords">
            <summary>
            To ensure separability of rows, codewords of consecutive rows belong to
            different subsets of all possible codewords. This routine scans the
            symbols in the barcode. When it finds a number of consecutive rows which
            are the same, it assumes that this is a row of codewords and processes
            them into a codeword array.
            </summary>
            <returns>an array of codewords.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.trimArray(System.Int32[],System.Int32)">
            <summary>
            Trim the array to the required size.
            </summary>
            <param name="array">the array</param>
            <param name="size">the size to trim it to</param>
            <returns>the new trimmed array</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.processRow(System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32)">
            <summary>
            Convert the symbols in the row to codewords.
            Each PDF417 symbol character consists of four bar elements and four space
            elements, each of which can be one to six modules wide. The four bar and
            four space elements shall measure 17 modules in total.
            </summary>
            <param name="rowCounters">an array containing the counts of black pixels for each column in the row.</param>
            <param name="rowNumber">the current row number of codewords.</param>
            <param name="rowHeight">the height of this row in pixels.</param>
            <param name="codewords">the codeword array to save codewords into.</param>
            <param name="next">the next available index into the codewords array.</param>
            <returns>the next available index into the codeword array after processing this row.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.getCodeword(System.Int64)">
            <summary>
            Translate the symbol into a codeword.
            </summary>
            <returns>the codeword corresponding to the symbol.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.findCodewordIndex(System.Int64)">
            <summary>
            Use a binary search to find the index of the codeword corresponding to
            this symbol.
            </summary>
            <param name="symbol">the symbol from the barcode.</param>
            <returns>the index into the codeword table.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.getErasures">
            <summary>
            Returns an array of locations representing the erasures.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.SYMBOL_TABLE">
            <summary>
            The sorted table of all possible symbols. Extracted from the PDF417
            specification. The index of a symbol in this table corresponds to the
            index into the codeword table.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.PDF417.Internal.BitMatrixParser.CODEWORD_TABLE">
            <summary>
            This table contains to codewords for all symbols.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser">
             <summary>
             <p>This class contains the methods for decoding the PDF417 codewords.</p>
            
             <author>SITA Lab (kevin.osullivan@sita.aero)</author>
             </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser.EXP900">
            <summary>
            Table containing values for the exponent of 900.
            This is used in the numeric compaction decode algorithm.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser.textCompaction(System.Int32[],System.Int32,System.Text.StringBuilder)">
             <summary>
             Text Compaction mode (see 5.4.1.5) permits all printable ASCII characters to be
             encoded, i.e. values 32 - 126 inclusive in accordance with ISO/IEC 646 (IRV), as
             well as selected control characters.
            
             <param name="codewords">The array of codewords (data + error)</param>
             <param name="codeIndex">The current index into the codeword array.</param>
             <param name="result">The decoded data is appended to the result.</param>
             <returns>The next index into the codeword array.</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser.decodeTextCompaction(System.Int32[],System.Int32[],System.Int32,System.Text.StringBuilder)">
             <summary>
             The Text Compaction mode includes all the printable ASCII characters
             (i.e. values from 32 to 126) and three ASCII control characters: HT or tab
             (ASCII value 9), LF or line feed (ASCII value 10), and CR or carriage
             return (ASCII value 13). The Text Compaction mode also includes various latch
             and shift characters which are used exclusively within the mode. The Text
             Compaction mode encodes up to 2 characters per codeword. The compaction rules
             for converting data into PDF417 codewords are defined in 5.4.2.2. The sub-mode
             switches are defined in 5.4.2.3.
            
             <param name="textCompactionData">The text compaction data.</param>
             <param name="byteCompactionData">The byte compaction data if there</param>
                                       was a mode shift.
             <param name="length">The size of the text compaction and byte compaction data.</param>
             <param name="result">The decoded data is appended to the result.</param>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser.byteCompaction(System.Int32,System.Int32[],System.Int32,System.Text.StringBuilder)">
             <summary>
             Byte Compaction mode (see 5.4.3) permits all 256 possible 8-bit byte values to be encoded.
             This includes all ASCII characters value 0 to 127 inclusive and provides for international
             character set support.
            
             <param name="mode">The byte compaction mode i.e. 901 or 924</param>
             <param name="codewords">The array of codewords (data + error)</param>
             <param name="codeIndex">The current index into the codeword array.</param>
             <param name="result">The decoded data is appended to the result.</param>
             <returns>The next index into the codeword array.</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser.numericCompaction(System.Int32[],System.Int32,System.Text.StringBuilder)">
             <summary>
             Numeric Compaction mode (see 5.4.4) permits efficient encoding of numeric data strings.
            
             <param name="codewords">The array of codewords (data + error)</param>
             <param name="codeIndex">The current index into the codeword array.</param>
             <param name="result">The decoded data is appended to the result.</param>
             <returns>The next index into the codeword array.</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.DecodedBitStreamParser.decodeBase900toBase10(System.Int32[],System.Int32)">
            <summary>
            Convert a list of Numeric Compacted codewords from Base 900 to Base 10.
            EXAMPLE
            Encode the fifteen digit numeric string 000213298174000
            Prefix the numeric string with a 1 and set the initial value of
            t = 1 000 213 298 174 000
            Calculate codeword 0
            d0 = 1 000 213 298 174 000 mod 900 = 200
            
            t = 1 000 213 298 174 000 div 900 = 1 111 348 109 082
            Calculate codeword 1
            d1 = 1 111 348 109 082 mod 900 = 282
            
            t = 1 111 348 109 082 div 900 = 1 234 831 232
            Calculate codeword 2
            d2 = 1 234 831 232 mod 900 = 632
            
            t = 1 234 831 232 div 900 = 1 372 034
            Calculate codeword 3
            d3 = 1 372 034 mod 900 = 434
            
            t = 1 372 034 div 900 = 1 524
            Calculate codeword 4
            d4 = 1 524 mod 900 = 624
            
            t = 1 524 div 900 = 1
            Calculate codeword 5
            d5 = 1 mod 900 = 1
            t = 1 div 900 = 0
            Codeword sequence is: 1, 624, 434, 632, 282, 200
            
            Decode the above codewords involves
              1 x 900 power of 5 + 624 x 900 power of 4 + 434 x 900 power of 3 +
            632 x 900 power of 2 + 282 x 900 power of 1 + 200 x 900 power of 0 = 1000213298174000
            
            Remove leading 1 =>  Result is 000213298174000
            <param name="codewords">The array of codewords</param>
            <param name="count">The number of codewords</param>
            <returns>The decoded string representing the Numeric data.</returns>
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.Decoder">
             <summary>
             <p>The main class which implements PDF417 Code decoding -- as
             opposed to locating and extracting the PDF417 Code from an image.</p>
            
             <author>SITA Lab (kevin.osullivan@sita.aero)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Decoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.PDF417.Internal.Decoder"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Decoder.decode(System.Boolean[][])">
             <summary>
             <p>Convenience method that can decode a PDF417 Code represented as a 2D array of booleans.
             "true" is taken to mean a black module.</p>
            
             <param name="image">booleans representing white/black PDF417 modules</param>
             <returns>text and bytes encoded within the PDF417 Code</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Decoder.decode(VisioForge.Libs.ZXing.Common.BitMatrix)">
             <summary>
             <p>Decodes a PDF417 Code represented as a <see cref="T:VisioForge.Libs.ZXing.Common.BitMatrix" />.
             A 1 or "true" is taken to mean a black module.</p>
            
             <param name="bits">booleans representing white/black PDF417 Code modules</param>
             <returns>text and bytes encoded within the PDF417 Code</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if the PDF417 Code cannot be decoded</exception>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Decoder.verifyCodewordCount(System.Int32[],System.Int32)">
             <summary>
             Verify that all is OK with the codeword array.
            
             @param codewords
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Decoder.correctErrors(System.Int32[],System.Int32[],System.Int32)">
             <summary>
             <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to
             correct the errors in-place.</p>
            
             <param name="codewords">data and error correction codewords</param>
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.EC.ErrorCorrection">
            <summary>
            <p>PDF417 error correction implementation.</p>
            <p>This <a href="http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction#Example">example</a>
            is quite useful in understanding the algorithm.</p>
            <author>Sean Owen</author>
            <see cref="T:VisioForge.Libs.ZXing.Common.ReedSolomon.ReedSolomonDecoder" />
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.EC.ErrorCorrection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.PDF417.Internal.EC.ErrorCorrection"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.EC.ErrorCorrection.decode(System.Int32[],System.Int32,System.Int32[])">
            <summary>
            Decodes the specified received.
            </summary>
            <param name="received">The received.</param>
            <param name="numECCodewords">The num EC codewords.</param>
            <param name="erasures">The erasures.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.EC.ModulusGF">
            <summary>
            <p>A field based on powers of a generator integer, modulo some modulus.</p>
            @see com.google.zxing.common.reedsolomon.GenericGF
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.EC.ModulusPoly">
            <summary>
            @see com.google.zxing.common.reedsolomon.GenericGFPoly
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.PDF417.Internal.EC.ModulusPoly.Degree">
            <summary>
            degree of this polynomial
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.PDF417.Internal.EC.ModulusPoly.isZero">
            <summary>
            Gets a value indicating whether this instance is zero.
            </summary>
            <value>true if this polynomial is the monomial "0"
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.EC.ModulusPoly.getCoefficient(System.Int32)">
            <summary>
            coefficient of x^degree term in this polynomial
            </summary>
            <param name="degree">The degree.</param>
            <returns>coefficient of x^degree term in this polynomial</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.EC.ModulusPoly.evaluateAt(System.Int32)">
            <summary>
            evaluation of this polynomial at a given point
            </summary>
            <param name="a">A.</param>
            <returns>evaluation of this polynomial at a given point</returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.Internal.Detector">
             <summary>
             <p>Encapsulates logic that can detect a PDF417 Code in an image, even if the
             PDF417 Code is rotated or skewed, or partially obscured.</p>
            
             <author>SITA Lab (kevin.osullivan@sita.aero)</author>
             <author>dswitkin@google.com (Daniel Switkin)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.#ctor(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.PDF417.Internal.Detector"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.detect">
             <summary>
             <p>Detects a PDF417 Code in an image, simply.</p>
            
             <returns><see cref="T:VisioForge.Libs.ZXing.Common.DetectorResult" />encapsulating results of detecting a PDF417 Code</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.detect(System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
             <summary>
             <p>Detects a PDF417 Code in an image. Only checks 0 and 180 degree rotations.</p>
            
             <param name="hints">optional hints to detector</param>
             <returns><see cref="T:VisioForge.Libs.ZXing.Common.DetectorResult" />encapsulating results of detecting a PDF417 Code</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.findVertices(VisioForge.Libs.ZXing.Common.BitMatrix,System.Boolean)">
            <summary>
            Locate the vertices and the codewords area of a black blob using the Start
            and Stop patterns as locators.
            <param name="matrix">the scanned barcode image.</param>
            <returns>an array containing the vertices:</returns>
                      vertices[0] x, y top left barcode
                      vertices[1] x, y bottom left barcode
                      vertices[2] x, y top right barcode
                      vertices[3] x, y bottom right barcode
                      vertices[4] x, y top left codeword area
                      vertices[5] x, y bottom left codeword area
                      vertices[6] x, y top right codeword area
                      vertices[7] x, y bottom right codeword area
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.findVertices180(VisioForge.Libs.ZXing.Common.BitMatrix,System.Boolean)">
            <summary>
            Locate the vertices and the codewords area of a black blob using the Start
            and Stop patterns as locators. This assumes that the image is rotated 180
            degrees and if it locates the start and stop patterns at it will re-map
            the vertices for a 0 degree rotation.
            TODO: Change assumption about barcode location.
            <param name="matrix">the scanned barcode image.</param>
            <returns>an array containing the vertices:</returns>
                      vertices[0] x, y top left barcode
                      vertices[1] x, y bottom left barcode
                      vertices[2] x, y top right barcode
                      vertices[3] x, y bottom right barcode
                      vertices[4] x, y top left codeword area
                      vertices[5] x, y bottom left codeword area
                      vertices[6] x, y top right codeword area
                      vertices[7] x, y bottom right codeword area
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.correctCodeWordVertices(VisioForge.Libs.Types.BarcodeResultPoint[],System.Boolean)">
             <summary>
             Because we scan horizontally to detect the start and stop patterns, the vertical component of
             the codeword coordinates will be slightly wrong if there is any skew or rotation in the image.
             This method moves those points back onto the edges of the theoretically perfect bounding
             quadrilateral if needed.
            
             <param name="vertices">The eight vertices located by findVertices().</param>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.computeModuleWidth(VisioForge.Libs.Types.BarcodeResultPoint[])">
             <summary>
             <p>Estimates module size (pixels in a module) based on the Start and End
             finder patterns.</p>
            
             <param name="vertices">an array of vertices:</param>
                       vertices[0] x, y top left barcode
                       vertices[1] x, y bottom left barcode
                       vertices[2] x, y top right barcode
                       vertices[3] x, y bottom right barcode
                       vertices[4] x, y top left codeword area
                       vertices[5] x, y bottom left codeword area
                       vertices[6] x, y top right codeword area
                       vertices[7] x, y bottom right codeword area
             <returns>the module size.</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.computeDimension(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,System.Single)">
             <summary>
             Computes the dimension (number of modules in a row) of the PDF417 Code
             based on vertices of the codeword area and estimated module size.
            
             <param name="topLeft">of codeword area</param>
             <param name="topRight">of codeword area</param>
             <param name="bottomLeft">of codeword area</param>
             <param name="bottomRight">of codeword are</param>
             <param name="moduleWidth">estimated module size</param>
             <returns>the number of modules in a row.</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.computeYDimension(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,System.Single)">
            <summary>
            Computes the y dimension (number of modules in a column) of the PDF417 Code
            based on vertices of the codeword area and estimated module size.
            </summary>
            <param name="topLeft">of codeword area</param>
            <param name="topRight">of codeword area</param>
            <param name="bottomLeft">of codeword area</param>
            <param name="bottomRight">of codeword are</param>
            <param name="moduleWidth">estimated module size</param>
            <returns>the number of modules in a row.</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.findGuardPattern(VisioForge.Libs.ZXing.Common.BitMatrix,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32[],System.Int32[])">
            <summary>
            <param name="matrix">row of black/white values to search</param>
            <param name="column">x position to start search</param>
            <param name="row">y position to start search</param>
            <param name="width">the number of pixels to search on this row</param>
            <param name="pattern">pattern of counts of number of black and white pixels that are</param>
                            being searched for as a pattern
            <param name="counters">array of counters, as long as pattern, to re-use </param>
            <returns>start/end horizontal offset of guard pattern, as an array of two ints.</returns>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.Internal.Detector.patternMatchVariance(System.Int32[],System.Int32[],System.Int32)">
             <summary>
             Determines how closely a set of observed counts of runs of black/white
             values matches a given target pattern. This is reported as the ratio of
             the total variance from the expected pattern proportions across all
             pattern elements, to the length of the pattern.
            
             <param name="counters">observed counters</param>
             <param name="pattern">expected pattern</param>
             <param name="maxIndividualVariance">The most any counter can differ before we give up</param>
             <returns>ratio of total variance between counters and pattern compared to</returns>
                     total pattern size, where the ratio has been multiplied by 256.
                     So, 0 means no variance (perfect match); 256 means the total
                     variance between counters and patterns equals the pattern length,
                     higher values mean even more variance
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.PDF417.PDF417Reader">
             <summary>
             This implementation can detect and decode PDF417 codes in an image.
            
             <author>SITA Lab (kevin.osullivan@sita.aero)</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.PDF417Reader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
             <summary>
             Locates and decodes a PDF417 code in an image.
            
             <returns>a String representing the content encoded by the PDF417 code</returns>
             <exception cref="T:VisioForge.Libs.ZXing.FormatException">if a PDF417 cannot be decoded</exception>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.PDF417Reader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Locates and decodes a barcode in some format within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a <see cref="T:System.Collections.Generic.IDictionary`2"/> from <see cref="T:VisioForge.Libs.ZXing.DecodeHintType"/>
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.PDF417Reader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.PDF417.PDF417Reader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)">
             <summary>
             This method detects a code in a "pure" image -- that is, pure monochrome image
             which contains only an unrotated, unskewed, image of a code, with some white border
             around it. This is a specialized method that works exceptionally fast in this special
             case.
            
             <see cref="M:VisioForge.Libs.ZXing.QrCode.QRCodeReader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)" />
             <see cref="M:VisioForge.Libs.ZXing.Datamatrix.DataMatrixReader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)" />
             </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.BitMatrixParser">
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.BitMatrixParser.createBitMatrixParser(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <param name="bitMatrix">{@link BitMatrix} to parse
            </param>
            <throws>  ReaderException if dimension is not >= 21 and 1 mod 4 </throws>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.BitMatrixParser.readFormatInformation">
            <summary> <p>Reads format information from one of its two locations within the QR Code.</p>
            
            </summary>
            <returns> {@link FormatInformation} encapsulating the QR Code's format info
            </returns>
            <throws>  ReaderException if both format information locations cannot be parsed as </throws>
            <summary> the valid encoding of format information
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.BitMatrixParser.readVersion">
            <summary> <p>Reads version information from one of its two locations within the QR Code.</p>
            
            </summary>
            <returns> {@link Version} encapsulating the QR Code's version
            </returns>
            <throws>  ReaderException if both version information locations cannot be parsed as </throws>
            <summary> the valid encoding of version information
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.BitMatrixParser.readCodewords">
            <summary> <p>Reads the bits in the {@link BitMatrix} representing the finder pattern in the
            correct order in order to reconstitute the codewords bytes contained within the
            QR Code.</p>
            
            </summary>
            <returns> bytes encoded within the QR Code
            </returns>
            <throws>  ReaderException if the exact number of bytes expected is not read </throws>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataBlock">
            <summary> <p>Encapsulates a block of data within a QR Code. QR Codes may split their data into
            multiple blocks, each of which is a unit of data and error-correction codewords. Each
            is represented by an instance of this class.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.DataBlock.getDataBlocks(System.Byte[],VisioForge.Libs.ZXing.QrCode.Internal.Version,VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel)">
            <summary> <p>When QR Codes use multiple data blocks, they are actually interleaved.
            That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This
            method will separate the data into original blocks.</p>
            
            </summary>
            <param name="rawCodewords">bytes as read directly from the QR Code
            </param>
            <param name="version">version of the QR Code
            </param>
            <param name="ecLevel">error-correction level of the QR Code
            </param>
            <returns> {@link DataBlock}s containing original bytes, "de-interleaved" from representation in the
            QR Code
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask">
            <summary> <p>Encapsulates data masks for the data bits in a QR code, per ISO 18004:2006 6.8. Implementations
            of this class can un-mask a raw BitMatrix. For simplicity, they will unmask the entire BitMatrix,
            including areas used for finder patterns, timing patterns, etc. These areas should be unused
            after the point they are unmasked anyway.</p>
            
            <p>Note that the diagram in section 6.8.1 is misleading since it indicates that i is column position
            and j is row position. In fact, as the text says, i is row position and j is column position.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DATA_MASKS">
            <summary> See ISO 18004:2006 6.8.1</summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.unmaskBitMatrix(VisioForge.Libs.ZXing.Common.BitMatrix,System.Int32)">
            <summary> <p>Implementations of this method reverse the data masking process applied to a QR Code and
            make its bits ready to read.</p>
            
            </summary>
            <param name="bits">representation of QR Code bits
            </param>
            <param name="dimension">dimension of QR Code, represented by bits, being unmasked
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.forReference(System.Int32)">
            <param name="reference">a value between 0 and 7 indicating one of the eight possible
            data mask patterns a QR Code may use
            </param>
            <returns> {@link DataMask} encapsulating the data mask pattern
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask000">
            <summary> 000: mask bits for which (x + y) mod 2 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask001">
            <summary> 001: mask bits for which x mod 2 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask010">
            <summary> 010: mask bits for which y mod 3 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask011">
            <summary> 011: mask bits for which (x + y) mod 3 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask100">
            <summary> 100: mask bits for which (x/2 + y/3) mod 2 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask101">
            <summary> 101: mask bits for which xy mod 2 + xy mod 3 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask110">
            <summary> 110: mask bits for which (xy mod 2 + xy mod 3) mod 2 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DataMask.DataMask111">
            <summary> 111: mask bits for which ((x+y)mod 2 + xy mod 3) mod 2 == 0</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.DecodedBitStreamParser">
            <summary> <p>QR Codes can encode text as bits in one of several modes, and can use multiple modes
            in one QR Code. This class decodes the bits back into text.</p>
            
            <p>See ISO 18004:2006, 6.4.3 - 6.4.7</p>
            <author>Sean Owen</author>
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.DecodedBitStreamParser.ALPHANUMERIC_CHARS">
            <summary>
            See ISO 18004:2006, 6.4.4 Table 5
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.DecodedBitStreamParser.decodeHanziSegment(VisioForge.Libs.ZXing.Common.BitSource,System.Text.StringBuilder,System.Int32)">
            <summary>
            See specification GBT 18284-2000
            </summary>
            <param name="bits">The bits.</param>
            <param name="result">The result.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.Decoder">
            <summary>
              <p>The main class which implements QR Code decoding -- as opposed to locating and extracting
            the QR Code from an image.</p>
            </summary>
            <author>
            Sean Owen
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Decoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.Decoder"/> class.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Decoder.decode(System.Boolean[][],System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Convenience method that can decode a QR Code represented as a 2D array of booleans.
            "true" is taken to mean a black module.</p>
            </summary>
            <param name="image">booleans representing white/black QR Code modules</param>
            <param name="hints">The hints.</param>
            <returns>
            text and bytes encoded within the QR Code
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Decoder.decode(VisioForge.Libs.ZXing.Common.BitMatrix,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Decodes a QR Code represented as a {@link BitMatrix}. A 1 or "true" is taken to mean a black module.</p>
            </summary>
            <param name="bits">booleans representing white/black QR Code modules</param>
            <param name="hints">The hints.</param>
            <returns>
            text and bytes encoded within the QR Code
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Decoder.correctErrors(System.Byte[],System.Int32)">
            <summary>
              <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to
            correct the errors in-place using Reed-Solomon error correction.</p>
            </summary>
            <param name="codewordBytes">data and error correction codewords</param>
            <param name="numDataCodewords">number of codewords that are data bytes</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel">
            <summary>
            <p>See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels
            defined by the QR code standard.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.L">
            <summary> L = ~7% correction</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.M">
            <summary> M = ~15% correction</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.Q">
            <summary> Q = ~25% correction</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.H">
            <summary> H = ~30% correction</summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.Bits">
            <summary>
            Gets the bits.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.ordinal">
            <summary>
            Ordinals this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel.forBits(System.Int32)">
            <summary>
            Fors the bits.
            </summary>
            <param name="bits">int containing the two bits encoding a QR Code's error correction level</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel"/> representing the encoded error correction level
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.FormatInformation">
            <summary> <p>Encapsulates a QR Code's format information, including the data mask used and
            error correction level.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
            <seealso cref="P:VisioForge.Libs.ZXing.QrCode.Internal.FormatInformation.DataMask">
            </seealso>
            <seealso cref="P:VisioForge.Libs.ZXing.QrCode.Internal.FormatInformation.ErrorCorrectionLevel">
            </seealso>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.FormatInformation.FORMAT_INFO_DECODE_LOOKUP">
            <summary> See ISO 18004:2006, Annex C, Table C.1</summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.FormatInformation.BITS_SET_IN_HALF_BYTE">
            <summary> Offset i holds the number of 1 bits in the binary representation of i</summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FormatInformation.decodeFormatInformation(System.Int32,System.Int32)">
            <summary>
            Decodes the format information.
            </summary>
            <param name="maskedFormatInfo1">format info indicator, with mask still applied</param>
            <param name="maskedFormatInfo2">The masked format info2.</param>
            <returns>
            information about the format it specifies, or <code>null</code>
            if doesn't seem to match any known pattern
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.Mode">
            <summary>
            <p>See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which
            data can be encoded to bits in the QR code standard.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Mode.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.TERMINATOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.NUMERIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.ALPHANUMERIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.STRUCTURED_APPEND">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.BYTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.ECI">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.KANJI">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.FNC1_FIRST_POSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.FNC1_SECOND_POSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Mode.HANZI">
            <summary>See GBT 18284-2000; "Hanzi" is a transliteration of this mode name.</summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Mode.forBits(System.Int32)">
            <summary>
            Fors the bits.
            </summary>
            <param name="bits">four bits encoding a QR Code data mode</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.Mode"/> encoded by these bits
            </returns>
            <exception cref="T:System.ArgumentException">if bits do not correspond to a known mode</exception>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Mode.getCharacterCountBits(VisioForge.Libs.ZXing.QrCode.Internal.Version)">
            <param name="version">version in question
            </param>
            <returns> number of bits used, in this QR Code symbol {@link Version}, to encode the
            count of characters that will follow encoded in this {@link Mode}
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Mode.Bits">
            <summary>
            Gets the bits.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Mode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.Version">
            <summary>
            See ISO 18004:2006 Annex D
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.Version.VERSION_DECODE_INFO">
            <summary> See ISO 18004:2006 Annex D.
            Element i represents the raw version bits that specify version i + 7
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.VersionNumber">
            <summary>
            Gets the version number.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.AlignmentPatternCenters">
            <summary>
            Gets the alignment pattern centers.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.TotalCodewords">
            <summary>
            Gets the total codewords.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.DimensionForVersion">
            <summary>
            Gets the dimension for version.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.getECBlocksForLevel(VisioForge.Libs.ZXing.QrCode.Internal.ErrorCorrectionLevel)">
            <summary>
            Gets the EC blocks for level.
            </summary>
            <param name="ecLevel">The ec level.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.getProvisionalVersionForDimension(System.Int32)">
            <summary> <p>Deduces version information purely from QR Code dimensions.</p>
            
            </summary>
            <param name="dimension">dimension in modules
            </param>
            <returns><see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.Version" /> for a QR Code of that dimension or null</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.getVersionForNumber(System.Int32)">
            <summary>
            Gets the version for number.
            </summary>
            <param name="versionNumber">The version number.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.buildFunctionPattern">
            <summary> See ISO 18004:2006 Annex E</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECBlocks">
            <summary> <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will
            use blocks of differing sizes within one version, so, this encapsulates the parameters for
            each set of blocks. It also holds the number of error-correction codewords per block since it
            will be the same across all blocks within one version.</p>
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECBlocks.ECCodewordsPerBlock">
            <summary>
            Gets the EC codewords per block.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECBlocks.NumBlocks">
            <summary>
            Gets the num blocks.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECBlocks.TotalECCodewords">
            <summary>
            Gets the total EC codewords.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECBlocks.getECBlocks">
            <summary>
            Gets the EC blocks.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECB">
            <summary> <p>Encapsualtes the parameters for one error-correction block in one symbol version.
            This includes the number of data codewords, and the number of times a block with these
            parameters is used consecutively in the QR code version's format.</p>
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECB.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Version.ECB.DataCodewords">
            <summary>
            Gets the data codewords.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Version.buildVersions">
            <summary> See ISO 18004:2006 6.5.1 Table 9</summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPattern">
            <summary> <p>Encapsulates an alignment pattern, which are the smaller square patterns found in
            all but the simplest QR Codes.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPattern.aboutEquals(System.Single,System.Single,System.Single)">
            <summary> <p>Determines if this alignment pattern "about equals" an alignment pattern at the stated
            position and size -- meaning, it is at nearly the same center with nearly the same size.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPattern.combineEstimate(System.Single,System.Single,System.Single)">
            <summary>
            Combines this object's current estimate of a finder pattern position and module size
            with a new estimate. It returns a new {@code FinderPattern} containing an average of the two.
            </summary>
            <param name="i">The i.</param>
            <param name="j">The j.</param>
            <param name="newModuleSize">New size of the module.</param>
            <returns></returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder">
            <summary> <p>This class attempts to find alignment patterns in a QR Code. Alignment patterns look like finder
            patterns but are smaller and appear at regular intervals throughout the image.</p>
            
            <p>At the moment this only looks for the bottom-right alignment pattern.</p>
            
            <p>This is mostly a simplified copy of {@link FinderPatternFinder}. It is copied,
            pasted and stripped down here for maximum performance but does unfortunately duplicate
            some code.</p>
            
            <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,VisioForge.Libs.ZXing.ResultPointCallback)">
            <summary> <p>Creates a finder that will look in a portion of the whole image.</p>
            
            </summary>
            <param name="image">image to search
            </param>
            <param name="startX">left column from which to start searching
            </param>
            <param name="startY">top row from which to start searching
            </param>
            <param name="width">width of region to search
            </param>
            <param name="height">height of region to search
            </param>
            <param name="moduleSize">estimated module size so far
            </param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder.find">
            <summary> <p>This method attempts to find the bottom-right alignment pattern in the image. It is a bit messy since
            it's pretty performance-critical and so is written to be fast foremost.</p>
            
            </summary>
            <returns> {@link AlignmentPattern} if found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder.centerFromEnd(System.Int32[],System.Int32)">
            <summary> Given a count of black/white/black pixels just seen and an end position,
            figures the location of the center of this black/white/black run.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder.foundPatternCross(System.Int32[])">
            <param name="stateCount">count of black/white/black pixels just read
            </param>
            <returns> true iff the proportions of the counts is close enough to the 1/1/1 ratios
            used by alignment patterns to be considered a match
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder.crossCheckVertical(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              <p>After a horizontal scan finds a potential alignment pattern, this method
            "cross-checks" by scanning down vertically through the center of the possible
            alignment pattern to see if the same proportion is detected.</p>
            </summary>
            <param name="startI">row where an alignment pattern was detected</param>
            <param name="centerJ">center of the section that appears to cross an alignment pattern</param>
            <param name="maxCount">maximum reasonable number of modules that should be
            observed in any reading state, based on the results of the horizontal scan</param>
            <param name="originalStateCountTotal">The original state count total.</param>
            <returns>
            vertical center of alignment pattern, or null if not found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPatternFinder.handlePossibleCenter(System.Int32[],System.Int32,System.Int32)">
            <summary> <p>This is called when a horizontal scan finds a possible alignment pattern. It will
            cross check with a vertical scan, and if successful, will see if this pattern had been
            found on a previous horizontal scan. If so, we consider it confirmed and conclude we have
            found the alignment pattern.</p>
            
            </summary>
            <param name="stateCount">reading state module counts from horizontal scan
            </param>
            <param name="i">row where alignment pattern may be found
            </param>
            <param name="j">end of possible alignment pattern in row
            </param>
            <returns> {@link AlignmentPattern} if we have found the same pattern twice, or null if not
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.Detector">
            <summary>
            <p>Encapsulates logic that can detect a QR Code in an image, even if the QR Code
            is rotated or skewed, or partially obscured.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.Detector"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Detector.Image">
            <summary>
            Gets the image.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.Detector.ResultPointCallback">
            <summary>
            Gets the result point callback.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.detect">
            <summary>
              <p>Detects a QR Code in an image, simply.</p>
            </summary>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Common.DetectorResult"/> encapsulating results of detecting a QR Code
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.detect(System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
              <p>Detects a QR Code in an image, simply.</p>
            </summary>
            <param name="hints">optional hints to detector</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.Common.DetectorResult"/> encapsulating results of detecting a QR Code
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.processFinderPatternInfo(VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo)">
            <summary>
            Processes the finder pattern info.
            </summary>
            <param name="info">The info.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.computeDimension(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,System.Single,System.Int32@)">
            <summary> <p>Computes the dimension (number of modules on a size) of the QR Code based on the position
            of the finder patterns and estimated module size.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.calculateModuleSize(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary> <p>Computes an average estimated module size based on estimated derived from the positions
            of the three finder patterns.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.calculateModuleSizeOneWay(VisioForge.Libs.Types.BarcodeResultPoint,VisioForge.Libs.Types.BarcodeResultPoint)">
            <summary> <p>Estimates module size based on two finder patterns -- it uses
            {@link #sizeOfBlackWhiteBlackRunBothWays(int, int, int, int)} to figure the
            width of each, measuring along the axis between their centers.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.sizeOfBlackWhiteBlackRunBothWays(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> See {@link #sizeOfBlackWhiteBlackRun(int, int, int, int)}; computes the total width of
            a finder pattern by looking for a black-white-black run from the center in the direction
            of another point (another finder pattern center), and in the opposite direction too.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.sizeOfBlackWhiteBlackRun(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>This method traces a line from a point in the image, in the direction towards another point.
            It begins in a black region, and keeps going until it finds white, then black, then white again.
            It reports the distance from the start to this point.</p>
            
            <p>This is used when figuring out how wide a finder pattern is, when the finder pattern
            may be skewed or rotated.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.Detector.findAlignmentInRegion(System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
              <p>Attempts to locate an alignment pattern in a limited region of the image, which is
            guessed to contain it. This method uses {@link AlignmentPattern}.</p>
            </summary>
            <param name="overallEstModuleSize">estimated module size so far</param>
            <param name="estAlignmentX">x coordinate of center of area probably containing alignment pattern</param>
            <param name="estAlignmentY">y coordinate of above</param>
            <param name="allowanceFactor">number of pixels in all directions to search from the center</param>
            <returns>
              <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.AlignmentPattern"/> if found, or null otherwise
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPattern">
            <summary>
            <p>Encapsulates a finder pattern, which are the three square patterns found in
            the corners of QR Codes. It also encapsulates a count of similar finder patterns,
            as a convenience to the finder's bookkeeping.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.FinderPattern.EstimatedModuleSize">
            <summary>
            Gets the size of the estimated module.
            </summary>
            <value>
            The size of the estimated module.
            </value>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPattern.aboutEquals(System.Single,System.Single,System.Single)">
            <summary> <p>Determines if this finder pattern "about equals" a finder pattern at the stated
            position and size -- meaning, it is at nearly the same center with nearly the same size.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPattern.combineEstimate(System.Single,System.Single,System.Single)">
            <summary>
            Combines this object's current estimate of a finder pattern position and module size
            with a new estimate. It returns a new {@code FinderPattern} containing a weighted average
            based on count.
            </summary>
            <param name="i">The i.</param>
            <param name="j">The j.</param>
            <param name="newModuleSize">New size of the module.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder" -->
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.MIN_SKIP">
            <summary>
            1 pixel/module times 3 modules/center
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.MAX_MODULES">
            <summary>
            support up to version 10 for mobile clients
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            <p>Creates a finder that will search the image for three finder patterns.</p>
            </summary>
            <param name="image">image to search</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.#ctor(VisioForge.Libs.ZXing.Common.BitMatrix,VisioForge.Libs.ZXing.ResultPointCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder"/> class.
            </summary>
            <param name="image">The image.</param>
            <param name="resultPointCallback">The result point callback.</param>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.Image">
            <summary>
            Gets the image.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.PossibleCenters">
            <summary>
            Gets the possible centers.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.centerFromEnd(System.Int32[],System.Int32)">
            <summary> Given a count of black/white/black/white/black pixels just seen and an end position,
            figures the location of the center of this run.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.foundPatternCross(System.Int32[])">
            <param name="stateCount">count of black/white/black/white/black pixels just read
            </param>
            <returns> true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios
            used by finder patterns to be considered a match
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.crossCheckVertical(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              <p>After a horizontal scan finds a potential finder pattern, this method
            "cross-checks" by scanning down vertically through the center of the possible
            finder pattern to see if the same proportion is detected.</p>
            </summary>
            <param name="startI">row where a finder pattern was detected</param>
            <param name="centerJ">center of the section that appears to cross a finder pattern</param>
            <param name="maxCount">maximum reasonable number of modules that should be
            observed in any reading state, based on the results of the horizontal scan</param>
            <param name="originalStateCountTotal">The original state count total.</param>
            <returns>
            vertical center of finder pattern, or null if not found
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.crossCheckHorizontal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>Like {@link #crossCheckVertical(int, int, int, int)}, and in fact is basically identical,
            except it reads horizontally instead of vertically. This is used to cross-cross
            check a vertical cross check and locate the real center of the alignment pattern.</p>
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.handlePossibleCenter(System.Int32[],System.Int32,System.Int32)">
            <summary> <p>This is called when a horizontal scan finds a possible alignment pattern. It will
            cross check with a vertical scan, and if successful, will, ah, cross-cross-check
            with another horizontal scan. This is needed primarily to locate the real horizontal
            center of the pattern in cases of extreme skew.</p>
            
            If that succeeds the finder pattern location is added to a list that tracks
            the number of times each location has been nearly-matched as a finder pattern.
            Each additional find is more evidence that the location is in fact a finder
            pattern center
            
            </summary>
            <param name="stateCount">reading state module counts from horizontal scan
            </param>
            <param name="i">row where finder pattern may be found
            </param>
            <param name="j">end of possible finder pattern in row
            </param>
            <returns> true if a finder pattern candidate was found this time
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.findRowSkip">
            <returns> number of rows we could safely skip during scanning, based on the first
            two finder patterns that have been located. In some cases their position will
            allow us to infer that the third pattern must lie below a certain point farther
            down in the image.
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.haveMultiplyConfirmedCenters">
            <returns> true iff we have found at least 3 finder patterns that have been detected
            at least {@link #CENTER_QUORUM} times each, and, the estimated module size of the
            candidates is "pretty similar"
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.selectBestPatterns">
            <returns> the 3 best {@link FinderPattern}s from our list of candidates. The "best" are
            those that have been detected at least {@link #CENTER_QUORUM} times, and whose module
            size differs from the average among those patterns the least
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.FurthestFromAverageComparator">
            <summary>
            Orders by furthest from average
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternFinder.CenterComparator">
            <summary> <p>Orders by {@link FinderPattern#getCount()}, descending.</p></summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo">
            <summary>
            <p>Encapsulates information about finder patterns in an image, including the location of
            the three finder patterns, and their estimated module size.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo.#ctor(VisioForge.Libs.ZXing.QrCode.Internal.FinderPattern[])">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo"/> class.
            </summary>
            <param name="patternCenters">The pattern centers.</param>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo.BottomLeft">
            <summary>
            Gets the bottom left.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo.TopLeft">
            <summary>
            Gets the top left.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.QrCode.Internal.FinderPatternInfo.TopRight">
            <summary>
            Gets the top right.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.QrCode.QRCodeReader">
             <summary>
             This implementation can detect and decode QR Codes in an image.
            
             <author>Sean Owen</author>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.QRCodeReader.getDecoder">
            <summary>
            Gets the decoder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.QRCodeReader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
             <summary>
             Locates and decodes a QR code in an image.
            
             <returns>a String representing the content encoded by the QR code</returns>
             </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.QRCodeReader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary>
            Locates and decodes a barcode in some format within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a <see cref="T:System.Collections.Generic.IDictionary`2"/> from <see cref="T:VisioForge.Libs.ZXing.DecodeHintType"/>
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.</param>
            <returns>
            String which the barcode encodes
            </returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.QRCodeReader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.QrCode.QRCodeReader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)">
            <summary>
            This method detects a code in a "pure" image -- that is, pure monochrome image
            which contains only an unrotated, unskewed, image of a code, with some white border
            around it. This is a specialized method that works exceptionally fast in this special
            case.
            
            <seealso cref="M:VisioForge.Libs.ZXing.PDF417.PDF417Reader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)" />
            <seealso cref="M:VisioForge.Libs.ZXing.Datamatrix.DataMatrixReader.extractPureBits(VisioForge.Libs.ZXing.Common.BitMatrix)" />
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Reader">
            <summary>
            Implementations of this interface can decode an image of a barcode in some format into
            the String it encodes. For example, <see cref="T:VisioForge.Libs.ZXing.QrCode.QRCodeReader" /> can
            decode a QR code. The decoder may optionally receive hints from the caller which may help
            it decode more quickly or accurately.
            
            See <see cref="T:VisioForge.Libs.ZXing.MultiFormatReader" />, which attempts to determine what barcode
            format is present within the image as well, and then decodes it accordingly.
            </summary>
            <author>Sean Owen</author>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Reader.decode(VisioForge.Libs.ZXing.BinaryBitmap)">
            <summary>
            Locates and decodes a barcode in some format within an image.
            </summary>
            <param name="image">image of barcode to decode</param>
            <returns>String which the barcode encodes</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Reader.decode(VisioForge.Libs.ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{VisioForge.Libs.ZXing.DecodeHintType,System.Object})">
            <summary> Locates and decodes a barcode in some format within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            </summary>
            <param name="image">image of barcode to decode</param>
            <param name="hints">passed as a <see cref="T:System.Collections.Generic.IDictionary`2" /> from <see cref="T:VisioForge.Libs.ZXing.DecodeHintType" />
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.
            </param>
            <returns>String which the barcode encodes</returns>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Reader.reset">
            <summary>
            Resets any internal state the implementation has after a decode, to prepare it
            for reuse.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.ReaderException">
            <summary>
            The general exception class throw when something goes wrong during decoding of a barcode.
            This includes, but is not limited to, failing checksums / error correction algorithms, being
            unable to locate finder timing patterns, and so on.
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="P:VisioForge.Libs.ZXing.ReaderException.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.ReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.ReaderException"/> class.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.Result">
            <summary>
            Encapsulates the result of decoding a barcode within an image.
            </summary>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Result.Text">
            <returns>raw text encoded by the barcode, if applicable, otherwise <code>null</code></returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Result.RawBytes">
            <returns>raw bytes encoded by the barcode, if applicable, otherwise <code>null</code></returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Result.ResultPoints">
            <returns>
            points related to the barcode in the image. These are typically points
            identifying finder patterns or the corners of the barcode. The exact meaning is
            specific to the type of barcode that was decoded.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Result.BarcodeFormat">
            <returns>{@link BarcodeFormat} representing the format of the barcode that was decoded</returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Result.ResultMetadata">
            <returns>
            {@link Hashtable} mapping {@link BarcodeResultMetadataType} keys to values. May be
            <code>null</code>. This contains optional metadata about what was detected about the barcode,
            like orientation.
            </returns>
        </member>
        <member name="P:VisioForge.Libs.ZXing.Result.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Result.#ctor(System.String,System.Byte[],VisioForge.Libs.Types.BarcodeResultPoint[],VisioForge.Libs.ZXing.BarcodeFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Result"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="rawBytes">The raw bytes.</param>
            <param name="resultPoints">The result points.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Result.#ctor(System.String,System.Byte[],VisioForge.Libs.Types.BarcodeResultPoint[],VisioForge.Libs.ZXing.BarcodeFormat,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.Result"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="rawBytes">The raw bytes.</param>
            <param name="resultPoints">The result points.</param>
            <param name="format">The format.</param>
            <param name="timestamp">The timestamp.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Result.putMetadata(VisioForge.Libs.Types.BarcodeResultMetadataType,System.Object)">
            <summary>
            Adds one metadata to the result
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Result.putAllMetadata(System.Collections.Generic.IDictionary{VisioForge.Libs.Types.BarcodeResultMetadataType,System.Object})">
            <summary>
            Adds a list of metadata to the result
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Result.addResultPoints(VisioForge.Libs.Types.BarcodeResultPoint[])">
            <summary>
            Adds the result points.
            </summary>
            <param name="newPoints">The new points.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.Result.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:VisioForge.Libs.ZXing.ResultPointCallback">
            <summary> Callback which is invoked when a possible result point (significant
            point in the barcode image such as a corner) is found.
            
            </summary>
            <seealso cref="F:VisioForge.Libs.ZXing.DecodeHintType.NEED_RESULT_POINT_CALLBACK">
            </seealso>
        </member>
        <member name="T:VisioForge.Libs.ZXing.RGBLuminanceSource">
            <summary>
            Luminance source class which support different formats of images.
            </summary>
        </member>
        <member name="T:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat">
            <summary>
            enumeration of supported bitmap format which the RGBLuminanceSource can process
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.Unknown">
            <summary>
            format of the byte[] isn't known. RGBLuminanceSource tries to determine the best possible value
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.Gray8">
            <summary>
            grayscale array, the byte array is a luminance array with 1 byte per pixel
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.RGB24">
            <summary>
            3 byte per pixel with the channels red, green and blue
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.RGB32">
            <summary>
            4 byte per pixel with the channels red, green and blue
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.ARGB32">
            <summary>
            4 byte per pixel with the channels alpha, red, green and blue
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.BGR24">
            <summary>
            3 byte per pixel with the channels blue, green and red
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.BGR32">
            <summary>
            4 byte per pixel with the channels blue, green and red
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.BGRA32">
            <summary>
            4 byte per pixel with the channels blue, green, red and alpha
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.RGB565">
            <summary>
            2 byte per pixel, 5 bit red, 6 bits green and 5 bits blue
            </summary>
        </member>
        <member name="F:VisioForge.Libs.ZXing.RGBLuminanceSource.BitmapFormat.RGB24VF">
            <summary>
            RGB24 video frame
            </summary>
        </member>
        <member name="M:VisioForge.Libs.ZXing.RGBLuminanceSource.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.RGBLuminanceSource"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.RGBLuminanceSource.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.RGBLuminanceSource"/> class.
            It supports a byte array with 3 bytes per pixel (RGB24).
            </summary>
            <param name="rgbRawBytes">The RGB raw bytes.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.RGBLuminanceSource.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:VisioForge.Libs.ZXing.RGBLuminanceSource"/> class.
            It supports a byte array with 1 byte per pixel (Gray8).
            That means the whole array consists of the luminance values (grayscale).
            </summary>
            <param name="luminanceArray">The luminance array.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="is8Bit">if set to <c>true</c> [is8 bit].</param>
        </member>
        <member name="M:VisioForge.Libs.ZXing.RGBLuminanceSource.CreateLuminanceSource(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Should create a new luminance source with the right class type.
            The method is used in methods crop and rotate.
            </summary>
            <param name="newLuminances">The new luminances.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:VisioForge.Core.MediaInfo.MediaInfoNET.MediaInfo_Stream_Video.LeftOf(System.String,System.Char)">
            <summary>
            Left of the first occurance of c
            </summary>
            <param name="src">The source string.</param>
            <param name="c">Return everything to the left of this character.</param>
            <returns>String to the left of c, or the entire string.</returns>
        </member>
        <member name="M:VisioForge.Core.MediaInfo.MediaInfoNET.MediaInfo_Stream_Video.RightOf(System.String,System.Char)">
            <summary>
            Right of the first occurance of c
            </summary>
            <param name="src">The source string.</param>
            <param name="c">The search char.</param>
            <returns>Returns everything to the right of c, or an empty string if c is not found.</returns>
        </member>
        <member name="M:Gst.IntRange.ToArray">
            <summary>
            Converts to array.
            </summary>
            <returns>System.Int32[].</returns>
        </member>
        <member name="M:GLib.Opaque.DisposeManagedResources">
            <summary>
            Disposes the managed resources.
            This method is intended to be overriden.
            </summary>
        </member>
        <member name="M:GLib.Opaque.DisposeUnmanagedResources">
            <summary>
            Disposes the unmanaged resources.
            This method is intended to be overriden.
            </summary>
        </member>
        <member name="T:Accord.Statistics.Formats.SparseSampleReader">
             <summary>
               Reader for data files containing samples in libsvm's sparse format.
             </summary>
             
             <example>
               <para>
               The following example shows how to read all sparse samples from a file
               and retrieve them as a dense multimensional vector.</para>
               
               <code>
               // Suppose we are going to read a sparse sample file containing
               //  samples which have an actual dimension of 4. Since the samples
               //  are in a sparse format, each entry in the file will probably
               //  have a much lesser number of elements.
               int sampleSize = 4;
            
               // Create a new Sparse Sample Reader to read any given file,
               //  passing the correct dense sample size in the constructor
               SparseSampleReader reader = new SparseSampleReader(file, Encoding.Default, sampleSize);
               
               // Declare a vector to obtain the label
               //  of each of the samples in the file
               int[] labels = null;
               
               // Declare a vector to obtain the description (or comments)
               //  about each of the samples in the file, if present.
               string[] descriptions = null;
               
               // Read the sparse samples and store them in a dense vector array
               double[][] samples = reader.ReadToEnd(out labels, out descriptions);
               </code>
               
               <para>Additionally, it is also possible to read each sample
               individually and sequencially. For this, we can use a while
               loop until we reach the end of the stream.</para>
               
               <code>
               // Suppose we are going to read a sparse sample file containing
               //  samples which have an actual dimension of 4. Since the samples
               //  are in a sparse format, each entry in the file will probably
               //  have a much lesser number of elements.
               int sampleSize = 4;
            
               // Create a new Sparse Sample Reader to read any given file,
               //  passing the correct dense sample size in the constructor
               SparseSampleReader reader = new SparseSampleReader(file, Encoding.Default, sampleSize);
            
               // Declare some variables to receive each current sample
               int label = 0;
               string description;
               double[] sample;
               
               // Read a single sample from the file
               sample = reader.ReadDense(out label, out description);
               
               // Read all other samples from the file
               while (!reader.EndOfStream)
               {
                   sample = reader.ReadDense(out label, out description);
               }
               </code>
             </example>
             
        </member>
        <member name="P:Accord.Statistics.Formats.SparseSampleReader.BaseStream">
            <summary>
              Returns the underlying stream.
            </summary>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.#ctor(System.String,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Statistics.Formats.SparseSampleReader"/> class.
            </summary>
            
            <param name="path">The complete file path to be read.</param>
            <param name="sampleSize">The size of the feature vectors stored in the file.</param>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.#ctor(System.IO.Stream,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Statistics.Formats.SparseSampleReader"/> class.
            </summary>
            
            <param name="stream">The file stream to be read.</param>
            <param name="sampleSize">The size of the feature vectors stored in the file.</param>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Statistics.Formats.SparseSampleReader"/> class.
            </summary>
            
            <param name="stream">The file stream to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="sampleSize">The size of the feature vectors stored in the file.</param>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.#ctor(System.String,System.Text.Encoding,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Statistics.Formats.SparseSampleReader"/> class.
            </summary>
            
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="sampleSize">The size of the feature vectors stored in the file.</param>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.#ctor(System.IO.StreamReader,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Statistics.Formats.SparseSampleReader"/> class.
            </summary>
            
            <param name="reader">A StreamReader containing the file to be read.</param>
            <param name="sampleSize">The size of the feature vectors stored in the file.</param>
            
        </member>
        <member name="P:Accord.Statistics.Formats.SparseSampleReader.EndOfStream">
            <summary>
              Gets a value that indicates whether the current
              stream position is at the end of the stream.
            </summary>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadSparse(System.Int32@,System.String@)">
            <summary>
              Reads a sparse sample from the current stream
              and returns it as a sparse vector.
            </summary>
            
            <param name="label">The label of the sample.</param>
            <param name="description">An optional description accompanying the sample.</param>
            <returns>A vector in sparse representation containing the sample.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadSparse(System.Int32@)">
            <summary>
              Reads a sparse sample from the current stream
              and returns it as a sparse vector.
            </summary>
            
            <param name="label">The label of the sample.</param>
            <returns>A vector in sparse representation containing the sample.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadDense(System.Int32@,System.String@)">
            <summary>
              Reads a sparse sample from the current stream
              and returns it as a dense vector.
            </summary>
            
            <param name="label">The label of the sample.</param>
            <param name="description">An optional description accompanying the sample.</param>
            <returns>A vector in dense representation containing the sample.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadDense(System.Int32@)">
            <summary>
              Reads a sparse sample from the current stream
              and returns it as a dense vector.
            </summary>
            
            <param name="label">The label of the sample.</param>
            <returns>A vector in dense representation containing the sample.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadToEnd(System.Int32[]@)">
            <summary>
              Reads samples from the current position to the end of the stream.
            </summary>
            
            <param name="labels">An array containing the samples' labels.</param>
            <returns>An array of dense feature vectors.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadToEnd(System.Int32[]@,System.String[]@)">
            <summary>
              Reads samples from the current position to the end of the stream.
            </summary>
            
            <param name="labels">An array containing the samples' labels.</param>
            <param name="descriptions">An array containing the samples' descriptions.</param>
            <returns>An array of dense feature vectors.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadToEnd(System.Boolean,System.Int32[]@)">
            <summary>
              Reads samples from the current position to the end of the stream.
            </summary>
            
            <param name="sparse">True to return the feature vectors in a
            sparse representation, false to return them as dense vectors.</param>
            <param name="labels">An array containing the samples' labels.</param>
            <returns>An array of dense feature vectors.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.ReadToEnd(System.Boolean,System.Int32[]@,System.String[]@)">
            <summary>
              Reads samples from the current position to the end of the stream.
            </summary>
            
            <param name="sparse">True to return the feature vectors in a
            sparse representation, false to return them as dense vectors.</param>
            <param name="labels">An array containing the samples' labels.</param>
            <param name="descriptions">An array containing the samples' descriptions.</param>
            <returns>An array of dense feature vectors.</returns>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.Dispose">
            <summary>
              Performs application-defined tasks associated with
              freeing, releasing, or resetting unmanaged resources.
            </summary>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.Dispose(System.Boolean)">
            <summary>
              Releases unmanaged and - optionally - managed resources
            </summary>
            
            <param name="disposing"><c>true</c> to release both managed and unmanaged
              resources; <c>false</c> to release only unmanaged resources.</param>
            
        </member>
        <member name="M:Accord.Statistics.Formats.SparseSampleReader.Finalize">
            <summary>
              Releases unmanaged resources and performs other cleanup operations before the
              <see cref="T:Accord.Statistics.Formats.SparseSampleReader"/> is reclaimed by garbage collection.
            </summary>
            
        </member>
        <member name="T:BigIntegerLibrary.Base10BigInteger">
            <summary>
            Integer inefficiently represented internally using base-10 digits, in order to allow a
            visual representation as a base-10 string. Only for internal use.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.Base10BigInteger.NumberBase">
            <summary>
            10 numeration base for string representation, very inefficient for computations.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.Base10BigInteger.MaxSize">
            <summary>
            Maximum size for numbers is up to 10240 binary digits or approximately (safe to use) 3000 decimal digits.
            The maximum size is, in fact, double the previously specified amount, in order to accommodate operations'
            overflow.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.Base10BigInteger.Zero">
            Integer constants
        </member>
        <member name="F:BigIntegerLibrary.Base10BigInteger.digits">
            <summary>
            The array of digits of the number.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.Base10BigInteger.size">
            <summary>
            The actual number of digits of the number.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.Base10BigInteger.sign">
            <summary>
            The number sign.
            </summary>
        </member>
        <member name="P:BigIntegerLibrary.Base10BigInteger.NumberSign">
            <summary>
            Sets the number sign.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.#ctor">
            <summary>
            Default constructor, intializing the Base10BigInteger with zero.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.#ctor(System.Int64)">
            <summary>
            Constructor creating a new Base10BigInteger as a conversion of a regular base-10 long.
            </summary>
            <param name="n">The base-10 long to be converted</param>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.#ctor(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Constructor creating a new Base10BigInteger as a copy of an existing Base10BigInteger.
            </summary>
            <param name="n">The Base10BigInteger to be copied</param>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Equals(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Determines whether the specified Base10BigInteger is equal to the current Base10BigInteger.
            </summary>
            <param name="other">The Base10BigInteger to compare with the current Base10BigInteger</param>
            <returns>True if the specified Base10BigInteger is equal to the current Base10BigInteger,
            false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current Base10BigInteger.
            </summary>
            <param name="o">The System.Object to compare with the current Base10BigInteger</param>
            <returns>True if the specified System.Object is equal to the current Base10BigInteger,
            false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.GetHashCode">
            <summary>
            Serves as a hash function for the Base10BigInteger type.
            </summary>
            <returns>A hash code for the current Base10BigInteger</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.ToString">
            <summary>
            String representation of the current Base10BigInteger, converted to its base-10 representation.
            </summary>
            <returns>The string representation of the current Base10BigInteger</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Opposite(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Base10BigInteger inverse with respect to addition.
            </summary>
            <param name="n">The Base10BigInteger whose opposite is to be computed</param>
            <returns>The Base10BigInteger inverse with respect to addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Greater(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Greater test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &gt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.GreaterOrEqual(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Greater or equal test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &gt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Smaller(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Smaller test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &lt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.SmallerOrEqual(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Smaller or equal test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &lt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Abs(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Computes the absolute value of a Base10BigInteger.
            </summary>
            <param name="n">The Base10BigInteger whose absolute value is to be computed</param>
            <returns>The absolute value of the given BigInteger</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Addition(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Addition operation of two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>The Base10BigInteger result of the addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Subtraction(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Subtraction operation of two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>The Base10BigInteger result of the subtraction</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Multiplication(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Multiplication operation of two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>The Base10BigInteger result of the multiplication</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Implicit(System.Int64)~BigIntegerLibrary.Base10BigInteger">
            <summary>
            Implicit conversion operator from long to Base10BigInteger.
            </summary>
            <param name="n">The long to be converted to a Base10BigInteger</param>
            <returns>The Base10BigInteger converted from the given long</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Equality(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Equality test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a == b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Inequality(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Inequality test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a != b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_GreaterThan(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Greater test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &gt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_LessThan(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Smaller test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &lt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_GreaterThanOrEqual(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Greater or equal test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &gt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_LessThanOrEqual(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Smaller or equal test between two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>True if a &lt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_UnaryNegation(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Base10BigInteger inverse with respect to addition.
            </summary>
            <param name="n">The Base10BigInteger whose opposite is to be computed</param>
            <returns>The Base10BigInteger inverse with respect to addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Addition(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Addition operation of two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>The Base10BigInteger result of the addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Subtraction(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Subtraction operation of two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>The Base10BigInteger result of the subtraction</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Multiply(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Multiplication operation of two Base10BigIntegers.
            </summary>
            <param name="a">The 1st Base10BigInteger</param>
            <param name="b">The 2nd Base10BigInteger</param>
            <returns>The Base10BigInteger result of the multiplication</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Increment(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Incremetation by one operation of a Base10BigInteger.
            </summary>
            <param name="n">The Base10BigInteger to be incremented by one</param>
            <returns>The Base10BigInteger result of incrementing by one</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.op_Decrement(BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Decremetation by one operation of a Base10BigInteger.
            </summary>
            <param name="n">The Base10BigInteger to be decremented by one</param>
            <returns>The Base10BigInteger result of decrementing by one</returns>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Add(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Adds two BigNumbers a and b, where a >= b, a, b non-negative.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Subtract(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Subtracts the Base10BigInteger b from the Base10BigInteger a, where a >= b, a, b non-negative.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.Base10BigInteger.Multiply(BigIntegerLibrary.Base10BigInteger,BigIntegerLibrary.Base10BigInteger)">
            <summary>
            Multiplies two Base10BigIntegers.
            </summary>
        </member>
        <member name="T:BigIntegerLibrary.BigInteger">
            <summary>
            .NET 2.0 class for handling of very large integers, up to 10240 binary digits or
            approximately (safe to use) 3000 decimal digits.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.NumberBase">
            <summary>
            2^16 numeration base for internal computations, in order to benefit the most from the
            32 bit (or 64 bit) integer processor registers.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.MaxSize">
            <summary>
            Maximum size for numbers is up to 10240 binary digits or approximately (safe to use) 3000 decimal digits.
            The maximum size is, in fact, double the previously specified amount, in order to accommodate operations's
            overflow.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.RatioToBinaryDigits">
            <summary>
            Ratio for the convertion of a BigInteger's size to a binary digits size.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.Zero">
            Integer constants
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.digits">
            <summary>
            The array of digits of the number.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.size">
            <summary>
            The actual number of digits of the number.
            </summary>
        </member>
        <member name="F:BigIntegerLibrary.BigInteger.sign">
            <summary>
            The number sign.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.#ctor">
            <summary>
            Default constructor, intializing the BigInteger with zero.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.#ctor(System.Int64)">
            <summary>
            Constructor creating a new BigInteger as a conversion of a regular base-10 long.
            </summary>
            <param name="n">The base-10 long to be converted</param>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.#ctor(BigIntegerLibrary.BigInteger)">
            <summary>
            Constructor creating a new BigInteger as a copy of an existing BigInteger.
            </summary>
            <param name="n">The BigInteger to be copied</param>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.#ctor(System.String)">
            <summary>
            Constructor creating a BigInteger instance out of a base-10 formatted string.
            </summary>
            <param name="numberString">The base-10 formatted string.</param>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Invalid numeric string exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.#ctor(System.Byte[])">
            <summary>
            Constructor creating a positive BigInteger by extracting it's digits from a given byte array.
            </summary>
            <param name="byteArray">The byte array</param>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">The byte array's content exceeds the maximum size of a BigInteger
            exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor deserializing a BigInteger.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            BigInteger serializing method, which should not be called manually.
            </summary>
            <param name="info">Serialization information object</param>
            <param name="context">Streaming context object</param>
            <permission cref="T:System.Security.PermissionSet">Public access</permission>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Equals(BigIntegerLibrary.BigInteger)">
            <summary>
            Determines whether the specified BigInteger is equal to the current BigInteger.
            </summary>
            <param name="other">The BigInteger to compare with the current BigInteger</param>
            <returns>True if the specified BigInteger is equal to the current BigInteger,
            false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current BigInteger.
            </summary>
            <param name="o">The System.Object to compare with the current BigInteger</param>
            <returns>True if the specified System.Object is equal to the current BigInteger,
            false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.GetHashCode">
            <summary>
            Serves as a hash function for the BigInteger type.
            </summary>
            <returns>A hash code for the current BigInteger</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.ToString">
            <summary>
            String representation of the current BigInteger, converted to its base-10 representation.
            </summary>
            <returns>The string representation of the current BigInteger</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Parse(System.String)">
            <summary>
            Parses the number given by a string
            </summary>
            <param name="str">the number as a string</param>
            <returns></returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.CompareTo(BigIntegerLibrary.BigInteger)">
            <summary>
             Compares this instance to a specified BigInteger.
            </summary>
            <param name="other">The BigInteger to compare this instance with</param>
            <returns>-1 if the current instance is smaller than the given BigInteger,
            0 if the two are equal, 1 otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object.
            </summary>
            <param name="obj">The object to compare this instance with</param>
            <returns>-1 if the current instance is smaller than the given object,
            0 if the two are equal, 1 otherwise</returns>
            <exception cref="T:System.ArgumentException">obj is not a BigInteger exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.SizeInBinaryDigits(BigIntegerLibrary.BigInteger)">
            <summary>
            Returns a BigInteger's size in binary digits.
            </summary>
            <param name="n">The BigInteger whose size in binary digits is to be determined</param>
            <returns>The BigInteger's size in binary digits</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Opposite(BigIntegerLibrary.BigInteger)">
            <summary>
            BigInteger inverse with respect to addition.
            </summary>
            <param name="n">The BigInteger whose opposite is to be computed</param>
            <returns>The BigInteger inverse with respect to addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Greater(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Greater test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &gt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.GreaterOrEqual(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Greater or equal test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &gt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Smaller(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Smaller test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &lt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.SmallerOrEqual(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Smaller or equal test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &lt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Abs(BigIntegerLibrary.BigInteger)">
            <summary>
            Computes the absolute value of a BigInteger.
            </summary>
            <param name="n">The BigInteger whose absolute value is to be computed</param>
            <returns>The absolute value of the given BigInteger</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Addition(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Addition operation of two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Subtraction(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Subtraction operation of two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the subtraction</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Multiplication(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Multiplication operation of two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the multiplication</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Division(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Division operation of two BigIntegers a and b, b != 0.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the division</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot divide by zero exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Modulo(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Modulo operation of two BigIntegers a and b, b != 0.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the modulo</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot divide by zero exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Power(BigIntegerLibrary.BigInteger,System.Int32)">
            <summary>
            Returns the power of a BigInteger base to a non-negative exponent by using the
            fast exponentiation algorithm (right to left binary exponentiation).
            </summary>
            <param name="a">The BigInteger base</param>
            <param name="exponent">The non-negative exponent</param>
            <returns>The power of the BigInteger base to the non-negative exponent</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot raise a BigInteger to a negative power exception.</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.IntegerSqrt(BigIntegerLibrary.BigInteger)">
            <summary>
            Integer square root of the given BigInteger using Newton's numeric method.
            </summary>
            <param name="n">The BigInteger whose integer square root is to be computed</param>
            <returns>The integer square root of the given BigInteger</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot compute the integer square root of a negative number exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Gcd(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Euclidean algorithm for computing the greatest common divisor of two non-negative BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The greatest common divisor of the two given BigIntegers</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot compute the Gcd of negative BigIntegers exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.ExtendedEuclidGcd(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger@,BigIntegerLibrary.BigInteger@)">
            <summary>
            Extended Euclidian Gcd algorithm, returning the greatest common divisor of two non-negative BigIntegers,
            while also providing u and v, where: a*u + b*v = gcd(a,b).
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <param name="u">Output BigInteger parameter, where a*u + b*v = gcd(a,b)</param>
            <param name="v">Output BigInteger parameter, where a*u + b*v = gcd(a,b)</param>
            <returns>The greatest common divisor of the two given BigIntegers</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot compute the Gcd of negative BigIntegers exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.ModularInverse(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Computes the modular inverse of a given BigInteger.
            </summary>
            <param name="a">The non-zero BigInteger whose inverse is to be computed</param>
            <param name="n">The BigInteger modulus, which must be greater than or equal to 2</param>
            <returns>The BigInteger equal to a^(-1) mod n</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Invalid number or modulus exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.ModularExponentiation(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Returns the power of a BigInteger to a non-negative exponent modulo n, by using the
            fast exponentiation algorithm (right to left binary exponentiation) and modulo optimizations.
            </summary>
            <param name="a">The BigInteger base</param>
            <param name="exponent">The non-negative exponent</param>
            <param name="n">The modulus, which must be greater than or equal to 2</param>
            <returns>The power of the BigInteger to the non-negative exponent</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Invalid exponent or modulus exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Implicit(System.Int64)~BigIntegerLibrary.BigInteger">
            <summary>
            Implicit conversion operator from long to BigInteger.
            </summary>
            <param name="n">The long to be converted to a BigInteger</param>
            <returns>The BigInteger converted from the given long</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Equality(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Equality test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a == b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Inequality(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Inequality test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a != b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_GreaterThan(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Greater test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &gt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_LessThan(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Smaller test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &lt; b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_GreaterThanOrEqual(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Greater or equal test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &gt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_LessThanOrEqual(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Smaller or equal test between two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>True if a &lt;= b, false otherwise</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_UnaryNegation(BigIntegerLibrary.BigInteger)">
            <summary>
            BigInteger inverse with respect to addition.
            </summary>
            <param name="n">The BigInteger whose opposite is to be computed</param>
            <returns>The BigInteger inverse with respect to addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Addition(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Addition operation of two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the addition</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Subtraction(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Subtraction operation of two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the subtraction</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Multiply(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Multiplication operation of two BigIntegers.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the multiplication</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Division(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Division operation of two BigIntegers a and b, b != 0.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the division</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot divide by zero exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Modulus(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Modulo operation of two BigIntegers a and b, b != 0.
            </summary>
            <param name="a">The 1st BigInteger</param>
            <param name="b">The 2nd BigInteger</param>
            <returns>The BigInteger result of the modulo</returns>
            <exception cref="T:BigIntegerLibrary.BigIntegerException">Cannot divide by zero exception</exception>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Increment(BigIntegerLibrary.BigInteger)">
            <summary>
            Incremetation by one operation of a BigInteger.
            </summary>
            <param name="n">The BigInteger to be incremented by one</param>
            <returns>The BigInteger result of incrementing by one</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.op_Decrement(BigIntegerLibrary.BigInteger)">
            <summary>
            Decremetation by one operation of a BigInteger.
            </summary>
            <param name="n">The BigInteger to be decremented by one</param>
            <returns>The BigInteger result of decrementing by one</returns>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Add(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Adds two BigNumbers a and b, where a >= b, a, b non-negative.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Subtract(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Subtracts the BigInteger b from the BigInteger a, where a >= b, a, b non-negative.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Multiply(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Multiplies two BigIntegers.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.DivideByOneDigitNumber(BigIntegerLibrary.BigInteger,System.Int64)">
            <summary>
            Divides a BigInteger by a one-digit int.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.DivideByBigNumber(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger)">
            <summary>
            Divides a BigInteger by another BigInteger.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.DivideByBigNumberSmaller(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger,System.Int32,System.Int32)">
            <summary>
            DivideByBigNumber auxiliary method. 
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Difference(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger,System.Int32,System.Int32)">
            <summary>
            DivideByBigNumber auxilary method.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigInteger.Trial(BigIntegerLibrary.BigInteger,BigIntegerLibrary.BigInteger,System.Int32,System.Int32)">
            <summary>
            DivideByBigNumber auxilary method.
            </summary>
        </member>
        <member name="T:BigIntegerLibrary.BigIntegerException">
            <summary>
            BigInteger-related exception class.
            </summary>
        </member>
        <member name="M:BigIntegerLibrary.BigIntegerException.#ctor(System.String,System.Exception)">
            <summary>
            BigIntegerException constructor.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:BigIntegerLibrary.Sign">
            <summary>
            The number's sign, where Positive also stands for the number zero.
            </summary>
        </member>
    </members>
</doc>
